public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( intent ) ; METHOD_5 ( ) ; } 
private void METHOD_1 ( android.view.View VAR_1 ) { for ( android.view.View VAR_2 : VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( false ) ; VAR_2 . setEnabled ( false ) ; } VAR_1 . setEnabled ( false ) ; VAR_1 . METHOD_3 ( false ) ; } 
public TYPE_1 < java.lang.Integer > METHOD_1 ( java.lang.Integer VAR_1 ) { return METHOD_2 ( ( ( int ) ( VAR_1 ) ) , ( ( length ) - ( offset ) ) ) ; } 
public void METHOD_1 ( ) { this . METHOD_2 ( null ) ; this . VAR_2 . METHOD_4 ( ) ; } 
public static int METHOD_1 ( int VAR_1 ) { return ( VAR_1 & ( VAR_2 ) ) > > > ( VAR_3 ) ; } 
public final void METHOD_1 ( ) { } 
public < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_3 VAR_1 , TYPE_4 < TYPE_1 > VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { } 
private static long METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) == null ? 0 : VAR_1 . METHOD_2 ( ) . getValue ( ) ; } 
public final int METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } } 
public java.lang.Integer METHOD_1 ( java.lang.Integer index ) throws TYPE_1 { if ( ( index < ( this . VAR_1 ) ) && ( index >= 0 ) ) return array [ index ] ; else throw new TYPE_1 ( STRING_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { return new java.util.ArrayList < > ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = "true" ; f . setEnabled ( true ) ; VAR_3 . METHOD_2 ( ) ; } 
public int METHOD_1 ( int p , int VAR_1 ) { if ( VAR_1 == 0 ) { return p ; } return METHOD_1 ( VAR_1 , ( p % VAR_1 ) ) ; } 
public abstract void METHOD_1 ( ) ; 
protected void start ( ) { super . start ( ) ; VAR_1 = false ; TYPE_1 . METHOD_1 ( ) . METHOD_2 ( false ) ; this . METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( 1 , false ) ; } 
public void METHOD_1 ( ) { METHOD_1 ( VAR_1 ) ; } 
public boolean METHOD_1 ( TYPE_1 context ) { return ! ( STRING_1 . equals ( METHOD_2 ( ) ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Integer id ) { return VAR_2 . METHOD_1 ( id ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; synchronized ( this ) { if ( ( VAR_3 . remove ( VAR_2 ) ) != null ) { METHOD_3 ( VAR_2 ) ; } } } 
public void METHOD_1 ( java.lang.String url ) { try { VAR_2 . METHOD_1 ( url ) ; } catch ( java.lang.Exception VAR_3 ) { } } 
public boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) ) || ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_3 ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { this . VAR_3 . add ( 0 , new TYPE_1 ( VAR_1 , VAR_2 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } } 
public void METHOD_1 ( ) { if ( ( ( VAR_1 . size ( ) ) > 0 ) || ( ( VAR_2 . size ( ) ) > 0 ) ) { throw new TYPE_1 ( STRING_1 ) ; } } 
public final TYPE_1 [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return null ; } else { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_1 . length ) ; } } 
public void init ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( ) ; VAR_1 = true ; } } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . VAR_2 ; } 
public int METHOD_1 ( ) { if ( ( data ) == null ) return 0 ; return this . data . METHOD_2 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; VAR_4 = METHOD_4 ( ) . METHOD_5 ( VAR_5 ) ; METHOD_6 ( ) ; VAR_6 . show ( ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; VAR_1 = null ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_2 = new TYPE_1 ( ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; getView ( ) . METHOD_2 ( ) ; VAR_1 . METHOD_5 ( ) ; VAR_1 . METHOD_6 ( VAR_2 ) ; } 
public static void main ( java.lang.String [ ] args ) { TYPE_1 = new TYPE_2 ( ) ; TYPE_1 . METHOD_1 ( true ) ; TYPE_3 = new TYPE_4 ( ) ; } 
double METHOD_1 ( double x ) { if ( x == 0 ) return 0 ; else if ( x > 0 ) return ( x / INT_1 ) + FLOAT_1 ; else return ( x / INT_1 ) - FLOAT_1 ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_3 ( getActivity ( ) ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Long VAR_2 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( ) . add ( VAR_1 ) ; return VAR_5 . METHOD_2 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = new TYPE_2 ( false , INT_1 ) ; METHOD_2 ( VAR_3 , new TYPE_2 ( false , INT_1 ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( index ) < ( words . length ) ) { words [ index ] = VAR_1 ; } ( index ) ++ ; } 
public void remove ( ) { this . remove ( ( ( VAR_1 ) -- ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; } 
private int METHOD_1 ( int [ ] VAR_1 ) { int VAR_2 = 0 ; for ( int VAR_3 : VAR_1 ) { VAR_2 += VAR_3 ; } return VAR_2 ; } 
public void METHOD_1 ( int state ) { if ( state == ( VAR_2 ) ) VAR_3 = false ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( state ) ; } 
protected < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_3 VAR_1 , final java.lang.Class < TYPE_1 > type ) { TYPE_4 . assertEquals ( 1 , TYPE_5 . size ( VAR_1 . METHOD_2 ( type ) ) ) ; } 
public double METHOD_1 ( double n ) { if ( n > 0 ) { return METHOD_2 ( n , ( n / INT_1 ) ) ; } return 0 ; } 
public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( ( VAR_4 ) != null ) { return VAR_4 ; } return super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; } 
public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int VAR_2 , int count ) { VAR_3 = VAR_1 . toString ( ) ; VAR_5 = position ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; } 
public TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) ; 
private static void METHOD_1 ( final TYPE_1 < TYPE_2 > data , final TYPE_3 VAR_1 ) { TYPE_4 . METHOD_2 ( VAR_1 ) ; TYPE_4 . METHOD_5 ( data , VAR_1 ) ; VAR_1 . METHOD_6 ( ) ; } 
protected boolean METHOD_1 ( java.lang.String key , java.lang.String value ) { return ! ( TYPE_1 . isEmpty ( ( ( java.lang.String ) ( METHOD_2 ( key ) ) ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( true ) ; METHOD_3 ( false , true , false ) ; } 
public java.lang.String toString ( ) { return TYPE_1 . METHOD_1 ( this ) . add ( STRING_2 , this . VAR_1 ) . toString ( ) ; } 
boolean METHOD_1 ( ) { return METHOD_2 ( true ) ; } 
public static void METHOD_1 ( TYPE_1 src , TYPE_2 target ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; if ( null != ( VAR_5 ) ) { VAR_6 = VAR_5 ; } VAR_7 = VAR_8 ; } 
public void update ( ) { VAR_1 . METHOD_1 ( ) ; java.util.Collection < TYPE_1 > VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( ) ; VAR_3 . METHOD_5 ( ) ; } 
private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this . VAR_2 ) ; VAR_3 . add ( this . VAR_2 . METHOD_3 ( ) , VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; return METHOD_5 ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.System.out.println ( VAR_3 . METHOD_2 ( ) ) ; VAR_3 . METHOD_2 ( ) . add ( new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 . METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) . show ( ) ; } 
TYPE_1 < TYPE_2 < TYPE_3 , java.lang.Object > > METHOD_1 ( TYPE_4 VAR_1 , TYPE_5 VAR_2 , java.lang.String token ) ; 
private boolean METHOD_1 ( ) { if ( METHOD_3 ( ) ) return true ; return false ; } 
public static < TYPE_1 > boolean METHOD_1 ( java.util.List < TYPE_1 > list , TYPE_1 VAR_1 ) { TYPE_1 first = TYPE_2 . METHOD_2 ( list ) ; if ( first == null ) { return VAR_1 == null ; } return first . equals ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_3 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( this . getIntent ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( this . getIntent ( ) ) ; METHOD_6 ( ) ; } 
private TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) . get ( 1 ) ) ) ; } 
public java.util.Date METHOD_1 ( java.lang.String token ) { java.util.Date VAR_1 = null ; final TYPE_1 VAR_2 = METHOD_2 ( token ) ; if ( VAR_2 != null ) { VAR_1 = VAR_2 . METHOD_3 ( ) ; } return VAR_1 ; } 
public void METHOD_1 ( int key ) { int temp = keys . get ( key ) ; temp ++ ; keys . set ( key , temp ) ; } 
public TYPE_1 METHOD_1 ( int position ) { return TYPE_4 . METHOD_2 ( false ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 [ 0 ] = 0 ; if ( ( VAR_2 [ 1 ] ) > 0 ) { VAR_2 [ 1 ] = 0 ; } if ( VAR_1 ) { METHOD_2 ( ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( new TYPE_3 ( ) , VAR_3 , VAR_3 ) ; VAR_2 . METHOD_2 ( INT_1 , 0 ) ; VAR_2 . METHOD_3 ( INT_2 ) ; } 
public void METHOD_1 ( final int position , final int VAR_1 ) { if ( position > 0 ) add ( VAR_1 ) ; else remove ( VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 source , final TYPE_1 target ) { TYPE_2 < TYPE_1 , TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . put ( target , source ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.Throwable VAR_2 ) { return new TYPE_1 ( VAR_3 , METHOD_2 ( ) , VAR_4 , METHOD_3 ( ) , VAR_1 , VAR_2 ) ; } 
public TYPE_1 < ? > METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_3 ( false , VAR_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { } 
private TYPE_1 add ( java.lang.String VAR_1 ) { if ( ( VAR_2 . length ( ) ) != 0 ) VAR_2 . append ( CHAR_1 ) ; VAR_2 . append ( VAR_1 ) ; return this ; } 
public < TYPE_1 > boolean METHOD_1 ( TYPE_1 file , TYPE_2 VAR_2 , TYPE_3 < TYPE_2 , TYPE_1 > VAR_3 ) { return ( ( file != null ) && ( VAR_2 != null ) ) && ( VAR_3 . METHOD_2 ( VAR_2 , file ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( true ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return this . path ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == ( getContext ( ) ) ) { ( ( TYPE_1 ) ( getContext ( ) ) ) . METHOD_2 ( ) . METHOD_3 ( this ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 id ) { TYPE_3 . METHOD_2 ( id , VAR_1 class , "id" ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_1 class , id , true ) ; return METHOD_4 ( VAR_2 , null , true ) ; } 
public boolean METHOD_1 ( java.lang.String value ) { return value != null ; } 
public void METHOD_1 ( TYPE_1 event ) { for ( TYPE_2 type : VAR_2 . values ( ) ) { type . METHOD_2 ( event ) ; } } 
public boolean METHOD_1 ( ) { list . METHOD_2 ( this , null ) ; VAR_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( VAR_2 , STRING_2 ) ; return false ; } 
public static synchronized void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , intent . METHOD_5 ( VAR_2 ) ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_3 . assertNotNull ( STRING_2 , VAR_2 . METHOD_3 ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( ( ( VAR_2 ) - VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String path ) { return METHOD_1 ( path , ( - 1L ) ) ; } 
public void METHOD_1 ( java.lang.String name ) { if ( ( ! ( name . isEmpty ( ) ) ) && ( ( name . trim ( ) . length ( ) ) > 0 ) ) this . name = name . trim ( ) ; } 
public void METHOD_1 ( ) { update ( ) ; METHOD_3 ( ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { try { METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_1 . METHOD_3 ( VAR_1 , ( STRING_2 + VAR_2 ) ) ; } } 
public void METHOD_1 ( boolean VAR_1 ) { state = VAR_2 ; VAR_3 = VAR_2 ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_2 ) { this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { METHOD_2 ( VAR_2 . getSelection ( ) ) ; } } 
public long METHOD_1 ( ) { return METHOD_1 ( VAR_1 ) ; } 
public java.lang.Object get ( java.lang.Object key ) { TYPE_1 VAR_1 = METHOD_1 ( ) ; java.lang.Object value = TYPE_2 . get ( VAR_1 , ( ( java.lang.String ) ( key ) ) ) ; VAR_1 . METHOD_2 ( ) ; return value ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_1 . METHOD_3 ( buf ) ; buf . METHOD_4 ( ) ; return buf ; } 
public long METHOD_1 ( ) { if ( ( size ) < 0 ) { try { return METHOD_2 ( ) . length ; } catch ( java.io.IOException VAR_1 ) { throw new TYPE_1 ( STRING_1 , VAR_1 ) ; } } return size ; } 
public void METHOD_1 ( ) { TYPE_1 . assertThat ( parameters . get ( key ) , TYPE_2 . METHOD_2 ( param ) ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_1 ( VAR_1 , new java.util.HashSet < > ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; return VAR_1 [ 0 ] ; } 
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; } 
public static void METHOD_1 ( ) throws java.io.IOException { VAR_2 . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( int VAR_1 ) { int VAR_2 = ( this . VAR_2 ) - VAR_1 ; if ( VAR_2 <= 0 ) { this . VAR_2 = 0 ; } else { this . VAR_2 = VAR_2 ; } } 
public void METHOD_1 ( ) { try { java.lang.Thread . METHOD_2 ( INT_1 ) ; } catch ( TYPE_1 VAR_2 ) { } } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return null ; } 
public void delete ( int position ) { } 
public float METHOD_1 ( ) { float VAR_1 = ( ( this . VAR_2 ) * ( this . VAR_3 ) ) + INT_1 ; return VAR_1 ; } 
public java.lang.String getName ( ) { if ( ( ( names ) != null ) && ( ( names . size ( ) ) > 0 ) ) { return names . get ( 0 ) ; } return null ; } 
public static java.util.Date METHOD_1 ( java.lang.String VAR_1 ) { return null ; } 
public void error ( java.lang.String message , java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { METHOD_1 ( VAR_2 . error , message , VAR_1 ) ; } 
public void METHOD_1 ( long time ) { try { java.lang.Thread . METHOD_2 ( time ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 id ) throws java.lang.Exception { return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( STRING_1 , id ) ) ) ; } 
public java.lang.String [ ] METHOD_1 ( ) { return url ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { VAR_2 . METHOD_2 ( new TYPE_1 ( VAR_2 , 0 ) ) ; } } 
private void METHOD_1 ( ) { for ( java.util.Map.Entry < java.lang.String , TYPE_1 > VAR_1 : VAR_2 . METHOD_2 ( ) ) { VAR_1 . getValue ( ) . METHOD_3 ( ) ; } } 
public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_1 = ( VAR_1 + "\n" ) + ( VAR_2 . getName ( ) ) ; } return VAR_1 ; } 
private int METHOD_1 ( TYPE_1 TYPE_2 ) { return METHOD_2 ( TYPE_2 , 0 ) ; } 
public synchronized void METHOD_1 ( final java.lang.Throwable t ) { TYPE_1 . error ( STRING_1 , t ) ; ( VAR_1 ) ++ ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { } 
public boolean METHOD_1 ( ) { return ( ( VAR_1 ) < ( VAR_2 . length ) ) && ( ( VAR_3 . METHOD_2 ( ) ) < ( VAR_2 [ VAR_1 ] . VAR_4 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int position ) { VAR_3 . setText ( VAR_1 . getText ( ) ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_1 ( ) ; } 
private boolean METHOD_1 ( ) { return ( this . VAR_1 ) == null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . buffer = VAR_1 ; } 
public boolean METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , java.lang.Throwable error ) { return ( ( VAR_3 ) != null ) && ( VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , error ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( ) throws TYPE_1 { org.testng.Assert.assertEquals ( METHOD_2 ( VAR_1 , true , false ) , 1 ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 ) { } 
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = - ( VAR_2 ) ; VAR_3 = ( VAR_2 ) > 0 ; } } 
public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( out , 1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 c = METHOD_2 ( VAR_1 ) ; if ( c == null ) { return METHOD_4 ( VAR_1 ) ; } return c ; } 
public void METHOD_1 ( int [ ] VAR_1 ) { VAR_2 [ 0 ] = VAR_1 [ 0 ] ; VAR_2 [ 1 ] = VAR_1 [ 1 ] ; } 
public TYPE_1 METHOD_1 ( java.lang.String error ) { TYPE_2 content = VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) , error ) ; return METHOD_5 ( VAR_2 . METHOD_2 ( content ) ) ; } 
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; VAR_1 = null ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 . assertThat ( VAR_2 . METHOD_2 ( VAR_1 ) , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
public boolean METHOD_1 ( java.lang.String key ) { synchronized ( VAR_1 ) { return VAR_1 . contains ( key ) ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; TYPE_2 . METHOD_3 ( this , new TYPE_3 ( ) ) ; TYPE_4 . init ( this ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( ( this . VAR_2 ) != null ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; } } 
private static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ( ( VAR_1 == null ) || ( VAR_1 . startsWith ( STRING_1 ) ) ) || ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) || ( VAR_1 . contains ( STRING_3 ) ) ; } 
public void METHOD_1 ( ) { synchronized ( this ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } } } 
public void METHOD_1 ( ) { new TYPE_1 ( false ) . execute ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) . get ( VAR_1 . METHOD_3 ( ) ) ; return VAR_2 != null ? VAR_2 : VAR_4 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) ; VAR_2 = new TYPE_1 ( STRING_4 , TYPE_2 . METHOD_2 ( STRING_5 , STRING_6 ) ) ; } 
private void METHOD_1 ( java.lang.String string ) { try { label . setText ( string ) ; java.lang.Thread . METHOD_2 ( INT_1 ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } } 
public static void METHOD_1 ( ) { java.lang.System.out.println ( ) ; java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; java.lang.System.out.println ( STRING_4 ) ; java.lang.System.out.println ( STRING_5 ) ; java.lang.System.out.println ( STRING_6 ) ; java.lang.System.out.println ( STRING_7 ) ; } 
public final void METHOD_1 ( TYPE_1 VAR_1 ) { value = VAR_1 . get ( name ) . METHOD_2 ( ) ; update ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { if ( ( VAR_3 ) != null ) VAR_3 . setText ( METHOD_2 ( VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_4 { return this ; } 
public void METHOD_1 ( ) { assertEquals ( new java.lang.Double ( FLOAT_1 ) , TYPE_2 . METHOD_2 ( STRING_1 ) ) ; } 
public boolean METHOD_1 ( ) { synchronized ( VAR_1 ) { return ! ( VAR_1 . isEmpty ( ) ) ; } } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( VAR_2 , VAR_1 , this . VAR_3 ) ; } 
public void METHOD_1 ( java.lang.String key , java.lang.String value ) { if ( key == null ) return ; if ( value == null ) return ; METHOD_3 ( value ) ; VAR_1 . METHOD_4 ( ) . METHOD_1 ( key , value ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; VAR_1 = VAR_1 . METHOD_5 ( VAR_4 ) ; return VAR_1 ; } 
protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( 0 ) ; java.lang.Thread . METHOD_3 ( INT_1 ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , position ) ; } 
protected void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( VAR_2 ) ; VAR_3 . METHOD_3 ( intent ) ; } 
private void METHOD_1 ( java.lang.String [ ] message ) { VAR_1 . METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) { VAR_3 . add ( VAR_1 ) ; VAR_2 . remove ( VAR_1 ) ; } } 
public boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; } return false ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 to ) { if ( ( VAR_1 == null ) || ( to == null ) ) return ; to . errors ( ) . METHOD_2 ( VAR_1 . errors ( ) ) ; } 
public final TYPE_1 METHOD_1 ( TYPE_2 type , java.lang.Object value ) { } 
public static void main ( java.lang.String [ ] args ) { for ( int i = 0 ; i < INT_1 ; i = i + 1 ) { java.lang.System.out.println ( ( STRING_1 + i ) ) ; } } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 item ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; item . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; TYPE_5 . METHOD_2 ( item ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String VAR_2 = TYPE_3 . getString ( VAR_1 , null , STRING_1 , STRING_2 ) ; return METHOD_2 ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 event ) { TYPE_2 p = event . METHOD_2 ( ) ; if ( ! ( p . METHOD_4 ( ) ) ) { METHOD_5 ( p ) ; } } 
public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) { final boolean VAR_2 = ! ( TYPE_2 . METHOD_2 ( VAR_1 . name ( ) ) ) ; final boolean VAR_3 = ! ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; return VAR_2 && VAR_3 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { } 
protected long METHOD_1 ( final java.lang.Integer count , final long VAR_1 ) { return VAR_1 * count ; } 
public void METHOD_1 ( java.lang.Throwable t ) { TYPE_3 . METHOD_2 ( getContext ( ) , getString ( VAR_2 ) , VAR_3 ) . show ( ) ; } 
private void METHOD_1 ( ) { java.util.Collection < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( ) ; } } 
public static TYPE_1 [ ] METHOD_1 ( ) { TYPE_2 . METHOD_2 ( true ) ; return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { } 
public java.lang.String METHOD_1 ( ) { return getData ( ) . METHOD_1 ( ) ; } 
public java.util.ArrayList < java.lang.String > getData ( java.lang.String query ) { return TYPE_1 . METHOD_1 ( query ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = true ; VAR_5 . init ( VAR_1 , this ) ; VAR_5 . METHOD_1 ( VAR_2 ) ; } 
public java.util.Date METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; return new java.util.Date ( VAR_1 . getTime ( ) ) ; } return null ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public int METHOD_1 ( ) { return VAR_3 . METHOD_1 ( ) ; } 
public static void main ( java.lang.String [ ] args ) { } 
public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . remove ( VAR_1 ) ; TYPE_3 . remove ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( VAR_3 ) * ( 1 - ( VAR_1 . METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( out ) ; TYPE_1 . METHOD_4 ( this ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . put ( METHOD_2 ( ) , VAR_1 , true , VAR_2 , VAR_4 . METHOD_3 ( ) ) ; TYPE_1 response = new TYPE_1 ( VAR_3 ) ; return response ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) VAR_1 . METHOD_3 ( ) ; } 
public static java.lang.String METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 ) { java.lang.String VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; return METHOD_3 ( VAR_3 , INT_1 ) . METHOD_4 ( ) ; } 
public java.lang.Boolean METHOD_1 ( ) { return ! ( VAR_1 . equals ( VAR_2 ) ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_1 > VAR_2 ) { if ( VAR_1 != null ) { TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_2 ( VAR_3 ) ; } 
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; int [ ] [ ] a ; int [ ] [ ] b ; } 
public void error ( java.lang.String VAR_1 , java.lang.Object ... VAR_2 ) { this . error ( TYPE_1 . METHOD_1 ( ) , VAR_1 , VAR_2 ) ; } 
protected float METHOD_1 ( TYPE_2 state , TYPE_1 VAR_1 ) { int VAR_2 = 0 ; for ( TYPE_3 VAR_3 : VAR_1 . METHOD_2 ( ) ) { VAR_2 += VAR_4 . METHOD_3 ( VAR_3 ) . size ( ) ; } return 1.0F / VAR_2 ; } 
public void METHOD_1 ( ) { final TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( STRING_2 ) ) ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_4 ( ) ; } } 
public TYPE_1 < ? > METHOD_1 ( int index ) { try { return new TYPE_1 ( this . VAR_1 . get ( index ) ) ; } catch ( TYPE_2 VAR_2 ) { return null ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( ( VAR_1 ) == null ) { java.lang.System.exit ( 0 ) ; } VAR_2 = null ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) VAR_2 . remove ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; } 
TYPE_1 METHOD_1 ( ) { if ( ( -- ( VAR_1 ) ) < 0 ) { VAR_1 = ( size ) - 1 ; } return VAR_2 [ VAR_1 ] ; } 
public void METHOD_1 ( final TYPE_1 out , final int VAR_1 ) { super . METHOD_1 ( out , VAR_1 ) ; out . METHOD_2 ( VAR_2 ) ; out . METHOD_3 ( ( VAR_3 ? 1 : 0 ) ) ; } 
public int compareTo ( TYPE_1 VAR_1 ) { return ( ( int ) ( ( ( VAR_4 ) - ( VAR_5 ) ) - ( ( VAR_2 ) + ( VAR_3 ) ) ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) . METHOD_4 ( ) ; if ( VAR_1 . equals ( STRING_2 ) ) { VAR_4 = 0 ; } else { VAR_4 = 1 ; } } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public static boolean METHOD_1 ( final double VAR_1 ) { if ( VAR_1 < FLOAT_1 ) { return false ; } if ( VAR_1 >= FLOAT_2 ) { return false ; } return true ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( false ) ; METHOD_2 ( VAR_1 ) ; } 
void METHOD_1 ( java.lang.String query ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( query ) ; } 
public void init ( ) { TYPE_1 . METHOD_1 ( ) . METHOD_2 ( this ) ; } 
public void add ( java.lang.String VAR_1 , int [ ] VAR_2 ) { VAR_3 . add ( new TYPE_1 ( VAR_2 , VAR_1 ) ) ; } 
void METHOD_1 ( java.util.List < java.util.Map.Entry < TYPE_1 , TYPE_1 > > VAR_1 ) ; 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; return ( VAR_1 != null ) && ( ( VAR_1 . METHOD_3 ( ) ) != null ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String file = METHOD_2 ( ) ; if ( file != null ) { VAR_2 . METHOD_3 ( file ) ; } } 
public boolean equals ( java.lang.Object VAR_1 ) { return super . equals ( VAR_1 ) ; } 
public static boolean METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { return true ; } 
public void METHOD_2 ( java.lang.String message ) { VAR_2 . METHOD_2 ( VAR_3 , message ) ; } 
public void METHOD_1 ( int count ) { if ( ( VAR_1 . size ) <= 1 ) super . METHOD_1 ( count ) ; else this . METHOD_2 ( VAR_1 . size ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_2 . size ( ) ) > 0 ) { TYPE_1 VAR_1 = VAR_2 . remove ( ) ; VAR_1 . METHOD_2 ( ) ; } } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; } 
public static TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_1 ( context ) ; VAR_2 . METHOD_2 ( context ) ; return VAR_2 ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) ) == null ) || ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ; } 
public java.lang.Object METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , new TYPE_1 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_3 , VAR_4 , INT_1 ) ) ; } 
public boolean getBoolean ( java.lang.String VAR_1 ) { java.lang.Object value = this . getValue ( VAR_1 ) ; if ( value instanceof java.lang.Boolean ) { return TYPE_2 . equals ( value ) ; } return false ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , METHOD_3 ( ) ) ; new TYPE_4 ( this , VAR_2 ) ; new TYPE_5 ( this , VAR_2 ) ; } 
public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( ) . main ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { return null ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; METHOD_4 ( i ) ; } 
public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { STRING_2 } ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( this , VAR_3 ) ; VAR_2 . start ( ) ; return VAR_2 ; } 
public java.lang.Throwable METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return VAR_1 ; } 
protected final void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 = false ; } 
public static java.lang.String METHOD_1 ( final java.util.Map < java.lang.String , java.util.List < TYPE_1 > > VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_1 ( VAR_1 , TYPE_1 . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { status = VAR_2 ; } 
private void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_2 = true ; } } } 
public boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { if ( null == VAR_1 ) return true ; return this . METHOD_2 ( VAR_1 . key ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_2 ) - ( VAR_1 . METHOD_4 ( ) ) ) ) . METHOD_5 ( INT_1 ) . start ( ) ; } 
public void METHOD_1 ( ) { } 
public void METHOD_1 ( final TYPE_1 VAR_2 , final java.lang.String VAR_1 ) { VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( null ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; } 
private static void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , int VAR_4 ) { } 
public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Throwable { VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; java.lang.System.out.println ( STRING_4 ) ; } 
protected TYPE_1 METHOD_1 ( ) { if ( ( this . select ) == null ) { this . select = new TYPE_2 ( this . METHOD_2 ( ) , this ) ; } return this . select ; } 
public java.lang.String METHOD_1 ( ) { return null ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_3 ( ) ; METHOD_2 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . add ( VAR_3 ) ; } 
public void execute ( ) { context . METHOD_1 ( ) . execute ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( VAR_3 . METHOD_3 ( ) . toString ( ) ) ; METHOD_4 ( VAR_4 ) ; } } 
public void METHOD_1 ( TYPE_1 c ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( c ) ; VAR_1 . METHOD_3 ( ) ; } } 
public java.lang.String METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
public java.lang.String METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) != ( VAR_2 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return STRING_2 ; } 
public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; this . VAR_1 . METHOD_5 ( ) ; this . VAR_1 . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new android.content.Intent ( this , VAR_1 class ) ) ; } 
public boolean remove ( java.lang.Object VAR_1 ) { boolean result = VAR_2 . remove ( VAR_1 ) ; METHOD_1 ( ) ; return result ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 errors ) throws java.lang.Exception { if ( VAR_1 . contains ( "name" ) ) { METHOD_1 ( VAR_2 , errors ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , ( ( java.util.List < java.lang.String > ) ( VAR_1 . METHOD_4 ( ) ) ) ) ; } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_2 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; return this . METHOD_3 ( VAR_1 , 1 , ( - 1 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . remove ( VAR_1 ) ; } } 
public double METHOD_1 ( TYPE_1 VAR_3 ) { double VAR_2 = 0 ; VAR_2 = ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) * ( VAR_3 . METHOD_5 ( ) ) ; return VAR_2 ; } 
public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { METHOD_2 ( ) ; METHOD_4 ( INT_1 , false ) ; TYPE_2 . METHOD_3 ( true ) ; return false ; } 
public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( ! VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; } else { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( VAR_5 ) ; } } } 
public void METHOD_1 ( TYPE_1 event ) { this . event = event ; VAR_1 . setText ( event . METHOD_2 ( ) . toString ( ) ) ; VAR_2 . setText ( event . getType ( ) . name ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( METHOD_2 ( ) . contains ( VAR_1 ) ) ) { METHOD_2 ( ) . add ( VAR_1 ) ; } } 
public java.lang.Long METHOD_1 ( ) throws java.lang.Exception { long result = VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 . METHOD_3 ( true ) ; return result ; } 
public static TYPE_1 METHOD_1 ( android.content.Context context ) { return TYPE_1 . METHOD_1 ( context , STRING_1 ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String output = STRING_1 ; output += VAR_1 . METHOD_2 ( ) ; output += STRING_2 ; output += VAR_1 . METHOD_3 ( ) ; output += "\n" ; return output ; } 
public TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_1 != null ) { VAR_2 = VAR_3 . METHOD_5 ( VAR_1 ) ; } return VAR_2 ; } 
private static final TYPE_1 < java.lang.String > METHOD_1 ( final TYPE_1 < ? extends java.lang.CharSequence > VAR_1 ) { return VAR_1 == null ? null : ( ) - > VAR_1 . get ( ) . toString ( ) ; } 
public void METHOD_1 ( android.view.View VAR_1 , TYPE_1 position ) { this . position = position ; this . VAR_1 = VAR_1 ; } 
public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String message ) { TYPE_1 . METHOD_1 ( VAR_4 , message , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 date ; date = TYPE_2 . METHOD_2 ( STRING_1 ) ; assertNotNull ( date ) ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ( ( VAR_2 ) + 1 ) ) ; } 
public void METHOD_1 ( TYPE_1 start , TYPE_1 end ) { VAR_1 = start ; VAR_2 = end ; VAR_3 = TYPE_2 . METHOD_2 ( start , end ) . METHOD_3 ( ) . METHOD_4 ( ) ; } 
public int METHOD_1 ( TYPE_1 item ) { if ( ( VAR_2 ) == null ) return - 1 ; else return VAR_2 . METHOD_1 ( item , 0 ) ; } 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return false ; } 
public static native void METHOD_1 ( int x , int y , int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) ; 
public void METHOD_1 ( int height ) { this . height = height ; } 
public void METHOD_1 ( TYPE_1 context , double VAR_1 ) { double VAR_2 = ( VAR_3 ) + ( VAR_1 * ( ( VAR_4 ) - ( VAR_3 ) ) ) ; VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } 
public int METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) { int index = ( VAR_1 * ( VAR_4 ) ) + VAR_2 ; return ( VAR_5 [ index ] ) & INT_1 ; } 
private void METHOD_1 ( java.lang.String name ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . contains ( name . toLowerCase ( ) ) , STRING_1 , name ) ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( true ) ; } 
private void METHOD_5 ( ) { TYPE_2 . METHOD_5 ( this , VAR_3 ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) { for ( TYPE_1 label : VAR_2 ) { if ( label . getName ( ) . equals ( java.lang.String . METHOD_2 ( VAR_1 ) ) ) { return label ; } } return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_3 , 0 , 0 , new TYPE_2 ( ) ) ; VAR_4 . update ( VAR_1 ) ; VAR_5 . update ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , ( ( TYPE_3 ) ( TYPE_3 . METHOD_2 ( VAR_3 ) ) ) , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; return VAR_1 ; } 
public native java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String key ) ; 
public static TYPE_1 METHOD_1 ( ) { java.util.Calendar VAR_1 = java.util.Calendar.getInstance ( ) ; VAR_1 . add ( VAR_2 , ( - 1 ) ) ; return new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_4 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_4 = VAR_4 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( "0" ) ; VAR_3 . setText ( STRING_1 ) ; temp = "0" ; VAR_4 = STRING_1 ; VAR_5 = "0" ; result = 0 ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( METHOD_3 ( ) ) ; } } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( VAR_2 , true ) ; } 
public java.lang.String toString ( ) { return name ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; if ( VAR_1 == null ) { VAR_1 = new java.util.LinkedList < > ( ) ; } return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) ; } 
public int count ( ) { return n ; } 
private int METHOD_1 ( ) throws java.io.IOException { super . METHOD_2 ( VAR_1 ) ; VAR_2 = false ; return super . METHOD_3 ( buf , 0 , VAR_3 ) ; } 
public void METHOD_1 ( ) { if ( this . VAR_1 ) { return ; } this . VAR_2 = ! ( TYPE_1 . METHOD_2 ( new TYPE_2 ( this ) ) ) ; this . VAR_3 = true ; } 
public void METHOD_1 ( ) { ( VAR_2 ) ++ ; if ( ( VAR_2 ) < 0 ) VAR_2 = 0 ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( METHOD_5 ( getString ( VAR_4 ) ) ) ; METHOD_4 ( METHOD_5 ( getString ( VAR_5 ) ) ) ; } 
private native void METHOD_1 ( long VAR_1 , long [ ] VAR_2 , long VAR_3 , long VAR_4 ) ; 
public static void main ( java.lang.String [ ] args ) { if ( args [ 0 ] . equals ( STRING_1 ) ) TYPE_1 . METHOD_1 ( ) ; else if ( args [ 0 ] . equals ( STRING_2 ) ) TYPE_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; c . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_1 ( ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } } ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , false , true , false ) ) { VAR_2 . METHOD_3 ( ) ; } } 
protected java.lang.String getType ( java.io.File file ) { if ( file . METHOD_1 ( ) ) { return STRING_1 ; } java.lang.String VAR_1 = METHOD_2 ( file ) ; if ( VAR_1 != null ) { return VAR_1 . toLowerCase ( ) ; } return STRING_2 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 != null ) && ( VAR_3 ) ) { return true ; } return false ; } 
public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : if ( METHOD_3 ( ) ) { METHOD_4 ( ) ; } break ; default : break ; } return super . METHOD_1 ( item ) ; } 
private void METHOD_1 ( TYPE_1 type , java.lang.Object VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( type , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 event , TYPE_2 VAR_1 ) { if ( ( event . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( false ) ; } } 
public java.util.Map < java.lang.String , java.util.Set < java.lang.String > > METHOD_1 ( ) { return new java.util.HashMap < > ( this . VAR_1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . setText ( getString ( VAR_3 , VAR_4 . METHOD_3 ( ) ) ) ; } 
public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( ) { return VAR_1 ; } 
private synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_3 ( ) ; VAR_3 . METHOD_1 ( ) ; } } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { TYPE_3 TYPE_4 = new TYPE_3 ( STRING_1 ) ; TYPE_5 . assertEquals ( STRING_2 , TYPE_4 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; } 
public TYPE_2 METHOD_1 ( TYPE_3 < TYPE_2 > VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { c = ( ( byte ) ( ( a ) & 1 ) ) ; a >>= 1 ; VAR_1 = 0 ; if ( ( c ) == 0 ) VAR_1 = 1 ; n = 0 ; } 
public boolean METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 { return true ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 = VAR_1 ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , false ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String key , java.lang.Object value ) { VAR_1 . put ( key , value . toString ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 . isEmpty ( ) ) return VAR_3 ; METHOD_2 ( VAR_2 ) ; return VAR_4 ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; TYPE_1 tmp = VAR_1 ; return tmp ; } 
public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; this . VAR_2 . METHOD_1 ( ) ; if ( ( this . VAR_3 ) != null ) { this . VAR_3 . METHOD_1 ( ) ; } } 
public void delete ( int [ ] data ) { if ( data . equals ( null ) ) { } else { for ( int x : data ) { VAR_1 [ x ] = 0 + STRING_1 ; } } METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { return ; } 
public boolean METHOD_1 ( ) { final java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; for ( final java.lang.String VAR_2 : this . VAR_3 ) { if ( VAR_1 . equals ( VAR_2 ) ) { return true ; } } return false ; } 
public void METHOD_1 ( ) { size = 0 ; first = null ; VAR_1 = null ; VAR_2 = null ; } 
private void METHOD_1 ( ) { VAR_1 . execute ( VAR_2 ) ; VAR_2 . METHOD_2 ( ) ; count = 0 ; } 
public void METHOD_1 ( java.lang.String line ) { final java.lang.String VAR_1 = METHOD_2 ( line ) ; if ( ! ( this . VAR_2 . equals ( VAR_1 ) ) ) { METHOD_3 ( 1 , VAR_1 , false ) ; this . VAR_2 = VAR_1 ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 != null ) && ( ( VAR_1 . getName ( ) ) != null ) ) { this . VAR_2 . remove ( VAR_1 . getName ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { super . METHOD_1 ( context , VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_1 ) ; } 
public double METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( 0 , VAR_2 ) ) ; } 
boolean METHOD_1 ( ) ; 
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( this , VAR_2 . METHOD_4 ( ) ) ; } 
public final void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( 1 , INT_1 ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( STRING_1 , TYPE_4 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } } 
public java.lang.String METHOD_1 ( boolean VAR_1 ) { return toString ( 1 , VAR_1 , true , false , false ) ; } 
protected static void METHOD_1 ( ) { VAR_1 . set ( null ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean result = TYPE_3 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; TYPE_4 . METHOD_7 ( ) ; return result ; } 
protected void execute ( ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { return null ; } else { return new TYPE_1 ( VAR_1 , VAR_2 . getType ( ) , VAR_2 . METHOD_2 ( ) ) ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_1 ( this ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String key ) { byte [ ] VAR_1 = METHOD_2 ( key ) ; if ( VAR_1 == null ) return null ; return TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } super . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; return true ; default : return super . METHOD_1 ( item ) ; } } 
public java.util.Map < java.lang.Integer , TYPE_1 > METHOD_1 ( int id ) { if ( ! ( VAR_1 . METHOD_2 ( id ) ) ) return null ; return new java.util.HashMap ( VAR_1 . METHOD_3 ( ) ) ; } 
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( ) ; t . METHOD_2 ( STRING_1 ) ; } 
TYPE_1 METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 VAR_1 = VAR_2 ; VAR_3 = null ; VAR_2 = null ; VAR_4 = null ; return VAR_1 ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) return true ; for ( java.lang.String f : VAR_2 ) { if ( VAR_1 . startsWith ( f ) ) { return true ; } } return false ; } 
public java.awt.Font METHOD_1 ( ) { return this . VAR_1 ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_2 ) ; } return VAR_2 ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String key ) { if ( VAR_1 == null ) { return STRING_1 ; } return VAR_1 . METHOD_2 ( key , STRING_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String name ) { if ( name != null ) this . name = name ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = 1 ; METHOD_4 ( VAR_3 ) ; } 
protected java.lang.Void METHOD_1 ( java.lang.Void ... params ) { METHOD_2 ( ) ; return null ; } 
public void METHOD_1 ( ) { VAR_1 . message = ( TYPE_1 . METHOD_3 ( ) ) + ( TYPE_1 . METHOD_3 ( ) ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) . get ( STRING_1 ) ) != null ) return VAR_1 . METHOD_2 ( ) . get ( STRING_1 ) . METHOD_3 ( ) ; return null ; } 
public static double METHOD_1 ( int length , TYPE_1 VAR_1 ) { return ( VAR_2 ) * ( TYPE_2 . METHOD_2 ( 0 , ( ( length - ( VAR_3 ) ) + 1 ) ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( false , 0 ) ; } 
private static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( ( ( STRING_2 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_3 ) ) ; TYPE_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { return this . METHOD_2 ( ) . METHOD_3 ( VAR_2 , TYPE_2 . values ( ) [ ( VAR_1 % INT_1 ) ] ) . METHOD_3 ( VAR_3 , VAR_4 [ ( VAR_1 % INT_2 ) ] ) ; } 
public void METHOD_1 ( int VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 t , byte [ ] b ) { return null ; } 
private void METHOD_1 ( TYPE_1 element ) { this . VAR_1 . add ( element ) ; } 
private static double METHOD_1 ( int i ) { if ( i == 0 ) { return VAR_1 ; } return 1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_3 . add ( VAR_1 ) ; VAR_2 . put ( VAR_1 . METHOD_3 ( ) , VAR_1 ) ; } } 
public static java.util.List < TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { return ( VAR_1 ) != null ? VAR_1 : new java.util.ArrayList < TYPE_1 < java.lang.String , java.lang.String > > ( ) ; } 
public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_1 . getId ( ) ) { case VAR_2 : METHOD_2 ( ) ; break ; case VAR_3 : METHOD_3 ( ) ; break ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , long date , boolean VAR_4 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , date , VAR_4 ) ; } 
public void METHOD_1 ( java.io.InputStream key ) throws java.io.IOException { METHOD_5 ( java.util.Arrays.asList ( STRING_1 ) , key ) ; } 
public static TYPE_1 build ( char VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = java.lang.String . METHOD_2 ( STRING_1 , VAR_2 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . VAR_2 ; VAR_3 = ( VAR_1 == 1 ) ? STRING_1 : STRING_2 ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.Collections.sort ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 = java.lang.Long . METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( ) ) > > > 1 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { this . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) , false ) ; } 
public void delete ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . remove ( VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_3 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_4 ) ) ) ; android.view.View VAR_5 = METHOD_2 ( VAR_6 ) ; } 
public synchronized void METHOD_1 ( final TYPE_1 event ) { VAR_1 = java.util.Arrays.asList ( event . METHOD_2 ( ) . METHOD_3 ( ) ) ; } 
public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( ) ; } 
public static void main ( ) { int a = INT_1 ; int b = INT_2 ; int c = TYPE_1 . get ( 1 , INT_3 ) ; TYPE_1 . METHOD_1 ( ) ; new TYPE_1 ( ) ; return ; } 
public void METHOD_1 ( java.lang.Object VAR_1 ) { java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_4 ( VAR_2 , VAR_2 ) ; METHOD_5 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . position ( VAR_2 . size ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( new TYPE_1 ( new TYPE_2 ( VAR_4 ) ) ) ; } 
private void METHOD_1 ( ) throws java.io.IOException { METHOD_1 ( false ) ; } 
public void show ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 . METHOD_3 ( true ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.lang.String VAR_2 : VAR_3 ) { VAR_1 . add ( new TYPE_1 ( VAR_2 ) ) ; } } 
public void METHOD_1 ( java.lang.String name , java.lang.String VAR_2 , java.lang.String VAR_1 ) { VAR_3 . METHOD_1 ( name , VAR_2 , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( ) ; TYPE_4 VAR_2 = VAR_3 . METHOD_3 ( ) ; TYPE_1 VAR_4 = VAR_2 . METHOD_4 ( VAR_1 ) ; return VAR_4 ; } 
public TYPE_1 METHOD_1 ( float x , float y ) { return METHOD_1 ( ( ( int ) ( x ) ) , ( ( int ) ( y ) ) ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . assertEquals ( VAR_1 , VAR_2 , TYPE_2 . METHOD_2 ( VAR_1 ) . toString ( ) ) ; } 
public boolean METHOD_1 ( java.lang.String key ) { METHOD_2 ( key ) ; METHOD_3 ( ) ; try { return VAR_1 . METHOD_4 ( key . toLowerCase ( ) ) ; } finally { METHOD_5 ( ) ; } } 
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 . getContext ( ) , VAR_2 , VAR_3 ) ; } 
private boolean METHOD_1 ( ) { return METHOD_1 ( METHOD_2 ( ) ) ; } 
public static synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = new TYPE_1 ( STRING_1 , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public int METHOD_4 ( ) { return VAR_5 . METHOD_4 ( ) ; } 
public static int METHOD_1 ( int min , int VAR_1 ) { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( min , ( VAR_1 + 1 ) ) ; } 
public static TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) ) ; } 
public java.lang.Integer METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) < 1 ) return null ; else return VAR_1 . get ( 0 ) ; } 
protected void METHOD_1 ( android.view.View view ) { METHOD_2 ( new android.content.Intent ( this , VAR_1 class ) ) ; } 
public boolean METHOD_2 ( ) { return METHOD_2 ( METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( ( ( event . METHOD_2 ( ) ) != null ) && ( ( event . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) ) { VAR_2 . METHOD_4 ( ) ; } } 
private static boolean METHOD_1 ( java.io.File file ) { return ( file != null ) && ( file . METHOD_2 ( ) ) ; } 
