@java.lang.Override
public void onDateSet(android.widget.DatePicker view, int year, int month, int dayOfMonth) {
    org.joda.time.LocalDate setDate = new org.joda.time.LocalDate(year, (month - 1), dayOfMonth);
    infinitePager.setInfinitePagerData(new com.eleith.calchoochoo.utils.InfinitePagerDataDates(setDate));
}

@java.lang.Override
public void onClick(android.view.View view) {
    revealCorrectAnswer(2);
    updatePoints();
}

@java.lang.Override
public void onSuccess(int statusCode, org.apache.http.Header[] headers, org.json.JSONArray arry) {
    super.onSuccess(statusCode, headers, arry);
    android.util.Log.v("Statiion route", arry.toString());
    buidRouteDatalist(arry.toString());
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    final java.lang.String action = intent.getAction();
    if (action.equals(Utils.STOP_RECORDING)) {
        stopRecordingAudio(mDevice);
        stopSelf();
    }
}

@java.lang.Override
public void onRequestFailure(com.octo.android.robospice.persistence.exception.SpiceException spiceException) {
    super.onRequestFailure(spiceException);
    getSwipeRefreshLayout().setRefreshing(false);
}

public void show(android.support.v4.app.FragmentManager fm, java.lang.String tag) {
    mFragmentManager = fm;
    mTag = tag;
    if ((mDatePicker) == null) {
        mDatePicker = new com.lftechnology.khop.khop.fragment.DatePickerFragment();
    }
    mDatePicker.show(fm, mTag);
}

public java.lang.String getPassword() {
    if (checkCryptKeeperPermissions())
        mContext.enforceCallingOrSelfPermission(android.Manifest.permission.MANAGE_DEVICE_ADMINS, "no crypt_keeper or admin permission to get the password");
    
    return com.android.server.LockSettingsService.mSavePassword;
}

@java.lang.Override
public void onStudentDetailInteraction(java.lang.String[] s) {
    android.util.Log.d("digvijay", "Data sucessfully submitted");
    android.content.Intent intent = com.example.shivanshu.alumniconnect.ProfileActivity.getProfileActivityIntent(this);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int item) {
    switch (item) {
        case 0 :
            startPreferenceActivity();
            break;
        case 1 :
            showDialog(R.id.dialog_gps_menu);
            break;
        case 2 :
            showDialog(R.id.dialog_baro_sensor);
            break;
    }
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(getApplicationContext(), fileName, Toast.LENGTH_SHORT).show();
    recent = ((DownloadDir) + '/') + fileName;
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    getActivity().getMenuInflater().inflate(R.menu.menu_main_fragment, menu);
    return ;
}

@java.lang.Override
protected void onPause() {
    android.util.Log.e(bluemix.ruazosa.fer.hr.bluemix.MainActivity.TAG, "onPause");
    stopBackgroundThread();
    super.onPause();
}

protected void addAlarm(com.github.xzwj87.todolist.schedule.ui.model.ScheduleModel item) {
    android.util.Log.d(com.github.xzwj87.todolist.alarm.service.AlarmObserver.LOG_TAG, ("addAlarm(): title = " + (item.getTitle())));
    mAlarmService.addAlarmSchedule(item);
    mAlarmService.setAlarm(item);
}

public static <T> com.pr0gramm.app.ui.fragments.BusyDialogFragment.BusyDialogOperator<T> busyDialog(android.support.v4.app.FragmentActivity activity) {
    return new com.pr0gramm.app.ui.fragments.BusyDialogFragment.BusyDialogOperator(activity.getSupportFragmentManager());
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    ans.setNumAns(java.lang.String.valueOf(editable));
    getSelectedChkbox();
    answer.onAnswerSave(ans);
}

private static java.io.File databaseFileLocation(android.content.Context ctx) {
    java.io.File f = ctx.getFilesDir();
    f = new java.io.File(f, com.chaosinmotion.securechat.messages.SCMessageDatabase.MESSAGEFILE);
    return f;
}

@java.lang.Override
public void onError(com.facebook.FacebookException error) {
    android.util.Log.d(com.example.gek.firebaseauth.MyFaceBookActivity.TAG, "facebook:onError", error);
    updateUI(null);
}

public void setCurrentInfo(test.homework.nick.snp20.events_for_eventbus.PlayerInfoEvent currentInfo) {
    this.currentInfo = currentInfo;
    playing = currentInfo.isPlaying();
    android.util.Log.i("notification 111", ("playing is" + (playing)));
    showNotification();
}

public synchronized void setConnection(android.content.Context context, android.hardware.usb.UsbAccessory usbAccessory) {
    disconnect();
    mUsbContext = context;
    mUsbAccessory = usbAccessory;
    if (mIsOpen)
        connect();
    
}

@java.lang.Override
public void onPhotoTap(android.view.View view, float v, float v1) {
    hideOrShowToolBar();
}

public static synchronized com.dm.wallpaper.board.databases.Database getInstance(@android.support.annotation.NonNull
android.content.Context context) {
    if ((com.dm.wallpaper.board.databases.Database.mDatabase) == null) {
        com.dm.wallpaper.board.databases.Database.mDatabase = new com.dm.wallpaper.board.databases.Database(context.getApplicationContext());
    }
    return com.dm.wallpaper.board.databases.Database.mDatabase;
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    android.util.Log.d(TAG, "onUnbind()");
    handler.removeCallbacks(runnable);
    return super.onUnbind(intent);
}

@java.lang.Override
public void onDataReceived(android.bluetooth.BluetoothDevice device, byte[] data) {
    final com.adamnickle.deck.Message message = com.adamnickle.deck.Message.fromBytes(data);
    if (message.isValid()) {
        this.onMessageReceived(message);
    }
}

@java.lang.Override
public void onEditCategory(int position) {
    android.widget.Toast.makeText(getContext(), ("editting account " + (categoryList.get(position).getName())), Toast.LENGTH_SHORT).show();
    categoryIndexEditted = position;
    editCategory(position);
}

public static au.com.wallaceit.reddinator.activity.AboutDialog show(android.content.Context context, boolean isUserInitiated) {
    au.com.wallaceit.reddinator.activity.AboutDialog dialog = new au.com.wallaceit.reddinator.activity.AboutDialog(context, isUserInitiated);
    dialog.show();
    return dialog;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    if (com.aidanas.torch.Const.DEBUG)
        android.util.Log.v(com.aidanas.torch.fragments.MainFragment.TAG, "In onSaveInstanceState()");
    
    outState.putBoolean(com.aidanas.torch.fragments.MainFragment.IS_LIGHT_ON, isLightOn);
    outState.putInt(com.aidanas.torch.fragments.MainFragment.OLD_ORIENTATION, oldOrientation);
}

public void pause() {
    android.util.Log.d(TagConstants.TAG, "pause");
    if (mediaPlayer.isPlaying()) {
        mediaPlayer.pause();
    }
}

private void startInterceptor() {
    android.content.Intent vpnIntent = android.net.VpnService.prepare(this);
    if (vpnIntent != null)
        startActivityForResult(vpnIntent, com.juliansparber.vpnMITM.InterceptorActivity.VPN_REQUEST_CODE);
    else
        onActivityResult(com.juliansparber.vpnMITM.InterceptorActivity.VPN_REQUEST_CODE, com.juliansparber.vpnMITM.RESULT_OK, null);
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.zly.widget.CollapsedTextView textView = ((com.zly.widget.CollapsedTextView) (findViewById(R.id.text)));
    textView.setText("你还你还地球你还你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方你还地球第三方");
}

public void onItemClick(android.widget.AdapterView<?> parent, android.view.View v, int position, long id) {
    mOnMonthCellSelectListener.selectedCell(((com.lokman.event_calendar.view.MonthCellView) (v.getTag(R.layout.week_cell))).dateOfMonth);
}

@java.lang.Override
public void onDragFinished(android.view.View view, int position) {
    com.holenstudio.awesomeview.util.VibratorUtil.Vibrate(getActivity(), 50);
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    switch (v.getId()) {
        case R.id.relative_from :
            imageCenterScreen.setImageDrawable(blackFlag);
            break;
        case R.id.relative_to :
            imageCenterScreen.setImageDrawable(greenFlag);
            break;
    }
    return false;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    tcBaseDelegate.onCreate(this, savedInstanceState);
    try {
        app = getBaseApplicationInterface();
    } catch (java.lang.Exception e) {
    }
    app.addActivity(this);
}

@java.lang.Override
public void setCurrentViewport(lecho.lib.hellocharts.model.Viewport targetViewport) {
    if (null != targetViewport) {
        isLoading = false;
        chartRenderer.setCurrentViewport(targetViewport);
        chartComputator.setCurrentViewport(targetViewport);
        setAxesY();
    }
    android.support.v4.view.ViewCompat.postInvalidateOnAnimation(this);
}

@java.lang.Override
public void onItemClick(android.view.View view) {
    int position = mRecyclerView.getChildPosition(view);
    mCallbacks.onItemSelected(java.lang.String.valueOf(position));
    android.util.Log.d("***", view.toString());
}

@org.junit.Before
public void setup() {
    android.content.Context context = android.support.test.InstrumentationRegistry.getTargetContext();
    access = new com.uri.team21.culinarycommrade.DataAccessor(context);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.database.sqlite.SQLiteDatabase rdb = db.getReadableDatabase();
    studentList = db.fetchAllData();
    new com.example.pustikom.adapterplay.StudentActivity.DataSyncTask().execute(studentList);
}

public void increment(android.view.View view) {
    android.util.Log.i("EnterpriseActivity.java", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
    quantity = (quantity) + 1;
    displayQuantity(quantity);
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    setIntent(intent);
    com.facebook.notifications.NotificationsManager.presentCardFromNotification(cordova.getActivity());
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if (id == (R.id.action_search)) {
        setupeditabletextliseners();
        return true;
    }
    return super.onOptionsItemSelected(item);
}

public void addRecipes(java.util.ArrayList<edu.uw.informatics.brewsky.Recipe> recipes) {
    for (edu.uw.informatics.brewsky.Recipe each : recipes) {
        android.util.Log.i(getString(R.string.log_general), each.toString());
    }
    recipesList.addAll(recipes);
}

@java.lang.Override
public void onClick(android.view.View v) {
    int index = editorCore.getParentView().indexOfChild(layout);
    hideInputHint(index);
    editorCore.getParentView().removeView(layout);
    editorCore.getInputExtensions().setFocusToPrevious(index);
}

public static com.arcao.geocaching4locus.fragment.dialog.LocusTestingErrorDialogFragment newInstance(android.content.Context context) {
    com.arcao.geocaching4locus.fragment.dialog.LocusTestingErrorDialogFragment fragment = new com.arcao.geocaching4locus.fragment.dialog.LocusTestingErrorDialogFragment();
    fragment.prepareDialog(R.string.error_title, (locus.api.android.utils.LocusUtils.isLocusAvailable(context) ? R.string.error_locus_old : R.string.error_locus_not_found), AppConstants.LOCUS_MIN_VERSION.toString());
    return fragment;
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    super.writeToParcel(dest, flags);
    dest.writeParcelable(this.mWPUmsatz, flags);
    dest.writeSparseArray(((android.util.SparseArray) (this.commissions)));
}

public boolean initSession(io.branch.referral.Branch.BranchReferralInitListener callback, @android.support.annotation.NonNull
android.net.Uri data, android.app.Activity activity) {
    boolean uriHandled = readAndStripParam(data, activity);
    initSession(callback, activity);
    return uriHandled;
}

public static android.content.BroadcastReceiver getBroadcastReceiver() {
    return (base.networkstate.NetworkStateReceiver.broadcastReceiver) == null ? new base.networkstate.NetworkStateReceiver() : base.networkstate.NetworkStateReceiver.broadcastReceiver;
}

boolean onLongClick(android.view.View view, M content, int position);

@java.lang.Override
public void getMessageList(int page) {
    mRxDoHttpClient.getMessageList(1).map(BaseResponse::getData).subscribeOn(io.reactivex.schedulers.Schedulers.io()).observeOn(io.reactivex.android.schedulers.AndroidSchedulers.mainThread()).subscribe(mView::showMessageList);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putInt(Const.STEP_POS, stepPosition);
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent sensorEvent) {
    loadTodo();
    manager.newStepDone();
}

@java.lang.Override
public void onClick(android.view.View view) {
    add(view);
    android.support.design.widget.Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG).setAction("Action", null).show();
}

private void privateConstructor(android.content.Context context) {
    mMatrix.set(getImageMatrix());
    setBackgroundColor(Color.BLACK);
    super.setScaleType(ScaleType.MATRIX);
    super.setLongClickable(false);
    setClickable(true);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.i("L", "L");
}

public com.mapbox.services.android.navigation.v5.MapboxNavigationOptions getMapboxNavigationOptions() {
    return isServiceAvailable() ? navigationService.getMapboxNavigationOptions() : options;
}

public void choosePhoto(android.view.View view) {
    choise = 2;
    android.content.Intent intent = new android.content.Intent();
    intent.setType("image/*");
    intent.setAction(Intent.ACTION_GET_CONTENT);
    startActivityForResult(android.content.Intent.createChooser(intent, "Select File"), SELECT_FILE);
}

public void onDrawerClosed(android.view.View view) {
    getSupportActionBar().setTitle(mTitle);
    invalidateOptionsMenu();
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    super.onConnected(bundle);
    if (DEBUG)
        android.util.Log.e(com.vibejukebox.jukebox.activities.JukeboxPlaylistActivity.TAG, "onConnected (Playlist Activity)");
    
    updateLocation(mLastLocation);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    com.androiddeveloper.webprog26.ghordsgenerator.engine.managers.screens_managers.PlayShapeActivityManager playShapeActivityManager = getPlayShapeActivityManager();
    if (playShapeActivityManager != null) {
        playShapeActivityManager.loadChordShapesFromLocalDB();
    }
}

@java.lang.Override
public void sendImageToServer(final java.lang.String id, final java.lang.String client) {
    net.hockeyapp.android.metrics.MetricsManager.trackEvent("Sending image");
    new com.example.zarehhakobian.hoylushare.MainActivity.UploadingAsyncTask().execute(id, client);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mathText.length()) != 0)
        mathText.append("0");
    
    resultView.setText(mathText);
}

@java.lang.Override
protected void onPause() {
    if (logging)
        android.util.Log.d("MainActivity", "Start: onPause()");
    
    super.onPause();
    mStopButton.setEnabled(true);
    this.onClick(mStopButton);
}

private static void forceMainActivityReload() {
    android.content.pm.PackageManager pm = getPackageManager();
    com.plugin.gcm.Intent launchIntent = pm.getLaunchIntentForPackage(getApplicationContext().getPackageName());
    cordova.getActivity().startActivity(launchIntent);
}

public boolean getCameWithCar() {
    android.content.SharedPreferences sharedPreferences = omer.parking.com.util.SharedPrefManager.mCtx.getSharedPreferences(omer.parking.com.util.SharedPrefManager.SHARED_PREF_NAME, Context.MODE_PRIVATE);
    return sharedPreferences.getBoolean(omer.parking.com.util.SharedPrefManager.TAG_CAME_WITH_CAR, true);
}

public void error(com.bopr.android.smailer.MailMessage message, java.lang.Exception error) {
    com.bopr.android.smailer.ActivityLogItem item = new com.bopr.android.smailer.ActivityLogItem(com.bopr.android.smailer.ActivityLog.LEVEL_ERROR);
    item.setMessage(formatMessage(message, R.string.activity_log_message_send_email_failed));
    item.setDetails(error.toString());
    add(item);
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(v.getContext(), com.sinergiass.asistencia.facerecog.RecognitionActivity.class));
}

@java.lang.Override
public void onClick(android.view.View v) {
    ambiesoft.start.model.utility.SoftKeyboard.hideSoftKeyboard(this);
    skipSignIn();
    finish();
}

@java.lang.Override
public void onDrawerOpened(android.view.View drawerView) {
    if ((mDrawerToggle) != null)
        mDrawerToggle.onDrawerOpened(drawerView);
    
    getSupportActionBar().setTitle(R.string.app_name);
}

public void showProgress(@android.support.annotation.NonNull
java.lang.String progressMessage) {
    mInProgress = true;
    mStepperFeedbackType.showProgress(progressMessage);
}

private void init() {
    swipeRefresh = ((android.support.v4.widget.SwipeRefreshLayout) (getActivity().findViewById(R.id.swipe_refresh)));
    swipeRefresh.setColorSchemeResources(R.color.colorPrimary);
    setupConnection();
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    if (com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.DEBUG)
        android.util.Log.d(com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.TAG, "onStart -- ");
    
    com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.mGoogleApiClient.connect();
}

public boolean onQueryTextChange(java.lang.String newText) {
    if (android.text.TextUtils.isEmpty(newText)) {
        mListView.clearTextFilter();
    }else {
        mListView.setFilterText(newText.toString());
    }
    return true;
}

@java.lang.Override
public void loadingStart() {
    loading = new android.app.ProgressDialog(this);
    loading.setMessage("Loading");
    loading.setCancelable(false);
    loading.show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    ringtoneTextView.setText(title);
    stopMediaPlayer(mp);
    dialog.dismiss();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d("CLICK", "ALBUMART");
    android.content.Intent selectorImageIntent = new android.content.Intent(android.content.Intent.ACTION_PICK);
    selectorImageIntent.setType("image/*");
    getActivity().startActivityForResult(selectorImageIntent, mx.dev.franco.musicallibraryorganizer.DetailsTrackDialog.INTENT_OPEN_GALLERY);
}

@java.lang.Override
protected void onPostExecute(java.lang.Boolean value) {
    if (value == false) {
        android.util.Log.e(com.iitp.mayank.celesta2k17.activities.SplashActivity.class.getName(), "Can't fetch the data highlights ");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    try {
        manageRideProposal(RideAction.FINISHED);
    } catch (org.json.JSONException e) {
        e.printStackTrace();
    } catch (io.kuzzle.sdk.exceptions.KuzzleException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void onViewPositionChanged(android.view.View changedView, int left, int top, int dx, int dy) {
    if (changedView == (mContentView)) {
        adjustMenuItemViews(dx);
    }
    invalidate();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            onBackPressed();
            return true;
        case R.id.saveTask :
            assembleTaskAndSave();
            break;
    }
    return super.onOptionsItemSelected(item);
}

protected ProteusView.Manager createViewManager(@android.support.annotation.NonNull
com.flipkart.android.proteus.ViewTypeParser parser, @android.support.annotation.NonNull
com.flipkart.android.proteus.ProteusView view, @android.support.annotation.NonNull
com.flipkart.android.proteus.value.Layout layout, @android.support.annotation.NonNull
com.flipkart.android.proteus.value.ObjectValue data, @android.support.annotation.Nullable
android.view.ViewGroup parent, int dataIndex) {
    return parser.createViewManager(context, view, layout, data, parser.parent, parent, dataIndex);
}

private void beginCrop(android.net.Uri source) {
    android.net.Uri destination = android.net.Uri.fromFile(new java.io.File(getCacheDir(), "cropped"));
    com.soundcloud.android.crop.Crop.of(source, destination).asSquare().start(this);
}

@java.lang.Override
public int getMovementFlags(android.support.v7.widget.RecyclerView recyclerView, android.support.v7.widget.RecyclerView.ViewHolder viewHolder) {
    int dragFlags = (android.support.v7.widget.helper.ItemTouchHelper.UP) | (android.support.v7.widget.helper.ItemTouchHelper.DOWN);
    int swipeFlags = (android.support.v7.widget.helper.ItemTouchHelper.START) | (android.support.v7.widget.helper.ItemTouchHelper.END);
    return makeMovementFlags(dragFlags, swipeFlags);
}

public static synchronized io.centeno.randominsultgenerator.HTMLParser getParser(android.content.Context context, java.lang.String tag1, java.lang.String tag2, java.lang.String html) {
    if ((io.centeno.randominsultgenerator.HTMLParser.instance) == null)
        io.centeno.randominsultgenerator.HTMLParser.instance = new io.centeno.randominsultgenerator.HTMLParser(context, tag1, tag2, html);
    
    return io.centeno.randominsultgenerator.HTMLParser.instance;
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    if (!(currentQuery.equalsIgnoreCase(s.toString()))) {
        notifySearchQueryChanged(s.toString());
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initViews();
    registerUserToGIFsterServer();
    navigationView.setCheckedItem(R.id.nav_searchpeople);
    com.teamspeaghetti.www.gifster.interiorapplication.commonclasses.Utils.startFragment(new com.teamspeaghetti.www.gifster.interiorapplication.fragments.SearchPeopleFragment(), getSupportFragmentManager());
}

@java.lang.SuppressWarnings(value = "deprecation")
public static android.text.Spanned fromHtml(java.lang.String text) {
    if (org.linphone.mediastream.Version.sdkAboveOrEqual(Version.API24_NOUGAT_70)) {
        return android.text.Html.fromHtml(text, Html.FROM_HTML_MODE_LEGACY);
    }else {
        return android.text.Html.fromHtml(text);
    }
}

@java.lang.Override
public void onItemClear() {
    recyclerViewItem.setScaleY(1.0F);
    canPullDown = true;
    android.util.Log.d("mmga", "canPullDownTrue");
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.mygaadi.driverassistance.adapter.JobModelAdapter.onItemClickListener.onItemClick(this.getAdapterPosition());
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if ((hu.zokni1996.android_forum.Main.Settings.actionBar) != null)
        hu.zokni1996.android_forum.Main.Settings.actionBar.setIcon(R.drawable.ic_action_report_problem);
    
    addPreferencesFromResource(R.xml.settings_rules);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.fly.firefly.AnalyticsApplication.sendEvent("Click", "returnDateblock");
    datePickerDialog.show(getActivity().getSupportFragmentManager(), com.fly.firefly.ui.activity.BookingFlight.SearchFlightFragment.DATEPICKER_TAG);
    PICKER = RETURN_DATE_PICKER;
}

public static com.sylvainautran.nanodegree.capstoneproject.data.loaders.CallsLoader getAllCallDetails(android.content.Context context, long callId, long classId) {
    return new com.sylvainautran.nanodegree.capstoneproject.data.loaders.CallsLoader(context, AppelContract.CallStudentLinkEntry.buildCallStudentLinkUriWithCallAndClass(classId, callId), com.sylvainautran.nanodegree.capstoneproject.data.loaders.CallsLoader.Query.PROJECTION_DETAILS, AppelContract.StudentEntry.DEFAULT_SORT);
}

public void onClickHome(android.view.View view) {
    android.util.Log.e(nl.mprog.ghost.GameActivity.TAG, "clicked home?");
    android.content.Intent intent = new android.content.Intent(this, nl.mprog.ghost.MainActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.dodola.rocoosample.HelloHack hack = new com.dodola.rocoosample.HelloHack();
    android.widget.Toast.makeText(this, ((hack.showHello()) + " old"), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onFailure(@android.support.annotation.NonNull
java.lang.Exception exception) {
    android.util.Log.w(com.concavenp.artistrymuse.services.UploadService.TAG, "uploadFromUri:onFailure", exception);
    broadcastUploadFinished(null, fileUri);
    showUploadFinishedNotification(null, fileUri);
    taskCompleted();
}

public void initTabLayout() {
    android.support.design.widget.TabLayout tabLayout = ((android.support.design.widget.TabLayout) (findViewById(R.id.tab_layout)));
    tabLayout.setupWithViewPager(viewPager);
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName name, android.os.IBinder service) {
    android.util.Log.d(org.ShinRH.android.mocklocation.MapActivity.TAG, "onServiceConnected ");
    mMockLocationService = new android.os.Messenger(service);
    mIsBound = true;
    sendMessageToService(MockLocationService.MSG_GET_STATUS, null);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    delete = false;
    dialog.cancel();
}

@java.lang.Override
public final void notifyBluetoothList(android.bluetooth.BluetoothDevice _device) {
    mDiscoveredDevices.add(_device);
    mAdapter.notifyDataSetChanged();
}

@java.lang.Override
protected void getView(java.util.List<com.baozou.rxjavaexample.model.ItemBean> itemBeans, android.widget.ListView listView) {
    android.view.View view = mInflate.inflate(R.layout.adapteritem_main_item, listView, false);
    butterknife.ButterKnife.bind(this, view);
    dealWithTheView(itemBeans);
    listView.addHeaderView(view);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    if (s != null) {
        java.lang.String name = s.toString();
        if (options.contains(name)) {
            value.value = name;
        }
    }
}

public void restartSpeech() {
    speakerOut.speak("Parada", TextToSpeech.QUEUE_ADD, null);
    while (speakerOut.isSpeaking()) {
    } 
    sr.startListening(android.speech.RecognizerIntent.getVoiceDetailsIntent(getApplicationContext()));
}

@java.lang.Override
public long onGetSize() throws android.system.ErrnoException {
    android.system.StructStat stat = null;
    try {
        stat = mFile.fstat();
        return stat.st_size;
    } catch (java.io.IOException e) {
        android.util.Log.e(com.google.android.sambadocumentsprovider.provider.SambaProxyFileCallback.TAG, "Failed to get size for file");
    }
    return 0;
}

public int findUnusedId(android.view.View view) {
    while ((view.getRootView().findViewById((++(fID)))) != null);
    return fID;
}

@java.lang.Override
public void onSuccess(com.quickblox.users.model.QBUser qbUser, android.os.Bundle bundle) {
    regSF();
    loginQB();
}

@java.lang.Override
public void onBindViewHolder(com.ngynstvn.android.blocspot.ui.adapter.CategoryAdapter.CategoryAdapterViewHolder holder, int position) {
    holder.updateViewHolder(com.ngynstvn.android.blocspot.BlocspotApplication.getSharedDataSource().getCategoryList().get(position));
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parent) {
    ((android.widget.TextView) (parent.getChildAt(0))).setTextSize(10);
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.String buttonClickMessage = "Clicked button 1 at position " + position;
    android.util.Log.v(LOG_TAG, buttonClickMessage);
    recyclerViewButtonClickListener.onButton1Click(holder.mImageView.getId(), position);
}

@java.lang.Override
public void onExperimentError() {
    android.util.Log.i(GlassConfig.TAG, "Experiment callbacks. On error");
    super.isExperimentRunning.set(false);
    super.isExperimentRunning.set(false);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    mQqzoneBtn.setChecked(isChecked);
    mQqzoneBtn.setBackgroundResource((isChecked ? R.drawable.btn_share_qzone : R.drawable.btn_share_qzone_unselected));
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    loadAllValues();
    mFilterCalender.set(java.util.Calendar.DAY_OF_MONTH, ((mFilterCalender.get(java.util.Calendar.DAY_OF_MONTH)) + 3));
}

public void start() {
    tm = ((android.telephony.TelephonyManager) (ctx.getSystemService(Context.TELEPHONY_SERVICE)));
    tm.listen(callStateListener, PhoneStateListener.LISTEN_CALL_STATE);
    android.content.IntentFilter intentFilter = new android.content.IntentFilter(android.content.Intent.ACTION_NEW_OUTGOING_CALL);
    ctx.registerReceiver(outgoingReceiver, intentFilter);
}

protected void questionFinish(android.view.View view) {
    gameHandler.postDelayed(endQuestionTimer, (5 * 1000));
}

public void enable() {
    android.util.Log.d("Reverb", "Enabled Reverb effect");
    if ((effect) != null) {
        effect.setEnabled(true);
    }
    isActive = true;
}

public void onClick(android.view.View v) {
    onCtrlClick(urlCtrlLock, true, true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    postNewReviewIv.setVisibility(View.VISIBLE);
    activityTitle.setOnClickListener(activityTitleListenerHide);
}

@java.lang.Override
public void onStartSigning() {
    android.widget.Toast.makeText(this, "正在输入", Toast.LENGTH_SHORT).show();
}

public void share(android.view.View button) {
    if (!(facebook.isSessionValid())) {
        loginAndPostToWall();
        finish();
    }else {
        postToWall(messageToPost, Name);
    }
}

java.util.List<com.android.vending.billing.Purchase> getAllPurchases() {
    return new java.util.ArrayList<com.android.vending.billing.Purchase>(mPurchaseMap.values());
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    mRealmInstance = io.realm.Realm.getDefaultInstance();
}

public void deleteDataFromDB() {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    db.delete(database.DatabaseHandler.TABLE_CHILD, null, null);
    db.delete(database.DatabaseHandler.TABLE_SESSIONS, null, null);
    db.close();
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.barterbayucsb.barterbay.MyOffersActivity.currentOffer = com.barterbayucsb.barterbay.MyOffersActivity.LocalOffers.get((3 + (7 * ((page) - 1))));
    android.content.Intent intent = new android.content.Intent(this, com.barterbayucsb.barterbay.ViewMyPost.class);
    startActivity(intent);
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initPlayBackView();
    initFun();
    start();
}

private void getBitRate() {
    handler = new android.os.Handler();
    handler.postDelayed(new java.lang.Runnable() {
        public void run() {
            bitRate();
            handler.postDelayed(this, 2000);
        }
    }, 1);
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.util.Log.i("AMP", "ondestroy timetrial");
    announcementHandler.shutDown();
    vibrationHandler.stopVibrate();
    announcementHandler = null;
    vibrationHandler = null;
    gameHandler = null;
    prefs = null;
}

@java.lang.Override
public void adDisplayed(com.applovin.sdk.AppLovinAd appLovinAd) {
    if (((isVideoAd()) && (wasPlayingMusic)) && (!(shutdownAfter))) {
        com.frostwire.android.offers.AppLovinInterstitialAdapter.LOG.info("adDisplayed(): wasPlaying and not shutting down, resuming player playback");
        com.andrew.apollo.utils.MusicUtils.play();
    }
}

public static void print(com.noveogroup.android.log.Logger.Level level, java.lang.String message, java.lang.Throwable throwable) {
    com.noveogroup.android.log.LoggerManager.getLogger().print(level, message, throwable);
}

public void onClick(android.content.DialogInterface dialog, int whichIn) {
    openDatabase(files[which], true);
}

private void updateTotalUserInterface() {
    calculateScreenConfiguration();
    updateWindowParams();
    updateLayoutParams();
    if ((mOrientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) {
        if (isAttachedToWindow()) {
            hide();
        }
    }
}

protected void selectLastSelectedTab() {
    if ((selectedTabPosition) >= 0) {
        android.support.design.widget.TabLayout.Tab selectedTab = tabLayout.getTabAt(selectedTabPosition);
        selectedTab.select();
    }
}

public void onClick(android.content.DialogInterface dialogBox, int id) {
    validateDeposit(depositView);
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    loading = android.app.ProgressDialog.show(this, "Fetching...", "Wait...", false, false);
}

@java.lang.Override
public void onRefresh() {
    android.widget.Toast.makeText(activity, "refreshed!", Toast.LENGTH_SHORT).show();
    refreshPingList();
}

private void setState(android.content.SharedPreferences prefs, com.apptentive.android.sdk.RatingModule.RatingState state) {
    prefs.edit().putString(Constants.PREF_KEY_RATING_STATE, state.name()).commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.v("CLICK", "clickclickclick");
    sortByLocation();
    mAdapter.notifyDataSetChanged();
}

protected void restartPreview() {
    android.os.Message restartMessage = android.os.Message.obtain();
    restartMessage.what = R.id.restart_preview;
    handler.handleMessage(restartMessage);
}

@java.lang.Override
public void onItemClick(android.view.View view, int position) {
    mc2.tvz.croatiago.activities.DetailActivity.startDetailsActivity(getActivity(), sublist, position);
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mediaPlayer, int i, int i1) {
    android.util.Log.v("MUSIC PLAYER", "Playback Error");
    mediaPlayer.reset();
    return false;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            save(dialog, false);
            break;
        case android.content.DialogInterface.BUTTON_NEGATIVE :
            if (!(editing))
                transmissionTab.addNew(null);
            
            break;
    }
}

public android.graphics.Bitmap getPhotoBitmap(android.content.ContentResolver contentResolver, java.lang.String photoUri) throws java.io.IOException {
    android.graphics.Bitmap photo = MediaStore.Images.Media.getBitmap(contentResolver, android.net.Uri.parse(photoUri));
    return photo;
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(this, com.expenx.expenx.activity.ExpenxActivity.class));
    LoginActivity.isExpenxActivityLaunched = true;
    this.finish();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.preferences);
    de.danoeh.antennapod.activity.PreferenceActivity.instance.preferenceController.onCreate();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    android.content.Intent i = new android.content.Intent(getApplicationContext(), ms_br.appriuso.ItemActivity.class);
    startActivity(i);
    finish();
    markerTemp.remove();
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    java.lang.System.out.println("Value changed");
    aparato.setNetid(etNetID.getText().toString());
}

@org.junit.Test
public void configurePlayer() {
    com.psu.capstonew17.backend.api.VideoManager manager = com.psu.capstonew17.backend.data.ExternalVideoManager.getInstance(context);
    com.psu.capstonew17.backend.api.Video video = new com.psu.capstonew17.backend.api.stubs.VideoStub();
    android.media.MediaPlayer player = new android.media.MediaPlayer();
    video.configurePlayer(player);
}

@java.lang.Override
public void reloadData() {
    android.util.Log.d(com.flingsoftware.personalbudget.app.budgets.BudgetDetailsData.TAG, "Fragment Data reload data");
    new com.flingsoftware.personalbudget.app.budgets.BudgetDetailsData.GetBudgetDetailsTask().execute(budget.getId());
}

public void addSection(java.lang.String name, int iconId, java.util.List<java.lang.String> children) {
    mSections.add(new com.google.android.sambadocumentsprovider.browsing.BrowsingAdapter.Section(name, iconId, children));
    notifyDataSetChanged();
}

public void decimal(android.view.View v) {
    if (lastPress.equals("=")) {
        clearAll();
        lastPress = "";
    }
    Display.append(".");
    btnDot.setEnabled(false);
}

@java.lang.Override
public void setPrimaryItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    super.setPrimaryItem(container, position, object);
    com.example.xyzreader.ui.ArticleDetailFragment fragment = ((com.example.xyzreader.ui.ArticleDetailFragment) (object));
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_DONE)) {
        commentPresenter.validateComment(v.getText().toString());
    }
    return false;
}

@java.lang.Override
public void onError(java.lang.String error) {
    android.widget.Toast.makeText(getActivity(), error, Toast.LENGTH_LONG).show();
    pDialog.hide();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.i(Constants.LOG_TAG, semester);
    save_and_refresh(view);
}

public final android.view.View getView() {
    if ((textureView) == null) {
    }
    return aspectRatioFrameLayout;
}

public android.view.View getView() {
    return (mNativePage) != null ? mNativePage.getView() : mContentViewParent;
}

@java.lang.Override
public boolean onQueryTextChange(java.lang.String s) {
    android.util.Log.wtf("searchView", "onQueryTextChange");
    return false;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_course);
    com.idgi.event.ApplicationBus.register(this);
    java.lang.String courseName = com.idgi.session.SessionData.getCurrentCourse().getName();
    initializeWithTitle(courseName);
    setupViewPager();
}

public void addMedicine() {
    android.content.Intent intent = new android.content.Intent();
    intent.putExtra(Constants.IS_INIT, isInit);
    startActivity(intent.setClass(this, com.umb.cs682.projectlupus.activities.medicineAlert.AddMedicine.class));
}

private void initContentId(final net.gini.android.vision.internal.camera.photo.ExifReader exifReader, final java.lang.String userComment) {
    mContentId = exifReader.getValueForKeyFromUserComment(Exif.USER_COMMENT_CONTENT_ID, userComment);
    if ((mContentId) == null) {
        mContentId = generateUUID();
    }
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    android.util.Log.i(com.intersog.androidcourse.rimma.googlemaphw19.MapsActivity.TAG, "onStart ");
    mGoogleApiClient.connect();
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    try {
        player.stop();
        player.release();
    } catch (java.lang.Exception e) {
        android.widget.Toast.makeText(this, "Didnt stop", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onCreate() {
    android.util.Log.i("TimerService", "onCreate called");
    super.onCreate();
    handler.removeCallbacks(sendUpdatesToUI);
}

@java.lang.Override
public void onLoading() {
    android.util.Log.d("onLoading", ("category:" + (category)));
    swipeRefresh.setRefreshing(true);
}

public static void confApi(android.content.Context context) {
    if (com.subang.api.SubangAPI.isConfed()) {
        return ;
    }
    com.subang.worker.util.AppUtil.conf(context);
    com.subang.api.SubangAPI.conf(WebConst.WORKER, AppConf.cellnum, AppConf.password, AppConf.basePath);
}

public void increaseBeerCount(android.view.View v) {
    (mBeerCount)++;
    mTotalBeersTextView.setText(getString(R.string.beers_had, mBeerCount));
    updateBAC();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    gameView = new abyssproductions.double0driver.GameEngine.GameSurfaceView(this);
    this.setVolumeControlStream(AudioManager.STREAM_MUSIC);
    setContentView(gameView);
    super.onDestroy();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_dashboard);
    android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar)));
    setSupportActionBar(toolbar);
    bindListeners();
    findReferencesToDisplayControls();
}

private void enter(dot.dominionofcity.Message message) {
    android.util.Log.v(dot.dominionofcity.Chatroom.TAG, ("Out-> " + message));
    sender.enter(message);
}

@android.support.annotation.Nullable
@java.lang.Override
public edu.gatech.ledpathways.ledpathways.objects.Employee getItem(int position) {
    if ((mListFiltered.size()) > 0) {
        return mListFiltered.get(position);
    }
    return super.getItem(position);
}

@java.lang.Override
public void onResume() {
    android.util.Log.i("PlayListView", "onResume called");
    super.onResume();
}

@java.lang.Override
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if ((requestCode == (com.localytics.android.itracker.ui.PhotoFragment.REQUEST_TAKE_PHOTO)) && (resultCode == (android.app.Activity.RESULT_OK))) {
        galleryAddPhoto();
        reloadPhotosWithRequiredPermission();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    nu.yona.app.ui.YonaActivity.getActivity().showKeyboard(passcode);
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    switch (msg.what) {
        case com.mobilesolutionworks.android.app.ActivityControllerHost.MSG_REALLY_STOPPED :
            if (mStopped) {
                doReallyStop(false);
            }
            break;
        default :
            super.handleMessage(msg);
    }
}

@java.lang.Override
public void print(com.noveogroup.android.log.Level level, java.lang.String message, java.lang.Throwable throwable) {
    if ((handler) != null) {
        handler.print(getName(), level, throwable, message);
    }
}

private void removeNotification() {
    android.app.NotificationManager nMgr = ((android.app.NotificationManager) (getApplicationContext().getSystemService(Context.NOTIFICATION_SERVICE)));
    nMgr.cancel(Constants.NOTIFICATION_ID.FOREGROUND_SERVICE);
}

@android.support.annotation.NonNull
public static com.solera.defrag.TraversalAnimation newInstance(@android.support.annotation.NonNull
android.animation.Animator animator, @com.solera.defrag.TraversalAnimation.AnimateInDrawOrder
int drawOrder) {
    return new com.solera.defrag.AutoValue_TraversalAnimation(animator, drawOrder);
}

protected void startLocationUpdates() {
    com.google.android.gms.location.LocationServices.FusedLocationApi.requestLocationUpdates(gapiClient, locationRequest, this);
    android.widget.Toast.makeText(this, "startLocationUpdates", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected android.content.Intent createIntent(android.content.Context context) {
    return new android.content.Intent(context, org.gem.indo.dooit.views.settings.SettingsActivity.class);
}

private void subscribeToPushService() {
    com.google.firebase.messaging.FirebaseMessaging.getInstance().subscribeToTopic("Test");
    android.util.Log.d("AndroidBash", "Subscribed");
    java.lang.String token = com.google.firebase.iid.FirebaseInstanceId.getInstance().getToken();
    android.util.Log.d("AndroidBash", token);
}

public static void test_031() {
    excute(testcase.Object_ResIdText, testcase.Operation_ClickWait, "com.android.music:id/albumtab", "专辑");
    excute(testcase.Object_ResIdInstance, testcase.Operation_ClickWait, "com.android.music:id/line1", "0");
    check(testcase.Object_TextScroll, testcase.Operation_checkExist, "Test");
    check(testcase.Object_TextScroll, testcase.Operation_checkExist, "Test1");
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(com.xunce.electrombile.database.MyDatabaseHelper.CREATE_DATETRACK);
    db.execSQL(com.xunce.electrombile.database.MyDatabaseHelper.CREATE_DATETRACKSECOND);
    android.widget.Toast.makeText(mContext, "created succeeded", Toast.LENGTH_SHORT).show();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.dismiss();
    saveData();
    scheduleNotifications();
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.ast.blocksave.DashboardActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (saveImagesInLocalDataStore()) {
    }else {
    }
    finish();
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    if (!(android.text.TextUtils.isEmpty(editable.toString()))) {
        com.openthos.appstore.MainActivity.mHandler.sendMessage(com.openthos.appstore.MainActivity.mHandler.obtainMessage(Constants.SEARCH_FRAGMENT, editable.toString()));
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.content.Intent service = new android.content.Intent(context, it.android.unishare.BackgroundService.class);
    context.startService(service);
}

@java.lang.Override
public void bookmarkSelected(int position) {
    com.duckduckgo.mobile.android.duckduckgo.ui.bookmarks.BookmarkModel bookmarkModel = bookmarks.get(position);
    if (isEditing) {
        bookmarksView.showEditBookmark(bookmarkModel);
    }else {
        bookmarksView.resultOpenBookmark(bookmarkModel);
    }
}

@java.lang.Override
protected void onPostExecute(android.graphics.Bitmap result) {
    if ((mMap) != null)
        mMap.clear();
    
    drawOwnLocation();
    drawPolylines();
    drawStations();
}

@java.lang.Override
public java.util.List<de.fau.amos.virtualledger.android.model.Contact> getAll() {
    return new java.util.LinkedList(this.allContacts);
}

public void onLocationChanged(android.location.Location location) {
    drawMap(location, map, finalCoord, locationManager, this);
}

@java.lang.Override
public void onReceive(android.content.Context arg0, android.content.Intent arg1) {
    smsServiceListener.OnSmsSent(sms, getResultCode());
}

@java.lang.Override
public boolean onSingleTapUp(android.view.MotionEvent e) {
    com.github.mikephil.charting.listener.OnChartGestureListener l = mChart.getOnChartGestureListener();
    if (l != null) {
        l.onChartSingleTapped(e);
    }
    performHighlight(e);
    return super.onSingleTapUp(e);
}

@java.lang.Override
protected void onPostExecute(java.lang.String s) {
    android.widget.Toast.makeText(getApplicationContext(), msg, Toast.LENGTH_LONG).show();
    super.onPostExecute(s);
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> arg0, android.view.View arg1, int pos, long id) {
    showEntryDeleteDialog(((vocabletrainer.heinecke.aron.vocabletrainer.lib.Storage.Entry) (adapter.getItem(pos))), (pos - 1));
    return true;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case 0 :
            listener.onInputDone(new java.lang.String("男"));
            break;
        case 1 :
            listener.onInputDone(new java.lang.String("女"));
            break;
    }
}

private java.lang.String getLastDistro() {
    android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
    return null;
}

public void setItems(final it.sephiroth.android.library.bottomnavigation.BottomNavigationItem[] items) {
    this.items = items;
    this.shifting = (null != items) && ((items.length) > 3);
}

@java.lang.Override
public java.util.List<co.fddittmar.planbuilder.data.model.Program> getAllPrograms() {
    if ((repository) == null)
        android.util.Log.d("DEBUG", "Null repository");
    
    return repository.fetchAllPrograms();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    mLastLocation = location;
    handleNewLocation(location);
    android.util.Log.d(com.agusgarcia.geonotes.MapFragment.TAG, ("onLocationChanged" + (mLastLocation.toString())));
}

private void startScreenshots() {
    android.content.Intent intent = new android.content.Intent(this, csci435.csci435_odbr.SnapshotIntentService.class);
    int index = csci435.csci435_odbr.BugReport.getInstance().numEvents();
    intent.putExtra("index", index);
    startService(intent);
}

@java.lang.Override
public void onKeyboardOpen(final int keyBoardHeight) {
    android.util.Log.d("MainActivity", "Opened soft keyboard");
}

@android.support.annotation.Nullable
@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    return new ch.dissem.apps.abit.service.ProofOfWorkService.PowBinder(ch.dissem.apps.abit.service.ProofOfWorkService.engine, this);
}

private void debug(int number) {
    android.widget.Toast.makeText(this, (("Test point " + number) + " ..."), Toast.LENGTH_SHORT).show();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    getActivity().finish();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    mCallbacks.onNavigationDrawerItemSelected(0);
}

@java.lang.Override
public com.example.nobell.project4.FeedAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View v = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.adapter_feed, null);
    return new com.example.nobell.project4.FeedAdapter.ViewHolder(v);
}

@android.support.annotation.MainThread
public void notifyPlaylistChanged() {
    android.util.Log.d(org.bottiger.podcast.playlist.Playlist.TAG, "notifyPlaylistChanged");
    org.bottiger.podcast.SoundWaves.getRxBus().send(this);
    org.bottiger.podcast.SoundWaves.getBus().post(this);
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    loadingInternetDialog = new android.app.ProgressDialog(this);
    loadingInternetDialog.setMessage("Loading...");
    loadingInternetDialog.show();
}

public void startMain() {
    android.content.Intent intent = new android.content.Intent(activity, com.fu.group10.capstone.apps.teachermobileapp.activity.ListRoomActivity.class);
    intent.putExtra("username", username);
    startActivity(intent);
    activity.finish();
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL(com.example.android.inventoryapp.data.InventoryDbHelper.SQL_CREATE_ENTRIES);
    onCreate(db);
}

public void showStats(android.view.View view) {
    topDarkActionbar.showStats(0);
}

public void add(android.graphics.Bitmap bitmap) {
    ivList.add(bitmap);
    this.notifyDataSetChanged();
}

public static void api(java.lang.String s) {
    if ((com.joe.zatuji.Constant.IS_DEBUG) || (com.joe.zatuji.helper.SettingHelper.isDebug())) {
        android.util.Log.d("api", s);
    }
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.util.Log.i(logTAG, "SailfishNotificationService starting");
    com.splunk.mint.Mint.initAndStartSession(this, Constants.MINT_API_KEY);
    getPrefAndConnect();
    return START_STICKY;
}

private void setGenderSpinner() {
    android.widget.ArrayAdapter<java.lang.String> spinnerAdapter = new android.widget.ArrayAdapter<java.lang.String>(this, R.layout.support_simple_spinner_dropdown_item, new java.lang.String[]{ "Gender" , "Male" , "Female" });
    spGender.setAdapter(spinnerAdapter);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            showLogoutDialog();
            return true;
        case R.id.action_logout :
            showLogoutDialog();
            return true;
        default :
            return false;
    }
}

protected void profileClick(android.view.View view) {
    startActivity(new android.content.Intent(this, android.duke290.com.loco.ProfileActivity.class));
    finish();
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent event) {
    event.offsetLocation(offsetX, offsetY);
    controller.touched(event);
    invalidate();
    return true;
}

@java.lang.Override
public void onTouchEvent(android.support.v7.widget.RecyclerView rv, android.view.MotionEvent e) {
    android.util.Log.e(com.chad.library.adapter.base.listener.SimpleClickListener.TAG, "onTouchEvent: ");
    mGestureDetector.onTouchEvent(e);
}

public void doGuidedTakeoff(double altitude) {
    com.o3dr.android.client.apis.ControlApi.getApi(this).takeoff(altitude);
}

@java.lang.Override
public void onSuccess() {
    android.content.Intent intent = new android.content.Intent(this, framgia.vn.framgiacrb.ui.activity.SplashActivity.class);
    getPlaceFromServer(Session.sAuthToken);
    getUserFromServer(Session.sAuthToken);
    startActivity(intent);
    finish();
}

private void addDatabaseLabel(java.lang.String experimentId, java.lang.String trialId, com.google.android.apps.forscience.whistlepunk.filemetadata.Label label, com.google.android.apps.forscience.whistlepunk.filemetadata.LabelValue labelValue) {
    synchronized(mLock) {
        final android.database.sqlite.SQLiteDatabase db = mDbHelper.getWritableDatabase();
        com.google.android.apps.forscience.whistlepunk.metadata.SimpleMetaDataManager.addDatabaseLabel(db, experimentId, trialId, label, labelValue);
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    java.lang.String createQuery = "";
    for (com.labs.fi141.devicecare.db.Table table : tables.values()) {
        createQuery += table.getCREATE();
    }
    db.execSQL(createQuery);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    view = inflater.inflate(R.layout.fragment_signup, container, false);
    initializeButtons();
    setcontrolls();
    LoginFacebook();
    return view;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_home_screen);
    playername = ((android.widget.EditText) (findViewById(R.id.editText)));
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.content.Intent intent = new android.content.Intent(this, com.android.grabhouse.FetchAndSaveDataService.class);
    bindService(intent, connection, Context.BIND_AUTO_CREATE);
}

@java.lang.Override
public void onPrepareLoad(android.graphics.drawable.Drawable placeHolderDrawable) {
    android.util.Log.i("TAG", "onPrepareLoad bitmap");
}

@java.lang.Override
public java.lang.Boolean pendingData(android.os.Bundle arg) throws java.lang.Exception {
    return au.com.pactera.pacterapulse.helper.NetworkHelper.postVote(vote, context);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mButton.setText("develop");
    int i = 0;
    int j = 0;
    int k = 0;
    int z = 0;
    java.lang.String extra = "master 再次提交";
}

@java.lang.Override
public void onClick(android.view.View view) {
    switch (view.getId()) {
        case R.id.btn_submit :
            submit();
            break;
        case R.id.imageView_user_picture :
            new ir.rasen.charsoo.view.dialog.PopupSelectCameraGallery(this).show();
            break;
    }
}

@java.lang.Override
public void onAuthStateChanged(@android.support.annotation.NonNull
com.google.firebase.auth.FirebaseAuth firebaseAuth) {
    com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser();
    if (user != null) {
    }else {
    }
}

@android.support.annotation.CallSuper
@android.support.annotation.NonNull
protected io.reactivex.functions.Consumer<java.lang.Throwable> onRefreshItemsLoadFail() {
    return new io.reactivex.functions.Consumer<java.lang.Throwable>() {
        @java.lang.Override
        public void accept(java.lang.Throwable throwable) throws java.lang.Exception {
            doCancelLoading();
        }
    };
}

public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) {
    mYear = year;
    mMonth = monthOfYear;
    mDay = dayOfMonth;
    showDialog(getirbitaksi.hackathon.com.getirbitaksihackathon.event.CreateNewEventActivity.TIME_DIALOG_ID);
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    mButtonSec.setBackgroundColor(res.getColor(R.color.background_buttons));
    mButtonFstop.setBackgroundColor(res.getColor(R.color.background_button_chosen));
    whatWeCalculateFor = 1;
    return false;
}

public void activateBus() {
    synchronized(me.sniggle.android.utils.otto.ActivatorBus.LOCK) {
        for (java.lang.Object event : eventCache) {
            post(event);
        }
        eventCache.clear();
        active = true;
    }
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    if (((mCallback) != null) && (mp != null)) {
        mCallback.playerStateChanged(KPlayerCallback.ENDED);
    }
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    tasksDB.deleteTask(getTasks().get(itemPosition));
    getTasks().remove(itemPosition);
    getAdapter().notifyDataSetChanged();
    return true;
}

private android.graphics.drawable.Drawable getColoredBackground(int color) {
    android.graphics.drawable.Drawable circle = getResources().getDrawable(R.drawable.circle);
    circle.setColorFilter(new android.graphics.PorterDuffColorFilter(color, PorterDuff.Mode.MULTIPLY));
    return circle;
}

public static android.database.Cursor getFavoriteMovieData(android.content.Context context) {
    com.omegaspocktari.movieprojectone.utilities.TMDbUtils.currentSortingMethod = context.getString(R.string.pref_sorting_favorites);
    return context.getContentResolver().query(FavoriteMovies.CONTENT_URI, null, null, null, null);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    fieldPos = 99;
    ydLn = calcYdLn(fieldPos);
    dialog.cancel();
}

@java.lang.Override
public void onStop() {
    super.onStop();
    android.util.Log.e("Test", "Stop");
    if (progressDialog.isShowing()) {
        progressDialog.dismiss();
        progressDialog.hide();
    }
}

@java.lang.Override
public void onError(@io.reactivex.annotations.NonNull
java.lang.Throwable error) {
    android.util.Log.e("Schedule", error.toString(), error);
    radonsoft.mireaassistant.helpers.Global.groupID = groupIDBackup;
    radonsoft.mireaassistant.helpers.Global.instituteID = instituteIDBackup;
    TimeManager.TEST.add(radonsoft.mireaassistant.helpers.Global.scheduleNamesOddStringBackup[0]);
    progressDialog.dismiss();
}

@java.lang.Override
public void onClick(android.view.View view) {
    view.setMinimumHeight(500);
}

@java.lang.Override
public void onError(android.content.Context context, net.gotev.uploadservice.UploadInfo uploadInfo, net.gotev.uploadservice.ServerResponse serverResponse, java.lang.Exception exception) {
    attach.hasUpload = false;
    cb.failed("上传失败");
}

private boolean isTopVisible(android.support.v7.widget.RecyclerView recyclerView) {
    int position = ((android.support.v7.widget.LinearLayoutManager) (recyclerView.getLayoutManager())).findFirstVisibleItemPosition();
    if (position == 0)
        return true;
    else
        return false;
    
}

private void init(android.content.Context context) {
    this.context = context;
    if (de.christinecoenen.code.zapp.utils.ShortcutHelper.areShortcutsSupported()) {
        loadChannelList();
        setSummaryToSelectedChannels();
    }
}

@java.lang.Override
public int getCount() {
    android.util.Log.d("cursor", ((java.lang.Integer.toString(mDB.getCursor().getCount())) + " getCount"));
    return mCS.getCount();
}

@java.lang.Override
public void onAnimationStart(android.view.View view) {
    super.onAnimationStart(view);
    getFab().setVisibility(View.VISIBLE);
    android.support.v4.view.ViewCompat.animate(getFab()).setListener(null);
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(getApplicationContext(), "Couldn't get json from server. Check LogCat for possible errors!", Toast.LENGTH_LONG).show();
    (zmiennik)++;
    if ((zmiennik) < 5) {
        runAsync();
    }
    return ;
}

public void increment(android.view.View view) {
    int numberOfCoffees = (quantity) + 1;
    (quantity)++;
    display(numberOfCoffees);
}

@java.lang.Override
public void run() {
    popWindow.setAnimationStyle(android.R.style.Animation);
    popWindow.dismiss();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    rememberEulaAccepted(context);
    login(serverText.toString(), usernameEditText.toString(), passwordEditText.toString());
}

@butterknife.OnClick(value = R.id.searchButton)
void searchProducts(android.view.View view) {
    be.fenego.android_spotshop.utilities.ProductUtility.getProductByText(this, searchEditText.getText().toString());
}

public void onClientConnectionFail() {
    log("Client connection fail !");
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            if (mRunning) {
                clientConnect();
            }
        }
    }, 5000);
}

public static org.dbtools.android.domain.LocalDateTime longToLocalDateTime(long l) {
    return org.dbtools.android.domain.Instant.ofEpochMilli(l).atZone(org.dbtools.android.domain.ZoneId.systemDefault()).toLocalDateTime();
}

@java.lang.Override
public void onUDPReceive(at.android.smartrobot.network.UDPReceiveEvent e) {
    timeReceiveAcknowlage = e.getTimestamp();
    android.util.Log.d(at.android.smartrobotapp.activities.SmartActivity.TAG, ("ACK: " + (timeReceiveAcknowlage)));
}

@java.lang.Override
protected void onPostExecute(java.lang.String[] result) {
    android.util.Log.v(LOG_TAG, ("Uber total fare is: " + (result[0])));
}

public static void post(java.lang.String url, com.loopj.android.http.RequestParams params, com.loopj.android.http.AsyncHttpResponseHandler responseHandler) {
    ca.shahnewazkhan.locator.LocatorRestClient.client.post(ca.shahnewazkhan.locator.LocatorRestClient.getAbsoluteUrl(url), params, responseHandler);
}

@java.lang.Override
public void OnFalure(java.lang.String msg) {
    if ((mView) == null)
        return ;
    
    isLoading = false;
    android.util.Log.e("tag", ("onFalure    " + msg));
    mView.showMsg(msg);
    mView.hideProgress();
}

public static void showToast(android.content.Context context, int messageiId) {
    android.widget.Toast.makeText(context, context.getResources().getString(messageiId), Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.im_getStarted :
            navigateNextScreen();
            break;
        default :
            break;
    }
}

private static java.util.Set<java.lang.String> getAllKanjiFromRadicalList(java.util.List<com.example.x.androidkanjilookup.RadicalLookup.Radical> radicalList) {
    java.util.HashSet<java.lang.String> output = new java.util.HashSet<java.lang.String>();
    for (com.example.x.androidkanjilookup.RadicalLookup.Radical r : radicalList)
        output.addAll(r.relatedKanji);
    
    return output;
}

@java.lang.Override
public void success(java.lang.Object o, retrofit.client.Response response) {
    android.widget.Toast.makeText(mContext, "Post uploaded!", Toast.LENGTH_SHORT);
    android.util.Log.d("Chooser", "Post uploaded!");
}

public void test_045() {
    framework.common.ClockCommon.switchMode("秒表");
    excute(testcase.Object_Description, testcase.Operation_ClickWait, "开始");
    excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.deskclock:id/right_button");
    check(testcase.Object_Description, testcase.Operation_checkExist, "分享");
    excute(testcase.Object_Description, testcase.Operation_ClickWait, "重置");
}

@java.lang.Override
public void call(android.location.Location location) {
    fragment.setAdapterLocation(location);
    if (location != null) {
        animateTo(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude()));
    }
}

void attachView(V view, android.os.Bundle savedInstanceState, boolean isAttachedOnBackPressed);

private java.lang.String reasonDescription() {
    switch (reason) {
        case com.polidea.rxandroidble.exceptions.BleScanException.BLUETOOTH_CANNOT_START :
            return "BLUETOOTH_CANNOT_START";
        case com.polidea.rxandroidble.exceptions.BleScanException.BLUETOOTH_DISABLED :
            return "BLUETOOTH_DISABLED";
        case com.polidea.rxandroidble.exceptions.BleScanException.BLUETOOTH_NOT_AVAILABLE :
            return "BLUETOOTH_NOT_AVAILABLE";
        case com.polidea.rxandroidble.exceptions.BleScanException.LOCATION_PERMISSION_MISSING :
            return "LOCATION_PERMISSION_MISSING";
        case com.polidea.rxandroidble.exceptions.BleScanException.LOCATION_SERVICES_DISABLED :
            return "LOCATION_SERVICES_DISABLED";
    }
    return "UNKNOWN";
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    if (mRbName.isChecked()) {
        mActvNamePreview.setText(s);
    }else {
        mActvLocationPreview.setText(s);
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    java.lang.String task = java.lang.String.valueOf(DialogText.getText());
    addEntry(task);
}

private void moveToSignUpActivity() {
    android.content.Intent i = new android.content.Intent(getApplicationContext(), com.example.ahmedsaleh.dbse.SignUp.class);
    startActivity(i);
    setContentView(R.layout.activity_sign_up);
}

@java.lang.Override
public void onConnectionSuspended(int i) {
    android.widget.Toast.makeText(this, "onConnectionSuspended", Toast.LENGTH_SHORT).show();
    android.util.Log.d(com.tacticsgames.dontdie.activities.PlayServicesActivity.TAG, "onConnectionSuspended(): attempting to reconnect");
    googleApiClient.connect();
}

private boolean checkPermitGallery() {
    return ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.MANAGE_DOCUMENTS)) == (android.content.pm.PackageManager.PERMISSION_GRANTED));
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    if (keyCode == (android.view.KeyEvent.KEYCODE_BACK)) {
        fadeDateTime(1, 300);
        resetState();
        return true;
    }else {
        return super.onKeyDown(keyCode, event);
    }
}

@java.lang.Override
public void onBindViewHolder(com.example.xunhu.xunchat.View.AllAdapters.PhotoGalleryAdapter.ViewHolder holder, int position) {
    android.graphics.Bitmap bitmap = getBitmapFromMediaStore(position);
    if (bitmap != null) {
        holder.getIvPhotoGallery().setImageBitmap(bitmap);
    }
}

private void updateListHeight(android.widget.ListView listView, com.medic.medicapp.WarningAdapter adapter) {
    adapter.notifyDataSetChanged();
    com.medic.medicapp.UIUtils.setListViewHeightBasedOnItems(listView);
}

public static com.flaredown.flaredownApp.Checkin.FlaringQuestionFragment newInstance(boolean isSummaryView) {
    android.os.Bundle args = new android.os.Bundle();
    args.putBoolean(com.flaredown.flaredownApp.Checkin.FlaringQuestionFragment.ARG_SUMMARY_VIEW, isSummaryView);
    com.flaredown.flaredownApp.Checkin.FlaringQuestionFragment fragment = new com.flaredown.flaredownApp.Checkin.FlaringQuestionFragment();
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
protected void onPostExecute(java.lang.String json) {
    android.content.Intent intent = new android.content.Intent(this, ljuboandtedi.fridger.activties.ShowMealActivity.class);
    intent.putExtra("json", json);
    intent.putExtra("search", searchedInfo);
    startActivity(intent);
}

public static void main(java.lang.String[] argArray) throws java.io.IOException {
    int result = new com.android.dx.command.dexer.Main().run(arguments, null, null);
    if (result != 0) {
        java.lang.System.exit(result);
    }
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    mediaPlayer.reset();
    mediaPlayer.release();
    return super.onUnbind(intent);
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    android.util.Log.i(SmartClosetConstants.SMARTCLOSET_DEBUG_TAG, (((ssar.smartcloset.MainActivity.CLASSNAME) + ": ID token: ") + result));
    if (result != null) {
        tokenId = result;
        authenticateWithBackendServer();
    }else {
    }
}

@java.lang.Override
protected void onStop() {
    android.util.Log.d(com.project.uoft.thermostat_interface.MainActivity.TAG, "onStop");
    super.onStop();
    mNest.removeAllListeners();
    com.project.uoft.thermostat_interface.Auth.removeAuthListener();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    n = $missing$;
    setupToolbar();
    setupSlidingMenu();
    displayView(0);
}

public android.app.Activity getPreActivity() {
    int size = com.hitomi.aslibrary.ActivityManager.activityStack.size();
    if (size < 2)
        return null;
    
    return com.hitomi.aslibrary.ActivityManager.activityStack.elementAt((size - 2));
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    hideProgressDialog();
    if (isFinishing()) {
        stopScan();
        no.nordicsemi.android.thingylib.ThingySdkManager.clearInstance();
    }
}

public static edu.sdsu.cs.sharepic.model.Account[] supportedAccounts(android.content.Context context) {
    if ((edu.sdsu.cs.sharepic.model.Account.accounts) == null) {
        edu.sdsu.cs.sharepic.model.Account.accounts = new edu.sdsu.cs.sharepic.model.Account[]{ edu.sdsu.cs.sharepic.model.FlickrAccount.getInstance(context) , edu.sdsu.cs.sharepic.model.Dropbox.getInstance(context) };
    }
    return edu.sdsu.cs.sharepic.model.Account.accounts;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    java.lang.String strName = arrayAdapterSort.getItem(which);
    android.util.Log.i("onClick: Des: ", java.lang.String.valueOf(which));
    meadSort(which, com.inspiredpanama.inspiredmead.MeadActivity.SORT_TYPE_DEC);
    mAdapter.notifyDataSetChanged();
}

public void reset() {
    android.util.Log.d(com.github.rtoshiro.view.video.FullscreenVideoView.TAG, "reset");
    if ((mediaPlayer) != null) {
        this.currentState = com.github.rtoshiro.view.video.FullscreenVideoView.State.IDLE;
        releaseObjects();
        initObjects();
    }else
        throw new java.lang.RuntimeException("Media Player is not initialized");
    
}

public void onclickSolve(android.view.View view) {
    if ((its.farkel.MainFarkel.hand.held) != 6) {
        return ;
    }
    its.farkel.MainFarkel.hand = its.farkel.MainFarkel.hand.bestHand();
    redisplay();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mCurrentIndex) < (mPagination.size())) {
        (mCurrentIndex)++;
        update();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, id.ac.its.ezlyn.TutorialActivity.class);
    startActivity(intent);
    finish();
}

public void showDdc(java.lang.String url, java.lang.String title) {
    android.content.Intent intent = new android.content.Intent(context, com.odong.buddhismhomework.pages.DdcActivity.class);
    intent.putExtra("url", url);
    intent.putExtra("title", title);
    context.startActivity(intent);
}

private void showGameError() {
    new android.app.AlertDialog.Builder(this).setMessage(R.string.error_message).setNeutralButton(android.R.string.ok, null).create();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    if (mode_active) {
        mapView.getController().setCenter(mMyLocationOverlay.getMyLocation());
    }
}

public boolean onKey(android.view.View v, int keyCode, android.view.KeyEvent event) {
    if (keyCode == (android.view.KeyEvent.KEYCODE_ENTER)) {
        clearSuggestions();
        fromEditingToSearch();
        return true;
    }
    return false;
}

@java.lang.Override
protected void onStop() {
    android.util.Log.i(TAG, "onStopActivity");
    unReceiver();
}

@java.lang.Override
public void onClick(android.view.View view) {
    int viewId = view.getId();
    switch (viewId) {
        case R.id.id_rb_only_wifi :
            break;
        case R.id.id_rb_any_network :
            break;
    }
}

@java.lang.Override
public boolean onDown(android.view.MotionEvent e) {
    goToNearestOrigin();
    return true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    editCourse(name.getText().toString(), code.getText().toString());
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.i("HERE", "start called.");
    mPresenter.start();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    entryFragmentListener.onSightingEntryPositiveClick(this);
    editFragmentListener.onSightingEditNegativeClick(this);
}

@java.lang.Override
public int getItemViewType(int position) {
    android.util.Log.d("raytest", ("Current Item View Position:" + position));
    if ((position + 1) == (getItemCount())) {
        return com.ray.rssmovie.adapter.EasyListingAdapter.TYPE_ITEM_FOOTER;
    }else {
        return com.ray.rssmovie.adapter.EasyListingAdapter.TYPE_ITEM_NORMAL;
    }
}

private void onHome(android.view.View view) {
    exitReveal();
    view.setClickable(false);
    periodButton.setClickable(true);
}

@java.lang.Override
public void onStart() {
    super.onStart();
    final android.view.View decorView = getDialog().getWindow().getDecorView();
    decorView.animate().alphaBy(0.1F).setDuration(1000).start();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.EditText editText = ((android.widget.EditText) (v));
    editText.setHint("");
    editText.setText("");
}

@java.lang.Override
public void onSuccess(com.google.android.gms.location.LocationSettingsResponse locationSettingsResponse) {
    mFusedLocationClient.requestLocationUpdates(mLocationRequest, mLocationCallback, android.os.Looper.myLooper());
    mRequestingLocationUpdates = true;
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    android.widget.Toast.makeText(getApplicationContext(), java.lang.String.valueOf(thickness), Toast.LENGTH_LONG).show();
}

public static java.util.List<android.util.Pair<java.lang.String, java.lang.String>> getPairs() {
    return com.inipage.homelylauncher.background.SequentialLauncherService.pairs;
}

public static int i(java.lang.String tag, java.lang.String msg, java.lang.Throwable tr) {
    if (tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO) {
        return android.util.Log.i(tag, msg, tr);
    }
    return 0;
}

public static final boolean isValidEmail(java.lang.CharSequence target) {
    return (!(android.text.TextUtils.isEmpty(target))) && (android.util.Patterns.EMAIL_ADDRESS.matcher(target).matches());
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(articleActivity, ("str:" + str), Toast.LENGTH_SHORT).show();
}

public void onClickEditProgramButton(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, lu.uni.trailassistant.activities.EditTrainingProgramExercisesActivity.class);
    long trainingProgramRowID = tpca.getItemId(lastSelectedIndex);
    intent.putExtra("training_program_id", tpca.getItemId(lastSelectedIndex));
    startActivity(intent);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    navgnss.com.library.DynamicNumImageView testDiv1 = ((navgnss.com.library.DynamicNumImageView) (findViewById(R.id.test_1_div_1)));
    testDiv1.setTextContent("12");
}

void bind(com.blumental.lifesliceapp.model.Record record, android.support.v4.util.LruCache<java.lang.String, android.graphics.Bitmap> avatarCache) {
    itemView.setTag(com.blumental.lifesliceapp.view.adapter.ViewHolder.VIDEO_URL_KEY, record.getVideoUrl());
    setAvatar(record, avatarCache);
    username.setText(record.getUsername());
}

public void onClick(android.view.View v) {
    (gearNum)--;
    android.util.Log.d(TAG, ("Gears = " + (gearNum)));
    txt_GearsPlaced.setText(java.lang.Integer.toString(gearNum));
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    final android.widget.ScrollView scrollView = ((android.widget.ScrollView) (view.findViewById(R.id.aboutScroll)));
    scrollView.fullScroll(View.FOCUS_DOWN);
}

@java.lang.Override
public void onReadyStateChange(com.byteshaft.requests.HttpRequest request, int readyState) {
    switch (readyState) {
        case com.byteshaft.requests.HttpRequest.STATE_DONE :
            android.util.Log.i("TAG", request.getResponseURL());
            switch (request.getStatus()) {
                case java.net.HttpURLConnection.HTTP_NO_CONTENT :
                    break;
            }
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.adafruit.bluefruit.le.connect.Patient.PatientActivity activity = ((com.adafruit.bluefruit.le.connect.Patient.PatientActivity) (getActivity()));
    activity.transitionToFragment(new com.adafruit.bluefruit.le.connect.Patient.ExerciseResultsFragment());
}

private void setAndDumpActivity(android.app.Activity activity) {
    setupActivity(activity);
    createFloatView();
    dumpView(activity);
}

@java.lang.Override
protected void onUpdateIntend(java.lang.String modifiedContent) {
    android.content.Intent newIntent = uk.co.ashtonbrsc.intentexplode.Explode.cloneIntent(modifiedContent);
    editableIntent = newIntent;
    showAllIntentData(uri);
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    deleteProject(relativePosition, section);
    return false;
}

@java.lang.Override
public void onAllDataRemoved(int itemCount) {
    mAdapter.notifyItemRangeRemoved(0, itemCount);
    mEventBus.post(new de.fau.cs.mad.fablab.android.view.fragments.icalandnews.NewsListChangeEvent(mAdapter.getItemCount()));
}

private java.lang.Boolean isHowToSortOnMostPopular() {
    android.util.Log.d(com.example.worldwide.popularmovies1.MainActivity.TAG, ("is how to sort method return " + (com.example.worldwide.popularmovies1.MainActivity.howToSort.equals(Constants.MOST_POPULAR_MOVIES))));
    return com.example.worldwide.popularmovies1.MainActivity.howToSort.equals(Constants.MOST_POPULAR_MOVIES);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    double mLat = location.getLatitude();
    double mLon = location.getLongitude();
    com.google.android.gms.maps.model.LatLng currentLocation = new com.google.android.gms.maps.model.LatLng(mLat, mLon);
}

public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(this, com.example.tberroa.girodicerapp.activities.RegisterActivity.class).addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION).setAction(Params.RELOAD));
    finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    fr.sims.coachingproject.ui.activity.RegisterActivity.startActivity(getContext());
}

public boolean isValid() {
    synchronized(mSync) {
        return (mSurface) != null ? (mSurface) instanceof android.view.Surface ? ((android.view.Surface) (mSurface)).isValid() : true : false;
    }
}

public void showAlertDialog() {
    android.app.AlertDialog.Builder am = new android.app.AlertDialog.Builder(this);
    am.setTitle(getString(R.string.gps_off_title));
    am.setMessage(getString(R.string.gps_off));
    am.show();
}

public boolean onTouchSuper(android.view.View view, android.view.MotionEvent event) {
    android.util.Log.e("ApplicationScreen", "onTouchSuper");
    return super.onTouchEvent(event);
}

@java.lang.Override
public void onClick(android.view.View v) {
    (mDays)--;
    mDaysTextView.setText(java.lang.Integer.toString(mDays));
}

private boolean isCurrPosition(float childY, android.view.View itemView) {
    return (childY > (itemView.getTop())) && (childY < (itemView.getBottom()));
}

@java.lang.Override
public void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession session, android.hardware.camera2.CaptureRequest request, android.hardware.camera2.TotalCaptureResult result) {
    super.onCaptureCompleted(session, request, result);
    android.widget.Toast.makeText(this, ("Saved:" + file), Toast.LENGTH_SHORT).show();
    sampleCameraPreview();
}

@java.lang.Override
public void setTTYMode(int ttyMode, android.os.Message onComplete) {
    if ((mImsPhone) != null) {
        mImsPhone.setTTYMode(ttyMode, onComplete);
    }
}

static boolean checkExpiration(android.content.Context context, java.lang.String key) {
    long expiration = (java.lang.System.currentTimeMillis()) - (com.bbtfr.merusuto.DataManager.getLocalFile(key).lastModified());
    return expiration < (com.bbtfr.merusuto.DataManager.EXPIRATION);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (changedInstitute) {
        ma.getGroupList();
        ma.sortGroups(ma.groups, ma.institute, java.lang.String.valueOf(ma.instituteID));
        changedInstitute = false;
    }
    showGroupChooseDialog();
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.util.Log.d(com.example.amps.fyp_amps_android_yishan.ProjectDetailsActivity.TAG, "onDestroy()");
    android.os.Bundle savedInstanceState = new android.os.Bundle();
    onSaveInstanceState(savedInstanceState);
}

@java.lang.Override
public void onError(java.lang.Exception e) {
    android.util.Log.e("ChatSocket", ("Encountered error " + (e.getMessage())));
    e.printStackTrace();
}

@java.lang.Override
public int getItemViewType(int position) {
    return separators.contains(position) ? com.orgzly.android.ui.AgendaListViewAdapter.TYPE_SEPARATOR : com.orgzly.android.ui.AgendaListViewAdapter.TYPE_ITEM;
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    if ((callback) != null) {
        callback.onDismiss();
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    safetyCB.setChecked(false);
    returnedYdLnEditText.setText("0");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    mRef = $missing$;
}

@java.lang.Override
public void onClick(android.view.View view) {
    seqRepeat.setBackgroundColor(Color.BLACK);
    seqRepeat.setTextColor(Color.WHITE);
    seqORlgt = false;
    lgtRepeat.setBackgroundColor(Color.LTGRAY);
    lgtRepeat.setTextColor(Color.WHITE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    ((android.support.v7.widget.LinearLayoutManager) (rv.getLayoutManager())).scrollToPositionWithOffset(1, headerHeight);
    resetScroll();
}

public static viewholders.SingleFlightResultVH create(final android.content.Context context, final android.view.ViewGroup parent) {
    return new viewholders.SingleFlightResultVH(android.view.LayoutInflater.from(context).inflate(R.layout.single_flight_result_row_item, parent, false));
}

private boolean hasPermissions() {
    int permission = android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);
    if (permission != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        android.support.v4.app.ActivityCompat.requestPermissions(this, com.mediaplayer.strings.activities.SplashScreenActivity.PERMISSIONS_STORAGE, com.mediaplayer.strings.activities.SplashScreenActivity.REQUEST_EXTERNAL_STORAGE);
        return false;
    }else {
        return true;
    }
}

@java.lang.Override
public void onLoaderReset(Loader<List<? extends org.oucho.mpdclient.mpd.item.Item>> loader) {
    android.util.Log.i(org.oucho.mpdclient.fragments.AlbumSongsFragment.TAG, "onLoaderReset");
}

@java.lang.Override
public void onTaskComplete(android.graphics.Movie movie) {
    mAdapter.appendImageData(movie);
    android.util.Log.i("DownloadTask Complete", "");
}

@java.lang.Override
public void onClick(android.view.View v) {
    final int position = (mDataset.indexOf(vocable)) + 1;
    mFragment.showEditWordDialog(position);
}

public void setDrawerEnabled(boolean enabled) {
    int lockMode = (enabled) ? android.support.v4.widget.DrawerLayout.LOCK_MODE_UNLOCKED : android.support.v4.widget.DrawerLayout.LOCK_MODE_LOCKED_CLOSED;
    mDrawer.setDrawerLockMode(lockMode);
    drawerToggle.setDrawerIndicatorEnabled(enabled);
}

@java.lang.Override
public void onChildChanged(com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s) {
    android.util.Log.d(com.pajato.android.gamechat.database.handler.MessagesChangeHandler.TAG, java.lang.String.format(java.util.Locale.US, com.pajato.android.gamechat.database.handler.MessagesChangeHandler.LOG_FORMAT, "onChildChanged", dataSnapshot, s));
    process(dataSnapshot, false, com.pajato.android.gamechat.event.MessageChangeEvent.CHANGED);
}

@java.lang.Override
public void onDrawerOpened(android.view.View drawerView) {
    android.util.Log.v("Sokolov", ("onDrawerOpened " + drawerView));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (net.anei.cadpage.SmsPopupUtils.haveNet(this)) {
        this.finish();
    }
}

public static com.gigigo.rx_clean.domain.interactors.GetUserInteractorRx provideGetUsersInteractorRx() {
    com.gigigo.rx_clean.domain.datasources.UsersDataSource usersDataSource = com.gigigo.rx_clean.di.Injector.provideUsersDataSource();
    return new com.gigigo.rx_clean.domain.interactors.GetUserInteractorRx(usersDataSource, io.reactivex.schedulers.Schedulers.io(), io.reactivex.android.schedulers.AndroidSchedulers.mainThread());
}

@android.support.annotation.NonNull
private com.novoda.pianohero.RoundViewModel createViewModel(com.novoda.pianohero.Sequence updatedSequence) {
    int nextNotesPosition = updatedSequence.position();
    java.util.List<java.lang.String> notations = getNotations(nextNotesPosition);
    java.lang.String statusMessage = getStatusMessage();
    return new com.novoda.pianohero.RoundViewModel(notations, statusMessage);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    super.onDismiss(dialog);
    showPanel(com.android.gallery3d.filtershow.category.MainPanel.DUALCAM);
}

@java.lang.Override
public void onSuccess(android.net.Uri uri) {
    com.squareup.picasso.Picasso.with(this).load(firebaseAuth.getCurrentUser().getPhotoUrl()).fit().centerCrop().into(profileIcon);
}

private void initFragment(android.support.v4.app.Fragment fragment) {
    android.support.v4.app.FragmentManager manager = getSupportFragmentManager();
    android.support.v4.app.FragmentTransaction transaction = manager.beginTransaction();
    transaction.add(R.id.fragment_container, fragment);
    transaction.commit();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    setup();
    return inflater.inflate(R.layout.fragment_add_main_category, container, false);
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName name, android.os.IBinder service) {
    com.alejandro_castilla.cloudfitforwear.services.bluetooth.BluetoothService.BluetoothServiceBinder bluetoothServiceBinder = ((com.alejandro_castilla.cloudfitforwear.services.bluetooth.BluetoothService.BluetoothServiceBinder) (service));
    com.alejandro_castilla.cloudfitforwear.services.bluetooth.BluetoothService bluetoothService = bluetoothServiceBinder.getService();
    bluetoothService.findBluetoothDevice("C8:3E:99:0D:DD:43");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_open_works);
    addData();
    populateListView();
    listViewItemDelClick();
    listViewItemClick();
}

@java.lang.Override
protected java.lang.String doInBackground(java.lang.String... params) {
    if (true) {
        android.content.Intent intent = new android.content.Intent(this, com.dchen93.deliverysystem.HomeActivity.class);
        finish();
        this.startActivity(intent);
    }
    return null;
}

public void configure(android.app.Activity a, java.lang.String setBaseUrl) {
    configure(a, setBaseUrl, false);
}

private void redirectedAcordingToPn(int userinfo) {
    sendBroadcast(new android.content.Intent(Config.PUSH_NOTIFICATION).putExtra("userinfo", userinfo));
    viewPager.setCurrentItem(3, false);
    navigationTabBar.setModelIndex(3, false);
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError volleyError) {
    super.onErrorResponse(volleyError);
    txt_no_learning.setVisibility(View.VISIBLE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(getApplicationContext(), "Toast", Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    android.util.Log.e(com.example.imac.samplemap.data.AsyncLoadVolley.TAG, ("onErrorResponse : " + (error.getMessage())));
    asyncTaskListener.onTaskComplete(false, error.getMessage());
}

private void initUI() {
    edt_check.setTypeface(com.itrax.utils.Utility.getMaterialIconsRegular(this));
    com.itrax.activities.DashBoardActivity.edt_delivery_date = ((android.widget.EditText) (findViewById(R.id.edt_delivery_date)));
    isVerified = true;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    this.onItemClick(i);
    listener.onItemClick(adapterView, view, i, l);
}

public static void openIt(final android.content.Context context, final com.paulvarry.intra42.api.UserLTE user, com.paulvarry.intra42.AppClass app) {
    com.paulvarry.intra42.tab.user.UserActivity.openIt(context, user.login, app);
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    drawChartBg(canvas);
    drawYAxis(canvas);
    drawYAxisLabel(canvas);
    drawXAxis(canvas);
    drawXAxisLabel(canvas);
    drawLine(canvas);
    drawBaseLine(canvas);
}

protected void onPostExecute(java.lang.StringBuilder results) {
    android.util.Log.d(com.monitoringtool.awarebrowser.LOG_TAG, java.lang.String.valueOf(results));
}

private void sendEvent(java.lang.String eventName, @android.support.annotation.Nullable
com.facebook.react.bridge.WritableMap params) {
    this.getReactApplicationContext().getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class).emit(("RNFileUploader-" + eventName), params);
}

@android.support.annotation.Nullable
public com.lee.hansol.bakingtime.models.Ingredient getIngredientObjectAt(int index) {
    if (index >= (ingredients.length))
        return null;
    else
        return ingredients[index];
    
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    org.unpidf.univmobile.data.entities.Poi poi = mMarkers.get(marker);
    showPoiDetails(mTabPosition, poi);
    return true;
}

private float[] getAgentSpeed(int Id, com.mygdx.game.android.GameState.AgentInfo[] Status) {
    if ((Status[Id]) == null)
        java.lang.System.out.println(("Exception null Status Block : " + Id));
    
    return Status[Id].speedVector;
}

@java.lang.Override
public boolean onTouch(final android.view.View view, final android.view.MotionEvent event) {
    detector.onTouchEvent(event);
    return true;
}

public static int getPixelsFromDps(int dps, android.content.Context context) {
    final float scale = context.getResources().getDisplayMetrics().density;
    int pixels = ((int) ((dps * scale) + 0.5F));
    return pixels;
}

@java.lang.Override
public void onRefreshBegin(in.srain.cube.views.ptr.PtrFrameLayout frame) {
    getAnswerList();
    android.widget.Toast.makeText(this, "下拉刷新", Toast.LENGTH_SHORT).show();
    mPtrFrame.refreshComplete();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.zatpatatm.app.Intent intent = new com.zatpatatm.app.Intent(getApplicationContext(), com.zatpatatm.app.ticket.TicketActivity.class);
    intent.putExtra("filterTicketTab", 2);
    startActivity(intent);
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    android.util.Log.d(TAG, "onRestoreInstanceState()");
    if (savedInstanceState != null) {
        restartLoader(getLoaderIDForDisplayMode());
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    if ((item.getItemId()) == (android.R.id.home))
        android.support.v4.app.NavUtils.navigateUpFromSameTask(this);
    
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mediaPlayer) {
    mediaPlayer.seekTo(0);
    mediaPlayer.setLooping(true);
}

public java.lang.String getLoginInfoParams(java.lang.String key) {
    android.content.SharedPreferences sharedPreferences = getSharedPreferences("loginInfo", Context.MODE_PRIVATE);
    return sharedPreferences.getString(key, "");
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((onClickListener) == null) {
        return ;
    }
    onClickListener.onClick(this, v);
}

@java.lang.Override
public void onActivityResult(android.app.Activity activity, int requestCode, int resultCode, android.content.Intent data) {
    if (requestCode == (com.showlocationservicesdialogbox.LocationServicesDialogBoxModule.ENABLE_LOCATION_SERVICES)) {
        currentActivity = activity;
        checkLocationService(true);
    }
}

public synchronized void addPendingAlarm(android.content.Context context, android.content.Intent intent) {
    alarmPendingList.add(intent);
    android.util.Log.d(mobile.dp.velocityalarmclock.AlarmCoordinator.TAG, ("addPendingAlarm - pending alarm added. new size of pending list is: " + (alarmPendingList.size())));
}

public void launchCamera() {
    if (isAdded()) {
        org.wordpress.android.ui.media.WordPressMediaUtils.launchCamera(getActivity(), this);
    }
}

@java.lang.Override
public void onError(int error) {
    android.util.Log.e(nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, ("failed to connect/discover: " + error));
    dlg.dismiss();
    getActivity().finish();
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_edit_toolbar, menu);
    getMenuInflater().inflate(R.menu.menu_edit_toolbar, menu);
    return true;
}

public void setGradientResourceId(android.content.res.Resources res, int gradientResourceId) {
    mGradient = res.getDrawable(gradientResourceId);
    mGradientResourceId = gradientResourceId;
}

@com.facebook.react.bridge.ReactMethod
public void clearEvents() {
    for (com.homypiandroid.SocketListener listener : com.homypiandroid.SocketConnection.jsEvents) {
        listener.unlink(socketService);
    }
}

@java.lang.Override
public android.view.View getVideoLoadingProgressView() {
    return mWebChromeClient.getVideoLoadingProgressView();
}

public void setInterruptPersistence(int persistence) {
    if ((persistence > 0) && (persistence < 16)) {
        writeRegister(nz.geek.android.things.drivers.i2c.Tcs34725.PERS, persistence);
    }
}

private void cancelAllForward() {
    java.lang.String disableAllForwardString;
    disableAllForwardString = "#21#";
    android.content.Intent intentCallForward = new android.content.Intent(android.content.Intent.ACTION_CALL);
    android.net.Uri uri = android.net.Uri.fromParts("tel", disableAllForwardString, "");
    intentCallForward.setData(uri);
    startActivity(intentCallForward);
}

public static void bindView(org.amahi.anywhere.server.model.ServerFile file, org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata, android.view.View fileView) {
    if (fileMetadata == null) {
        org.amahi.anywhere.adapter.ServerFilesMetadataAdapter.bindFileView(file, fileView);
    }else {
        org.amahi.anywhere.adapter.ServerFilesMetadataAdapter.bindFileMetadataView(file, fileMetadata, fileView);
    }
}

@java.lang.Override
public void onFail() {
    pCircle.dismiss();
    android.widget.Toast.makeText(getApplicationContext(), "Can not get sensor data", Toast.LENGTH_SHORT).show();
    sensor.removeListener();
}

@java.lang.Override
public void onProgressChanged(android.webkit.WebView view, int newProgress) {
    mWebChromeClient.onProgressChanged(view, newProgress);
}

@java.lang.Override
public void onClick(android.view.View v) {
    ((com.abition.self.MainActivity) (context)).newPlanDialog.show(((com.abition.self.MainActivity) (context)).getSupportFragmentManager(), null);
    com.abition.self.Plan.getUserPlan(context, planList);
}

public void playSFX(int sound) {
    android.media.MediaPlayer mp = android.media.MediaPlayer.create(this, sound);
    mp.start();
}

public void setName(java.lang.String name) {
    android.widget.TextView field = ((android.widget.TextView) (mView.findViewById(R.id.name_text)));
    field.setText((name + "Nelly Cheboi"));
}

public void clickMbtilesPositiveButton() {
    if (((mbtilesDialog) != null) && (mbtilesDialog.isShowing())) {
        mbtilesDialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick();
    }else {
        android.util.Log.w("MapActivity", "The mbtiles dialog is either null or not showing, cannot perform positive click");
    }
}

public android.graphics.Bitmap getImage() {
    android.graphics.Bitmap newimage = android.graphics.BitmapFactory.decodeByteArray(image.toByteArray(), 0, image.size());
    return newimage;
}

@java.lang.Override
public void onClick(android.view.View v) {
    mndev.groupreminder.Fragments.TimePickerFragment timePickerFragment = new mndev.groupreminder.Fragments.TimePickerFragment();
    mndev.groupreminder.DataCache.getInstance().push(TimePickerFragment.TAG, timePicker);
    timePickerFragment.show(getFragmentManager(), TimePickerFragment.TAG);
}

public static void start(de.jonasrottmann.realmbrowser.Context context, java.lang.String realmFileName) {
    android.content.Intent intent = new android.content.Intent(activity, de.jonasrottmann.realmbrowser.RealmBrowserActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    intent.putExtra(de.jonasrottmann.realmbrowser.RealmBrowserActivity.EXTRAS_REALM_FILE_NAME, realmFileName);
    context.startActivity(intent);
}

private boolean verifyGifImage(android.net.Uri gifUri) {
    return gifUri.toString().endsWith(".gif");
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (requestCode == (com.ensipoly.events.activities.MapsActivity.SETTING_CODE))
        createLocationRequest(false);
    
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.i(com.xiaodong.dream.catcher.demo.express.ExpressFragment.TAG, ">>onCreate");
    mActivity = getActivity();
    setMainTitleListener = ((com.xiaodong.dream.catcher.demo.express.OnSetMainTitleListener) (mActivity));
    setMainTitleListener.onSetMainTitle(R.string.express_title);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mNotRegisteredText.setTextColor(getResources().getColor(R.color.colorAccent));
    android.content.Intent registerIntent = new android.content.Intent(this, koala.com.koalaapp.RegisterActivity.class);
    registerIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    startActivity(registerIntent);
}

@butterknife.OnClick(value = R.id.image_view_setting)
void clickSetting() {
    startActivity(new android.content.Intent(this, app.com.warattil.activities.SettingActivity.class));
    this.finish();
}

public void inactiveTimerReset() {
    if ((inactiveTimer) != null) {
        inactiveTimer.cancel();
        inactiveTimer = null;
        android.util.Log.i(com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG, "Inactive Timer Reset");
    }
    inactiveTimerStart();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (!(holder.itemsSectionIsToggled())) {
        holder.toggleItemsSection();
    }else {
    }
}

@java.lang.Override
public void onSeekComplete(@android.support.annotation.NonNull
com.devbrackets.android.playlistcore.api.MediaPlayerApi mediaPlayerApi) {
    if (pausedForSeek) {
        performPlay();
        pausedForSeek = false;
    }else {
        performPause();
    }
}

public void firstChoiceMade(android.view.View view) {
    (level_move)++;
    if ((this.result_choices[3]) == 1) {
        updateScore();
    }
    timer.cancel();
    newMove();
}

@java.lang.Override
public void onFinishFilterDialog(java.lang.String sortByVal, java.lang.String beginDateVal, java.lang.String newsDeskVal) {
    android.widget.Toast.makeText(this, ("Hi, " + sortByVal), Toast.LENGTH_SHORT).show();
    sortBy = sortByVal;
    beginDate = beginDateVal;
    newsDesk = newsDeskVal;
}

@android.annotation.SuppressLint(value = "InlinedApi")
@java.lang.Override
public void run() {
    mRootView.setSystemUiVisibility((((((android.view.View.SYSTEM_UI_FLAG_LOW_PROFILE) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)));
}

@java.lang.Override
public void onError(java.util.List<java.lang.String> errors) {
    android.app.AlertDialog.Builder dialog = new android.app.AlertDialog.Builder(this);
    dialog.setMessage(("create session errors: " + errors)).create().show();
}

private void reformData() {
    android.os.Bundle bundle = getArguments();
    java.lang.System.out.println("Called reform data");
    if (bundle != null) {
        java.lang.System.out.println("get data");
        specialitySelected = bundle.getBooleanArray(PatientViewActivity.PATIENT);
    }else {
        specialitySelected = null;
    }
}

public static com.sylvainautran.nanodegree.capstoneproject.data.loaders.CallsLoader getAllCalls(android.content.Context context) {
    return new com.sylvainautran.nanodegree.capstoneproject.data.loaders.CallsLoader(context, AppelContract.CallEntry.CONTENT_URI, com.sylvainautran.nanodegree.capstoneproject.data.loaders.CallsLoader.Query.PROJECTION, AppelContract.CallEntry.MULTIPLE_SORT);
}

@java.lang.Override
public void onDisabled(android.content.Context context) {
    super.onDisabled(context);
    com.ppyy.ppweatherplus.appwidgets.WeatherHorizontalAppWidget.sAppWidgetAvailable = false;
    com.ppyy.ppweatherplus.utils.L.e("WeatherHorizontalAppWidget onDisabled");
    com.ppyy.ppweatherplus.service.AppWidgetService.stopService();
}

public android.database.Cursor findAllStudentsForOverview() {
    android.database.Cursor cursor = readableDb.query(dbStudent.TABLE_NAME, null, null, null, null, null, null);
    return cursor;
}

@java.lang.Override
public void done(byte[] bytes, com.parse.ParseException e) {
    android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
    itemImage.setImageBitmap(bitmap);
}

public static java.lang.String getUserName(android.content.Context c) {
    android.content.SharedPreferences pref = c.getSharedPreferences(ru.meefik.linuxdeploy.PrefStore.getCurrentProfile(c), Context.MODE_PRIVATE);
    return pref.getString("username", c.getString(R.string.username)).toLowerCase(java.util.Locale.ENGLISH);
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    java.lang.System.out.println("on unbind ");
    close();
    return super.onUnbind(intent);
}

private synchronized void setAuthToken(java.lang.String newAuthToken) {
    com.salesforce.androidsdk.util.SalesforceSDKLogger.i(com.salesforce.androidsdk.rest.RestClient.TAG, ("Found account -- set token " + newAuthToken));
    authToken = newAuthToken;
}

private int requestFailure(java.util.concurrent.atomic.AtomicInteger executionCounter) throws java.lang.InterruptedException {
    java.lang.System.out.println("failure");
    executionCounter.incrementAndGet();
    java.lang.Thread.sleep(eu.unicate.retroauth.LockingStrategyTests.FAILING_REQUEST_TIME);
    throw new eu.unicate.retroauth.exceptions.AuthenticationCanceledException(new android.accounts.OperationCanceledException());
}

public void loadAsync(final android.net.Uri sourceUri, final com.isseiaoki.simplecropview.callback.LoadCallback callback) {
    loadAsync(sourceUri, callback, false);
}

private com.sisa.tabata.ui.activity.WorkoutEditActivity getCheckedContext(final android.view.View view) {
    com.sisa.tabata.validation.Assert.isInstanceOf(com.sisa.tabata.ui.activity.WorkoutEditActivity.class, view.getContentDescription(), "View context is not a WorkoutEditActivity");
    return ((com.sisa.tabata.ui.activity.WorkoutEditActivity) (view.getContext()));
}

public void changeProgressBarVisibility(android.widget.ProgressBar progress, int visibility) {
    if (progress != null)
        progress.setVisibility(visibility);
    
}

@java.lang.Override
public void onUnLiked(com.example.user.cloudplayer.model.Like like) {
    if (like == null) {
        android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.unlike_alert), Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(this.contentView());
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(v.getContext(), com.teamlz.cheTajo.activity.MainActivity.class);
    startActivity(i);
    finishAffinity();
}

public void updateLibrary(android.content.Context context, java.lang.Integer libraryId) {
    this.context = context;
    com.sylweb.myplex.LibraryUtils.UpdateThread thread = new com.sylweb.myplex.LibraryUtils.UpdateThread(libraryId);
    thread.start();
}

private synchronized void actionStop() {
    endActiveElements();
    mCurrentTime = 0;
    mCurrentElement = 0;
    mCurrentSlide = 0;
    mState = com.android.mms.dom.smil.SmilPlayer.SmilPlayerState.STOPPED;
    mAction = com.android.mms.dom.smil.SmilPlayer.SmilPlayerAction.NO_ACTIVE_ACTION;
    notifyPlayStateChangeListener();
}

public void init(android.hardware.Camera camera) {
    setCamera(camera);
    mAutoFocusHandler = new android.os.Handler();
    getHolder().addCallback(this);
    getHolder().setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
}

@java.lang.Override
public void run() {
    android.util.Log.i("TTM", "Successfully loaded offline globals for week fragment.");
    applyGlobalContent(true, rootView, activity);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    spinner = ((android.widget.ProgressBar) (findViewById(R.id.progressBar)));
    open(findViewById(R.id.progressBar));
    StartMenu();
}

public void onChildChanged(com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s) {
    android.widget.Toast.makeText(getContext(), "child changed", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void call() {
    logger.d(org.hisp.dhis.android.eventcapture.presenters.FormSectionPresenterImpl.TAG, "onComplete");
    gettingLocation = false;
    viewSetLocation(null);
    locationProvider.stopUpdates();
}

@java.lang.Override
public void onClick(android.view.View v) {
    privateRadio.setChecked(false);
    edit.remove(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.SHARED_BATHROOM);
    edit.remove(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.PRIVATE_BATHROOM);
    edit.putBoolean(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.PRIVATE_BATHROOM, true);
    edit.apply();
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    android.util.Log.d("Main", "Stop Clicked");
    logicController.stopStreaming();
    inmindCommandListener.stopListening();
}

@java.lang.Override
public void run() {
    mAdapter.notifyDataSetChanged();
    android.widget.Toast.makeText(getActivity(), "Refresh complete", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mp, int what, int extra) {
    stopSelf();
    return true;
}

private com.android.internal.telephony.uicc.IccRecords getUiccRecords(int appFamily) {
    return mUiccController.getIccRecords(mPhone.getPhoneId(), appFamily);
}

public void popBitmap() {
    if (stack.empty())
        return ;
    
    android.graphics.Bitmap bitmap = stack.pop();
    mReusableBitmaps.add(new java.lang.ref.SoftReference<android.graphics.Bitmap>(bitmap));
    android.util.Log.i("test", "#popup");
}

@java.lang.Override
protected void onDestroy() {
    android.util.Log.d(com.csipsimple.ui.SipHome.THIS_FILE, "---DESTROY SIP HOME---");
    super.onDestroy();
    android.util.Log.d(com.csipsimple.ui.SipHome.THIS_FILE, "---DESTROY SIP HOME END---");
}

public void setFaction(boolean myFaction) {
    startFactionIsTerror = myFaction;
    eco = new com.evilcorp.csgo_shadow.Eco(startFactionIsTerror);
    updateRoundView();
    android.util.Log.i("faction2", ("01 " + (startFactionIsTerror)));
}

public void request_connect_handler(android.view.View v) {
    android.widget.Toast.makeText(this, "request connect others device", Toast.LENGTH_LONG).show();
    is_client = true;
    init();
    get_Bonded_device_and_chat();
    bRequest_connect.setVisibility(View.GONE);
    bWait_connect.setVisibility(View.GONE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    (com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.counter)--;
    com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.counter = ((com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.counter) < 0) ? com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.questArr.length : com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.counter;
    refreshQuest();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.example.apple.newsingit_project.CreateFolderActivity.class);
    startActivityForResult(intent, com.example.apple.newsingit_project.SelectNewsDetailActivity.RC_CREATEFOLDER);
    scrap_folder_recyclerview.addHeaderView(headerview);
    scrap_folder_recyclerview.smoothScrollToPosition(0);
}

private static android.content.SharedPreferences getSharedPreferences(java.lang.String spName) {
    return com.category.base.BaseApplication.getApplicationBase().getSharedPreferences(spName, Context.MODE_PRIVATE);
}

@java.lang.Override
public void drawMe(android.graphics.Canvas canvas) {
    paint.setStyle(Paint.Style.FILL);
    canvas.drawText(text, startX, startY, paint);
    paint.setStyle(Paint.Style.STROKE);
}

@java.lang.Override
public void beforeRegistration() {
    isFailed = false;
    progressDialog = new android.app.ProgressDialog(context);
    progressDialog.setMessage("Registering ...");
    progressDialog.show();
}

public static dalbers.com.noise.LoopMediaPlayer create(android.content.Context context, int resId) {
    dalbers.com.noise.LoopMediaPlayer looper = new dalbers.com.noise.LoopMediaPlayer(context);
    looper.mResId = resId;
    return looper;
}

private void updateViews(java.util.List<com.johnhiott.darkskyandroidlib.models.DataPoint> dataPoints, java.lang.String offset) {
    com.desmond.myweatherapp.ListViewAdapter adapter = new com.desmond.myweatherapp.ListViewAdapter(getContext(), dataPoints, offset);
    listView.setAdapter(adapter);
}

@java.lang.Override
public android.content.Context getContext() {
    return getContext();
}

public boolean isCombining() {
    return (type) != (com.google.devtools.build.android.xml.ResourcesAttribute.AttributeType.UNCOMBINABLE);
}

@java.lang.Override
public net.chokethe.killerdealer.adapters.BlindsAdapter.BlindViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(mContext).inflate(R.layout.blind_layout, parent, false);
    return new net.chokethe.killerdealer.adapters.BlindsAdapter.BlindViewHolder(view, new net.chokethe.killerdealer.adapters.BlindsAdapter.BlindEditTextListener());
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    nu.nldv.uppackaren.UppackarenApplication.getEventBus().register(this);
    handler = new android.os.Handler(android.os.Looper.getMainLooper());
}

public void addNewDevice(android.support.v4.util.Pair<java.lang.String, java.lang.String> newDevice) {
    mNewDevices.add(newDevice);
    notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.view.View v) {
    browserController.showAlbum(albumController);
}

protected final android.view.accessibility.AccessibilityNodeInfo findNodeByText(java.lang.String id, int parents) {
    return findNodeById(id, 0, parents);
}

public static boolean requestActivity(@android.support.annotation.NonNull
android.content.Context context, @android.support.annotation.NonNull
java.lang.Class tClass) {
    return com.adsamcik.signalcollector.services.ActivityService.requestActivity(context, tClass.hashCode(), com.adsamcik.signalcollector.utility.Preferences.get(context).getInt(Preferences.PREF_ACTIVITY_UPDATE_RATE, Preferences.DEFAULT_ACTIVITY_UPDATE_RATE));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.i("IGOR", "MAIN - on STOP");
    popcorp.robopop.MainActivity.stopAll(this);
    startActivity(startupIntent);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    android.support.v4.app.Fragment fragment = com.framgia.wsm.screen.main.MainContainerFragment.newInstance(position);
    mFragments.add(fragment);
    return fragment;
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.dismiss();
    isPaused = false;
    chronometerClick();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplication(), heartware.com.heartware_master.ViewWorkout.class);
    intent.putExtra(DBAdapter.PROFILE_ID, mCurrentProfileId);
    startActivityForResult(intent, 1);
    android.util.Log.d(heartware.com.heartware_master.WorkoutsActivity.TAG, "Creating a New Workout.");
}

@android.support.annotation.CheckResult
com.oasisfeng.hack.Hack.HackInvocation<R, C, T1, T2, T3> invoke(A1 arg1, A2 arg2, A3 arg3, A4 arg4, A5 arg5);

@java.lang.Override
public void onError(java.lang.Throwable e) {
    showLoadingSpinner(false);
    showLoginErrorDialog();
    if ((e.getMessage()) == null) {
        android.util.Log.e("PokeNotify", e.getMessage());
    }
}

@java.lang.Override
protected java.util.List<com.facebook.react.ReactPackage> getPackages() {
    return java.util.Arrays.<com.facebook.react.ReactPackage>asList(new com.facebook.react.shell.MainReactPackage(), new com.i18n.reactnativei18n.ReactNativeI18n(), new com.oblador.vectoricons.VectorIconsPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(com.este.MainApplication.mCallbackManager));
}

@java.lang.Override
public void onClick(android.view.View v) {
    mapView.setCenterCoordinate(new com.mapbox.mapboxsdk.geometry.LatLng(mCurrentLocation));
}

public static boolean getSeen(android.content.Context c, java.lang.String key) {
    return c.getSharedPreferences("Kantidroid", Context.MODE_PRIVATE).getBoolean("key", false);
}

public void onStart() {
    super.onStart();
    java.util.Hashtable<java.lang.String, java.lang.String> contactList = new java.util.Hashtable<>();
    android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone(getContext());
}

public void toast(int text) {
    android.widget.Toast.makeText(this, text, Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(SQL_CREATE_CATEGORY_TABLE);
    db.execSQL(SQL_CREATE_INTERESTING_FACT_TABLE);
    db.execSQL(SQL_CREATE_QUESTION_TABLE);
    db.execSQL(SQL_CREATE_ANSWER_TABLE);
}

private void onMissingDisplayNamesComplete(int mResultCount, java.lang.StringBuffer debugMessage) {
    if (debugMessage != null) {
        android.util.Log.w(Global.LOG_CONTEXT, ((mDebugPrefix) + debugMessage));
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    itemLongClickListener.onItemLongClick(position);
    return false;
}

private void addInBitmapOptions(android.graphics.BitmapFactory.Options options) {
    options.inMutable = true;
    if ((bitmapPool) != null) {
        android.graphics.Bitmap inBitmap = bitmapPool.getReusableBitmap(options);
        if (inBitmap != null) {
            options.inBitmap = inBitmap;
        }
    }
}

@java.lang.Override
public boolean dispatchKeyEvent(android.view.KeyEvent e) {
    return de.viktorreiser.bansheeremote.activity.CurrentSongActivity.handleKeyEvent(e);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mLogInData = getArguments().getStringArrayList(nl.rug.www.summerschool.controller.myprofile.MyProfileFragment.ARG_CONTENT_ID);
}

public static void init(android.content.Context context) {
    if ((xiaofei.library.hermes.Hermes.sContext) != null) {
        throw new java.lang.IllegalStateException("Hermes has already been initialized before.");
    }
    xiaofei.library.hermes.Hermes.sContext = context.getApplicationContext();
}

@java.lang.Override
public void onSuccess(java.lang.Void aVoid) {
    java.lang.String name = userModel.getDisplayName();
    android.widget.Toast.makeText(userName.getContext(), (("User" + name) + " Has added"), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    getActivity().getSupportFragmentManager().beginTransaction().replace(R.id.fragment_main_container, new com.ritwik.android.madfbla201415.SignupFragment()).addToBackStack(null).commit();
    getActivity().finish();
}

protected android.view.ActionMode.Callback getWindowCallback() {
    if ((com.mesmotronic.plugins.FullScreenPlugin._windowCallback) == null) {
        com.mesmotronic.plugins.FullScreenPlugin._windowCallback = window.getCallback();
    }
    return com.mesmotronic.plugins.FullScreenPlugin._windowCallback;
}

private void showFragment(android.support.v4.app.Fragment fragment, java.lang.String tag) {
    work.beltran.discogsbrowser.ui.main.FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
    ft.add(R.id.fragment_container, fragment, tag);
    ft.commit();
}

@java.lang.Override
public boolean onCreateOptionsMenu(final android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    enableLoginMenu(menu);
    return super.onCreateOptionsMenu(menu);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    android.util.Log.d("TKT_info", "onOptionMenu");
    int id = item.getItemId();
    if (id == (R.id.action_settings)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mBinding = android.databinding.DataBindingUtil.setContentView(this, com.demo.awareness.app.activities.MapsActivity.LAYOUT);
    obtainMap();
}

public void usedInPattern(com.geekeclectic.android.stashcache.StashPattern pattern) {
    mUsedIn.add(pattern);
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    com.crashlytics.android.Crashlytics.log(Log.DEBUG, TAG, "onPause");
}

private void editButtonPressed() {
    android.content.Intent intent = new android.content.Intent(getActivity(), termine24.secondinterviewtest.app.activities.EditActivity.class);
    intent.putExtra(Contact.EXTRA_CONTACT, ((android.os.Parcelable) (contact)));
    getActivity().startActivityForResult(intent, Contact.REQUEST_EDIT_CONTACT);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mainActivity = ((net.hadifar.dope.ui.activity.MainActivity) (getActivity()));
    getFragmentManager().addOnBackStackChangedListener(this);
    setRetainInstance(true);
    shouldDisplayHomeUp();
}

@java.lang.Override
protected void onFinishInflate() {
    super.onFinishInflate();
    setSelectAllOnFocus(true);
    setEms(10);
    setInputType(((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL)));
}

public static void getPilot(java.lang.String pilotId, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<com.airmap.airmapsdk.models.pilot.AirMapPilot> callback) {
    com.airmap.airmapsdk.networking.services.PilotService.getPilot(pilotId, callback);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.kalongip.chatapp.RegisterActivity.class);
    finish();
    startActivity(intent);
}

public void GoToSessionTwo(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, jp.ac.tsukuba.cs.iplab.www.barotouchexperimentalapplications.SessionTwoActivity.class);
    intent.putExtra("Calibration", calibration);
    intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK)));
    startActivity(intent);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return com.kosbrother.mongmongwoo.fragments.ProductImageFragment.newInstance(urls.get(position));
}

public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) {
    super.shouldOverrideUrlLoading(view, url);
    return true;
}

public static void setErrorActivityClass(java.lang.Class<? extends android.app.Activity> errorActivityClass) {
    if (errorActivityClass != null) {
        cat.ereza.customactivityoncrash.CustomActivityOnCrash.errorActivityClass = errorActivityClass;
    }else {
        cat.ereza.customactivityoncrash.CustomActivityOnCrash.errorActivityClass = cat.ereza.customactivityoncrash.activity.DefaultErrorActivity.class;
    }
}

@org.springframework.web.bind.annotation.RequestMapping(value = "/restaurant/add", method = org.springframework.web.bind.annotation.RequestMethod.POST)
public java.lang.String addRestaurant(@org.springframework.web.bind.annotation.ModelAttribute
eu.epitech.serverandroid.beans.Restaurant params) {
    java.lang.System.out.println("test");
    eu.epitech.serverandroid.dao.RestaurantDao dao = new eu.epitech.serverandroid.dao.RestaurantDao();
    return dao.addRestaurant(new eu.epitech.serverandroid.beans.Params());
}

@java.lang.Override
public void onDialogCancelClick(android.app.DialogFragment dialog, int positionOfAdapter, java.lang.String kindOfAdapter) {
    ((com.example.myequilator.MainFragment) (getFragment())).noteCardsChoosenAfterCancelDialog(kindOfAdapter, positionOfAdapter);
}

@java.lang.Override
public void onShowPress(android.view.MotionEvent e) {
    java.lang.System.out.println("-------OnGestureListener:onShowPress()");
    mAnimMode = 0;
    super.onShowPress(e);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = super.onCreateView(inflater, container, savedInstanceState);
    return view;
}

public void startSingleSemesterActivity(java.lang.String number) {
    android.content.Intent i = new android.content.Intent(this, com.example.menuka.loginandregistration.SingleSemesterActivity.class);
    i.putExtra("semester", number);
    startActivity(i);
    this.finish();
}

private void startNewGame() {
    android.content.Intent intent = new android.content.Intent(this.getApplicationContext(), com.tomade.saufomat.activity.CreatePlayerActivity.class);
    intent.putExtra(IntentParameter.MainGame.NEW_GAME, true);
    this.startActivity(intent);
}

void drawRootLayer() {
    org.mozilla.gecko.gfx.Layer rootLayer = mView.getController().getRoot();
    if (rootLayer == null) {
        return ;
    }
    setScissorRect();
    rootLayer.draw(mPageContext);
    android.opengl.GLES20.glDisable(GLES20.GL_SCISSOR_TEST);
}

@java.lang.Override
protected void onStop() {
    unregisterReceiver(playerReceiver);
    android.util.Log.d(poche.fm.potunes.PlayerActivity.TAG, "onStop: ");
    super.onStop();
}

@java.lang.Override
public android.view.View newView(android.content.Context context, android.database.Cursor cursor, android.view.ViewGroup parent) {
    return android.view.View.inflate(context, R.layout.item_category, parent);
}

public void initAudio() {
    setupVisualizerFxAndUI();
    try {
        visualizer.setEnabled(true);
    } catch (java.lang.Exception ex) {
        android.util.Log.e("except", (" f" + (ex.getMessage())));
    }
}

public int getLenght() {
    android.content.SharedPreferences preferences = android.preference.PreferenceManager.getDefaultSharedPreferences(getContext());
    boolean v = preferences.getBoolean("EXTRA_SMALL_FONT", false);
    if (v)
        return 8;
    else
        return 6;
    
}

@java.lang.Override
public void onClick(android.view.View view) {
    mListener.onItemClicked(mPosition, mMemo, mTextView);
}

@org.junit.Test
public void testFeatureMaskTranslation() {
    int caps = (IWifiStaIface.StaIfaceCapabilityMask.BACKGROUND_SCAN) | (IWifiStaIface.StaIfaceCapabilityMask.LINK_LAYER_STATS);
    int expected = ((android.net.wifi.WifiManager.WIFI_FEATURE_INFRA) | (android.net.wifi.WifiManager.WIFI_FEATURE_SCANNER)) | (android.net.wifi.WifiManager.WIFI_FEATURE_LINK_LAYER_STATS);
    assertEquals(expected, mWifiVendorHal.wifiFeatureMaskFromStaCapabilities(caps));
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.miOptions :
            onOptions();
            return true;
        case R.id.miSearch :
            onSearch();
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onFailure(int code, java.lang.String msg, java.lang.Object data) {
    com.unbelievable.library.android.utils.ToastUtils.toastS(this, msg);
}

@java.lang.Override
public boolean onActionItemClicked(android.support.v7.view.ActionMode mode, android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.deck_delete_selected :
            {
                mListAdapter.deleteSelectedItems();
                mActionMode.finish();
            }
        default :
            {
                return false;
            }
    }
}

@android.support.annotation.Nullable
public java.lang.String getHeader(@android.support.annotation.NonNull
java.lang.String key) {
    return ir.siper.core.SiperUtils.decode(message.getCustomHeader(key));
}

@java.lang.Override
public void onClick(android.view.View v) {
    finish();
    startActivity(getIntent());
}

void start(android.widget.TextView textView);

public final void stopIndoorOutdoorDetector() {
    org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext.unregisterReceiver(currentStatusReceiver);
    org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext.unregisterReceiver(wifiInfoReceiver);
    org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext.stopService(new android.content.Intent(org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext, org.mygeotrust.indoor.tasks.detectIndoorOutdoor.algorithm.DetermineIndoorOutdoorService.class));
}

private void showTripProblemFragment(org.onebusaway.android.io.elements.ObaStop obaStop) {
    if ((mArrivalInfo) == null) {
        showArrivalListFragment(obaStop);
    }else {
        org.onebusaway.android.report.ui.ReportTripProblemFragment.show(this, mArrivalInfo, R.id.ri_report_stop_problem, this);
        mArrivalInfo = null;
    }
}

public void init(com.google.android.gms.maps.GoogleMap mMap) {
    marker = mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(userLoc).title("your current location"));
    userLocTmp = marker;
    mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(userLoc));
}

public void run() {
    try {
        java.lang.Thread.sleep(1000);
    } catch (java.lang.InterruptedException e) {
    }
    android.util.Log.d(com.mapswithme.maps.routing.RoutingController.TAG, "trying to continue tour");
    com.mapswithme.maps.routing.RoutingController.continueSavedTour(tourLoadedListener);
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    setListAdapter(new com.commonsware.calendarapp.MyCustomAdapter(getActivity(), events));
    getListView().setDivider(null);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    popDialog.show();
}

public boolean isNetworkAvailable(android.content.Context context) {
    android.net.ConnectivityManager cm = ((android.net.ConnectivityManager) (context.getSystemService(Context.CONNECTIVITY_SERVICE)));
    return (cm.getActiveNetworkInfo()) != null;
}

public static void stopRecording(android.media.MediaRecorder recorder) {
    if (null != recorder) {
        recorder.stop();
        recorder.reset();
        recorder.release();
        recorder = null;
    }
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    sendButton.setOnClickListener(new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View v) {
            sendMessage();
        }
    });
    updateChat();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.add_playlist :
            break;
        default :
            break;
    }
    return super.onOptionsItemSelected(item);
}

public void unlockAndHide(android.view.animation.Animation.AnimationListener listener) {
    if (!(mLogoEnabled)) {
        return ;
    }
    mVisibilityLock = com.android.internal.navigation.fling.FlingLogoController.LOCK_DISABLED;
    hide(listener);
}

@java.lang.Override
protected void onPostExecute(android.graphics.Bitmap bitmap) {
    super.onPostExecute(bitmap);
    dismissDialog();
    android.net.Uri uri = com.scanlibrary.Utils.getUri(getActivity(), bitmap);
    bitmap.recycle();
    scanner.onScanFinish(uri);
}

@java.lang.Override
public void run() {
    com.android.email.service.EmailServiceUtils.startRemoteServices(mContext);
    com.android.email.DebugUtils.updateLoggingFlags(mContext);
}

@java.lang.Override
public void onClick(android.view.View view) {
    started = false;
    instop = true;
    android.widget.Toast.makeText(this, "recording has stopped, restart for continue or load another dataset", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    switch (view.getId()) {
        case R.id.buttonLogin :
            java.lang.System.out.println("Login");
            handleLogin(getUserManager().login("", ""));
            break;
    }
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    userInteracting = false;
    videoView.seekTo(seekToTime);
    if (pausedForSeek) {
        pausedForSeek = false;
        videoView.start();
    }
    hideDelayed(hideDelay);
}

@java.lang.Override
public void onAuthCreated(com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info) {
    BoxAuthentication.BoxAuthenticationInfo.cloneInfo(mSession.mAuthInfo, info);
    mSession.setUserId(info.getUser().getId());
    mSession.onAuthCreated(info);
    authLatch.countDown();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.pref_general);
    bindPreferenceSummaryToValue(findPreference(getString(R.string.pref_location_key)));
    bindPreferenceSummaryToValue(findPreference(getString(R.string.pref_units_key)));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    sp = getSharedPreferences("my_HS", Activity.MODE_PRIVATE);
    editor = sp.edit();
    super.onCreate(savedInstanceState);
    setContentView(R.layout.simon_game);
    cpuInput.add(randomNumber);
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d(com.naks.vk.presenter.NewsPagePresenterImpl.TAG, "onDestroy");
    view = null;
    interactor.onDestroy();
}

@java.lang.Override
public void Update() {
    android.opengl.Matrix.setIdentityM(localTransformation, 0);
    android.opengl.Matrix.translateM(localTransformation, 0, position[0], position[1], position[2]);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mStudentsDbHandler = new com.studios.lucian.students.util.StudentsDbHandler(getContext());
    mGroupDao = new com.studios.lucian.students.repository.GroupDAO(getActivity());
    mGroups = mGroupDao.getAll();
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    mVideoView.start();
    avi.hide();
}

@java.lang.Override
public void onError(com.quickblox.videochat.webrtc.QBRTCSession qbrtcSession, com.quickblox.videochat.webrtc.QBRTCException e) {
    android.widget.Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT).show();
}

public void changeFont(edu.utep.cs.cs4330.battleship.TextView textView) {
    android.graphics.Typeface typeface = android.graphics.Typeface.createFromAsset(getAssets(), getFontPath());
    textView.setTypeface(typeface);
}

@java.lang.Override
public void onPeerInvitedToRoom(com.google.android.gms.games.multiplayer.realtime.Room room, java.util.List<java.lang.String> arg1) {
    android.util.Log.e("#####", "F: onPeerInvitedToRoom");
    updateRoom(room);
    checkStartLobby();
}

private void displayFilterDialogue() {
    android.app.FragmentManager fragmentManager = getFragmentManager();
    com.groupeighteen.unote.view.DisplayPreferencesDialogue preferencesAlert = new com.groupeighteen.unote.view.DisplayPreferencesDialogue();
    preferencesAlert.show(fragmentManager, "DISPLAY_PREFERENCES_FRAGMENT");
    android.widget.Toast.makeText(this, "Display filter dialogue", Toast.LENGTH_SHORT).show();
}

public void decrement(android.view.View view) {
    if ((quantity) == 1) {
        android.widget.Toast.makeText(this, "You can not order less than 1 cup of coffee", Toast.LENGTH_SHORT).show();
    }
    quantity = (quantity) - 1;
    display(quantity);
}

public void removeWebView(android.view.ViewGroup parent) {
    boolean isWebView = isWebViewShowing(parent);
    parent.setTag("");
    if (isWebView) {
        removeChildViews(parent);
    }
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
    getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
}

@java.lang.Override
public void onPrepareLoad(android.graphics.drawable.Drawable placeHolderDrawable) {
    profilePic.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(profilePic.getContext(), R.drawable.contact_icon));
    smallProfilePic.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(smallProfilePic.getContext(), R.drawable.contact_icon));
}

@java.lang.Override
public void onLastItemVisible() {
    int page = ((mListAdapter.getCount()) / (com.xiaomei.yanyu.api.util.Constant.PERPAGE)) + 1;
    mQueue.add(new com.android.volley.toolbox.StringRequest(getTopicListUrl(page), mRefreshMoreListener, mRefreshErroListener));
}

@java.lang.Override
public void onPwsResultError(java.util.Collection<java.lang.String> urls, int httpResponseCode, java.lang.Exception e) {
    android.widget.Toast.makeText(getApplicationContext(), getString(R.string.shorten_error), Toast.LENGTH_LONG).show();
    stopSelf();
    return ;
}

@java.lang.Override
public void onClick(android.view.View v) {
    mBinding.addTabV.show();
    mBinding.fab.hide();
    mBinding.addTabOpLl.setVisibility(View.VISIBLE);
    mBinding.newTabLabelTv.setText("");
    mBinding.newTabLabelTv.setVisibility(View.VISIBLE);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.widget.Toast.makeText(context, ("Clicked " + position), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onPictureTaken(byte[] data, android.hardware.Camera camera) {
    mCameraListener.onPictureTaken(data);
    capturingImage = false;
    camera.startPreview();
}

private void updateItems() {
    java.lang.String query = com.bignerdranch.android.photogallery.QueryPreferences.getStoredQuery(getActivity());
    lastPageFetched = 0;
    new com.bignerdranch.android.photogallery.PhotoGalleryFragment.FetchItemsTask(query).execute(lastPageFetched);
}

com.tk.foursquaresearch.model.util.LocationHandler locationHandlerInstance(android.content.Context ctx, com.tk.foursquaresearch.model.util.LocationHandlerInterface handlerListener) {
}

public boolean restore(android.os.Bundle bundle) {
    mContentListModel = bundle.getParcelableArrayList(com.stdnull.v2api.model.V2MainFragModel.KEY_V2EXBEAN);
    return ((mContentListModel) != null) && (!(mContentListModel.isEmpty()));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    com.companyname.hearts.model.Overlord.getInstance().prepareForNextGame();
    removeCenterIcon();
    setUpGame();
    displayImages();
    createListeners();
    beginRound();
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    com.tianyl.android.offlinereader.sync.SyncService.addLog("onBind");
    return null;
}

public void startNoInterventionService() {
    stopAllServices(false);
    startService(new android.content.Intent(this, kr.ac.kaist.nmsl.pushmanager.activity.StepCounterService.class));
    android.util.Log.d(Constants.TAG, "NoIntervention started");
    kr.ac.kaist.nmsl.pushmanager.util.Util.writeLogToFile(this, Constants.LOG_NAME, "START", "==============NoIntervention started===============");
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker datePicker, int selectedYear, int selectedMonth, int selectedDay) {
    selectedMonth = selectedMonth + 1;
    dateET.setText(((((selectedDay + "/") + selectedMonth) + "/") + selectedYear));
}

private void stopScan() {
    if (mIsScanning) {
        android.util.Log.v(Utils.TAG, "Stopping scan");
        mScanHandler.removeCallbacks(mBleScannerTimeoutRunnable);
        final no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat scanner = no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat.getScanner();
        scanner.stopScan(scanCallback);
        mIsScanning = false;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(com.almasosorio.sharethatbill.RecyclerViewAdapter.TAG, ("adapter received click on item " + (getPosition())));
    onListItemClickListener.onItemClick(getPosition());
}

public static android.net.Uri appendDistinct(@android.support.annotation.NonNull
final android.net.Uri uri) {
    if (uri == null) {
        throw new java.lang.IllegalArgumentException("Uri can't be null");
    }
    return uri.buildUpon().appendQueryParameter(AbstractContentProviderProcessor.QUERY_PARAMETER_DISTINCT, "distinct").build();
}

@java.lang.Override
public void onAutoFocus(boolean success, android.hardware.Camera arg1) {
    if (success) {
        android.util.Log.i(com.terrydr.eyeScope.CameraView.TAG, "自动对焦成功");
    }
}

public static int px2dp(android.content.Context context, int px) {
    float scale = context.getResources().getDisplayMetrics().density;
    return ((int) ((px / scale) + (0.5F * px)));
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    makesureFragmentStack();
    pendingTransactionHandler.setAfterSaveInstanceState(false);
}

@java.lang.Override
public void onInit(com.androidsdk.snaphy.snaphyandroidsdk.list.DataList<com.androidsdk.snaphy.snaphyandroidsdk.models.PostDetail> dataList) {
    super.onInit(dataList);
    caseListAdapter = new com.orthopg.snaphy.orthopg.Fragment.CaseFragment.CaseListAdapter(mainActivity, dataList, com.orthopg.snaphy.orthopg.Fragment.CaseFragment.CaseFragment.TAG, casePresenter);
    recyclerView.setAdapter(caseListAdapter);
}

private void setPaletteForRootContainer(android.support.v7.graphics.Palette.Swatch colorDarkVaient) {
    svContainerTrailer.setBackgroundColor(colorDarkVaient.getRgb());
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d(java.lang.String.valueOf(com.example.destr.busy_calendar.MainActivity.tag), "Destroying View ...");
    super.onDestroy();
}

@java.lang.Override
public void handleSnesClose() {
    android.util.Log.i("incomingstate", "handleSnesClose");
    snesState.closeCurrentListener();
}

@java.lang.Override
public void onClick(android.view.View v) {
    long result = dbHelper.sqlInsert(DbTables.RadioMap.TABLE_NAME, null, getDummy().toDbValues());
    android.widget.Toast.makeText(getContext(), (result + "rows inserted"), Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.v("dimamir999", "handle click on add photo button");
    presenter.addNewPhoto(((android.graphics.drawable.BitmapDrawable) (photoView.getDrawable())).getBitmap());
}

@java.lang.Override
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if ((requestCode == (REQUEST_PICTURE_RESULT)) && (resultCode == (android.app.Activity.RESULT_OK))) {
        getAdapter().swap(getFiles());
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    m_batteryHandler = new com.asksven.betterbatterystats.BatteryChangedHandler();
    this.registerReceiver(m_batteryHandler, new android.content.IntentFilter(android.content.Intent.ACTION_BATTERY_CHANGED));
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<android.database.Cursor> loader) {
    mSession.clearShooters();
    mSession.clearTeams();
}

private boolean threatening(android.graphics.Point p1, android.graphics.Point p2) {
    if ((!(isSameColour(p1, p2))) && (isBigger(p1, p2)))
        return true;
    
    return false;
}

public void dataChanged() {
    android.widget.ListView listView = ((android.widget.ListView) (findViewById(R.id.downloads_list)));
    adapter = new internetofeveryone.ioe.Downloads.DownloadsAdapter(presenter.getDownloadedWebsiteNames(), this);
    listView.setAdapter(adapter);
}

public void activate(android.content.Context context) {
    context.startActivity(new android.content.Intent(context, activity));
}

public int getUniqueId() {
    int currentId = nl.vanvianen.android.gcm.NotificationId.id.getAndAdd(1);
}

private long addSensorToDB(com.example.ludvig.sens.SensorDBItem sensor, android.database.sqlite.SQLiteDatabase db) {
    return nl.qbusict.cupboard.CupboardFactory.cupboard().withDatabase(db).put(sensor);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    for (ve.com.abicelis.creditcardexpensemanager.model.CreditCard c : mCreditCardList) {
        c.setCardExpiration(cardExpirationCal);
    }
    mAdapter.notifyDataSetChanged();
}

public void setEncodersCollection(java.util.Collection<org.mythtv.android.presentation.model.EncoderModel> encodersCollection) {
    this.validateEncodersCollection(encodersCollection);
    this.encodersCollection = ((java.util.List<org.mythtv.android.presentation.model.EncoderModel>) (encodersCollection));
    this.notifyDataSetChanged();
}

@java.lang.Override
public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int direction) {
    boolean proceed = dispalySnackBar(viewHolder.getAdapterPosition());
    list.remove(viewHolder.getAdapterPosition());
    adapter.notifyItemRemoved(viewHolder.getAdapterPosition());
}

@com.facebook.react.uimanager.annotations.ReactProp(name = "rtl")
public void setRtl(com.facebook.react.views.toolbar.ReactToolbar view, boolean rtl) {
    view.setLayoutDirection((rtl ? android.util.LayoutDirection.LTR : android.util.LayoutDirection.RTL));
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    if (intent == null) {
        pendingIntent = intent.getParcelableExtra(ListPhotosPresenter.PENDING_INTENT_CODE);
    }
    return super.onStartCommand(intent, flags, startId);
}

@java.lang.Override
public void onSuccess() {
    android.widget.Toast.makeText(context, context.getResources().getString(R.string.sent_received_dispatch), Toast.LENGTH_SHORT).show();
    db.changeReceiveDispatch(dispatch.getId(), "receive");
    progressDialog.dismiss();
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    int weight = java.lang.Integer.parseInt(java.lang.String.valueOf(seekBar1.getProgress()));
}

@java.lang.Override
public void onActivityStarted(android.app.Activity activity) {
    synchronized(this) {
        activityStack.push(new java.lang.ref.WeakReference(activity));
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    dialog.dismiss();
    java.lang.System.out.println(((hours) + " <--..."));
    addForgottenUnit(unit, tempMins);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(performingLoad))
        searchByUrl(mWebView);
    
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(layoutSrcId, container);
    return rootView;
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d("QR Fragment", "Resuming");
    mScannerView.setResultHandler(this);
    mScannerView.startCamera();
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    android.support.v7.app.ActionBar actionBar = getActionBar();
    if (actionBar != null) {
        actionBar.show();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.evanglazer.thecabaleffect.RegisterActivity.class);
    startActivity(intent);
}

public static java.lang.String toHtml(android.text.Spanned text) {
    java.lang.StringBuilder out = new java.lang.StringBuilder();
    com.pxh.richparser.RichHtml.withinHtml(out, text);
    return android.text.Html.toHtml(text);
}

@java.lang.Override
public void onSuccess(com.eeyuva.screens.DetailPage.ArticleDetailResponse responseBody) {
    android.util.Log.e("Response:", new com.google.gson.Gson().toJson(responseBody).toString());
    mView.setOtherArticleDetails(responseBody.getResponse());
}

public edu.ccbcmd.pathwayguide.CourseClass getCourseByName(java.lang.String name, android.content.Context context) {
    for (edu.ccbcmd.pathwayguide.CourseClass course : sortedObject) {
        if (course.getTitle().equals(name)) {
            return course;
        }
    }
    return instantiateNewCourse(name, context);
}

@java.lang.Override
protected void onHandleIntent(@android.support.annotation.Nullable
android.content.Intent intent) {
    if (!(isLoading))
        urlLink = intent.getStringExtra("urlLink");
    
    isWhich = intent.getStringExtra("isWhich");
    connectToApi();
}

private void onUploadProgress(org.wordpress.android.fluxc.model.MediaModel media, float progress) {
    java.lang.String localMediaId = java.lang.String.valueOf(media.getId());
    mEditorMediaUploadListener.onMediaUploadProgress(localMediaId, progress);
}

@java.lang.Override
public void onClick(android.view.View v) {
    (newQty)--;
    if ((newQty) < 0) {
        newQty = 0;
    }
    qtyEditText.setText(java.lang.Integer.toString(newQty));
}

public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate(android.content.Context context, android.support.v4.app.FragmentManager fm) {
    if ((com.imzoee.caikid.adapter.MainPagerAdapter.instance) == null) {
        com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter(context, fm);
    }
    return com.imzoee.caikid.adapter.MainPagerAdapter.instance;
}

@org.androidannotations.annotations.AfterViews
private void main() {
    initImageOnBackground();
    onClickButton();
}

public void redirect(java.lang.String id) {
    android.content.Intent intent = new android.content.Intent(this, net.kodegeek.frontendioio.VisitorMainActivity.class);
    intent.putExtra("id", userID);
    startActivity(intent);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_status);
    com.hess.hessandroid.volley.VolleyRequest vr = new com.hess.hessandroid.volley.VolleyRequest();
    vr.postData(this, "", new org.json.JSONObject());
    tv.setText("Testing.  Gogogo!");
}

@java.lang.Override
public void onError(java.lang.Throwable t) {
    android.util.Log.e(Constants.TAG, "Error fetching all the offers images.");
}

@java.lang.Override
public void putBitmap(java.lang.String key, android.graphics.Bitmap bmp) {
    this.images.put(key, bmp);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    mListener.onNewGameCreate(setOption, playerOption, rulesOption);
}

public static void _onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    com.inthecheesefactory.lib.fblike.widget.FBLikeView.callbackManager.onActivityResult(requestCode, resultCode, data);
}

public void close() {
    if ((desDBHelper) != null) {
        isOpen = false;
        desDBHelper.close();
        android.util.Log.d(net.deschulz.desdatabase0.DesDBManager.DEBUG_TAG, "desDBbHelper closed");
    }
}

public void openGallery1(int req_code) {
    android.content.Intent intent = new android.content.Intent();
    intent.setType("image/*");
    intent.setAction(Intent.ACTION_GET_CONTENT);
    startActivityForResult(android.content.Intent.createChooser(intent, "Select file to upload "), req_code);
}

@java.lang.Override
public void onMetadataChanged(android.support.v4.media.MediaMetadataCompat pMediaMetadata) {
    if (pMediaMetadata == null) {
        return ;
    }
    this.onMetadataChanged(pMediaMetadata);
}

@java.lang.Override
public void onClick(android.view.View v) {
    DisplayToast("CubeTable Practice...");
    android.content.Intent intent = new android.content.Intent(getActivity(), cube.table.CubeTableActivity.class);
    startActivity(intent);
}

private void setSwitchOnClickListener(final android.widget.Switch todoSwitch, final fabio.mytodolist.models.beans.Todo todo) {
    todoSwitch.setOnClickListener(new fabio.mytodolist.custom.listeners.TodoSwitchOnClickListener(todo.getId()));
}

public void test(android.view.View view) {
    com.hypodiabetic.happ.Objects.TempBasal example = new com.hypodiabetic.happ.Objects.TempBasal();
    example.rate = 5.0;
    example.duration = 30;
    pumpAction.newTempBasal(example, view.getContext());
}

private boolean isInternetAvailable() {
    android.net.ConnectivityManager connectivityManager = ((android.net.ConnectivityManager) (getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE)));
    android.net.NetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();
    return activeNetwork.isConnectedOrConnecting();
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    android.util.Log.d(com.teamtreehouse.ribbit.ui.InboxFragment.TAG, "onViewCreated");
    retrieveMessages();
}

public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    switch (id) {
        case R.id.action_barcode :
            new com.google.zxing.integration.android.IntentIntegrator(this).initiateScan();
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onCancelClickedListener() {
    imageButtonStatus.setSelected(false);
    long spendTime = timeWatchDialog.stop();
    android.util.Log.d("TTT", ("onCancelClickedListener: " + spendTime));
}

@java.lang.Override
protected void onStartLoading() {
    android.util.Log.i("ON Start", "LOG ");
    forceLoad();
}

@java.lang.Override
public boolean onPrepareOptionsMenu(android.view.Menu menu) {
    android.view.MenuItem item;
    item = menu.findItem(R.id.menu_refresh);
    item.setVisible(false);
    menu.findItem(R.id.menu_contact_form).setVisible(false);
    return true;
}

@java.lang.Override
public void onDestroyView() {
    android.util.Log.d(ray.cyberpup.com.touchframework.InterceptsDialog.LOG_TAG, "destroy view");
    if (((getDialog()) != null) && (getRetainInstance()))
        getDialog().setDismissMessage(null);
    
    super.onDestroyView();
}

private void goToMenu() {
    game.setScreen(new com.androidgame.jingfu.turtlegame.MenuScreen(game));
}

public boolean externalWebm() {
    return (p.getBoolean(anabolicandroids.chanobol.ui.scaffolding.Prefs.EXTERNAL_WEBM, false)) && ((Build.VERSION.SDK_INT) >= 15);
}

protected android.view.View getView() {
    return view;
}

@java.lang.Override
public void onCaptureCompleted(com.holenstudio.excamera2.CameraCaptureSession session, com.holenstudio.excamera2.CaptureRequest request, com.holenstudio.excamera2.TotalCaptureResult result) {
    android.widget.Toast.makeText(this, ("Saved: " + (mPictureFile)), Toast.LENGTH_SHORT).show();
    unlockFocus();
}

@java.lang.Override
public void invalidateDrawable(android.graphics.drawable.Drawable dr) {
    if (dr != null) {
        initMask(dr);
        swapBitmapMask(makeBitmapMask(dr));
        invalidate();
    }
}

@java.lang.Override
public void handleBrowserSwitchIntent(android.content.Intent intent) {
    fragment.getActivity().startActivityForResult(new android.content.Intent(fragment.getActivity(), com.braintreepayments.api.BraintreeBrowserSwitchActivity.class).setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION).putExtra(BraintreeBrowserSwitchActivity.EXTRA_INTENT, intent), com.braintreepayments.api.PayPal.PAYPAL_AUTHORIZATION_REQUEST_CODE);
}

public static android.content.SharedPreferences.Editor getPreferencesEditor(android.content.Context context) {
    if ((ds.framework.v4.Settings.sPreferencesEditor) != null) {
        return ds.framework.v4.Settings.sPreferencesEditor;
    }
    return ds.framework.v4.Settings.getPreferences(context).edit();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    mListener.onDialogNegativeClick(this);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_save :
            saveWord();
            finish();
            return true;
        case R.id.action_delete :
            return true;
        case android.R.id.home :
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    dataSource = org.melayjaire.boimela.data.BookDataSource.getInstance(getActivity());
    dataSource.open();
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    updateMyDatabase(db, 0, com.enm.hch.HCHDatabaseHelper.DB_VERSION);
}

private boolean isXLargeTablet() {
    return ((context.getResources().getConfiguration().screenLayout) & (android.content.res.Configuration.SCREENLAYOUT_SIZE_MASK)) >= (android.content.res.Configuration.SCREENLAYOUT_SIZE_XLARGE);
}

private void runTask() {
    serverhelper.execute(new com.android.tasks.MeasurementTask(context, new java.util.HashMap<java.lang.String, java.lang.String>(), new com.android.services.PerformanceService.MeasurementListener()));
}

@android.support.annotation.NonNull
public com.nrs.nsnik.notes.model.objects.CheckListObject build() {
    return new com.nrs.nsnik.notes.model.objects.CheckListObject(this);
}

@java.lang.Override
public boolean onSetSurface(android.view.Surface surface) {
    if ((exoPlayer) == null)
        exoPlayer = new com.felkertech.channelsurfer.players.TvInputPlayer();
    
    android.util.Log.d(TAG, "Set to surface");
    exoPlayer.setSurface(surface);
    mSurface = surface;
    return true;
}

@java.lang.Override
public void onDetachedFromWindow(android.support.v7.widget.RecyclerView view, android.support.v7.widget.RecyclerView.Recycler recycler) {
    super.onDetachedFromWindow(view, recycler);
    updateFirstAdapterPosition();
    adapter = null;
}

protected abstract void onCameraResult(java.lang.String mCurrentPhotoPath, android.graphics.Bitmap bitmap);

public static boolean sniffUnfragmented(com.google.android.exoplayer.extractor.ExtractorInput input) throws java.io.IOException, java.lang.InterruptedException {
    return com.google.android.exoplayer.extractor.mp4.Sniffer.sniffInternal(input, 128, false);
}

@java.lang.Override
public void onClick(android.view.View v) {
    getCharacter().setName(character_name.getText().toString());
    allowNameEdit(false);
    updateViews();
    ((com.oakonell.dndcharacter.AbstractBaseActivity) (getActivity())).populateRecentCharacters();
}

@java.lang.Override
public void onDeleteSyncedFolderPreference(com.owncloud.android.ui.dialog.parcel.SyncedFolderParcelable syncedFolder) {
    mSyncedFolderProvider.deleteSyncedFolder(syncedFolder.getId());
    mAdapter.removeItem(syncedFolder.getSection());
    mAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.example.rj.cryptodisplay.model.BidData> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(this, "Error :(", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mFragment) != null) {
        if (!(mFragment.createBill()))
            android.util.Log.d("ActivityNewBill", "DoneButton - creating bill returned false");
        
        finish();
    }
}

public void stop() {
    if ((mp) != null) {
        android.media.MediaPlayer mpTemp = mp;
        mp = null;
        mpTemp.stop();
        mpTemp.release();
    }
}

public static ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer someMillisBack(int millisBackToStartTheSessionFrom) {
    return new ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer(millisBackToStartTheSessionFrom);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if ((day) == 0)
        day = 7;
    
    mListener.setAlarm(day, hour, minute);
}

public void playGame(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, finalproject.tap.PlayActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
    PlayActivity.pausestatus = 0;
    finish();
    startActivity(intent);
}

public boolean initSession(io.branch.referral.Branch.BranchUniversalReferralInitListener callback) {
    initSession(callback, ((android.app.Activity) (null)));
    return false;
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    if ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) {
        v.performHapticFeedback(feedbackType());
    }
    return true;
}

public com.ma.schiffeversenken.android.model.Field.ShipDescriptor newShipDescriptor(com.ma.schiffeversenken.android.model.Ship ship) {
    com.ma.schiffeversenken.android.model.Field.ShipDescriptor shipDesc = new com.ma.schiffeversenken.android.model.Field.ShipDescriptor();
    shipDesc.size = ship.size;
    shipDesc.name = ship.name;
    shipDesc.location = new com.ma.schiffeversenken.android.model.Field.LocationDescriptor().newLocationDescriptor(ship.location);
    return shipDesc;
}

@java.lang.Override
public void onClick(android.view.View view) {
    deletePromo(edu.temple.markopromo.DisplayMessageActivity.filename);
}

@java.lang.Override
public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<java.lang.Void> task) {
    if (task.isSuccessful()) {
        android.widget.Toast.makeText(this, user.getDisplayName(), Toast.LENGTH_SHORT).show();
    }
}

public void print(com.noveogroup.android.log.Logger.Level level, java.lang.String message, java.lang.Throwable throwable);

public static byte[] stringToByte(java.lang.String data, int flag) {
    return android.util.Base64.decode(data, ((android.util.Base64.NO_PADDING) | (android.util.Base64.NO_WRAP)));
}

@java.lang.Override
protected void onPostResume() {
    super.onPostResume();
    android.content.Intent surveysIntent = new android.content.Intent(this, org.eyeseetea.malariacare.services.SurveyService.class);
    surveysIntent.putExtra(SurveyService.SERVICE_METHOD, SurveyService.RELOAD_DASHBOARD_ACTION);
    this.startService(surveysIntent);
}

@java.lang.Override
public void onStart() {
    super.onStart();
    android.content.Intent intent = new android.content.Intent(this, dg.shenm233.mmaps.service.OfflineMapService.class);
    isServiceBound = bindService(intent, mConnection, dg.shenm233.mmaps.ui.BIND_AUTO_CREATE);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initViews();
    android.util.Log.d(com.example.zhaomeng.readbookeveryday.activity.main.MainActivity.TAG, "onCreate");
}

public static com.facebook.buck.android.AndroidPlatformTarget getDefaultPlatformTarget(com.facebook.buck.android.AndroidDirectoryResolver androidDirectoryResolver, java.util.Optional<java.nio.file.Path> aaptOverride, java.util.Optional<java.nio.file.Path> aapt2Override) {
    return com.facebook.buck.android.AndroidPlatformTarget.getTargetForId(com.facebook.buck.android.AndroidPlatformTarget.DEFAULT_ANDROID_PLATFORM_TARGET, androidDirectoryResolver, aaptOverride, aapt2Override).get();
}

@java.lang.Override
public void onFinish() {
    android.content.Intent homeIntent = new android.content.Intent(this, com.google.zach.OnTargetFencing.HomeScreen.class);
    homeIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
    homeIntent.putExtra("finished", true);
    homeIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
    startActivityIfNeeded(homeIntent, 0);
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.e(net.nitroshare.android.transfer.TransferService.TAG, java.lang.String.format("transfer %d succeeded", transferId));
    showSuccessNotification(device);
}

private void proceedToHome(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, am.te.myapplication.Homepage.class);
    startActivity(intent);
}

@java.lang.Override
public boolean canChildScrollUp() {
    if ((android.os.Build.VERSION.SDK_INT) < 14) {
        return (mRecyclerView.getScrollY()) > 0;
    }else {
        return android.support.v4.view.ViewCompat.canScrollVertically(mRecyclerView, (-1));
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this.ctx, com.example.ofir.bopofinal.Administrator.ManageCategoriesActivity.class);
    this.ctx.startActivity(intent);
}

@java.lang.Override
public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    mTimeout = false;
    if (mProgressBar.isShown()) {
        mProgressBar.setVisibility(View.INVISIBLE);
        mWebView.setVisibility(View.VISIBLE);
    }
}

@java.lang.Override
public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) {
    if (task.isSuccessful()) {
    }else {
        android.widget.Toast.makeText(this, "Authentication failed.", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onDialogButtonClick(android.content.DialogInterface dialog, android.text.Editable editable, boolean isSure) {
    dialog.dismiss();
    if (isSure)
        showToast(editable.toString());
    
}

public void onClick2(android.view.View view) {
    mScrollingCalendarDialog = new com.jastzeonic.calendar.ScrollingCalendarDialog(this);
    mScrollingCalendarDialog.callCalendarView(null, ((android.widget.TextView) (view)));
}

public static com.dehua.courseinformationsystem.utils.FragmentController getInstance(android.support.v4.app.FragmentActivity activity, int containerId) {
    if ((com.dehua.courseinformationsystem.utils.FragmentController.controller) == null) {
        com.dehua.courseinformationsystem.utils.FragmentController.controller = new com.dehua.courseinformationsystem.utils.FragmentController(activity, containerId);
    }
    return com.dehua.courseinformationsystem.utils.FragmentController.controller;
}

@java.lang.Override
public void onClick(android.view.View view) {
    (like_count0)++;
    android.widget.Toast.makeText(getApplicationContext(), (("LIKED! (" + (java.lang.String.valueOf(like0))) + ")"), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        leftflag = true;
    }else {
        leftflag = false;
    }
}

@java.lang.Override
public void onInfoUpdated(ge.edu.freeuni.emis.emisapp.interfaces.UpdateMessage updateMessage) {
    android.util.Log.i("TAG", updateMessage.toString());
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<java.util.List<com.quartzodev.data.BookApi>> loader) {
}

@java.lang.Override
public java.util.List<com.example.android.newsapp.Article> loadInBackground() {
    if ((url) == null) {
        return null;
    }
    android.util.Log.v(com.example.android.newsapp.ArticleLoader.LOG_TAG, ("Loading URL: " + (url)));
    return com.example.android.newsapp.QueryUtils.fetchData(url);
}

@java.lang.Override
public void onAuthStateChanged(@android.support.annotation.NonNull
com.google.firebase.auth.FirebaseAuth firebaseAuth) {
    com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser();
    android.util.Log.d(com.ccaroni.kreasport.activities.SignupActivity.LOG, "callback");
    if (user != null) {
        sendVerificationEmail();
    }else {
    }
}

@java.lang.Override
public void start() {
    super.start();
    com.github.ybq.android.spinkit.animation.AnimationUtils.start(sprites);
    com.github.ybq.android.spinkit.animation.AnimationUtils.start(getAnimation());
}

@java.lang.Override
public void onClick(android.view.View view) {
    loadToast.setText("LOADING");
    loadToast.show();
    attemptLogin();
}

public static synchronized java.lang.String getLanguage(android.content.Context context) {
    return com.artemzin.android.wail.storage.WAILSettings.getSharedPreferences(context).getString(com.artemzin.android.wail.storage.WAILSettings.KEY_LOCALE, java.util.Locale.getDefault().getLanguage());
}

public void setTextContent(java.lang.String mTextContent) {
    if ((mCustomView) != null) {
        this.mTextContent = mTextContent;
        mCustomView.invalidate();
    }
    android.util.Log.d("test", "setTextContent: ");
}

private void closeSocket() throws java.io.IOException {
    out.close();
    socket.close();
    android.util.Log.d("closeSocket", "closeSocket");
}

private int getIntegerHeader(java.lang.String h) {
    if (this.hasHeader(h)) {
        ch.boye.httpclientandroidlib.Header header = this.response.getFirstHeader("retry-after");
        return java.lang.Integer.parseInt(header.getValue(), 10);
    }
    return -1;
}

@java.lang.Override
public void onLocationChanged(final android.location.Location location) {
    android.util.Log.d("google_api", ((("Location changed to " + (location.getLatitude())) + " ") + (location.getLongitude())));
    locationChanged(location);
}

public static java.lang.String getBestPath(final android.content.Context p) {
    try {
        return net.sourceforge.clonekeenplus.Settings.SdcardAppPath.get().bestPath(p);
    } catch (java.lang.Exception e) {
    }
    return net.sourceforge.clonekeenplus.Settings.SdcardAppPath.Dummy.Holder.sInstance.path(p);
}

public void draw(android.graphics.Canvas canvas) {
    drawBackground(canvas);
    if (this.isVisible) {
        canvas.drawBitmap(bitmap, this.x, this.y, null);
    }
    drawValue(canvas);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_accounts);
    if (savedInstanceState == null) {
        createCustomToolbar();
        initializeAccountFragment();
    }
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    if ((item.getItemId()) == (R.id.action_close)) {
        dismiss();
        return true;
    }else
        return false;
    
}

private void backToHome() {
    android.content.Intent newIntent = new android.content.Intent();
    newIntent.setClass(this, com.glm.labs.diary.ememories.MainActivity.class);
    this.startActivity(newIntent);
    this.finish();
    java.lang.System.gc();
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    mListener.onListFragmentLongInteraction(holder.mItem);
    return true;
}

@android.support.annotation.NonNull
@java.lang.Override
public java.util.List<jp.kshoji.javax.sound.midi.Receiver> getReceivers() {
    java.util.ArrayList<jp.kshoji.javax.sound.midi.Receiver> receivers = new java.util.ArrayList<>();
    if ((receiver) != null) {
        receivers.add(receiver);
    }
    return java.util.Collections.unmodifiableList(receivers);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (dialog.isShowing()) {
        dialog.dismiss();
    }
}

public void whenBtnClicked(android.view.View view) {
    buttonClickSound();
    score();
    buttonSelect();
    decolor();
}

public android.location.Location getLastLocation() {
    if ((lastLocation) == null)
        android.util.Log.d(com.example.singi_000.prototype1.GPSHandler.TAG, "GETLASTLOC IS NULL");
    
    return (lastLocation) == null ? null : new android.location.Location(lastLocation);
}

public void setLoadNextPage(solutions.alterego.androidbound.android.adapters.PageDescriptor page) {
    if (page != null) {
        createItems(page.getCurrentPage());
    }
}

@java.lang.Override
public void onValueChange(android.widget.NumberPicker picker, int oldVal, int newVal) {
    dayOfMonth = mDaySpinner.getValue();
    mCurrentDate.set(java.util.Calendar.DAY_OF_MONTH, dayOfMonth);
    onDateTimeChanged();
}

public void setTypeface(android.widget.TextView view, int fontFamilyResId, int style) {
    setTypeface(view, fontFamilyResId, style);
}

public boolean getHideTags() {
    android.os.Bundle arguments = getArguments();
    if ((cbHideCompleted) == null) {
        return !(arguments.getBoolean(ActiveFilter.INTENT_HIDE_TAGS_FILTER, false));
    }else {
        return !(cbHideTags.isChecked());
    }
}

public void onLocationChanged() {
    if (BuildConfig.DEBUG) {
        android.util.Log.d(LOG_TAG, "onLocationChanged");
    }
    updateWeather();
    getLoaderManager().restartLoader(com.dev.tonylyu.sunshine.ForecastFragment.WEATHER_LOADER_ID, null, this);
}

protected final android.app.PendingIntent createPendingIntent(int notificationId, java.lang.String action, android.os.Bundle data) {
    return createPendingIntent(notificationId, action, data, 0);
}

private void setColor(java.lang.String colorName) {
    mLabel.setText(colorName);
    if (colorName.equals("primary")) {
        mColor.setCircleColor(R.color.primary);
    }else {
        mColor.setCircleColor(android.graphics.Color.parseColor(colorName));
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(getActivity(), getResources().getString(R.string.fetching_data), Toast.LENGTH_SHORT).show();
    new com.sanchez.geoopposite.MainFragment.LaunchMapTask().execute();
    currentLocationButton.setEnabled(false);
}

@java.lang.Override
public void onClick(android.view.View view) {
    transactionHistory(null, TransactionHistoryFragment.RefreshState.EMPTY_REFRESH);
}

@java.lang.Override
public void onCreate(android.os.Bundle icicle) {
    super.onCreate(icicle);
    final android.content.Intent intent = new android.content.Intent(android.provider.DocumentsContract.ACTION_MANAGE_ROOT);
    intent.setData(android.provider.DocumentsContract.buildRootUri(Constants.STORAGE_AUTHORITY, Constants.STORAGE_ROOT_ID));
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onResponse(com.squareup.okhttp.Response response) throws java.io.IOException {
    if (!(response.isSuccessful())) {
        this.apiError();
    }
    this.performFinish(tejaswi_yerukalapudi.com.helloandroid.PersonActivity.RECORD_UPDATED);
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    handleStart(intent, startId);
    return START_NOT_STICKY;
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    registerReceiver(br, new android.content.IntentFilter(BroadcastService.COUNTDOWN_BR));
    com.imperium.power.nfcmango.NFCScreen.setupForegroundDispatch(this, mNfcAdapter);
}

@java.lang.Override
public void onClick(android.view.View view) {
    validate(0, nameDialog.getText().toString(), mAuth.getCurrentUser().getUid(), hintDialog.getText().toString());
    dialog.dismiss();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((mStatus) == (STATUS_READY)) {
        mStatus = STATUS_RECOGNIZING;
        mTranscoder.transcode(mUser3GPFilePath, mUserWaveFilePath, this);
        updateStatus();
    }
}

@java.lang.Override
public void onChildAdded(com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s) {
    com.namclu.android.bloquery.api.model.Question question = dataSnapshot.getValue(com.namclu.android.bloquery.api.model.Question.class);
    mQuestionAdapter.addQuestion(question);
    android.widget.Toast.makeText(this, "inside onChildAdded", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onResumeFragments() {
    super.onResumeFragments();
    pageChangeListener.onPageSelected(viewPager.getCurrentItem());
    android.util.Log.d("Test", "MainActivity.onResumeFragments()");
}

public void onClick(android.view.View v) {
    android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
    com.example.hasun.payattention.LockTimeDialog lockTimeDialog = new com.example.hasun.payattention.LockTimeDialog();
    lockTimeDialog.show(fm, "setLockTime");
    mBeginButton.setEnabled(false);
}

@java.lang.Override
public void onClick(android.view.View view) {
    revealCorrectAnswer(1);
    updatePoints();
}

private void reloadDimens() {
    android.content.res.Resources res = mContext.getResources();
    mIconSize = res.getDimensionPixelSize(R.dimen.status_bar_icon_size);
    mIconHPadding = res.getDimensionPixelSize(R.dimen.status_bar_icon_padding);
    mIconWidth = context.getResources().getDimensionPixelSize(R.dimen.status_bar_icon_size);
}

@java.lang.Override
public void onError() {
    progressBar.setVisibility(View.GONE);
    android.widget.Toast.makeText(mContext, "picasso error", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(getActivity(), "Calendar - Looking for day", Toast.LENGTH_SHORT).show();
    mLoadingProgress.setVisibility(View.VISIBLE);
    com.sweproject.calorietracker.MainActivity.getDBData(com.sweproject.calorietracker.DataObjects.Days.class, this, "UserId", MainActivity.CurrentUser.Id);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.widget.ListView listView = ((android.widget.ListView) (findViewById(R.id.current_heroes)));
    populateListView();
    testClick();
}

private void initBookmarkFragment() {
    mMetaInfoListSource = com.java.team17.data.BookmarkManager.getInstance(com.java.team17.data.db.CacheDBOpenHelper.getInstance(getContext().getApplicationContext())).getNewsMetaInfoListSource();
    android.util.Log.i("bookmark", "bookmarkInited");
}

@java.lang.Override
public void onClick(android.view.View view) {
    java.lang.System.out.println("All tags deleted!");
    dbHelper.deleteAllTagsFromDB();
    allTags = dbHelper.getAllTags();
    adapter.updateTags(allTags);
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    android.app.Activity hostActivity = getActivity();
    if (hostActivity instanceof com.group.mydea.FragmentModificaNota.addedItem) {
        listener = ((com.group.mydea.FragmentModificaNota.addedItem) (hostActivity));
    }
}

@java.lang.Override
public void getVisitedHistory(android.webkit.ValueCallback<java.lang.String[]> callback) {
    mWebChromeClient.getVisitedHistory(callback);
}

public void decrement(android.view.View view) {
    (quantity)--;
    display(quantity);
}

private void requestNewInterstitial() {
    adRequest = new com.google.android.gms.ads.AdRequest.Builder().addTestDevice("4E441F0D2F1FEBCDB67463195D4E85A2").addTestDevice(AdRequest.DEVICE_ID_EMULATOR).build();
}

@java.lang.Override
public void onClick(android.view.View v) {
    allRe.get(java.lang.Integer.parseInt(v.getTag().toString())).setHeading(1);
    updateTextNoteControlListners(R.id.action_heading1);
}

private void calculateEquation192() {
    equation192 = ((sexFactor) * (bodyWeightInKG)) * 24;
    android.util.Log.i("Lean Factor Info", java.lang.String.valueOf(leanFactorMultiplier));
}

public void onClick(android.view.View v) {
    guess(v);
    switchQuestionAndAnswers();
}

private void stopTimerTask() {
    android.util.Log.i("MyMapsActivity", "stopTimerTask()");
    if ((timer) != null) {
        timer.cancel();
        timer = null;
    }
}

public void setDataRetriever(org.matrix.androidsdk.data.DataRetriever dataRetriever) {
    checkIfActive();
    mDataRetriever = dataRetriever;
    mDataRetriever.setStore(mStore);
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    android.util.Log.e("Error", "That didn't work!");
    android.widget.Toast.makeText(getApplicationContext(), "Error connecting to server please try again.", Toast.LENGTH_LONG).show();
    hideProgressDialog();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    myTimer.start();
    dialogInterface.dismiss();
    android.widget.Toast.makeText(this, "Timer started.", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    speed += ((speed) == 8) ? 0 : 1;
    java.lang.String cmd = "" + (speed);
    this.sendCommand(cmd);
}

@java.lang.Override
public void onClick(android.view.View v) {
    locFirst = false;
    run = true;
    sendSMSMessage(getResources().getString(EnumSms.WHERE.getSms()));
    launchSearch();
}

public void StartWifi() {
    android.content.Intent intent = new android.content.Intent(this, pt.inesc.termite.wifidirect.service.SimWifiP2pService.class);
    bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
    mBound = true;
    new pt.ulisboa.tecnico.cmov.ubibike.WifiDirect.MsgSenderActivity.IncommingCommTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
    guiUpdateDisconnectedState();
}

@java.lang.Override
public void onClick(final android.content.DialogInterface dialog, final int which) {
    intent.putExtra("mode", "view");
    intent.putExtra("obj", studentInfoList.get((pos + 1)));
    context.startActivity(intent);
}

@java.lang.Override
public void failure(com.appdest.hcue.services.RestError restError) {
    hideLoader();
    android.widget.Toast.makeText(this, restError.getErrorMessage(), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    java.util.ArrayList pArrayList = new java.util.ArrayList();
    matt.listmaker.ListObject test = new matt.listmaker.ListObject("List Name", 0, pArrayList);
    dbHelper.addListObject(test);
}

@java.lang.Override
public boolean onConsoleMessage(android.webkit.ConsoleMessage consoleMessage) {
    return mWebChromeClient.onConsoleMessage(consoleMessage);
}

@java.lang.Override
public void forkContacts(android.content.Context context, int quantity, boolean allTypes) {
    if ((mForkBinder) != null) {
        mForkBinder.startFork((allTypes ? com.pioneer.aaron.dolly.fork.ForkTask.FORK_TYPE_ALL_TYPE_CONTACT : com.pioneer.aaron.dolly.fork.ForkTask.FORK_TYPE_RANDOM_CONTACT), quantity);
        toastForkTask(context);
    }
}

@java.lang.Override
protected void onStart() {
    initPlayServices();
    client.connect();
    android.util.Log.d(com.example.tameter.geofog.MainActivity.LOG_TAG, "START OP XXOX");
    super.onStart();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle savedInstance) {
    super.onSaveInstanceState(savedInstance);
    if (((listData) != null) || (listData.isEmpty())) {
        savedInstance.putSerializable("HEADER", listData);
    }
}

public void addTitle(@android.support.annotation.StringRes
int titleId) {
    addModel(com.kaliturin.blacklist.adapters.SettingsArrayAdapter.Model.TITLE, titleId, 0, null, null);
}

@org.junit.Test
public void PasswordResetScreenToLoginScreenTransistion() throws java.lang.Exception {
    launchActivityWithIntent();
    onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.regBackBtn)).perform(android.support.test.espresso.action.ViewActions.click());
}

@android.support.annotation.Nullable
public static com.tonyodev.storagegrapher.StorageVolume getSecondaryStorageVolume(android.content.Context context) {
    if (context == null) {
        return null;
    }
    java.io.File file = com.tonyodev.storagegrapher.Storage.getSecondaryStorageDir(context);
    if (file != null) {
        return com.tonyodev.storagegrapher.Storage.getStorageVolume(file);
    }
    return null;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (position != (showDetailPosition)) {
        showDetail(position);
    }else {
        hideDetail();
    }
}

@java.lang.Override
public void onViewStateRestored(android.os.Bundle savedInstanceState) {
    super.onViewStateRestored(savedInstanceState);
    android.util.Log.d(ray.cyberpup.com.touchframework.InterceptsDialog.LOG_TAG, "onViewStateRestored");
}

@org.junit.Before
public void setUp() throws java.lang.Exception {
    android.util.Log.v(com.harlie.radiotheater.radiomysterytheater.data.TestRadioTheaterDb.TAG, "setUp");
    android.test.RenamingDelegatingContext context = new android.test.RenamingDelegatingContext(android.support.test.InstrumentationRegistry.getContext(), "test_");
    helper = com.harlie.radiotheater.radiomysterytheater.data.RadioTheaterHelper.getInstance(context);
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    if ((mRecorder) != null) {
        drawBars(canvas);
        postInvalidate();
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(it.rieger.happyhour.controller.database.DatabaseHelper.CREATE_TABLEFACEBOOK_LOGIN);
    db.execSQL(it.rieger.happyhour.controller.database.DatabaseHelper.CREATE_TABLE_FAVORITE_LOCATIONS);
    db.execSQL(it.rieger.happyhour.controller.database.DatabaseHelper.CREATE_TABLE_LOCATION_IMAGES);
}

@java.lang.Override
protected info.hearit.pluginslib.BaseModule newModule(android.app.Notification notification) {
    return new info.hearit.pluginsample.PluginAudioModule(notification, 1, 2);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    new com.boolong.hangrywaits.Home.LoadPlaces().execute();
    if (id == (R.id.action_settings)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    activate();
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName name, android.os.IBinder binder) {
    com.michaelflisar.lumberjack.overlay.OverlayService service = ((com.michaelflisar.lumberjack.overlay.OverlayService.OverlayServiceBinder) (binder)).getService();
    messageDispatcher.setSetup(setup);
    messageDispatcher.setService(service);
}

@java.lang.Override
public void callback(java.lang.String url, android.widget.ImageView iv, android.graphics.Bitmap bm, com.androidquery.callback.AjaxStatus status) {
    aq.id(iv).image(com.florianmski.tracktoid.Utils.shadowBitmap(com.florianmski.tracktoid.Utils.borderBitmap(bm, context))).animate(android.R.anim.fade_in);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if (type != (io.github.sdsstudios.ScoreKeeper.Dialog.ADD_PLAYER)) {
        mGame.setPlayer(oldPlayer, position);
    }
    dialog.dismiss();
    onDialogClose();
}

private int getItemViewTypeHelper(android.database.Cursor cursor) {
    boolean is_from_user = (cursor.getInt(cursor.getColumnIndexOrThrow("is_from_user"))) > 0;
    if (is_from_user == true) {
        return 0;
    }else {
        return 1;
    }
}

@java.lang.Override
public void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken asyncActionToken, java.lang.Throwable exception) {
    android.util.Log.i(com.ajb.vendingmachine.service.MQTTService.TAG, "subscribeCallBackHandler订阅失败 ");
    exception.printStackTrace();
    doClientConnection();
}

public void goToCurrentLocation(com.google.android.gms.maps.model.LatLng latLng, java.lang.String currentAddress) {
    com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(latLng, com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM);
    map.animateCamera(cameraUpdate);
    removeLocationUpdates();
    setTextAutocompleteFragmentWithText(currentAddress);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    activity.startActivity(new android.content.Intent(activity, tda367.myapplication.controller.ActivityInfo.class));
    learnJava.setCurrentLevel(((learnJava.getCurrentLevel()) + 1));
}

@java.lang.Override
public final void onValidate(@android.support.annotation.NonNull
com.alexandrepiveteau.library.tutorial.ui.fragments.AbstractTutorialValidationFragment fragment, boolean is_ok) {
    if (is_ok) {
        _avoid_try_validate = true;
        onClick(mImageButtonRight);
        _avoid_try_validate = false;
    }
    invalidateSwipable();
}

private void initializeNavigationListener() {
    android.support.design.widget.BottomNavigationView navigation = ((android.support.design.widget.BottomNavigationView) (activity.findViewById(R.id.navigation)));
    navigation.setSelectedItemId(R.id.navigation_notifications);
}

public void showAtHomeView() {
    android.widget.TextView occupancyTextView = ((android.widget.TextView) (findViewById(R.id.occupancy_alert)));
    occupancyTextView.setText("User is at home");
}

@java.lang.Override
public void searchFirendOrCircle(com.zdn.CommandParser.CommandE e) {
    android.os.Message msg = handler.obtainMessage();
    msg.what = com.zdn.logic.InternetComponent.ThreadTaskHandler.SEND_MESSAGE_TO_SERVER;
    e.GetProperty("URL").SetPropertyContext(com.zdn.logic.InternetComponent.WEBSITE_ADDRESS_ADD_A_FRIEND_ANSWER_REQ);
    msg.obj = e;
    handler.sendMessage(msg);
}

private void updateBg(int color) {
    if ((mTargetView) instanceof android.widget.ImageView) {
        android.graphics.drawable.Drawable _bg = mTargetView.getBackground();
        if (_bg instanceof android.graphics.drawable.GradientDrawable) {
            ((android.graphics.drawable.GradientDrawable) (_bg)).setColor(color);
        }
    }
}

private void handleIntent() {
    android.content.Intent intent = getIntent();
    date = intent.getStringExtra(CommonConstants.DATE);
    isConfirmed = intent.getBooleanExtra(CommonConstants.IS_CONFIRMED, true);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.widget.Toast.makeText(getBaseContext(), list_productName.get(position).toString(), Toast.LENGTH_LONG).show();
}

protected void onPostExecute(java.lang.Void result) {
    updateFragments();
    android.widget.Toast.makeText(getApplicationContext(), "Allotment created", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.d("on destory", "timetable");
    if ((courseRW) != null)
        courseRW.close();
    
}

public void draw(float[] initialMatrix) {
    plane.draw(initialMatrix);
    if ((flight) != null) {
        flight.draw(initialMatrix);
    }
    new uk.ac.aber.gij2.olandroid.view.Aircraft(0).draw(initialMatrix);
}

public void settings() {
    android.app.Dialog dialog = new android.app.Dialog(this);
    text1 = ((android.widget.TextView) (dialog.findViewById(R.id.textView2)));
    dialog.setContentView(R.layout.dialogbox);
    dialog.show();
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.util.List<com.qi.xiaohui.dingdang.model.webcontent.WebContent>> call, java.lang.Throwable t) {
    android.util.Log.i("error", t.toString());
    webView.setWebViewClient(new android.webkit.WebViewClient());
    _loadUrl();
}

public void checkGoalTableIsDefined() {
    android.database.sqlite.SQLiteDatabase myDb = this.getWritableDatabase();
    myDb.execSQL(("CREATE TABLE IF NOT EXISTS GOALS " + "(id integer primary key, name text, goal integer, deposited integer)"));
    myDb.close();
}

@java.lang.Override
public void onSuccess(com.androidsdk.snaphy.snaphyandroidsdk.models.Customer object) {
    super.onSuccess(object);
    mainActivity.onBackPressed();
    com.sdsmdg.tastytoast.TastyToast.makeText(mainActivity, "Successfully updated data", TastyToast.LENGTH_SHORT, TastyToast.SUCCESS);
}

private void showOpen311ProblemFragment(edu.usf.cutr.open311client.models.Service service) {
    org.onebusaway.android.report.ui.Open311ProblemFragment.show(this, R.id.ri_report_stop_problem, mOpen311, service, this);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    etApiDialog = ((android.widget.EditText) (findViewById(R.id.et_api_dialog)));
    apiKey[0] = etApiDialog.getText().toString();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    myContext = activity.getApplicationContext();
    android.util.Log.d(TAG, "onAttach");
}

public void setOnCancelButtonClickListener(android.view.View.OnClickListener onCancelButtonClickListener) {
    this.onCancelButtonClickListener = onCancelButtonClickListener;
    if ((buttonCancel) != null)
        buttonCancel.setOnClickListener(onAcceptButtonClickListener);
    
}

@java.lang.Override
public final void addView(android.view.View child, android.view.ViewGroup.LayoutParams params) {
    super.addView(child, params);
}

@java.lang.Override
public void onClick(android.view.View view) {
    java.lang.System.out.println("clicked");
    datePickerShow();
}

@java.lang.Override
public void setContentView(int layoutResID) {
    final android.view.View contentView = getLayoutInflater().inflate(layoutResID, mDrawerLayout, false);
    contentLayout.addView(contentView);
    setContentView(mDrawerLayout);
    initToolbar();
    initNavigationDrawer();
    initActionDrawerToggle();
}

@java.lang.Override
public void close() {
    database.close();
    org.dbtools.android.domain.database.DatabaseWrapperUtil.closeStatements(insertStatementMap);
    org.dbtools.android.domain.database.DatabaseWrapperUtil.closeStatements(updateStatementMap);
}

@java.lang.Override
public void onClick(android.view.View view) {
    DigitPressed(getContext(), "1", view);
}

@java.lang.Override
public void showBackgroundColor(com.huhx0015.screencolortester.domain.models.ScreenColor color) {
    if ((color.resource) != null) {
        mActivityLayout.setBackgroundColor(color.resource);
    }else {
        mActivityLayout.setBackgroundColor(android.graphics.Color.rgb(color.red, color.green, color.blue));
    }
}

public com.checkerbot.checkerbot.Square get(android.graphics.Point p) {
    try {
        return board[p.y][p.x];
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
    }
    return board[p.y][p.x];
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    mRoutineId = savedInstanceState.getLong(com.jdelorenzo.capstoneproject.ModifyRoutineActivity.EXTRA_WORKOUT_ID);
    mCheckedDays = savedInstanceState.getBooleanArray(com.jdelorenzo.capstoneproject.ModifyRoutineActivity.EXTRA_CHECKED_DAYS);
    mTwoPane = savedInstanceState.getBoolean(com.jdelorenzo.capstoneproject.ModifyRoutineActivity.EXTRA_TWO_PANE);
}

private boolean isUnlockMethodSecure(java.lang.String unlockMethod) {
    return !((com.android.settings.ChooseLockGeneric.ChooseLockGenericFragment.KEY_UNLOCK_SET_OFF.equals(unlockMethod)) || (com.android.settings.ChooseLockGeneric.ChooseLockGenericFragment.KEY_UNLOCK_SET_NONE.equals(unlockMethod)));
}

private java.lang.String displayName(java.lang.String nam) {
    android.widget.EditText txtname = ((android.widget.EditText) (findViewById(R.id.editxt_name)));
    setxt = txtname.getText().toString();
    return setxt;
}

@com.pilloxa.backgroundjob.ReactMethod
public void getAll(com.pilloxa.backgroundjob.Callback callback) {
    android.util.Log.d(LOG_TAG, "RN Getting aall");
    com.pilloxa.backgroundjob.WritableArray jobs = _getAll();
    callback.invoke(jobs);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.FragmentManager manager = getFragmentManager();
    com.littlegeektoys.www.picturepurrfect.ColorPickerFragment dialog = com.littlegeektoys.www.picturepurrfect.ColorPickerFragment.newInstance();
    dialog.setTargetFragment(this, com.littlegeektoys.www.picturepurrfect.BottomMenuFragment.REQUEST_COLOR);
    dialog.show(manager, com.littlegeektoys.www.picturepurrfect.BottomMenuFragment.DIALOG_COLOR_INPUT);
    mCallbacks.onToolSelect(MenuToolInterface.ToolName.COLOR);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mDeleteListener) != null) {
        com.cunoraz.tagview.Tag targetTag = tag;
        mDeleteListener.onTagDeleted(this, targetTag, position);
    }
}

@java.lang.Override
protected void drawSpecial(android.graphics.Canvas canvas, int offset) {
    for (com.gmail.wazappdotgithub.ships.model.IShip s : board.arrayOfShips()) {
        drawShip(canvas, offset, s);
    }
}

public static void init(android.app.Application application) {
    com.parse.Parse.initialize(application, com.rndapp.mtamap.Analytics.PARSE_KEY_ONE, com.rndapp.mtamap.Analytics.PARSE_KEY_TWO);
    com.flurry.android.FlurryAgent.init(application, com.rndapp.mtamap.Analytics.FLURRY_KEY);
}

@java.lang.Override
public void onConnectionFailed(@android.support.annotation.NonNull
com.google.android.gms.common.ConnectionResult connectionResult) {
    android.util.Log.d(com.whirlwind.school1.activity.GoogleSignInActivity.TAG, ("onConnectionFailed:" + connectionResult));
    android.widget.Toast.makeText(this, "Google Play Services error.", Toast.LENGTH_SHORT).show();
}

public static cz.metaverse.android.bilingualreader.enums.ScrollSyncMethod fromString(java.lang.String string) {
    cz.metaverse.android.bilingualreader.enums.ScrollSyncMethod method;
    try {
        method = cz.metaverse.android.bilingualreader.enums.ScrollSyncMethod.valueOf(string);
    } catch (java.lang.IllegalArgumentException e) {
        method = null;
    }
    return method;
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    android.util.Log.d(((TAG) + ".afterTextChanged()"), "afterTextChanged");
    com.nusclimb.live.crimp.common.BusProvider.getInstance().post(new com.nusclimb.live.crimp.common.busevent.AccumulatedScoreChange());
}

protected void doEncrypt(android.view.View v) {
    doWork(1);
}

public void requestPermission(io.dcloud.common.DHInterface.IWebview webview, org.json.JSONArray data) {
    int currentVersion = android.os.Build.VERSION.SDK_INT;
    if (currentVersion > (android.os.Build.VERSION_CODES.LOLLIPOP)) {
        cn.jpush.android.api.JPushInterface.requestPermission(webview.getContext());
    }
}

@java.lang.Override
public void showNetworkError(java.io.IOException e) {
    android.widget.Toast.makeText(java.security.AccessController.getContext(), java.lang.String.format("Network error: %s", e.getMessage()), Toast.LENGTH_SHORT).show();
}

public java.lang.String checkConnection(eu.epitech.serverandroid.beans.UserClientInfo info) {
    eu.epitech.serverandroid.tools.GoogleTools google = new eu.epitech.serverandroid.tools.GoogleTools();
    if ((info == null) || ((info.getToken()) == null)) {
        return "400";
    }
    return google.checkConnect(info);
}

public void parseInitial(android.content.Context c) {
    parseImage(c, com.koroshiya.ReadCache.CACHE_DIRECT, currentPage);
    cacheNext(c);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if (intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED)) {
        context.startService(new android.content.Intent(context, ru.spbau.mit.foodmanager.NotificationService.class));
    }
}

@java.lang.Override
public void onTimeSet(android.widget.TimePicker view, int hourOfDay, int minute) {
    userPreferences.setSleepTime(hourOfDay, minute);
    if (!(mSleepWakeEnable.isChecked())) {
    }
    mSleepTimeLabel.setText(formatTime(hourOfDay, minute));
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    sm.unregisterListener(this);
    try {
        lm.removeUpdates(this);
    } catch (java.lang.SecurityException se) {
        android.util.Log.e("This app", "exception", se);
    }
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    if (outState != null) {
        outState.putInt(com.elorri.android.tieus.fragments.BoardFragment.SELECTED_KEY, mPosition);
        mAdapter.onSaveInstanceState(getContext(), outState);
    }
    super.onSaveInstanceState(outState);
}

private void showGlobalContextActionBar() {
    android.support.v7.app.ActionBar actionBar = getActionBar();
    actionBar.setDisplayShowTitleEnabled(true);
    actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
    actionBar.setTitle(R.string.app_name);
}

@java.lang.Override
public void onBindViewHolder(com.localytics.android.itracker.ui.MediaDownloadFragment.MediaDownloadAdapter.ViewHolder holder, int position) {
    holder.bindData(mDownloads.get(position));
}

@java.lang.Override
protected org.json.JSONObject doInBackground(java.lang.Void... voids) {
    if (!(com.bananaplan.workflowandroid.main.MainApplication.sUseTestData)) {
        if (com.bananaplan.workflowandroid.data.loading.RestfulUtils.isConnectToInternet(mContext)) {
            mPostRequestStrategy.post();
        }else {
            cancel(true);
        }
    }
    return null;
}

private void goToWelcome() {
    android.content.Intent welcomeIntent = new android.content.Intent(this, edu.gatech.cs2340.rattracker.controller.WelcomeActivity.class);
    startActivity(welcomeIntent);
    finish();
}

@java.lang.Override
public void run() {
    if ((isRefreshing) == 1) {
        android.widget.Toast.makeText(getActivity(), "Connection Failed", Toast.LENGTH_SHORT).show();
        swipeLayout.setRefreshing(false);
    }
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    mCurrentLocation = location;
}

@java.lang.Override
public void onItemClick(android.view.View v, int position) throws org.json.JSONException {
    android.util.Log.v("input", java.lang.String.valueOf(position));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    this.classify = getArguments().getString(com.laudandjolynn.mytv.ProgramTableFragment.ARG_CLASSIFY);
    this.date = getArguments().getString(com.laudandjolynn.mytv.ProgramTableFragment.ARG_AIR_DATE);
}

@java.lang.Override
public void navigateToStepsActivity(dk.jbfp.staveapp.User user, java.lang.String[] words) {
    android.content.Intent intent = new android.content.Intent(this, dk.jbfp.staveapp.steps.StepsActivity.class);
    intent.putExtra(StepsActivity.USER_KEY, user);
    startActivity(intent);
}

protected void removeHandler(android.os.Handler handler) {
    handler.removeCallbacksAndMessages(null);
    io.realm.BaseRealm.handlers.remove(handler);
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    android.util.Log.d(TAG, "onAttach: called from webview fragment");
    webviewFragmentListener = ((camelcase.searchemall.WebViewFragment.WebviewFragmentListener) (context));
}

public void loginSuccess() {
    android.content.Intent intent = new android.content.Intent(this, com.seng480b.bumerang.activities.HomeActivity.class);
    com.facebook.login.LoginManager.getInstance().logInWithReadPermissions(this, java.util.Arrays.asList("public_profile"));
    startActivity(intent);
}

public static void setUsingAlternateTypefaceAndForcedLocale(android.content.Context context, boolean useAlternateTypeface, int localeCode) {
    br.com.carlosrafaelgn.fplay.ui.UI.isUsingAlternateTypeface = useAlternateTypeface;
    if (!(br.com.carlosrafaelgn.fplay.ui.UI.setForcedLocale(context, null, localeCode)))
        br.com.carlosrafaelgn.fplay.ui.UI.setUsingAlternateTypeface(context, useAlternateTypeface);
    
}

@java.lang.Override
public void onStop() {
    final android.webkit.WebView webView = ((android.webkit.WebView) (findViewById(R.id.WebViewPrint)));
    webView.loadUrl("about:blank");
    super.onStop();
}

@java.lang.Override
public boolean onTouch(android.view.View view, android.view.MotionEvent motionEvent) {
    gDetector.onTouchEvent(motionEvent);
    return true;
}

@java.lang.Override
public boolean onQueryTextChange(java.lang.String newText) {
    android.util.Log.d("myLogs", newText);
    pleaseSearchIt(newText);
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(com.zhan.budget.Adapter.CategorySection.TAG, ("on click : " + (getLayoutPosition())));
    if ((mListener) != null) {
        mListener.onClick(getAdapterPosition());
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    finish();
    startActivity(new android.content.Intent(this, com.agameoffriends.agameoffriends.MainActivity.class));
}

@java.lang.Override
public void onClick(android.view.View v) {
    play();
    songPlayerThread = new com.bitdubai.sub_app.music_player.fragments.MusicPlayerMainActivity.ThreadSong(false);
    songPlayerThread.execute();
}

public android.app.Notification.Builder addAction(android.app.Notification.Action action) {
    mActions.add(action);
    return this;
}

private static void updateCardBackgroundColor(android.support.v17.leanback.widget.ImageCardView view, boolean selected) {
    int color = (selected) ? org.mythtv.android.presentation.presenter.tv.CardPresenter.sSelectedBackgroundColor : org.mythtv.android.presentation.presenter.tv.CardPresenter.sDefaultBackgroundColor;
    view.setBackgroundColor(color);
    view.findViewById(R.id.info_field).setBackgroundColor(color);
}

@java.lang.Override
public com.nrinehart.purdueclasswatcher.PurdueClassRealmAdapter.ViewHolder onCreateRealmViewHolder(android.view.ViewGroup viewGroup, int viewType) {
    android.view.View v = inflater.inflate(R.layout.row_class, viewGroup, false);
    return new com.nrinehart.purdueclasswatcher.PurdueClassRealmAdapter.ViewHolder(((android.widget.RelativeLayout) (v)));
}

public void info(java.lang.String msg) {
    if (com.yourtion.httpdns.Debug.isshow)
        android.util.Log.i(((com.yourtion.httpdns.Debug.PREFIX) + (this.name)), msg);
    
}

public java.lang.String getTitle() {
    if (android.text.TextUtils.isEmpty(title))
        return "";
    else
        return title;
    
}

@java.lang.Override
public void onCompleted(sep.software.anicare.model.AniCareUser entity) {
    android.content.Intent intent = new android.content.Intent();
    intent.setClass(mThisActivity, sep.software.anicare.activity.PetSettingActivity.class);
    startActivity(intent);
    mAppContext.dismissProgressDialog();
    finish();
}

@java.lang.Override
public void onPageScrolled(int i, float v, int i2) {
    android.util.Log.i(com.xiaodong.dream.catcher.demo.express.ExpressFragment.TAG, ">>onPageScrolled");
}

@java.lang.Override
public void setMyLocationEnabled(boolean enabled) {
    if ((myLocationEnabled) != enabled) {
        myLocationEnabled = enabled;
        com.airbnb.android.airmapview.RuntimePermissionUtils.checkLocationPermissions(getActivity(), this);
    }
}

private void exitActivity() {
    android.util.Log.i(LOG, "Returning to MainActivity...");
    startActivity(new android.content.Intent(this, net.kenneho.runnow.MainActivity.class));
    finish();
}

@java.lang.Override
public void createTable(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL(("DROP TABLE IF EXISTS " + (net.razysoft.production.Contract.Category.TABLE_NAME)));
    database.execSQL(net.razysoft.production.Contract.Category.SQL_CREATE_TABLE);
    database.close();
}

public void zoomTo(android.graphics.RectF dst) {
    if (mZoomAnimator.isRunning())
        mZoomAnimator.cancel();
    
    mStartRect.set(mImageArea);
    mEndRect.set(dst);
    mZoomAnimator.start();
}

public static java.lang.String byteToString(byte[] data, int flag) {
    return android.util.Base64.encodeToString(data, ((android.util.Base64.NO_PADDING) | (android.util.Base64.NO_WRAP)));
}

@java.lang.Override
protected void onRestart() {
    super.onRestart();
    android.content.Intent intent = getIntent();
    intent.putExtra("currentView", viewPager.getCurrentItem());
    startActivity(intent);
    finish();
}

@java.lang.Override
public java.lang.Object instantiateItem(android.view.ViewGroup container, int position) {
    android.view.View instantiateItem = ((android.view.View) (getInstantiateItem(container, mList.get(position))));
    container.addView(instantiateItem);
    return instantiateItem;
}

public void startRoundAction(android.view.MenuItem item) {
    mRound.startRound();
    setMenuView(item);
    mView.showRoundMessage(mContext.getString(R.string.result_round_started));
}

@java.lang.Override
public void onClose() {
    android.support.v4.app.Fragment f = getSupportFragmentManager().findFragmentByTag(dialogTag);
    android.support.v4.app.FragmentTransaction trans = getSupportFragmentManager().beginTransaction();
    trans.remove(f).commit();
}

public void setMediaPlayer(android.media.MediaPlayer newVal) {
    if (newVal == null) {
        mediaplayer = new android.media.MediaPlayer();
    }else {
        mediaplayer = newVal;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(isActivated()))
        activate(true);
    
    setHasFocus(true);
    inputMethodManager.showSoftInput(editText, InputMethodManager.SHOW_IMPLICIT);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent addSourceIntent = com.stripe.android.view.AddSourceActivity.newIntent(this, false, true);
    if (mStartedFromPaymentSession) {
        addSourceIntent.putExtra(com.stripe.android.PaymentSession.EXTRA_PAYMENT_SESSION_ACTIVE, true);
    }
    startActivityForResult(addSourceIntent, com.stripe.android.view.PaymentMethodsActivity.REQUEST_CODE_ADD_CARD);
}

public void onSuccess(java.lang.String s) {
    android.widget.Toast.makeText(this, "Location sent.", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.desk.java.apiclient.model.ApiResponse<com.desk.java.apiclient.model.Article>> call, java.lang.Throwable throwable) {
    callbacks.onArticlesLoadError(new com.desk.android.sdk.error.ErrorResponse(throwable));
}

public void onPlayPauseClicked(android.view.View v) {
    com.rukiasoft.androidapps.udacity.nanodegree.spotifystreamer.utils.LogHelper.d(com.rukiasoft.androidapps.udacity.nanodegree.spotifystreamer.MusicServiceActivity.TAG, "play-pause clicked");
    switch (currentSongState) {
        case com.rukiasoft.androidapps.udacity.nanodegree.spotifystreamer.MusicServiceActivity.STATE_STOPPED :
        case com.rukiasoft.androidapps.udacity.nanodegree.spotifystreamer.MusicServiceActivity.STATE_PAUSED :
            sendResumeMessageToService();
            break;
        case com.rukiasoft.androidapps.udacity.nanodegree.spotifystreamer.MusicServiceActivity.STATE_PLAYING :
            sendPauseMessageToService();
            break;
        default :
            break;
    }
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    switch (view.getId()) {
        case R.id.input_reg_fullname :
            validateFullName();
            break;
        case R.id.input_reg_Surname :
            validateSurname();
            break;
        case R.id.input_reg_idParents :
            break;
    }
}

public void guestLogin(android.view.View view) {
    guestLayout.setVisibility(View.VISIBLE);
    providerLayout.setVisibility(View.GONE);
}

@java.lang.Override
public void onStart() {
    android.util.Log.d(com.seafile.seadroid2.ui.activity.AccountsActivity.DEBUG_TAG, "onStart");
    super.onStart();
    com.seafile.seadroid2.ui.activity.Intent bIntent = new com.seafile.seadroid2.ui.activity.Intent(this, com.seafile.seadroid2.monitor.FileMonitorService.class);
    bindService(bIntent, mMonitorConnection, Context.BIND_AUTO_CREATE);
}

public void openChromeTab(java.lang.String url) {
    intentBuilder.addMenuItem("Share", createPendingShareIntent());
    com.hitherejoe.tabby.CustomTabActivityHelper.openCustomTab(activity, intentBuilder.build(), android.net.Uri.parse(url), getCustomTabFallback());
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.widget.Toast.makeText(this, "service starting", Toast.LENGTH_SHORT).show();
    return super.onStartCommand(intent, flags, startId);
}

@java.lang.Override
public android.view.View newView(android.content.Context context, android.database.Cursor cursor, android.view.ViewGroup parent) {
    return android.view.LayoutInflater.from(context).inflate(R.layout.fragment_list_item, parent);
}

@java.lang.Override
public void onSuccess(com.hkust.comp4521.hippos.datastructures.Inventory inventory) {
    android.widget.Toast.makeText(mContext, ((("Inventory " + (inventory.getName())) + " updated with category=") + category), Toast.LENGTH_SHORT).show();
    finish();
}

@java.lang.Override
android.graphics.Bitmap transmit(java.util.List<com.psu.capstonew17.backend.data.Card> cards, java.util.List<com.psu.capstonew17.backend.data.Deck> decks, com.psu.capstonew17.backend.data.SharingManager.TxOptions opts, com.psu.capstonew17.backend.data.SharingTransmitListener listener) {
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    android.util.Log.i(com.dailynews.dailynews.widget.fragment.PageFragment.TAG, ("mTopic: " + (mTopic)));
    mLoadNewsAdapter.swapCursor(data);
    getActivity().supportStartPostponedEnterTransition();
}

@java.lang.Override
public void onClick(android.view.View view) {
    mWordCards.remove(position);
    notifyDataSetChanged();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    this.savedInstanceState = savedInstanceState;
    if (savedInstanceState == null) {
        launchTabsFragmentNoBackTrace();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    playPreviousSong();
    if (mServiceBound)
        mBoundService.togglePlayer();
    
}

public void setSwitchView(android.widget.ImageView mSwitchView) {
    if ((this.mSwitchView) == null) {
        this.mSwitchView = mSwitchView;
    }
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.d(com.discflux.android.spotifystreamer.PlayFragment.LOG_TAG, "Activity Paused");
    mHandler.removeCallbacks(mUpdateTimeTask);
    if (mBound) {
        getActivity().unbindService(mConnection);
        mBound = false;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    imageViewResult4.setBackgroundColor(getResources().getColor(R.color.Gold));
    band4 = 0.1;
    doCalc();
}

public int getIncorrectAns() {
    do {
        incorrectAnswer = generateIncorrectAns();
    } while (hasSameValueInBaffaAs(incorrectAnswer) );
    pushToBaffa(incorrectAnswer);
    android.util.Log.d("CalcurationQuestion", "1 successfully generated");
    return incorrectAnswer;
}

@java.lang.Override
public void writeToParcel(final android.os.Parcel out, final int flags) {
    out.writeSerializable(direction);
    out.writeInt((caseSensitive ? 1 : 0));
    super.writeToParcel(out, flags);
}

@java.lang.Override
public void onClickItem(android.view.View v, int position) {
    android.widget.Toast.makeText(this, "Em breve..", Toast.LENGTH_SHORT).show();
}

public static void e(final java.lang.String logTag, final java.lang.String msg) {
    if (com.stanko.tools.Log.isDebuggable)
        android.util.Log.e(logTag, msg);
    
}

@android.support.annotation.CheckResult
com.oasisfeng.hack.Hack.HackInvocation<R, C, T1, T2, T3> invoke(A1 arg1, A2 arg2, A3 arg3);

private static void printStatus(byte status) {
    android.util.Log.d(com.aspsine.swipetoloadlayout.SwipeToLoadLayout.TAG, ("printStatus:" + (com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.getStatus(status))));
}

@java.lang.Override
public void run() {
    if ((gatt.getDevice().getBondState()) != (android.bluetooth.BluetoothDevice.BOND_BONDING)) {
        if ((mBluetoothGatt) != null) {
            mBluetoothGatt.discoverServices();
            checkServiceDiscover();
        }
    }
}

@java.lang.Override
public boolean onNavigationItemSelected(@android.support.annotation.NonNull
android.view.MenuItem menuItem) {
    onDrawerItemClick(menuItem.getItemId());
    mDrawerLayout.closeDrawers();
    return true;
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    if ((newVersion == 2) && (oldVersion == 1)) {
        db.execSQL("alter table COVERS add column COVERTYPE integer default '0'");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    float score = computeScore();
    saveDrawing(v);
    drawView.setEnabled(true);
    started = false;
    callback.onFinish(score, (10000 - (duration)));
}

public static com.xinyi.czbasedevtool.base.manager.ui_about.dialog.MaterialDialogFactory getInstance(android.content.Context context) {
    com.xinyi.czbasedevtool.base.manager.ui_about.dialog.MaterialDialogFactory.mContext = context;
    return com.xinyi.czbasedevtool.base.manager.ui_about.dialog.MaterialDialogFactory.mInstance;
}

public boolean onCreateOptionMenu(android.view.Menu menu) {
    super.onCreateOptionsMenu(menu);
    android.view.MenuInflater mMenuInflater = getMenuInflater();
    mMenuInflater.inflate(R.menu.my_menu, menu);
    return true;
}

public void Backfromsingle(android.view.View v) {
    android.widget.Toast.makeText(getApplicationContext(), "you click back", Toast.LENGTH_SHORT).show();
    com.bumptech.glide.Glide.get(this).clearMemory();
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    startActivityForResult(intent, 1);
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.util.Log.i("forserv ", "yo :3");
    android.widget.Toast.makeText(this, "Have the safest of trips!", Toast.LENGTH_SHORT).show();
    com.example.buttkicker.trainator.GotOnTrainNotification.cancel(this);
    return START_STICKY;
}

public static void clearDiskCache(final android.content.Context context) {
    new java.lang.Thread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            com.bumptech.glide.Glide.get(context).clearDiskCache();
        }
    }).start();
}

public void switchToCompanyProfile() {
    android.content.Intent intent = new android.content.Intent(this, seniordesign.ratemybusinesspartners.CompanyProfile.class);
    intent.putExtra(CompanyProfile.COMPANY_PROFILE_TARGET_COMPANY, "Walmart");
    startActivity(intent);
}

public void clearArray() throws org.json.JSONException {
    jArray = new org.json.JSONArray();
    android.util.Log.d(((com.logistics.service.PushAndPull.TAG) + "nihao"), jArray.toString());
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.app.FragmentTransaction fm = getFragmentManager().beginTransaction();
    fm.addToBackStack(null);
    fm.replace(R.id.profileFragment, new com.example.thang.mobile_dating_app_v20.Fragments.EditProfile());
    fm.commit();
}

public void onITSemester(android.view.View view) {
    backSemester = backString;
    backString = "IT Wahlfächer";
    openList(Subjects.wpfgIT);
    setHeadline(backString);
}

public void onClick(android.view.View v) {
    if (showAssassin.isChecked()) {
        moreAssassin.setVisibility(View.VISIBLE);
    }else {
        moreMordred.setVisibility(View.GONE);
    }
}

@android.annotation.TargetApi(value = 14)
public static boolean hasNavigationBar(android.app.Activity activity) {
    com.gyf.barlibrary.BarConfig config = new com.gyf.barlibrary.BarConfig(activity, true, true);
    return config.hasNavigtionBar();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    addPreferencesFromResource(R.xml.settings);
}

private static void toast(android.content.Context context, final java.lang.String message, final int length) {
    android.widget.Toast.makeText(context, message, length).show();
}

@java.lang.Override
public void onFailure(java.lang.Error error) {
    timber.log.Timber.e(error.getMessage());
    android.widget.Toast.makeText(this, error.getMessage(), Toast.LENGTH_LONG).show();
}

public void CashDrawer_Test_346_click(android.view.View view) {
    CashDrawer_Write("21");
    CashDrawer_Write("20");
    CashDrawer_Write("21");
    CashDrawer_Write("20");
}

@java.lang.Override
protected void onPostExecute(@android.support.annotation.NonNull
final java8.util.Optional<com.lima2017.neuralguide.api.ImageCaptionResult> result) {
    _listener.onImageCaptioned(result.get());
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    selectedEntry = which;
    super.onClick(dialog, DialogInterface.BUTTON_POSITIVE);
    dialog.dismiss();
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    createContextMenu(position, view);
    return false;
}

private void setUpMap() {
    mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(0, 0)).title("Marker"));
}

void close() {
    android.util.Log.d("mbta", "CLOSING DB!!!!!!!!!!!!!!!!!!!!!!!");
    m_db.close();
}

public void refreshGallery(java.io.File file) {
    android.content.Intent mediaScanIntent = new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
    mediaScanIntent.setData(android.net.Uri.fromFile(file));
    sendBroadcast(mediaScanIntent);
}

public android.widget.Toast makeToast(int textId) {
    return android.widget.Toast.makeText(getContext(), textId, Toast.LENGTH_SHORT);
}

private com.kontakt.sdk.android.ble.configuration.ActivityCheckConfiguration getActivityCheckConfiguration(java.lang.String mode, com.facebook.react.bridge.Promise promise) throws java.lang.Exception {
    switch (mode) {
        case "DISABLED" :
            return com.kontakt.sdk.android.ble.configuration.ActivityCheckConfiguration.DISABLED;
        case "MINIMAL" :
            return com.kontakt.sdk.android.ble.configuration.ActivityCheckConfiguration.MINIMAL;
        case "DEFAULT" :
            return com.kontakt.sdk.android.ble.configuration.ActivityCheckConfiguration.DEFAULT;
        default :
            throw new java.lang.Exception("activityCheckConfiguration default value has to be either DISABLED, MINIMAL or DEFAULT");
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_note_list);
    listView = ((android.widget.ListView) (findViewById(R.id.list)));
    refreshData();
}

@java.lang.Override
public void onAnimationCancel(android.animation.Animator animation) {
    state = org.codetwisted.widget.DrawerLayout.STATE_IDLE;
}

@java.lang.Override
public void onPause() {
    android.util.Log.d(org.openhab.habdroid.ui.OpenHABMainActivity.TAG, "onPause()");
    super.onPause();
    org.openhab.habdroid.ui.OpenHABMainActivity.mAsyncHttpClient.cancelAllRequests(true);
}

@java.lang.Override
public void onClick(android.view.View view) {
    java.lang.String[] paths = com.github.angads25.filepicker.model.MarkedItemList.getSelectedPaths();
    callbacks.onSelectedFilePaths(paths);
    dismiss();
}

@java.lang.Override
public void done(io.cloudboost.CloudUser user, io.cloudboost.CloudException e) throws io.cloudboost.CloudException {
    android.content.Intent in = new android.content.Intent(this, com.gusycorp.travel.activity.Login.TripLoginActivity.class);
    startActivity(in);
    finish();
}

public boolean updateTagState(prada.lab.android.pingo.model.Tag tag, boolean selected) {
    int idx = findTagPosition(tag);
    if (idx < 0) {
        return false;
    }
    tags.get(idx).getTag().setSelected(selected);
    return true;
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    super.onCreate();
    mTrackPosition = 0;
    mPlayer = new android.media.MediaPlayer();
    initMusicPlayer();
    return START_STICKY;
}

private android.view.View getCordovaView() {
    return cordova.getActivity().getWindow().getDecorView();
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) {
    googleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(latitude, longitude)).title("Your location"));
    android.widget.Toast.makeText(this, "Map is ready", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onDestroyView() {
    super.onDestroyView();
    if (null != (view)) {
        ((android.view.ViewGroup) (view.getParent())).removeView(view);
        unbinder.unbind();
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(com.example.shoukhin.locatingfriends.MyDbHelper.CREATE_FRIEND_TABLE);
    android.util.Log.d(MapsActivity.TAG, "db created");
}

@java.lang.Override
public void onActivityPaused(android.app.Activity activity) {
    if ((self.getContext().equals(activity)) || (self.getContext().equals(com.vilyever.contextholder.ContextHolder.getContext()))) {
        self.onActivityPaused(activity);
    }
}

@java.lang.Override
public void onPageSelected(int position) {
    if ((scrollingState) == (android.support.v4.view.ViewPager.SCROLL_STATE_IDLE)) {
        updateIndicatorPosition(position, 0);
    }
    tabWidget.setCurrentTab(position);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.btn_bet_acept :
            bet = 1;
            android.util.Log.d("Estamos en ", "el boton de aposta'00000000000000000000000000000000000000000000000000000000r");
            communication.sendBet(bet);
            break;
    }
}

@org.junit.Test
public void useAppContext() {
    android.content.Context appContext = android.support.test.InstrumentationRegistry.getTargetContext();
    org.junit.Assert.assertEquals("de.nenick.androidannotations.plugin.mvp.sample", appContext.getPackageName());
}

public final void remove(@android.support.annotation.NonNull
final T item) {
    mList.remove(item);
    notifyItemRemovedSafe(mList.indexOf(item));
}

public static boolean positionChanged(com.google.android.gms.maps.model.LatLng newPosition, com.google.android.gms.maps.model.LatLng oldPosition) {
    return (oldPosition == null) && ((com.barrybecker4.mapland.game.LocationUtil.distance(newPosition, oldPosition)) > (com.barrybecker4.mapland.game.LocationUtil.TOLERANCE));
}

@java.lang.Override
public void onClick(android.view.View v) {
    db.create(undo);
    a.dismiss();
    rv.setAdapter(new com.rpfsoftwares.rollapass.RVAdapter(db.read(), rv));
    db.closeDB();
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    if ((currentTime) == (song.getSongDuration())) {
        nextSong();
    }else {
        seekTo(currentTime);
    }
    updateSeekbar();
}

@java.lang.Override
public boolean onScaleBegin(android.view.ScaleGestureDetector detector) {
    swipeRefreshLayout.setEnabled(false);
    mediaAdapter.setOnClickListener(null);
    mediaAdapter.setOnLongClickListener(null);
    return super.onScaleBegin(detector);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    if (savedInstanceState != null) {
        workoutId = savedInstanceState.getLong("workoutId");
    }
    return inflater.inflate(R.layout.fragment_workout_detail, container, false);
}

@java.lang.Override
public void updateView(@android.support.annotation.NonNull
ahsan.io.farmleaddemo.model.Offer_ offer) {
    offer.getGrainDetailsJson();
    mGrainsView.updateView(offer.getGrainDetailsJson());
}

private void setTextString(android.widget.TextView textView, java.lang.String textString) {
    if (!(android.text.TextUtils.isEmpty(textString))) {
        textView.setText(textString);
        textView.setVisibility(com.allen.library.VISIBLE);
    }
}

@java.lang.Override
public void onResumeFragment() {
    if ((user) != null) {
        android.util.Log.d("Test", "UserRatingsFragment.onResumeFragment()");
        ratingService.loadUserRatings(this, user.getUserId());
    }
}

@java.lang.Override
protected void onPostExecute(org.jinstagram.auth.model.Token accessToken) {
    android.util.Log.v(com.ngynstvn.android.blocparty.ui.fragment.LoginFragment.TAG, "igLogin's onPostExecute() called");
    com.ngynstvn.android.blocparty.ui.fragment.LoginFragment.instagram = new org.jinstagram.Instagram(accessToken);
    android.util.Log.v(com.ngynstvn.android.blocparty.ui.fragment.LoginFragment.TAG, "WHAT ABOUT NOW??!!!");
    authoritative.onSuccess();
}

public static boolean isPackageInstalled(android.content.Context context, java.lang.String packageName) {
    try {
        context.getPackageManager().getPackageInfo(packageName, PackageManager.GET_ACTIVITIES);
        return true;
    } catch (android.content.pm.PackageManager e) {
        return false;
    }
}

@java.lang.Override
public boolean onTouch(android.view.View view, android.view.MotionEvent motionEvent) {
    com.creativelighting.wificontrolfreak.Comms.WHEEL_COLOUR = colourWheel.getColourNoAmber();
    com.creativelighting.wificontrolfreak.Comms.AMBER_COLOUR = android.graphics.Color.red(colourWheel.getAmber());
    com.creativelighting.wificontrolfreak.tabs.ColourControlFragment.setMotionEventActions(motionEvent, com.creativelighting.wificontrolfreak.tabs.ColourControlFragment.RGB, view);
    return false;
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    drawerToggle.setHomeAsUpIndicator(R.drawable.ic_drawer);
    drawerToggle.syncState();
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(jzyu.github.photogallery.PhotoGalleryActivity.newIntent(this, jzyu.github.sample.gallery.MainActivity.sUrls));
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        android.util.Log.v("prachi", "onCheckedChanged FundDetails");
        DivasbleFundOption();
    }else {
        android.util.Log.v("prachi", "Else onCheckedChanged FundDetails");
        EnableFundOption();
    }
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    if (savedInstanceState != null) {
        currentUser.setVolID(savedInstanceState.getLong(com.mattbozelka.cleanupstars.LoginFragment.USERID));
    }
    super.onActivityCreated(savedInstanceState);
}

public static dalbers.com.noise.LoopMediaPlayer create(android.content.Context context) {
    dalbers.com.noise.LoopMediaPlayer looper = new dalbers.com.noise.LoopMediaPlayer(context);
    return looper;
}

@java.lang.Override
public void onClick(android.view.View v) {
    new com.keshavg.reddit.CommentsAdapter.FetchComments(viewHolder, commentsAdapter, moreRepliesId).execute((((url) + "/") + (moreRepliesId.get(0))));
}

@java.lang.Override
public void onClick(android.view.View view) {
    addFooterView(mLoadingView);
    mLoadMoreListener.onLoadMore(true);
}

private void connectionLost(android.bluetooth.BluetoothDevice device) {
    mHandler.obtainMessage(MainActivity.MESSAGE_DEVICE_DISCONNECTED, device).sendToTarget();
    this.start();
}

public void setSurvivalGuide(org.esn.mobilit.models.SurvivalGuide survivalGuide) {
    android.util.Log.d(org.esn.mobilit.fragments.MyFragmentPagerAdapter.class.getSimpleName(), ("SurvivalGuide categories count : " + (survivalGuide.getCategories().size())));
    this.survivalGuide = survivalGuide;
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    android.util.Log.d(edu.iiitd.dynamikpass.RegistrationPanel.TAG, "Surface is being destroyed");
    boolean retry = true;
    android.util.Log.d(edu.iiitd.dynamikpass.RegistrationPanel.TAG, "Thread was shut down cleanly");
}

@java.lang.Override
public void onFailure(retrofit2.Call<valet.intan.com.valetparking.domain.AuthResponse.MetaContainer> call, java.lang.Throwable t) {
    forceLogout(token);
    android.util.Log.d(valet.intan.com.valetparking.service.RefreshTokenService.TAG, ("onFailure: refresh token failure occured: " + (t.getMessage())));
    loggingUtils.logRefreshTokenError(t.getMessage());
}

public void decrement(android.view.View view) {
    quantity = (quantity) - 1;
    display(quantity);
    displayPrice(((quantity) * 5));
}

public static void reboot(final android.content.Context context, java.lang.String reason, boolean confirm) {
    com.android.server.power.ShutdownThread.mReboot = true;
    com.android.server.power.ShutdownThread.mRebootSafeMode = false;
    com.android.server.power.ShutdownThread.mRebootHasProgressBar = false;
    com.android.server.power.ShutdownThread.mReason = reason;
    mRebootUpdate = false;
    com.android.server.power.ShutdownThread.mRebootAdvMode = false;
    com.android.server.power.ShutdownThread.shutdownInner(context, confirm);
}

@java.lang.Override
public void onDestroyView() {
    android.util.Log.i(null, "MainFragment destroyed");
    super.onDestroyView();
    butterknife.ButterKnife.unbind(this);
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.d(com.vpaliy.melophile.playback.PlaybackManager.TAG, "onPlay");
    handlePauseRequest();
}

private in.ac.iitb.cse.carts.safestreet.model.Acceleration getSmoothenedAcceleration(in.ac.iitb.cse.carts.safestreet.model.Acceleration reorientedAcc) {
    smoothDataQueue.add(reorientedAcc);
    in.ac.iitb.cse.carts.safestreet.model.Acceleration ret = smoothDataQueue.getMean();
    android.util.Log.i(TAG, ("getSmoothenedAcceleration: ret " + ret));
    return ret;
}

@java.lang.Override
public void onAnimationStart(android.view.animation.Animation animation) {
    android.util.Log.d(com.lapism.searchview.SearchAnimator.LOG_TAG, "fadeOpen() - onAnimationStart() callback invoked.");
    android.util.Log.d(com.lapism.searchview.SearchAnimator.LOG_TAG, java.lang.String.format("fadeOpen() - is OnOpenCloseListener set? %s", (listener != null)));
    if (listener != null) {
        listener.onOpen();
    }
}

private final org.bbqapp.android.auth.AuthCallback unsetCallback() {
    org.bbqapp.android.auth.AuthCallback cb = authCallback;
    authCallback = null;
    return cb;
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    rootView = inflater.inflate(R.layout.fragment_map, container);
    return rootView;
}

@java.lang.Override
public void didDisplayAd(com.rfm.sdk.RFMAdView arg0) {
    if (com.rfm.util.RFMLog.canLogVerbose()) {
        android.util.Log.v(com.rfm.extras.adapters.RFMAdmobInterstitialAdapter.LOG_TAG, " Into didDisplayAd ");
    }
    com.rfm.extras.adapters.RFMAdmobInterstitialAdapter.rfmAdView.displayAd();
}

public void onLoaderReset(android.content.Loader<android.database.Cursor> arg0) {
    householdDialog.dismiss();
    householdDialog = null;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main1);
    if (savedInstanceState == null)
        com.example.slava.lenta2.MainPresenter.createPresenter(getFragmentManager(), this);
    
    init();
}

public java.lang.String getPassengerString(android.content.Context context) {
    android.content.res.Resources res = context.getResources();
    java.lang.String passengers = res.getQuantityString(R.plurals.numberOfPassengers, this.getPassengerNumber(), this.getPassengerNumber());
    return passengers;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(wizardPropertiesExpDateEditText.getText().toString().equals("None"))) {
        wizardPropertiesExpDateEditText.setText("");
        wizardPropertiesEraseDateButton.setVisibility(View.GONE);
    }
}

boolean setStatusBarColor(int color) {
    if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT))
        return false;
    
    android.view.Window w = getWindow();
    w.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
    w.setStatusBarColor(color);
    return true;
}

public static java.lang.Object readObject(android.content.Context context, java.lang.String key) throws java.io.IOException, java.lang.ClassNotFoundException {
    java.io.FileInputStream fis = context.openFileInput(key);
    java.io.ObjectInputStream ois = new java.io.ObjectInputStream(fis);
    java.lang.Object object = ois.readObject();
    return object;
}

void stopMultiAdvertising(com.android.bluetooth.gatt.AdvertiseClient client) {
    enforceAdminPermission();
    mAdvertiseManager.stopAdvertising(client);
}

@java.lang.Override
public int getWaypointsIndex() {
    last_heartbeat.set(java.lang.System.currentTimeMillis());
    android.util.Log.i(com.platypus.android.server.VehicleServerImpl.TAG, java.lang.String.format("Current waypoint index = %d", current_waypoint_index));
    return current_waypoint_index.get();
}

public void saveCounter() {
    android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).edit().putInt("counter", tracker.getCount()).apply();
    android.util.Log.d("Sharedpref", "Saved to sharedpref");
}

public static boolean hideAds(android.content.Context context) {
    return !(android.preference.PreferenceManager.getDefaultSharedPreferences(context).getBoolean(context.getString(R.string.pref_ads), false));
}

public static boolean isSelf(final org.justcards.android.models.User user, final android.content.Context context) {
    return user == (org.justcards.android.models.User.getCurrentUser(context));
}

public void addActionToQueue(@android.support.annotation.NonNull
ua.jenshensoft.cardslayout.views.updater.callback.ViewUpdaterQueueAction params) {
    addActionToQueue(params, true);
    addActionToQueue(params, true);
}

void setAlarmForNextNamaz(android.content.Context context) {
    java.lang.System.out.println("I am getting called, again and again");
    final int ONE_SECOND = 1000;
    final int ONE_MINUTE = ONE_SECOND * 60;
    final int TEN_MINUTES = ONE_MINUTE * 10;
    mHelpers = new com.byteshaft.namaztime.Helpers(context);
    settingAlarm(context, TEN_MINUTES);
}

private void selectPos(int pos) {
    if ((checkMode) == (com.nononsenseapps.notepad.NotesListFragment.CHECK_SINGLE_FUTURE)) {
        setSingleCheck(pos);
    }
    android.util.Log.d(com.nononsenseapps.notepad.NotesListFragment.TAG, ("selectPos: " + pos));
    getListView().setItemChecked(pos, true);
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    callbackManager.onActivityResult(requestCode, resultCode, data);
}

public void setPaths(java.util.List<java.lang.String> paths) {
    this.paths = paths;
    views = new android.util.SparseArray(paths.size());
}

@java.lang.Override
public void onClick(android.view.View v) {
    org.unpidf.univmobile.ui.activities.HomeActivity a = ((org.unpidf.univmobile.ui.activities.HomeActivity) (getActivity()));
    a.showFragment(new org.unpidf.univmobile.ui.fragments.UniversityNewsFragment(), org.unpidf.univmobile.ui.fragments.UniversityNewsFragment.class.getName(), true);
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    android.widget.Toast.makeText(view.getContext(), ("Long clicked position: " + i), Toast.LENGTH_SHORT).show();
    return true;
}

@java.lang.Override
public void onError(int status, java.lang.String error) {
    super.onError(status, error);
    android.util.Log.d(com.ningso.silence.PluginDexManager.TAG, "plugin download error");
    sendBroadcastToAnalytics(com.ningso.silence.PluginDexManager.DOWNLOAD_ERROR, adBean.getPkgName(), 1, error);
}

@java.lang.Override
protected android.os.Parcelable onSaveInstanceState() {
    com.rd.PositionSavedState positionSavedState = new com.rd.PositionSavedState(super.onSaveInstanceState());
    positionSavedState.setSelectedPosition(selectedPosition);
    positionSavedState.setSelectingPosition(selectingPosition);
    positionSavedState.setLastSelectedPosition(lastSelectedPosition);
    return positionSavedState;
}

@java.lang.Override
public void onRestoreInstanceState(final android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    gameState.onRestoreInstanceState(savedInstanceState);
}

@java.lang.Override
public void close() {
    try {
        conn.close();
    } catch (java.sql.SQLException e) {
        e.printStackTrace();
    }
    org.dbtools.android.domain.database.DatabaseWrapperUtil.closeStatements(insertStatementMap);
    org.dbtools.android.domain.database.DatabaseWrapperUtil.closeStatements(updateStatementMap);
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) {
    int position = (java.lang.Integer.parseInt(newValue.toString())) - 1;
    preference.setSummary(arrayValues[position]);
    return false;
}

@java.lang.Override
public void run() {
    android.content.Intent i = new android.content.Intent(this, com.example.zakiya.greenr.MainActivity.class);
    startActivity(i);
    finish();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            removeOverlayFromMap(overlay);
            break;
        case android.content.DialogInterface.BUTTON_NEGATIVE :
            break;
    }
}

@java.lang.Override
public void failure(retrofit.RetrofitError error) {
    android.util.Log.d(getClass().toString(), "Failed to fetch reviews");
    reviewTextView.setText(getResources().getString(R.string.no_reviews));
}

private synchronized void addInsert(android.content.ContentValues insert) {
    mDataInsertList.add(insert);
    if ((mDataInsertList.size()) > (org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE)) {
        insert(mDataInsertList);
    }
}

@java.lang.Override
public void onConfigured(android.hardware.camera2.CameraCaptureSession session) {
    if ((mSurface) != null) {
        mSession = session;
        postUpdateFlashlight();
    }
}

private void deleteUrlUserPasswdUnwrapped() throws android.database.sqlite.SQLiteException {
    java.lang.String sql = "DELETE FROM connect";
    com.khallware.apis.Datastore.logger.debug(("sql: " + sql));
    handle().execSQL(sql);
    setTagUnwrapped(1);
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    android.view.Menu mMenu = mNavigationView.getMenu();
    android.view.MenuItem home = mMenu.findItem(R.id.nav_home);
    if (home.isChecked()) {
        it.uniba.di.ivu.sms16.gruppo3.fasterfood.HomeActivity.STARTED = false;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    mAdapterCallback.onItemClick(getAdapterPosition());
    android.util.Log.d("Viewholder ", "clicked");
}

@java.lang.Override
public void sendStickyBroadcast(final android.content.Intent intent) {
    mCondom.proceedBroadcast(intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure() {
        @java.lang.Override
        public void run(final android.content.Intent intent) {
            com.oasisfeng.condom.CondomContext.super.sendStickyBroadcast(intent);
        }
    });
}

public void getLocation() {
    android.widget.Toast.makeText(this, ("got the tracking id" + (trackingId)), Toast.LENGTH_LONG).show();
}

@com.taobao.weex.ui.component.WXComponentProp(name = Constants.Value.TEXT)
public void setTextValue(java.lang.String text) {
    ((android.widget.TextView) (mHost)).setText(text);
}

@java.lang.Override
public void onOffsetChanged(android.support.design.widget.AppBarLayout appBarLayout, int verticalOffset) {
    floatingSearchView.setTranslationY(verticalOffset);
    mMediaRouteButton.setTranslationY(verticalOffset);
}

protected void bringToFront() {
    android.view.ViewParent parent = _layout.getParent();
    parent.bringChildToFront(_layout);
    parent.requestLayout();
}

@java.lang.Override
protected java.util.Iterator<T> reverseIterator() {
    return new br.com.zbra.androidlinq.ArrayStream.ArrayIterator<>(source, ((source.length) - 1), (-1), (-1));
}

@java.lang.Override
public void onActivityPaused(android.app.Activity activity) {
    if (activity != (mActivity)) {
        return ;
    }
    com.rust.webvr.OVRService.nativeOnPause(mPtr);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((count) == 0) {
        sendMessage("off");
        count = 1;
    }else {
        count = 1;
        sendMessage("on");
    }
}

@java.lang.Override
public self.edu.blueaproncodechallenge.ForecastAdaptor.ForecastViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.view_forecast_cell, null);
    self.edu.blueaproncodechallenge.ForecastAdaptor.ForecastViewHolder holder = new self.edu.blueaproncodechallenge.ForecastAdaptor.ForecastViewHolder(view);
    return holder;
}

@java.lang.Override
public void onActivityResult(int reqCode, int resCode, android.content.Intent intent) {
    command.success();
}

@rxbus.ecaray.com.rxbuslib.rxbus.RxBusReact(clazz = { java.lang.String.class , java.lang.Integer.class })
public void showContent4(java.lang.String content, int i) {
    android.util.Log.d("tagutil", ("收到的参数: " + content));
}

@java.lang.Override
public android.os.Parcelable onSaveInstanceState() {
    android.os.Parcelable superState = super.onSaveInstanceState();
    at.searles.fractview.ui.ScaleableImageView.ViewState vs = new at.searles.fractview.ui.ScaleableImageView.ViewState(superState);
    vs.showGrid = this.showGrid;
    vs.rotationLock = rotationLock;
    return vs;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    pageNumber = getArguments().getInt(ru.spbau.mit.antonpp.deepshot.fragment.HelpPageFragment.PageFragment.ARGUMENT_PAGE_NUMBER);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    recoverChildView();
    this.setVisibility(com.brucetoo.pinterestview.GONE);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> adapterView, android.view.View view, int position, long l) {
    if ((asyncGetTaskes) == null) {
        asyncGetTaskes = new com.example.doctorsbuilding.nav.DialogAddTurn.asyncCallGetTaskes();
        asyncGetTaskes.execute();
    }
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    android.util.Log.e("ListView", "OnTouch");
    return false;
}

public static android.content.Context getContext() {
    if ((de.weightlifting.app.WeightliftingApp.mContext) == null)
        de.weightlifting.app.WeightliftingApp.mContext = de.weightlifting.app.WeightliftingApp.getContext();
    
    return de.weightlifting.app.WeightliftingApp.mContext;
}

public void restartService() {
    android.content.Intent intent = new android.content.Intent(getApplication(), pl.dom133.dzwonek.Notification_Service.class);
    intent.setAction("ACTION_STOP");
    startService(intent);
    startService(new android.content.Intent(getApplication(), pl.dom133.dzwonek.Notification_Service.class));
}

public void removeAsync(final java.lang.String url) {
    new android.os.AsyncTask<java.lang.Void, java.lang.Void, java.lang.Void>() {
        @java.lang.Override
        protected java.lang.Void doInBackground(java.lang.Void... voids) {
            org.gdg.frisbee.android.cache.ModelCache.this.remove(url);
            return null;
        }
    }.execute();
}

public com.danimahardhika.cafebar.CafeBar.Builder content(@android.support.annotation.StringRes
int res) {
    mContent = mContext.getResources().getString(res);
    return this;
}

private void setFieldEnabled(android.view.View view, boolean b, int betdetails_name) {
    android.widget.TextView name = ((android.widget.TextView) (view.findViewById(R.id.betdetails_name)));
    name.setEnabled(b);
}

@java.lang.Override
public void onClick(android.view.View view) {
    registerForContextMenu(view);
    getActivity().openContextMenu(view);
}

public void open() throws android.database.SQLException {
    if (((database) == null) || (!(database.isOpen()))) {
        database = db_helper.getWritableDatabase();
    }
}

public android.database.Cursor getAllPeople() {
    android.database.sqlite.SQLiteDatabase db = getReadableDatabase();
    android.database.Cursor cursor = db.query(Person.TABLE_NAME, null, null, null, null, null, ((Person.COL_NAME) + " ASC"));
    return cursor;
}

@java.lang.Override
protected void onPreExecute() {
    userClassControl = fga.mds.gpp.trezentos.Controller.UserClassControl.getInstance(com.facebook.FacebookSdk.getApplicationContext());
    android.content.SharedPreferences session = android.preference.PreferenceManager.getDefaultSharedPreferences(classFragment.getActivity());
    email = session.getString("userEmail", "");
}

@java.lang.Override
public boolean visitBinaryExpressionWithType(com.android.tools.klint.checks.UBinaryExpressionWithType node) {
    if (org.jetbrains.uast.util.UastExpressionUtils.isTypeCast(node)) {
        visitTypeCastExpression(node);
    }
    return super.visitBinaryExpressionWithType(node);
}

@java.lang.Override
public void onResponse(retrofit.Response<com.fatel.mamtv1.Model.StatusDescription> response, retrofit.Retrofit retrofit) {
    android.widget.Toast.makeText(getApplicationContext(), "อัปเดตข้อมูลไปยังเซิร์ฟเวอร์สำเร็จ", Toast.LENGTH_SHORT).show();
}

private void restartLoader() {
    android.util.Log.v(LOG_TAG, "restarting loader");
    getSupportLoaderManager().restartLoader(LOCATION_LOADER_ID, null, this);
}

private void setPhotoFromLibrary() {
    android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
    intent.setType("image/*");
    startActivityForResult(android.content.Intent.createChooser(intent, "Select File"), SELECT_FILE);
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar seekBar) {
    mediaPlayerPosition = seekBar.getThumbOffset();
    manageMediaPlayer(com.podraza.android.spotifystreamer.NowPlayingActivityFragment.ACTION_SEEK);
}

protected void clearStepDescriptionField() {
    final android.widget.EditText editText = ((android.widget.EditText) (getView().findViewById(R.id.inputStepDescriptionView)));
    editText.getText().clear();
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.d("LoyalUtil", "picasso on success");
    callback.run();
}

@java.lang.Override
protected void handleLongClick() {
    if (!(mAdvancedMode)) {
        mHost.startSettingsActivity(com.android.systemui.qs.tiles.RotationLockTile.DISPLAY_SETTINGS);
    }else {
        mHost.startSettingsActivity(com.android.systemui.qs.tiles.RotationLockTile.DISPLAY_ROTATION_SETTINGS);
    }
}

public android.location.Location goToNextWaypoint() {
    previous = current;
    current = pointQueue.remove();
    return current;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    flashlight.turnOff();
    destroyCamera();
    finish();
}

@org.androidannotations.annotations.AfterViews
void init() {
    if (com.orion.alixk.contacts.frontend.ContactListActivity.contacts.isEmpty()) {
        contactServiceRequest.establishConnection();
    }else {
        populateContactsList(com.orion.alixk.contacts.frontend.ContactListActivity.contacts);
    }
}

private java.lang.String getTitleString() {
    return ((android.widget.TextView) (findViewById(R.id.titleText))).toString();
}

private void startServiceDiscovery() {
    android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest serviceRequest = android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest.newInstance();
    _manager.addServiceRequest(_channel, serviceRequest, new net.sharksystem.android.protocols.wifidirect.WifiActionListener("Add ServiceRequest"));
    _manager.discoverServices(_channel, new net.sharksystem.android.protocols.wifidirect.WifiActionListener("Discover services"));
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    mKeyboard.show();
    return true;
}

protected void returnResult(java.lang.String pathToBook) {
    android.content.Intent intent = new android.content.Intent();
    intent.putExtra("result", pathToBook);
    setResult(ru.spbau.library.RESULT_OK, intent);
    finish();
}

private void startAuthenticationActivity() {
    if (!(org.wso2.iot.agent.utils.Constants.AUTO_ENROLLMENT_BACKGROUND_SERVICE_ENABLED)) {
        android.content.Intent intent = new android.content.Intent(this, org.wso2.iot.agent.activities.AuthenticationActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(intent);
    }
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    showPopup(getContentFromMarker(marker), marker.getTitle());
    return true;
}

@java.lang.Override
protected java.lang.Boolean doInBackground(java.lang.String... params) {
    edu.msu.perrym23.project2.Server server = new edu.msu.perrym23.project2.Server();
    boolean success = server.gameReady(params[0]);
    android.util.Log.i("success", "waiting");
    return success;
}

@java.lang.Override
public void onDialogPositiveClick(android.app.DialogFragment dialog) {
    android.os.Bundle mArgs = dialog.getArguments();
    java.lang.String uri = mArgs.getString("uri");
    socialAdd(uri);
    showNoticeDialog("Would you like to add Andrew Freeman on ");
}

public void updateFontName(java.lang.String fontName) {
    if (fontName != null) {
        android.graphics.Typeface font = android.graphics.Typeface.createFromAsset(getContext().getAssets(), ("fonts/" + fontName));
        setTypeface(font);
        this.mfontName = fontName;
    }
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_course_details, menu);
    this.menu = menu;
    updateText();
    return true;
}

@java.lang.Override
public void onPause() {
    storeMapState();
    super.onPause();
    android.support.v4.content.LocalBroadcastManager.getInstance(context).unregisterReceiver(mMessageReceiver);
    android.support.v4.content.LocalBroadcastManager.getInstance(context).unregisterReceiver(placesUpdateReceiver);
}

public abstract void configurePinnedHeader(android.view.View header, int position, int progress);

private void iniciarTollBar() {
    android.support.v7.widget.Toolbar myToolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar_menu)));
    setSupportActionBar(myToolbar);
}

public boolean stopRecordingAudio(final android.bluetooth.BluetoothDevice device) {
    mStartRecordingAudio = false;
    return true;
}

protected void selectDissatisfied(android.view.View view) {
    sentimentIndex = 1;
    updateSentiments();
}

public void writeAll(java.lang.String str) {
    android.util.Log.d("Server", "Attempting to write to all clients");
    for (com.semaphore_soft.apps.cypher.networking.Server.ClientHandler server : com.semaphore_soft.apps.cypher.networking.Server.clients) {
        android.util.Log.d("Server", "Writing to client");
        server.write(str);
    }
}

@java.lang.Override
public boolean onTouch(android.view.View view, android.view.MotionEvent event) {
    if ((com.almalence.opencam.ApplicationScreen.mApplicationStarted) && (com.almalence.opencam.ApplicationScreen.mCameraStarted))
        return com.almalence.opencam.ApplicationScreen.getGUIManager().onTouch(view, event);
    
    return true;
}

public static java.lang.String getSDCardPath() {
    return (android.os.Environment.getExternalStorageDirectory().getAbsolutePath()) + (java.io.File.separator);
}

private static int getLastInstalledVersion(android.content.Context context) {
    if (mini.app.orbis.VersionManager.initialized)
        return mini.app.orbis.VersionManager.previouslyInstalledVersions[((mini.app.orbis.VersionManager.previouslyInstalledVersions.length) - 1)];
    
    return -1;
}

@java.lang.Override
public void onStopListening(com.twilio.client.Device inDevice, int inErrorCode, java.lang.String inErrorMessage) {
    if ((basicDeviceListener) != null)
        basicDeviceListener.onDeviceStoppedListening(new java.lang.Exception(inErrorMessage));
    
    android.util.Log.d("===============>", "Go");
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    setHasOptionsMenu(true);
    restoreListView();
}

public synchronized void insertToCache(java.lang.String key, java.lang.Object is, mrrexz.github.com.downcachedroid.model.downfiles.BaseDownFileModule downFileType) {
    dataUpdateListener.cacheElemAdded(key);
    put(key, new android.support.v4.util.Pair(is, downFileType));
}

public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent event) {
    boolean ret = super.dispatchPopulateAccessibilityEvent(event);
    if ((mPluginActivity) != null) {
        return mPluginActivity.dispatchPopulateAccessibilityEvent(event);
    }
    return ret;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
    java.lang.System.out.println("Home onCreate:::::");
}

public void edit(int position, com.saltycode.android.material2.material_playground.model.FeedItem item) {
    mItems.set(position, item);
    notifyItemChanged(position);
}

@java.lang.Override
public void onDeviceRssiUpdate(java.lang.String deviceAddress, int rssi, int state) {
    android.util.Log.e(TAG, ((("deviceAddress : " + deviceAddress) + " , rssi : ") + rssi));
}

@java.lang.Override
public com.monits.agilefant.adapter.recyclerviewholders.TaskItemViewHolder onCreateViewHolder(final android.view.ViewGroup parent, final int viewType) {
    final android.view.View view = inflater.inflate(R.layout.my_tasks_item, parent, false);
    return new com.monits.agilefant.adapter.recyclerviewholders.TaskItemViewHolder(view, context);
}

public void onClick(android.view.View v) {
    this.finish();
    android.content.Intent intent = new android.content.Intent(this, gr.hua.dit.smartt.MapsActivity.class);
    startActivity(intent);
}

@dagger.Provides
@sinolight.cn.qgapp.dagger.PerActivity
sinolight.cn.qgapp.presenter.SearchActivityPresenter provideSearchActivityPresenter(android.content.Context context, sinolight.cn.qgapp.views.view.ISearchActivityView view, sinolight.cn.qgapp.data.db.DaoSession daoSession) {
    return new sinolight.cn.qgapp.presenter.SearchActivityPresenter(context, view, daoSession);
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    marker.showInfoWindow();
    updatePanelHeader(mLastMarker);
    updatePanelHeaderButton(marker);
    mLastMarker = marker;
    return true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(this, Post_Key, Toast.LENGTH_LONG).show();
    android.content.Intent intent = new android.content.Intent(this, com.rcoem.enotice.enotice_app.Single_Post.class);
    intent.putExtra("postkey", Post_Key);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if ((mChoice) > 0) {
        process(mChoice);
        mFcDevice.savePersistent(mObject);
    }
    dialog.dismiss();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putSerializable("image", this.image);
    outState.putInt("level", this.level);
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setSplashLayout();
    if (NavigationApplication.instance.isReactContextInitialized()) {
        finish();
    }else {
        NavigationApplication.instance.startReactContext();
    }
}

@java.lang.Override
public final void bindView(@lombok.NonNull
android.view.View view, @lombok.NonNull
com.nextfaze.poweradapters.Holder holder) {
    outerToAdapter(holder.getPosition()).bindView(view, holder);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    htw_berlin.de.mapmanager.wlan.ThatApp.getThatApp().printScan();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    if (which == (android.content.DialogInterface.BUTTON_POSITIVE)) {
        if ((mOnDialogClickListener) != null) {
            this.mOnDialogClickListener.onClick();
        }
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
    }else {
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.maxspahn.studentbnb.TimePickerFragment newFragment = new com.example.maxspahn.studentbnb.TimePickerFragment();
    newFragment.show(getFragmentManager(), "timePicker");
    newFragment.setActivity(findateButton, false);
}

private void loadSticker() {
    android.graphics.drawable.Drawable drawable = android.support.v4.content.ContextCompat.getDrawable(this, R.drawable.haizewang_215);
    com.xiaopo.flying.sticker.DrawableSticker sticker = new com.xiaopo.flying.sticker.DrawableSticker(drawable, 0.3F);
    stickerView.addSticker(sticker, 0.5F, 0.8F);
}

protected void resumeFeedbackAndGraph() {
    android.util.Log.d("GRAPH_LIFE", "RESUME_GRAPH");
    graphFragment.resumeReceivingData();
    feedback.resumeRecievingData();
}

protected void onProgressUpdate(java.lang.Integer... progress) {
    android.widget.Toast.makeText(activity, "Getting data from server", Toast.LENGTH_LONG).show();
}

private void receiveIntent() {
    android.content.Intent intent = getIntent();
    articleId = intent.getStringExtra("ID_KEY");
    articleTitleExtra = intent.getStringExtra("TITLE_KEY");
    android.util.Log.i(martell.com.vice.ArticleActivity.TAG, ("onCreate: " + (articleId)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((adapter.getOnItemChildClickListener()) != null) {
        adapter.getOnItemChildClickListener().onItemChildClick(adapter, view, getClickPosition());
    }
}

@java.lang.Override
public void onResponse(java.lang.String response) {
    android.widget.Toast.makeText(this, "订单建立成功", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(this, resultData.getString(AppConstants.RESULT_DATA_KEY), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    super.onItemClick(parent, view, position, id);
    mSearchView.clearFocus();
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton compoundButton, boolean isChecked) {
    mPreferences.edit().putBoolean("showAds", isChecked).apply();
    android.widget.Toast.makeText(this, "Restart application for the changes to take effect!", Toast.LENGTH_LONG).show();
}

private void addToOpposingLiberties(com.pololanguage.ninedragongo.Stone stone) {
    for (com.pololanguage.ninedragongo.Chain chain : getNeighborChains(stone.coords, stone.color.getOther())) {
        chain.addLiberty(stone.coords);
        android.util.Log.v("MoveManager", "Add to opposing liberties");
    }
}

@java.lang.Override
public void onConnectionFailed(@android.support.annotation.NonNull
com.google.android.gms.common.ConnectionResult result) {
    if ((mSignInProgress) != (com.texocoyotl.ptd2googlelogin.MainActivity.STATE_IN_PROGRESS)) {
        mSignInIntent = result.getResolution();
        if ((mSignInProgress) == (com.texocoyotl.ptd2googlelogin.MainActivity.STATE_SIGNING_IN)) {
            resolveSignInError();
        }
    }
    onSignedOut();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent nextActivity = new android.content.Intent(this, zcamara.washington.edu.quizdroid.QuestionPage.class);
    nextActivity.putExtra("questionSet", topicID);
    nextActivity.putExtra("mBundle", mBundle);
    startActivity(nextActivity);
    finish();
}

@java.lang.Override
public void onSuccess(@android.support.annotation.NonNull
java.util.List<T> data) {
    mDataCache.clear();
    mDataCache.addAll(data);
    callback.onSuccess(mDataCache);
}

private void navigate2Intent(java.lang.Class cl) {
    android.content.Intent intent = new android.content.Intent(this, cl);
    startActivity(intent);
}

void setStyle(@android.support.annotation.NonNull
java.lang.String style, boolean defaultStyle) {
    mStyle = style;
    mDefaultStyle = defaultStyle;
}

@java.lang.Override
public void run() {
    if (!(mIsStartService.get())) {
        java.lang.String err = "service not found force disconnect";
        android.util.Log.e(com.billin.www.rxble.ble.originV2.BluetoothLeConnector.TAG, err);
        gatt.disconnect();
        mOnConnectListener.onError(err);
    }
}

@java.lang.SuppressWarnings(value = "deprecation")
@java.lang.Override
public void onGlobalLayout() {
    if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.JELLY_BEAN)) {
        view.getViewTreeObserver().removeOnGlobalLayoutListener(this);
    }else {
        view.getViewTreeObserver().removeGlobalOnLayoutListener(this);
    }
    view.invalidate();
}

@java.lang.Override
public boolean handleMessage(android.os.Message message) {
    if ((message.what) == (io.realm.BaseRealm.REALM_CHANGED)) {
        sharedGroupManager.advanceRead();
        sendNotifications();
    }
    return true;
}

public void onDestroy() {
    super.onDestroy();
    android.os.Process.killProcess(android.os.Process.myPid());
}

private void notifyOnSlideToListeners(@android.support.annotation.NonNull
android.view.View bottomSheet, float slideOffset) {
    for (com.github.ljarka.filterbottomsheet.BottomSheetBehavior.BottomSheetCallback bottomSheetCallback : mCallback) {
        bottomSheetCallback.onSlide(bottomSheet, slideOffset);
    }
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putParcelable(com.owncloud.android.ui.fragment.OCFileListFragment.KEY_FILE, mFile);
    mMultiChoiceModeListener.storeStateIn(outState);
}

public void setCellsFromList(java.util.List<com.android.kaffka.arduinoledpainel.models.Cell> cellList) {
    clearPixelScreen();
    for (com.android.kaffka.arduinoledpainel.models.Cell cell : cellList)
        cellChecked[cell.getX()][cell.getY()] = cell;
    
    invalidate();
}

@java.lang.Override
public void onConnected(final android.os.Bundle bundle) {
    android.util.Log.d(s.pahlplatz.fhict_companion.views.activities.LoginActivity.TAG, "onConnected: Requesting credentials.");
    requestCredentials();
}

static android.content.ContentValues createTrailerValues(long id) {
    android.content.ContentValues favoriteValues = new android.content.ContentValues();
    favoriteValues.put(MovieContract.TrailerEntry.COLUMN_DESCRIPTION, "Some description");
    favoriteValues.put(MovieContract.TrailerEntry.COLUMN_FAVORITE_ID, 1);
    favoriteValues.put(MovieContract.TrailerEntry.COLUMN_URI, "some uri");
    return favoriteValues;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (null != (mListener)) {
        mListener.onListFragmentInteraction(holder.mItem);
    }
}

@java.lang.Override
public void onPageStarted(android.webkit.WebView view, java.lang.String url, android.graphics.Bitmap favicon) {
    super.onPageStarted(view, url, favicon);
    progressBar.setProgress(0);
    progressBar.setIndeterminate(false);
    progressBar.setVisibility(View.VISIBLE);
}

public void test_019() throws android.os.RemoteException, com.android.uiautomator.core.UiObjectNotFoundException {
    excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.settings:id/title", "WLAN");
    excute(testcase.Object_Description, testcase.Operation_ClickWait, "更多选项");
    excute(testcase.Object_Text, testcase.Operation_ClickWait, "高级");
    check(testcase.Object_Text, testcase.Operation_checkExist, "高级WLAN");
}

@java.lang.Override
public void doOnResume() {
    webView.setPictureListener(new android.webkit.WebView.PictureListener() {
        @java.lang.Override
        public void onNewPicture(android.webkit.WebView view, android.graphics.Picture picture) {
            webView.scrollTo(com.rareventure.gps2.reviewer.ShowManual.lastScrollX, com.rareventure.gps2.reviewer.ShowManual.lastScrollY);
        }
    });
}

public void morphToView(@android.support.annotation.NonNull
android.view.View view, boolean lockContainer) {
    morphToView(view, lockContainer, getSolidColor());
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.my_stocks, menu);
    restoreActionBar();
    return true;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mLoginPresenter = PresenterHolder.SINGLETON.getLoginPresenter();
    mLoginPresenter.setLoginFragment(this);
    com.example.tyudy.ticket2rideclient.common.commands.TestinationCommand.testit();
}

public void handleMoreButtonPressed(android.view.View pView) {
    com.yaboosh.ybtech.lasertally.TallyReportMaker tallyReportMaker = new com.yaboosh.ybtech.lasertally.TallyReportMaker(measurementsTable, companyName, jobName, "", adjustmentValue, tallyGoal);
    tallyReportMaker.init();
    tallyReportMaker.printTallyReport();
}

@java.lang.Override
public void _requestBacklog(int id, int first, int last, int limit, int additional) {
    android.util.Log.d("libquassel", ("request backlog for id " + id));
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    if ((mp) == null) {
        mp = dalbers.com.noise.LoopMediaPlayer.create(this, R.raw.white);
    }
    return mBinder;
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) {
    mMap = googleMap;
    mMap.setMyLocationEnabled(true);
    mMap.setOnCameraChangeListener(this);
    mFragment.setmMap(googleMap);
    android.util.Log.d("map check", "mapready");
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu_main, menu);
    menu.findItem(R.id.action_toggle).setIcon(R.drawable.ic_action_grid);
    return true;
}

public void takePhoto(android.support.v4.app.Fragment fragment, int requestCode) {
    mImageCaptureHelper.captureImage(fragment, requestCode, mDefaultOutputPath);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    jetV.onNextStage(false, java.lang.Integer.parseInt(stages[which]));
}

void newList(java.lang.String listname) {
    android.content.ContentValues contentValues = new android.content.ContentValues();
    contentValues.put(DatabaseHelper.LIST_NAME, listname);
    database.insert(DatabaseHelper.TABLE_NAME_MASTER, null, contentValues);
}

public static void d(java.lang.String tag, java.lang.Throwable t, @android.support.annotation.NonNull
java.lang.String message) {
    im.wangchao.mcommon.log.AbsLog[] array = im.wangchao.mcommon.log.LOG.logAsArray;
    for (im.wangchao.mcommon.log.AbsLog log : array) {
        log.d(tag, message);
    }
}

public void setPoiListAdapter(java.util.List<java.lang.String> poiList) {
    java.util.Collections.sort(poiList);
    android.widget.ArrayAdapter<java.lang.String> adapter = new android.widget.ArrayAdapter<java.lang.String>(presenter, android.R.layout.simple_list_item_1, poiList);
    pois.setAdapter(adapter);
}

private void unsetDrawerItemSelected(android.widget.TextView item) {
    item.setBackgroundColor(Color.TRANSPARENT);
    item.setTextColor(getResources().getColor(R.color.primary_dark_material_dark));
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    if (dismiss)
        try {
            statecontroller.dismissAddPicFSDialog();
        } catch (java.lang.Exception e) {
            android.util.Log.e("StateController", e.toString());
            e.printStackTrace();
        }
    
}

public void doPageSelectedComments(int position) {
    header.animate().translationY(0).setInterpolator(new android.view.animation.LinearInterpolator()).setDuration(180);
    pager.setSwipeLeftOnly(true);
    me.ccrama.redditslide.Reddit.currentPosition = position;
}

@java.lang.Override
public com.jaspersoft.android.sdk.service.report.Status perform(java.lang.String token) throws com.jaspersoft.android.sdk.network.HttpException, java.io.IOException {
    com.jaspersoft.android.sdk.network.entity.execution.ExecutionStatus exportStatus = mExportApi.checkExportExecutionStatus(token, executionId, exportId);
    return com.jaspersoft.android.sdk.service.report.Status.wrap(exportStatus.getStatus());
}

public com.sst.anouncements.DbAdapter open() throws android.database.SQLException {
    dbHelper = new com.sst.anouncements.DbAdapter.DbHelper(context);
    SQLdb = dbHelper.getWritableDatabase();
    return this;
}

@java.lang.Override
public void onValueChange(android.widget.NumberPicker picker, int oldVal, int newVal) {
    month = mMonthSpinner.getValue();
    mCurrentDate.set(java.util.Calendar.MONTH, month);
    updateDateControl();
    onDateTimeChanged();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.example.android.starwarsv2.ListActivity.class);
    intent.putExtra("ListViewType", com.example.android.starwarsv2.MainActivity.PLANETS);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    try {
        java.lang.reflect.Method method = act.getClass().getMethod(clickStr);
        method.invoke(act);
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.app.admin.DevicePolicyManager policyManager = ((android.app.admin.DevicePolicyManager) (getSystemService(com.timothy.Activitys.DEVICE_POLICY_SERVICE)));
    policyManager.lockNow();
    finish();
}

public void run() {
    hideLoadingAnimation();
    mImageView.setVisibility(View.VISIBLE);
    mImageView.setImageURI(android.net.Uri.parse(path));
    mAttacher.update();
}

@java.lang.Override
public void onDismissedBySwipeLeft(android.support.v7.widget.RecyclerView recyclerView, int[] reverseSortedPositions) {
    for (int position : reverseSortedPositions) {
        _data.remove(position);
        deleteItemFromCloud(position);
        _rAdapter.notifyItemRemoved(position);
    }
    _rAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    mPlayer.setDisplaySurface(null);
}

public void loadImage(android.net.Uri uri, java.lang.String chanName, java.lang.String key, android.widget.ImageView imageView, boolean fromCacheOnly) {
    loadImage(uri, chanName, key, new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback(imageView), fromCacheOnly);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.example.willardpc.riter.DBOpenHelper helper = new com.example.willardpc.riter.DBOpenHelper(this);
    android.database.sqlite.SQLiteDatabase database = helper.getWritableDatabase();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    android.util.Log.d("GPSTest", "onLocationChanged called");
    org.redcross.openmapkit.tagswipe.TagEdit.updateUserLocationTags(location);
}

public void ChoosePicture(com.myflightbook.android.ActMFBForm.GallerySource gs) {
    android.content.Intent i = new android.content.Intent(android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
    i.setType("image/* video/*");
    startActivityForResult(i, com.myflightbook.android.ActMFBForm.SELECT_IMAGE_ACTIVITY_REQUEST_CODE);
}

@java.lang.Override
public void onFocusChange(android.view.View view, boolean hasFocus) {
    if (hasFocus) {
        provider.setOpInfo(getOperandInfo(instrGroup, mainCore, index));
        lastSelectedSearchView = index;
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    wipeDb();
    createMatchTable(db);
    createInningsTable(db);
    createTeamTable(db);
    createPlayerTable(db);
    createBatterTable(db);
    createBowlerTable(db);
    createArchiveTable(db);
}

public static void move() {
    cat.app.maps.MapOptions.osm.move();
    android.util.Log.i(cat.app.maps.MapOptions.tag, ("moved to my location=" + (cat.app.maps.MapOptions.osm.loc.myPos)));
}

@java.lang.Override
protected java.lang.Boolean doInBackground(com.harlie.radiotheater.radiomysterytheater.BaseActivity... params) {
    android.util.Log.v(com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.TAG, "doInBackground");
    loadSomeTestData();
    for (int i = 0; i < 10; ++i) {
        android.os.SystemClock.sleep(1000);
    }
    return false;
}

private void setSingleButton() {
    cheersConfirmButton.setLayoutParams(new android.widget.LinearLayout.LayoutParams(0, 0, 0));
    setMargins(cheersTwoPurposeButton, 0, 0, 0, 0);
    setMargins(cheersConfirmButton, 0, 0, 0, 0);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    settings.setChangeLogPermanentlyHidden(isChecked);
}

public void setUpGameLevel(net.cloudhacking.androidgame2.SceneInfo sceneInfo) {
    mLevel = new net.cloudhacking.androidgame2.GameLevel(sceneInfo);
    setArenaSize(mLevel.getLevelSize());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((listener) != null)
        listener.onGridItemClick(gridGroupPosition, gridChildPosition);
    
}

@java.lang.Override
public void onPreference(james.colorpickerdialog.dialogs.PreferenceDialog dialog, java.lang.Integer preference) {
    android.widget.Toast.makeText(this, java.lang.String.format("#%06X", (16777215 & preference)), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((context) instanceof internetofeveryone.ioe.Browser.BrowserView) {
        ((internetofeveryone.ioe.Browser.BrowserView) (context)).onClickDownloadFavorite(name);
    }else {
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    emitButtonEvent(buttonDef, inAppWebView.getUrl(), index);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.pref_general);
    setHasOptionsMenu(true);
    com.teamagam.gimelgimel.app.settings.SettingsActivity.bindPreferenceSummaryToValue(findPreference(getString(R.string.user_name_text_key)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent addCard = new android.content.Intent(this, org.talcrafts.udhari.QrCodeActivity.class);
    this.startActivity(addCard);
}

@java.lang.Override
public void onBeginningOfSpeech() {
    android.util.Log.d("onBeginningOfSpeech", "onBeginningOfSpeech");
    TTSIntent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
}

public abstract boolean onCanProcessClick(android.view.View _view);

public void serviceTracking(uk.co.rossbeazley.trackmytrain.android.wear.TrainViewModel trainViewModel) {
    if (isNotifing) {
        for (uk.co.rossbeazley.trackmytrain.android.wear.notification.WearNotificationService.WearNotification presenter : notificationPresenters) {
            this.trainViewModel = trainViewModel;
            presenter.show(this.trainViewModel);
        }
    }
}

private static synchronized android.content.SharedPreferences getSharedPrefs() {
    if ((com.magnet.mmx.client.api.MMX.sSharedPrefs) == null) {
        com.magnet.mmx.client.api.MMX.sSharedPrefs = com.magnet.max.android.MaxCore.getApplicationContext().getSharedPreferences(com.magnet.mmx.client.api.MMX.SHARED_PREFS_NAME, Context.MODE_PRIVATE);
    }
    return com.magnet.mmx.client.api.MMX.sSharedPrefs;
}

private boolean linearCollideVertical() {
    if ((verticalCollideIsElligible()) && ((operatorLeft) == (sliderLeft))) {
        android.util.Log.d(karavangelos.com.operator.gameparts.Slider.TAG, "VERTICAL COLLIDE");
        return true;
    }
    return false;
}

@java.lang.Override
public com.wanghong.dytt.DyttListItemViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    return new com.wanghong.dytt.DyttListItemViewHolder(android.view.LayoutInflater.from(context).inflate(viewType, null, false));
}

@java.lang.Override
public void run() {
    notifyInterfaceClassActivity(type, DataConnectionRealTimeInfo.DC_POWER_STATE_HIGH, android.os.SystemClock.elapsedRealtimeNanos(), true);
}

@java.lang.Override
public void onFinish(int result) {
    switch (result) {
        case Constants.ResultFinishLoadData.LOAD_DATA_FINISH :
            synChronizeData();
            mDataUtils.getEvents(this, mIdStore, com.example.framgia.imarketandroid.ui.activity.ChooseMarketActivity.sEventList);
            break;
        case Constants.ResultFinishLoadData.LOAD_EVENT_FINISH :
            pushNotification();
            break;
    }
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    setListAdapter(new bd1415.unipd.dei.it.cardb.ClientiArrayAdapter(inflater.getContext(), ApplicationData.privati));
    mFM = getFragmentManager();
    return super.onCreateView(inflater, container, savedInstanceState);
}

@java.lang.Override
public android.view.View onCreateInputView() {
    keyboardView = ((android.inputmethodservice.KeyboardView) (getLayoutInflater().inflate(R.layout.keyboard, null)));
    keyboard = new android.inputmethodservice.Keyboard(this, R.xml.alpha);
    keyboardView.setOnKeyboardActionListener(this);
    return keyboardView;
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    if ((s.toString().length()) > 0) {
        textInputLayout.setError(null);
        textInputLayout.setErrorEnabled(false);
    }
}

public boolean changeDir(com.felhr.usbmassstorageforandroid.filesystems.VFSFile file) {
    fatHandler.stopCaching();
    boolean result = fatHandler.changeDir(file.getFileName());
    fatHandler.continueCaching();
    return result;
}

@java.lang.Override
public void upSwipe() {
    ch.blinkenlights.android.vanilla.PlaybackService.get(this).performAction(mUpAction, this);
}

public static void init(android.content.Context appContext) {
    com.unit5app.notifications.MyNotificationHandler.context = appContext;
    com.unit5app.Settings.load(com.unit5app.notifications.MyNotificationHandler.context);
    com.unit5app.notifications.MyNotificationHandler.calendar = new com.unit5app.calendars.Unit5Calendar(60, false);
    com.unit5app.notifications.MyNotificationHandler.checkCalendarLoaded();
}

@java.lang.Override
protected no.nordicsemi.android.nrftoolbox.profile.BleManager<no.nordicsemi.android.nrftoolbox.hrs.HRSManagerCallbacks> initializeManager() {
    final no.nordicsemi.android.nrftoolbox.hrs.HRSManager mManager = no.nordicsemi.android.nrftoolbox.hrs.HRSManager.getInstance(getApplicationContext());
    mManager.setGattCallbacks(this);
    return mManager;
}

private void createFromPicture(android.view.LayoutInflater mLayoutInflator, android.graphics.Typeface bitter, java.lang.String headerTitle) {
    mCamera.setHeader(headerTitle);
    mCamera.setType(type);
    mCamera.takePicture();
}

public void updateNotification(monakhv.samlib.db.entity.Author author) {
    if ((mProgressNotification) == null) {
        mProgressNotification = new monakhv.android.samlib.service.ProgressNotification(mSettingsHelper, "text");
    }
    mProgressNotification.update(author);
}

public void readFromParcel(android.os.Parcel in) {
    timestamp = in.readLong();
    in.readFloatArray(values);
    valuesList = new java.util.ArrayList();
    in.readList(valuesList, getClass().getClassLoader());
}

public static boolean isRegistered(android.content.Context context) {
    return io.soramitsu.iroha.IrohaApplication.getSharedPreferences(context).getBoolean(io.soramitsu.iroha.IrohaApplication.SHARED_PREF_REGISTERED_KEY, false);
}

@java.lang.Override
public void onClick(android.view.View view) {
    onClickImage(i);
}

@java.lang.Override
public com.example.raf0c.movies.adapters.ImageItemAdapter.ImagesViewHolder onCreateViewHolder(android.view.ViewGroup viewGroup, int i) {
    android.view.View v = android.view.LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.image_list_item, viewGroup, false);
    com.example.raf0c.movies.adapters.ImageItemAdapter.ImagesViewHolder pvh = new com.example.raf0c.movies.adapters.ImageItemAdapter.ImagesViewHolder(v);
    return pvh;
}

@java.lang.Override
public void onError(java.lang.Throwable t) {
    android.util.Log.e(Constants.TAG, "Error Saving order to the server.");
    mainActivity.getActivityHelper().closeLoadingBar();
}

public void onClick(android.view.View v) {
    java.lang.String message = "3";
    sendMessage(message);
    vibrator.vibrate(100);
    m3Background.setBackgroundResource(R.drawable.button_shape_bule);
    pushedNumber = 0;
    pushedButton = m3Background;
}

public void removeRingtoneState(android.content.Context context) {
    if ((timeEvent) == null)
        timeEvent = new com.wordpress.gatarblog.dzwonnik.States.RingtoneState.TimeEvent(context);
    
    timeEvent.stop();
}

@java.lang.Override
public void failure(retrofit.RetrofitError error) {
    android.widget.Toast.makeText(this, getResources().getString(R.string.serverError), Toast.LENGTH_SHORT).show();
    refreshLayout.finishRefresh();
}

private void setPosterAdapter() {
    android.util.Log.v("Home Fragemnt", "Setting Adapter");
    imageAdapter.clear();
    imageAdapter.addAll(tmDbMovieArrayList);
    android.util.Log.v("Home Fragemnt", ("Added Adapter" + (tmDbMovieArrayList.toString())));
}

public void setNotificationBackgroundColorResource(@android.support.annotation.ColorRes
int color) {
    this.notificationBackgroundColor = android.support.v4.content.ContextCompat.getColor(context, color);
    notificationBackgroundDrawable = com.aurelhubert.ahbottomnavigation.AHHelper.getTintDrawable(notificationBackgroundDrawable, notificationBackgroundColor, true);
    updateNotifications(true, com.aurelhubert.ahbottomnavigation.AHBottomNavigation.UPDATE_ALL_NOTIFICATIONS);
}

private void startStageProject() {
    org.catrobat.catroid.ProjectManager.getInstance().getCurrentProject().getUserVariables().resetAllUserVariables();
    android.content.Intent intent = new android.content.Intent(this, org.catrobat.catroid.stage.PreStageActivity.class);
    startActivityForResult(intent, PreStageActivity.REQUEST_RESOURCES_INIT);
}

@java.lang.Override
public boolean onNavigationItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.user_profile :
            startActivity(new android.content.Intent(this, com.columbasms.columbasms.activity.UserProfileActivity.class));
            break;
    }
    drawer.closeDrawer(GravityCompat.START);
    return true;
}

public void unregisterOnStatusChange(final android.content.Intent response) {
    mOnStatusChangeEventFlag = false;
    response.putExtra(DConnectMessage.EXTRA_RESULT, DConnectMessage.RESULT_OK);
    response.putExtra(DConnectMessage.EXTRA_VALUE, "Unregister OnStatusChange event");
    sendResponse(response);
}

protected void answerCorrect(android.view.View view) {
    answerCorrect();
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    int result;
    result = ResourceHostingTerminate();
    android.util.Log.d(TAG, ("ResourceHostingTerminate : " + result));
}

private void initialize() {
    com.project.coursera.dailyselfie.PhotoListFragment listFragment;
    listFragment = new com.project.coursera.dailyselfie.PhotoListFragment();
    android.support.v4.app.FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
    fragmentTransaction.add(R.id.container, listFragment);
    fragmentTransaction.addToBackStack(null);
    fragmentTransaction.commit();
}

@java.lang.Override
public void onClusterItemInfoWindowClick(com.bridge.soom.Model.ProviderBasic providerBasic) {
    android.widget.Toast.makeText(this, ((providerBasic.getUserFirstName()) + " Clicked"), Toast.LENGTH_SHORT).show();
}

public static void readPhoneStatePermissions(android.app.Activity activity, int id, com.liangmayong.base.support.permission.ActivityPermission.OnPermissionListener listener) {
    java.lang.String[] permissionsNeeded = new java.lang.String[]{ Manifest.permission.READ_PHONE_STATE };
    com.liangmayong.base.support.permission.ActivityPermission.requestPermissions(activity, id, permissionsNeeded, listener);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (savedInstanceState == null) {
        java.lang.String str = WeatherConditionsNames.Cloudiness.toString();
        this.importantConditionsAdapter = createImportantConditionsAdapter(this.importantWeatherConditionsNames);
    }
    setHasOptionsMenu(false);
}

private void savePreference(java.lang.String key, java.lang.String value) {
    android.content.SharedPreferences.Editor editor = pref.edit();
    editor.putString(key, value);
    editor.commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(isMeasurementStarted)) {
        onStartClicked();
    }else {
        onStopClicked();
    }
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    animating = true;
    setTouchAble(false);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    if ((section) == (num_ex)) {
        dialog(2);
    }
    load(state);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    extInm = true;
    startFilterActivity(org.openhds.mobile.activity.UpdateActivity.FILTER_INMIGRATION);
}

public void onClick(android.view.View v) {
    android.widget.CheckBox cb = ((android.widget.CheckBox) (v));
    if (cb.isChecked()) {
        cb.setText("Avklarat!");
    }else {
        cb.setText("Avklarat?");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    launchExternalIntent(context);
}

@java.lang.Override
public void onDestroy() {
    metronome.stop();
    metronome = null;
    android.util.Log.i(com.example.vitalykulyk.metronom.MetronomService.TAG, "Service onDestroy");
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    drawerToggle.syncState();
}

@java.lang.Override
public boolean onRequestFailed(android.content.Context context, com.firexweb.newsi.sync.Request request, int requestStatusCode, java.lang.String requestStatusMessage) {
    android.util.Log.e(com.firexweb.newsi.sync.NewsiOperations.ERROR_LOG_TITLE, ("Oh shit, We Failed to fetch Article! The issue was " + requestStatusMessage));
    com.firexweb.newsi.MainSystem.displayToastMessage(R.string.request_failed);
    com.firexweb.newsi.MainSystem.refreshArticle();
    return true;
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d(com.ozzyboshi.internetbeattimewatchface.InternetBeatTimeWatchFaceService.TAG, "Destroy engine");
    wakeLock.release();
    watchFace.wakelockDebug = wakeLock.isHeld();
    timeTick.removeCallbacks(timeRunnable);
    releaseGoogleApiClient();
    super.onDestroy();
}

@java.lang.Override
public void run() {
    org.owntracks.android.App.contactsViewModel.items.add(c);
    if (org.owntracks.android.support.Preferences.getEnableWidget())
        org.owntracks.android.services.ServiceProxy.getServiceApplication().requestWaypoints(c);
    
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    omer.parking.com.util.SharedPrefManager.getInstance(this).saveCameWithCar(true);
    startDecLotTask();
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    getLoaderManager().initLoader(app.com.io.codephillip.soccerdashboard.Fixtures.LOADER_ID, null, this);
}

public static int mercatorToLatE7(final double mer) {
    return ((int) ((de.blau.android.util.GeoMath.mercatorToLat(mer)) * 1.0E7));
}

private void startClickScaleAnimation(android.view.View view) {
    mEffectManager.startClickScaleAnimation(mContext, view);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.amittpad.info.introductionslider.SignUpActivity.class);
    intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK) | (android.content.Intent.FLAG_ACTIVITY_NEW_TASK)));
    startActivity(intent);
}

static java.lang.String getLimitTracking(android.content.Context context) {
    try {
        return com.google.android.gms.ads.identifier.AdvertisingIdClient.getAdvertisingIdInfo(context).isLimitAdTrackingEnabled();
    } catch (java.lang.Exception e) {
        android.util.Log.e("CS_SDK", "Failed to get isLimitAdTrackingEnabled", e);
        return null;
    }
}

@lombok.NonNull
@java.lang.Override
public final android.view.View newView(@lombok.NonNull
android.view.ViewGroup parent, @lombok.NonNull
com.nextfaze.poweradapters.ViewType viewType) {
    return adapterForViewType(viewType).newView(parent, viewType);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.pref_general);
    setHasOptionsMenu(true);
    qwikstats.qwikcut.kerbysoft.com.qwikstats.SettingsActivity.bindPreferenceSummaryToValue(findPreference("example_text"));
    qwikstats.qwikcut.kerbysoft.com.qwikstats.SettingsActivity.bindPreferenceSummaryToValue(findPreference("example_list"));
}

@java.lang.Override
public void onClick(android.view.View v) {
    StationIntent.putExtra("mLat", myLat);
    StationIntent.putExtra("mLng", myLng);
    StationIntent.putExtra("ID", SelectedID);
    finish();
    startActivity(StationIntent);
    setContentView(R.layout.activity_station_picker);
}

public void onClick(android.content.DialogInterface dialog, int i) {
    dialog.cancel();
    android.widget.Toast.makeText(getApplicationContext(), ((claim.getStatus()) + " claims cannot be edited."), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((activity.MainActivity.cnt) == 0)
        for (int i = 0; i <= 1; i++)
            adapter2.add("asgdsgdasgsadg", adapter2.datas.size());
        
    
}

public void onClick(android.content.DialogInterface dialog, int which) {
    android.util.Log.d("log", "click cancel");
}

public static it.kdevgroup.storelocator.PagerManager.StoresListFragment newInstance(android.content.Context ctx) {
    it.kdevgroup.storelocator.PagerManager.StoresListFragment.context = ctx;
    android.os.Bundle args = new android.os.Bundle();
    it.kdevgroup.storelocator.PagerManager.StoresListFragment fragment = new it.kdevgroup.storelocator.PagerManager.StoresListFragment();
    fragment.setArguments(args);
    return fragment;
}

private org.wordpress.android.models.Role getDefaultRole() {
    org.wordpress.android.models.Role[] inviteRoles = org.wordpress.android.models.Role.inviteRoles(mSite.isPrivate());
    return inviteRoles[0];
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    font_color = this.dialog.getColor();
    setColors(font_color, background_color);
}

@java.lang.Override
public int compare(com.alibaba.android.vlayout.LayoutHelper lhs, com.alibaba.android.vlayout.LayoutHelper rhs) {
    return (lhs.getRange().getLower().intValue()) - (rhs.getRange().getLower().intValue());
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName name, android.os.IBinder service) {
    com.odong.buddhismhomework.services.MusicService.MusicBinder binder = ((com.odong.buddhismhomework.services.MusicService.MusicBinder) (service));
    musicService = binder.getService();
    musicService.setSong(book.getMp3());
}

@java.lang.Override
public final int onStartCommand(android.content.Intent intent, int flags, int startId) {
    setupFirTask(intent);
    return android.app.Service.START_STICKY_COMPATIBILITY;
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    ready = true;
    synchronized(this) {
        notifyAll();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    generateRandomTemperatureList(com.codingtest.malabika.tempo.MainActivity.MIN_TEMP, com.codingtest.malabika.tempo.MainActivity.MAX_TEMP);
    populateListView(weekdays_list, null, temperatureValue_List);
    Btn_CFToggleAll.setChecked(true);
    android.widget.Toast.makeText(this, "Temperature Values Refreshed", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    menu.setVisibility(View.VISIBLE);
    taille.setVisibility(View.INVISIBLE);
    rotation.setVisibility(View.INVISIBLE);
    horizontal.setVisibility(View.GONE);
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    if ((mMediaRecorder) != null) {
        this.click();
    }
    if (symbol1 = true) {
        mySensorManager.unregisterListener(sensorEventListener);
    }
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    buttonSound.start();
    finish();
    android.content.Intent i = new android.content.Intent(this, com.nedswebsite.ktog.Rules.class);
    this.startActivity(i);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mViewPager.setCurrentItem(((mViewPager.getCurrentItem()) + 1));
    android.util.Log.i("SK-DEBUG", "Right Button is Clicked");
}

public void onNewProfileFragmentInteraction(android.net.Uri uri, net.tscloud.hivenotes.db.Profile profile);

public static java.lang.String formatTime(android.content.Context context, long timeInMs, java.lang.String timeZone) {
    org.mtransit.android.commons.ThreadSafeDateFormatter df = org.mtransit.android.commons.TimeUtils.getFormatTime(context, timeInMs);
    df.setTimeZone(java.util.TimeZone.getTimeZone(timeZone));
    return df.formatThreadSafe(timeInMs);
}

@java.lang.Override
protected boolean verifyDrawable(android.graphics.drawable.Drawable drawable) {
    if ((super.verifyDrawable(drawable)) || (drawable == (this.mMarginDrawable))) {
        return true;
    }
    return false;
}

@java.lang.Override
protected void onPause() {
    super.onStop();
    cn.jpush.android.api.JPushInterface.onPause(this);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putString(Constants.VIDEO_URL, videoUrl);
    outState.putString(Constants.STEP_DESCRIPTION, stepDescription);
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onRefresh() {
    mIsLoadMore = true;
    mPage = START_PAGE;
    if (!(android.text.TextUtils.isEmpty(mKey))) {
        mPresenter.searchCollections(mKey, mPage, com.masker.discover.search.fragment.SearchCollectionFragment.PER_PAGE);
    }else {
        mRefreshLayout.setRefreshing(false);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    allRe.get(java.lang.Integer.parseInt(v.getTag().toString())).setHeading(6);
    updateTextNoteControlListners(R.id.action_heading6);
}

@java.lang.Override
public void onCharacteristicChanged(android.bluetooth.BluetoothGatt gatt, android.bluetooth.BluetoothGattCharacteristic characteristic) {
    super.onCharacteristicChanged(gatt, characteristic);
    mBluetoothGattCallback.onReceivedNotification(characteristic.getValue());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_promotions);
    repository = com.example.piromsurang.ebookk.data.RealBookRepository.getInstance();
    presenter = new com.example.piromsurang.ebookk.BookPresenter(repository, this);
    initializeListview();
    initializeShowMoney();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    mNewsListPresenter.setView(null);
    com.fjoglar.etsitnews.presenter.PresenterHolder.getInstance().putPresenter(com.fjoglar.etsitnews.view.activities.NewsListActivity.class, mNewsListPresenter);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    com.irccloud.android.BackgroundTaskService.cancelBacklogSync(this);
    if (!(mResolvingError)) {
        mGoogleApiClient.connect();
    }
    com.irccloud.android.NetworkConnection.getInstance().registerForConnectivity();
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    if ((keyCode == (android.view.KeyEvent.KEYCODE_BACK)) && (canGoBack())) {
        goBack();
        return true;
    }
    return super.onKeyDown(keyCode, event);
}

private void handleAndAssignImage(android.graphics.Bitmap bitmap) {
    initialiseNewBitmap();
    org.catrobat.paintroid.command.Command command = new org.catrobat.paintroid.command.implementation.LoadCommand(bitmap);
    PaintroidApplication.commandManager.commitCommandToLayer(new org.catrobat.paintroid.command.implementation.LayerCommand(org.catrobat.paintroid.listener.LayerListener.getInstance().getCurrentLayer()), command);
}

private void cropAndSetMethod(int position) {
    cropImageAndSetWallpaper(position);
    done();
    com.crashlytics.android.Crashlytics.log("crop true");
}

@java.lang.Override
public boolean onSingleTapConfirmed(android.view.MotionEvent motionEvent) {
    android.util.Log.d(TAG, ("onSingleTapConfirmed: " + (motionEvent.toString())));
    showCallout(motionEvent);
    return true;
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.JELLY_BEAN)
@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        notificationUtil.showNotification();
        mAdbUtil.openAirDebug();
    }else {
        notificationUtil.closeNotification();
        mAdbUtil.closeAirDebug();
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    android.support.v4.app.ActivityCompat.requestPermissions(getActivity(), new java.lang.String[]{ Manifest.permission.ACCESS_FINE_LOCATION }, com.example.darknight.mi2016.MapFragment.MY_PERMISSIONS_REQUEST_LOCATION);
}

public void initProcess(android.os.IBinder token, int vuid) {
    this.token = token;
    this.vuid = vuid;
    this.deviceInfo = com.lody.virtual.client.ipc.VDeviceManager.get().getDeviceInfo(com.lody.virtual.os.VUserHandle.getUserId(vuid));
}

public void onFinish() {
    android.util.Log.d("====>", "keke");
    com.novahub.voipcall.activity.MainActivity.GetStatusAsyncTask getStatusAsyncTask = new com.novahub.voipcall.activity.MainActivity.GetStatusAsyncTask(stringBuilder.toString());
    getStatusAsyncTask.execute();
}

@java.lang.Override
public void changeVideoQuality(int videoQuality) {
    mHandler.obtainMessage(android.telecom.VideoCallImpl.MessageHandler.MSG_CHANGE_VIDEO_QUALITY, videoQuality, 0).sendToTarget();
}

public void ChangeRadius(long progress) {
    android.content.Intent intent = new android.content.Intent();
    intent.setClass(this, com.example.xiaoyi.sleepinthetrain.MapsActivity.class);
    intent.putExtra("POINT_RADIUS_CHANGED", progress);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkAnswer(false, getCurrentQuestion());
}

public void bufferStrings(java.lang.String input) {
    allInput += input;
    android.util.Log.e(com.example.sdp11.wmd.BluetoothLEService.TAG, ("allInput = " + (allInput)));
    parseTransferredData();
}

private void saveStudent(com.example.pustikom.adapterplay.user.Student student, int mode) {
    android.database.sqlite.SQLiteDatabase wdb = db.getWritableDatabase();
    if (mode == 0) {
        db.insert(student);
    }else {
        db.update(student);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((targetBike) != null) {
        navigate(targetBike);
    }
}

@java.lang.Override
public void onNewTransfer(net.nitroshare.android.transfer.Transfer transfer) {
    transfer.setId(mTransferNotificationManager.nextId());
    mTransferManager.addTransfer(transfer);
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    android.util.Log.d(com.app.kent.volume.Main.TAG, ("addDynamicButton onLongClick(): " + (v.getId())));
    actionLongClick(v, buttonName);
    return true;
}

@java.lang.Override
protected void onStop() {
    android.util.Log.i(net.videgro.ships.activities.OpenDeviceActivity.TAG, "onStop");
    if ((usbReceiver) != null) {
        unregisterReceiver(usbReceiver);
    }
    super.onStop();
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    onActivityResult(0, org.deviceconnect.android.manager.RESULT_CANCELED, null);
    if (mIsBind) {
        unbindService(mServiceConnection);
        mIsBind = false;
    }
    finish();
}

public static void startForResult(android.app.Activity activity, java.lang.String title) {
    android.content.Intent intent = new android.content.Intent(activity, com.everypay.sdk.views.CardFormActivity.class);
    intent.putExtra("title", title);
    activity.startActivityForResult(intent, com.everypay.sdk.views.CardFormActivity.REQUEST_CODE);
}

@java.lang.Override
public void onDelete(wipraktikum.informationwallandroidapp.BusinessObject.BlackBoard.BlackBoardAttachment blackboardAttachment) {
    attachmentContainer.removeView(attachmentView);
    blackBoardAttachments.remove(blackboardAttachment);
    blackBoardAttachmentViews.remove(attachmentView);
    blackboardDeleteAttachmentDialog.dismiss();
}

public static com.kantilever.t1c3android.domain.OrderState findOrderState(java.lang.String name) {
    com.kantilever.t1c3android.domain.OrderState state = null;
    for (com.kantilever.t1c3android.domain.OrderState orderState : com.kantilever.t1c3android.domain.OrderState.values())
        if (orderState.name.equals(name))
            state = orderState;
        
    
    return state;
}

@java.lang.Override
public void onPartialResults(android.os.Bundle partialResults) {
    restartListening();
    android.util.Log.d("onPartialResults", "onPartialResults");
}

@java.lang.Override
public void onLoaderReset(android.content.Loader<java.util.List<io.volcain.booklisting.model.Book>> loader) {
    mAdapter.clear();
}

@java.lang.Override
public void onFailure(@android.support.annotation.NonNull
java.lang.Exception exception) {
    android.util.Log.e("tag", "signInAnonymously:FAILURE", exception);
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.rahulgoel.moviesdb.Movie_Detail.Movie_result> call, java.lang.Throwable t) {
    android.util.Log.i("Failure", "Not Received");
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference mute, java.lang.Object val) {
    java.lang.Boolean disable = ((java.lang.Boolean) (val));
    if (disable.booleanValue()) {
    }else {
    }
    return false;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    android.util.Log.v(bicyclewatchdog.com.bicyclewatchdog.gps_management.GpsManager.TAG, "Successful connection to google api");
    if ((shouldResume) || true) {
        android.util.Log.v(bicyclewatchdog.com.bicyclewatchdog.gps_management.GpsManager.TAG, "Calling resumeGPS...");
        resumeGPS();
        shouldResume = false;
    }
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    setIntent(intent);
    setupFragment(null);
}

@java.lang.Override
public void onNewAssignmentClick() {
    com.example.android.grader.fragments.CreateFragment createFragment = com.example.android.grader.fragments.CreateFragment.newInstance();
    fragmentManager.beginTransaction().replace(R.id.fragmentContainer, createFragment, com.example.android.grader.activities.MainActivity.CREATE_FRAGMENT).addToBackStack(null).commit();
}

@java.lang.Override
protected boolean onDeleteLight(final android.content.Intent request, final android.content.Intent response, final java.lang.String serviceId, final java.lang.String lightId) {
    return sendLightRequest(serviceId, "DELETE", response);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animator) {
    if (this.isSystemShowing)
        setVisibility(View.GONE);
    
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    fragmentManager = getFragmentManager();
}

public static void setupActionBar(android.content.Context context) {
    if (((Build.VERSION.SDK_INT) >= 11) && (de.nico.ha_manager.helper.Utils.isActionBarAvailable)) {
        de.nico.ha_manager.helper.ActionBarWrapper actionBarWrapper = new de.nico.ha_manager.helper.ActionBarWrapper(context);
        actionBarWrapper.setDisplayHomeAsUpEnabled(true);
    }
}

@java.lang.SuppressWarnings(value = "unused")
public void onEventMainThread(org.wordpress.android.ui.posts.services.PostEvents.PostMediaInfoUpdated event) {
    if ((isAdded()) && ((org.wordpress.android.WordPress.getCurrentBlog()) != null)) {
        getPostListAdapter().mediaUpdated(event.getMediaId(), event.getMediaUrl());
    }
}

@java.lang.Override
public void onMenuItemLongClick(android.view.View clickedView, int position) {
    android.widget.Toast.makeText(this, ("Long clicked on position: " + position), Toast.LENGTH_SHORT).show();
}

@android.test.suitebuilder.annotation.SmallTest
public void testEditText() {
    android.widget.EditText editText = ((android.widget.EditText) (getActivity().findViewById(R.id.email)));
    org.junit.Assert.assertNull(editText);
}

@java.lang.Override
public boolean onDown(android.view.MotionEvent e) {
    java.lang.System.out.println((((("LISTENER: Got an 'onDown' MotionEvent at location (" + (e.getX())) + ", ") + (e.getY())) + ")"));
    return true;
}

@java.lang.Override
protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
    super.onLayout(changed, left, top, right, bottom);
    android.util.Log.i(TAG, "onLayout");
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    throw new java.lang.UnsupportedOperationException("Not yet implemented");
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<java.util.List<com.example.foodnote.backend.apis.recipeApi.model.Recipe>> loader, java.util.List<com.example.foodnote.backend.apis.recipeApi.model.Recipe> data) {
    mAdapter.setRecipes(data);
    mAdapter.notifyDataSetChanged();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.activity_familychat, container, false);
    if ((jsc.cactus.com.weanimal.g_animal.main.familychat.FamilyChatDialog.chatListViewAdapter) == null)
        init(view);
    
    return view;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    isempty = true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.String tag = v.getTag().toString();
    java.lang.System.out.println("I clicked on a classroom");
    java.lang.System.out.println(("The tag I clicked on was: " + tag));
    int tagNumber = java.lang.Integer.parseInt(tag);
    getTextBoxClicked(tagNumber);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    incompleteCB.setChecked(false);
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.i(nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, "power off success");
    updateLightBulb(false);
    _sbPwm.setProgress(0);
    done();
}

private int maxAdvertiseInstances() {
    com.android.bluetooth.btservice.AdapterService adapter = com.android.bluetooth.btservice.AdapterService.getAdapterService();
    int numOfAdvtInstances = adapter.getNumOfAdvertisementInstancesSupported();
    return numOfAdvtInstances - 1;
}

@java.lang.Override
public void onHomePressed(android.support.v4.app.Fragment fragment) {
    if (fragment instanceof valjevac.kresimir.homework3.fragments.AddPokemonFragment) {
        removeFragmentFromStack(valjevac.kresimir.homework3.activities.PokemonListActivity.ADD_POKEMON_FRAGMENT_TAG);
    }
}

private void syncContents(com.owncloud.android.lib.common.OwnCloudClient client) throws com.owncloud.android.lib.common.operations.OperationCancelledException {
    startDirectDownloads();
    startContentSynchronizations(mFilesToSyncContentsWithoutUpload, client);
    startContentSynchronizations(mFavouriteFilesToSyncContents, client);
    walkSubfolders(client);
}

@java.lang.Override
public void changeCameraCapabilities(android.telecom.VideoProfile.CameraCapabilities cameraCapabilities) {
    mHandler.obtainMessage(android.telecom.VideoCallImpl.MessageHandler.MSG_CHANGE_CAMERA_CAPABILITIES, cameraCapabilities).sendToTarget();
}

public synchronized boolean deleteAllFavorites() {
    android.content.SharedPreferences.Editor editor = sharedPreferences.edit();
    editor.clear();
    editor.apply();
    return true;
}

public static com.hgyllensvard.geofencemanager.geofence.Geofence create(java.lang.String name, com.google.android.gms.maps.model.LatLng latLng, float radius) {
    return new com.hgyllensvard.geofencemanager.geofence.AutoValue_Geofence.Builder().id(com.hgyllensvard.geofencemanager.geofence.Geofence.NO_ID).name(name).latLng(latLng).radius(radius).build();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_refresh :
            new com.namclu.android.popularreels.FetchMovieTask(mMovieAdapter).execute();
            mMovieAdapter.notifyDataSetChanged();
            return true;
    }
    return super.onOptionsItemSelected(item);
}

private void addDynamicGraphicLayer() {
    mGraphicsLayer = new com.esri.android.map.GraphicsLayer();
    addLayer(mGraphicsLayer);
    mGraphicsLayerGGAdapter = new com.teamagam.gimelgimel.app.map.esri.GraphicsLayerGGAdapter(mGraphicsLayer, com.teamagam.gimelgimel.app.map.esri.EsriGGMapView.WGS_84_GEO, getSpatialReference());
}

protected android.content.Context getContext() {
    return this.mFrag.getActivity().getApplicationContext();
}

private void initAudio() {
    setupVisualizerFxAndUI();
    try {
        visualizer.setEnabled(true);
    } catch (java.lang.Exception ex) {
        android.util.Log.e("except", (" f" + (ex.getMessage())));
    }
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    android.util.Log.i(com.binkery.module.citypicker.CitySearchActivity.TAG, ("onQueryTextSubmit query = " + query));
    showSearchTip(query);
    return false;
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    if (intent.hasExtra(com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE)) {
        handleJson(intent.getStringExtra(com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE));
    }
    return START_STICKY;
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    prepareScheduleTable((position + 1));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(this, "Hey", Toast.LENGTH_SHORT);
}

private void flvFrameCacheAdd(net.ossrs.rtmp.SrsFlvMuxer.SrsFlvFrame frame) {
    try {
        mFlvTagCache.add(frame);
    } catch (java.lang.IllegalStateException e) {
        mFlvTagCache.clear();
        android.util.Log.i(net.ossrs.rtmp.SrsFlvMuxer.TAG, "frame discarded");
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    exportCsv();
    finish();
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    if ((mode) == (com.bathem.vocabpower.Enum.AddEditMode.add_mode)) {
    }else {
        hideAddButtons();
        prepareFieldsForEditMode();
    }
}

@java.lang.Override
protected void initView(android.os.Bundle savedInstanceState) {
    setContentView(R.layout.activity_splash);
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            startMainActivity();
        }
    }, Constants.SPLASH_TIME);
}

@java.lang.Override
protected void onDestroy() {
    android.util.Log.i(floatingmuseum.sample.sonic.MainActivity.TAG, "onDestroy");
    sonic.stopAllTask();
    sonic.unRegisterDownloadListener();
    super.onDestroy();
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (resultCode == (RESULT_CANCELED)) {
        return ;
    }
    if (resultCode == (AnswerActivity.RESULT_DELETE)) {
    }
    if (resultCode == (RESULT_OK)) {
    }
}

@java.lang.Override
public void onError(com.facebook.FacebookException exception) {
    if (((pendingAction) != (map.minimap.LoginActivity.PendingAction.NONE)) && (exception instanceof com.facebook.FacebookAuthorizationException)) {
        showAlert();
        pendingAction = map.minimap.LoginActivity.PendingAction.NONE;
    }
    android.util.Log.v(LOG_TAG, "Error!");
    updateUI();
}

private void recordHighScore() {
    android.content.SharedPreferences settings = android.preference.PreferenceManager.getDefaultSharedPreferences(mContext);
    android.content.SharedPreferences.Editor editor = settings.edit();
    editor.putLong(com.narayan.a2048.MainGame.HIGH_SCORE, ((int) (highScore)));
    editor.commit();
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    io.geeteshk.hyper.helper.Firebase.removeProject(mAuth, mStorage, mObjects[newPos]);
    io.geeteshk.hyper.helper.Firebase.deleteProjectFiles(mAuth, mStorage, mObjects[newPos]);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    com.google.android.gms.maps.model.LatLng latLng = new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude());
    com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(latLng, 15);
    googleMap.animateCamera(cameraUpdate);
}

@java.lang.Override
public void onClick(android.view.View view) {
    lb.loadingSuccessful();
    sucBtn.setEnabled(false);
    failedBtn.setEnabled(false);
    resetBtn.setEnabled(true);
}

public java.lang.String getUrl() {
    if (android.text.TextUtils.isEmpty(url))
        return "";
    else
        return url;
    
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    mActivity.finish();
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.ICE_CREAM_SANDWICH)
public static io.branch.referral.Branch getAutoTestInstance(@android.support.annotation.NonNull
android.content.Context context) {
    io.branch.referral.Branch.isAutoSessionMode_ = true;
    io.branch.referral.Branch.customReferrableSettings_ = io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.USE_DEFAULT;
    io.branch.referral.Branch.getBranchInstance(context, false);
    io.branch.referral.Branch.branchReferral_.setActivityLifeCycleObserver(((android.app.Application) (context)));
    return io.branch.referral.Branch.branchReferral_;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if (intent.getAction().equals(com.jeonbase.wifidirectsample.WakeReceiver.ACTION_PASSIVE)) {
        alarm.setAlarm(context);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    mCurrentIndex = ((mCurrentIndex) + 1) % (mQuestionBank.length);
    com.example.rahulchandrashekhar.geoquiz.HEAD mIsCheater = false;
    updateQuestion();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    pi.setVisibility(View.GONE);
    getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
    unregisterReceiver(helpFinishBroadcast);
    this.finish();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup root, android.os.Bundle savedState) {
    android.view.View view = inflater.inflate(R.layout.fragment_login, root, false);
}

public static int w(java.lang.String tag, java.lang.String msg) {
    if (tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_WARN) {
        return android.util.Log.w(tag, msg);
    }
    return 0;
}

public java.lang.Double distanceBetween(com.google.android.gms.maps.model.LatLng point1, com.google.android.gms.maps.model.LatLng point2) {
    if ((point1 == null) || (point2 == null)) {
        return null;
    }else {
        return com.google.maps.android.SphericalUtil.computeDistanceBetween(point1, point2);
    }
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.JELLY_BEAN_MR1)
private boolean isRTL() {
    if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN_MR1)) {
        return false;
    }
    android.content.res.Configuration config = getResources().getConfiguration();
    return (config.getLayoutDirection()) == (android.view.View.LAYOUT_DIRECTION_RTL);
}

@java.lang.Override
public void onFailure(retrofit2.Call<edu.depaul.csc595.jarvis.detection.classes.SmartProductContent.SmartProductInfo> call, java.lang.Throwable t) {
    android.util.Log.d("getnumregdecives", t.getMessage());
}

private void normalizeDate(android.content.ContentValues values) {
    if (values.containsKey(WeatherContract.WeatherEntry.COLUMN_DATE)) {
        long dateValue = values.getAsLong(WeatherContract.WeatherEntry.COLUMN_DATE);
        values.put(WeatherContract.WeatherEntry.COLUMN_DATE, com.example.tgzoom.sunshine.data.WeatherContract.normalizeDate(dateValue));
    }
}

private boolean isDiscoverModeEnabled() {
    android.content.SharedPreferences preferences = android.preference.PreferenceManager.getDefaultSharedPreferences(com.gcw.sapienza.places.PlacesApplication.getPlacesAppContext());
    boolean discoverMode = preferences.getBoolean("discoverMode", true);
    return discoverMode;
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    java.lang.String data = "scorelimit;0;" + (java.lang.String.valueOf((((this.seekBar.getProgress()) + 1) * 9)));
    sendDataToServer(data, getPlayer(), delegate);
}

@java.lang.Override
public void onCharacteristicWrite(android.bluetooth.BluetoothGatt gatt, android.bluetooth.BluetoothGattCharacteristic characteristic, int status) {
    android.util.Log.e(com.liwn.zzl.markbit.bluetooth.BluetoothLeService.TAG, "OnCharacteristicWrite");
}

void updatePoemText() {
    android.util.Log.d(ca.rmen.android.poetassistant.main.reader.ReaderViewModel.TAG, "Update poem text");
    mPoemPrefs.updatePoemText(poem.get().toString());
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.String responseString, java.lang.Throwable throwable) {
    android.util.Log.e(TAG, responseString);
    listener.sendReportPoliceError();
}

@java.lang.Override
public void onDialogPositiveClick(br.com.androidzin.brunomateus.beerstodrink.model.Beer beer) {
    beer.setDrinked(false);
    updateDatabase(beer);
    android.util.Log.d(getClass().getSimpleName(), ((beer.getName()) + "was not drinked"));
}

public void addTask(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, iprog.group7.agendabuilder.android.AddTaskActivity.class);
    startActivity(intent);
    java.lang.String source = "new";
    intent.putExtra(iprog.group7.agendabuilder.android.MainActivity.SOURCE, source);
    finish();
}

public void showProgressDialog() {
    if ((progressDialog) == null) {
        progressDialog = new android.app.ProgressDialog(this);
        progressDialog.setMessage(getString(R.string.loading));
        progressDialog.setIndeterminate(true);
    }
    progressDialog.show();
}

private int getRadioButtonResult(android.widget.RadioButton rightAnswer) {
    if (rightAnswer.isChecked()) {
        return 2;
    }
    return 0;
}

public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.preference.PreferenceManager.setDefaultValues(getActivity(), R.xml.prefs, false);
    addPreferencesFromResource(R.xml.prefs);
    setSummaries();
    com.alderferstudios.ritdebitsplitter.SettingsActivity.shared.registerOnSharedPreferenceChangeListener(this);
}

public static void initializeFonts(final android.content.Context context) {
    com.samknows.measurement.activity.components.Util.FONT_REGULAR = android.graphics.Typeface.createFromAsset(context.getAssets(), "typewriter.ttf");
}

protected synchronized com.google.android.gms.common.api.GoogleApiClient buildGoogleApiClient() {
    android.util.Log.d(com.beccap.weathervane.WeatherListFragment.TAG, "building api client");
    return new com.google.android.gms.common.api.GoogleApiClient.Builder(getActivity()).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build();
}

public com.daro.spotifystreamer.models.Track getmCurrentTrack() {
    android.util.Log.d(TAG, mCurrentTrack.getId());
    return mCurrentTrack;
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    delayedHide(100);
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.facebook.soloader.SoLoader.init(this, false);
    io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics());
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> arg0, android.view.View view, final int pos, long id) {
    show_edit_pop_up(pos);
    item_list.refreshDrawableState();
    return true;
}

public static void navigateToLocationSettings(android.content.Context context) {
    final android.content.Intent intent = new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
    context.startActivity(intent);
}

public static com.ly.badiane.budgetmanager_finalandroidproject.divers.Categorie getInstance(int i) {
    if ((i <= 5) && (i >= 0))
        return com.ly.badiane.budgetmanager_finalandroidproject.divers.Categorie.ALL.get(i);
    
    return null;
}

private void SetLastLocation(com.google.android.gms.maps.model.LatLng latLng) {
    if (latLng != null)
        Utils.SharedPreferencesUtil.SaveLocationInSharedPreferences(getContext(), latLng.latitude, latLng.longitude, new java.util.Date());
    
    lastLocation = latLng;
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int i, boolean b) {
    mediaPlayer.seekTo(i);
}

public void openCellWithFastAnimate(android.widget.ImageView imageView, int coordinate) {
    this.imageView = imageView;
    this.coordinate = coordinate;
    isFastAnimation = true;
    isMineAnimation = false;
    openCell();
    imageView.startAnimation(fastShrink);
}

public final void showImage(android.content.Context context, java.lang.String str) {
    android.content.Intent intent = new android.content.Intent("android.intent.action.VIEW");
    intent.setDataAndType(android.net.Uri.fromFile(new java.io.File(str)), "image/*");
    context.startActivity(intent);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return position == (survey.getSize()) ? new it.telecomitalia.my.affiancamenti.SurveyLastFragment() : it.telecomitalia.my.affiancamenti.SurveyElementFragment.newInstance(survey.getSurveyElement(position));
}

public boolean onCreateOptionsMenu(android.view.Menu menu2) {
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.actionbar, menu2);
    return true;
}

private static void closeDB() {
    if ((com.mozzandroidutils.sqlite.MozzDB.mDatabase) != null) {
        if (com.mozzandroidutils.sqlite.MozzDB.mDatabase.isOpen()) {
            com.mozzandroidutils.sqlite.MozzDB.mDatabase.close();
            com.mozzandroidutils.sqlite.MozzDB.mDatabase = null;
        }else {
            com.mozzandroidutils.sqlite.MozzDB.mDatabase = null;
        }
    }
}

@java.lang.Override
public void onCreate() {
    android.widget.Toast.makeText(this, "notification service created", Toast.LENGTH_LONG).show();
    mNotificationsQueue = new ie.headway.howtodoit.NotificationQueue();
    mNotificationsFileObserver = new ie.headway.howtodoit.NotificationService.NotificationsFileObserver();
    mScheduledExecutorService = java.util.concurrent.Executors.newSingleThreadScheduledExecutor();
    mNotificationsFileObserver.startWatching();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    outState = mDrawerResult.saveInstanceState(outState);
    outState = mDrawerResult.saveInstanceState(outState);
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int whichButton) {
    mAlertHandler = null;
    mTimer.cancel();
    modifyBootIni();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            deletePartOfTheMethod(id);
            break;
        case android.content.DialogInterface.BUTTON_NEGATIVE :
            break;
    }
}

@java.lang.Override
public void run() {
    com.kakao.usermgmt.UserManagement.requestLogout(new com.kakao.usermgmt.callback.LogoutResponseCallback() {
        @java.lang.Override
        public void onCompleteLogout() {
            android.util.Log.v(com.lihak.plugin.kakao.KakaoTalk.LOG_TAG, "kakao : onCompleteLogout");
            callbackContext.success();
        }
    });
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d("ONResume::", "Inside On Resume!");
    mTimer = new java.util.Timer();
    mDatasource.open();
}

private void setTexts() {
    mTextViewNameStore.setText(com.example.framgia.imarketandroid.data.FakeContainer.getNameProduct());
    mTextViewProportionVote.setText(com.example.framgia.imarketandroid.data.FakeContainer.getGeneralRate());
    mTextViewCountVote.setText(com.example.framgia.imarketandroid.data.FakeContainer.getAmountOfRates());
}

@java.lang.Override
public void onError(final int code, final java.lang.String message) {
    java.lang.String errMsg = (("ライトの状態更新に失敗しました hue:code = " + code) + "  message = ") + message;
    org.deviceconnect.android.message.MessageUtils.setUnknownError(response, errMsg);
    mErrorFlag = true;
    countDownLatch.countDown();
}

@java.lang.Override
public void onClick(android.view.View view) {
    mPlayer.stop();
    mPlayer = android.media.MediaPlayer.create(this, R.raw.e_note_sound);
    mPlayer.start();
}

@java.lang.Override
public void onClick(android.view.View v) {
    onRegisterClicked();
    android.widget.Toast.makeText(getContext(), "Hello", Toast.LENGTH_LONG).show();
}

public static kamini.app.moviecollection.MovieLoader newMovieFaboriteInstance(android.content.Context context, java.lang.String movieSelection) {
    return new kamini.app.moviecollection.MovieLoader(context, MovieContract.MovieEntry.buildMovieFavoriteStatus(movieSelection, "1"));
}

public void clear() {
    android.util.Log.d("GuideCreateActivity", "Clearing");
    mGuides.clear();
    notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.System.out.println("poooo");
    mItemClickListener.onClick(contentId);
}

@java.lang.Override
public void onClick(android.view.View v) {
    innerListener.onRowClick(position);
}

private void goToWelcome() {
    android.content.Intent intent = new android.content.Intent(this, edu.gatech.cs2340.rattracker.controller.WelcomeActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(getApplicationContext(), "Difficulty picked", Toast.LENGTH_LONG).show();
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.lenni.blackjack_ptm.SettingsActivity.class);
    startActivity(intent);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            getActivity().onBackPressed();
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public java.lang.Object onRetainCustomNonConfigurationInstance() {
    android.util.Log.d(com.cookbook.fenix.cookbook.CookBOOK.TEST, ("mImageDownloader = " + (mImageDownloader.hashCode())));
    return mImageDownloader;
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError error) {
    com.eclipsesource.tabris.android.RemoteObject remoteObject = tabrisContext.getObjectRegistry().getRemoteObjectForObject(this);
    remoteObject.notify("onCancelled", "error", error.getMessage());
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) {
    mCalendar.set(java.util.Calendar.YEAR, year);
    mCalendar.set(java.util.Calendar.MONTH, monthOfYear);
    mCalendar.set(java.util.Calendar.DAY_OF_MONTH, dayOfMonth);
    updateDate();
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.aseupc.flattitude.Activities.InvitationDetails.callRespondInvitation callA = new com.aseupc.flattitude.Activities.InvitationDetails.callRespondInvitation();
    callA.execute(userID, flatID, "true");
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.support.v4.app.FragmentManager fm = getChildFragmentManager();
    com.google.android.gms.maps.SupportMapFragment mapFragment = ((com.google.android.gms.maps.SupportMapFragment) (fm.findFragmentById(R.id.map)));
    mapFragment.getMapAsync(this);
}

@java.lang.Override
public void onClick(android.view.View v) {
    service.refreshWeather(("" + (fieldCity.getText())));
}

static boolean checkBluetooth(android.bluetooth.BluetoothAdapter bluetoothAdapter) {
    return (bluetoothAdapter == null) || (!(bluetoothAdapter.isEnabled()));
}

private void openOptions() {
    canrefresh = false;
    android.content.Intent intent = new android.content.Intent(getBaseContext(), com.lgallardo.youtorrentcontroller.OptionsActivity.class);
    startActivityForResult(intent, com.lgallardo.youtorrentcontroller.MainActivity.OPTION_CODE);
}

public static void run(android.content.Context context, java.lang.String url) {
    com.coolerfall.watcher.Watcher.run(context, url, false);
}

@java.lang.Override
public void onTransitionEnd(android.transition.Transition transition) {
    if (doNotShowAgain) {
        dialog.show();
        doNotShowAgain = false;
    }
}

private void onError() {
    android.widget.Toast.makeText(this.context, R.string.network_error, Toast.LENGTH_SHORT).show();
}

public static void unRegisterBluetoothBroadcast(android.content.Context context) {
    context.unregisterReceiver(com.bytereal.byterealblesdk.broadcast.register.RegisteredBroadcast.bluetoothBroadcastReceiver);
    com.bytereal.byterealblesdk.broadcast.register.RegisteredBroadcast.ILOG("broadcastreceiver unregistered!");
}

@java.lang.Override
public void onSliderClick(com.daimajia.slider.library.SliderTypes.BaseSliderView slider) {
    android.widget.Toast.makeText(getContext(), ((slider.getBundle().get("extra")) + ""), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onAnimationCancel(android.animation.Animator animation) {
    changeListener.onChangeCompleted();
    container.removeView(to);
}

public void onClick(android.view.View arg0) {
    mCurrentSearch = "";
    mTaxonId = null;
    mProjectId = null;
    mUsername = null;
    mLocationId = null;
    mSearchType = org.inaturalist.android.INaturalistMapActivity.FIND_NEAR_BY_OBSERVATIONS;
    mPage = 0;
    refreshActiveFilters();
    loadObservations();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    setOnItemClick(position, self);
}

@java.lang.Override
public void onClick(android.view.View view) {
    dbFunc();
    android.support.design.widget.Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG).setAction("Action", null).show();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    com.zqlite.android.logly.Logly.d(me.hejmo.cameratest.media.MediaActivity.TAG, "onResume");
    openCamera(me.hejmo.cameratest.media.VIDEO_WIDTH, me.hejmo.cameratest.media.VIDEO_HEIGHT, me.hejmo.cameratest.media.DESIRED_PREVIEW_FPS);
}

public boolean onPreferenceClick(android.preference.Preference preference) {
    com.example.karmali.homexperts.SettingsActivity.sendFeedback(getActivity());
    return true;
}

public static void resetHasSetDefaultValues() {
    android.content.SharedPreferences sp = org.andstatus.app.util.SharedPreferencesUtil.getSharedPreferences(PreferenceManager.KEY_HAS_SET_DEFAULT_VALUES);
    sp.edit().clear().commit();
    org.andstatus.app.util.SharedPreferencesUtil.forget();
}

private void loadCurrentList() {
    list = amrabed.android.release.evaluation.core.ActivityList.getCurrent();
    if (list.isEmpty()) {
        loadDefaultList();
    }
}

protected final android.app.PendingIntent createPendingIntent(int notificationId, java.lang.String action) {
    return createPendingIntent(notificationId, action, new android.os.Bundle());
}

protected internetofeveryone.ioe.Data.Website cursorToWebsite(android.database.Cursor cursor) {
    internetofeveryone.ioe.Data.Website website = new internetofeveryone.ioe.Data.Website(cursor.getString(0), cursor.getString(1), cursor.getString(2));
    return website;
}

public void changeView(int quizIndex) {
    android.content.Intent intent = new android.content.Intent(context, questioneerActivityClass);
    intent.putExtra("quiz", model.getQuiz(quizIndex));
    model.startQuiz();
    currentActivity.startActivity(intent);
}

@java.lang.Override
public void onCancel() {
    android.util.Log.i(co.theengine.loomplayer.LoomHTTP.TAG, ((index) + " cancel response"));
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    if (fromUser) {
        canvas.setRadius(progress);
        brushDialog.setTitle(("Circle Radius: " + (canvas)));
    }
}

private void loadTopic() {
    mListView = ((android.widget.ListView) (findViewById(R.id.topic_list)));
    MAdapter = new com.lincanbin.carbonforum.adapter.IndexAdapter(this);
    new com.lincanbin.carbonforum.index.indexModel().execute(((com.lincanbin.carbonforum.config.ApiAddress.HOME_URL) + "1"));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.util.Log.v(LOG_TAG, "This is onCreate");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    java.lang.System.out.println("this is the change");
    java.lang.System.out.println("this is the change");
}

public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    view = inflater.inflate(R.layout.fragment_single_city, container, false);
    findView();
    initData();
    inflateTempBar(inflater, container);
    return view;
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.new_thread :
            return true;
        case R.id.refresh :
            io.ohalloran.crypto.data.ParseFactory.refresh(this);
    }
    return false;
}

private void stopNotificationThread() {
    if (((this.notifierTimer) != null) && (this.notifierTimer.$missing$)) {
        android.util.Log.d(IotConstants.LOG_TAG, "stopping notification timer");
        this.notifierTimer.cancel();
    }
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    if ((m_listener) != null)
        m_listener.onLocalSelected();
    
    getDialog().dismiss();
}

public static void viewBlogStats(android.content.Context context, int blogLocalTableId) {
    android.content.Intent intent = new android.content.Intent(context, org.wordpress.android.ui.stats.StatsActivity.class);
    intent.putExtra(StatsActivity.ARG_LOCAL_TABLE_BLOG_ID, blogLocalTableId);
    context.startActivity(intent);
}

@java.lang.Override
public void addPictureToGallery(java.io.File imageUri) {
    android.content.Intent mediaScanIntent = new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
    android.net.Uri contentUri = android.net.Uri.fromFile(imageUri);
    mediaScanIntent.setData(contentUri);
    getActivity().sendBroadcast(mediaScanIntent);
}

@java.lang.Override
public boolean handleUpOrCancelTouchEvent(android.view.MotionEvent event) {
    issueStateTransition(mBounceBackState);
    return true;
}

public void performMemoryAccelerationSetting(android.content.Context context) {
    performStartActivity(context, componentForMemoryAccelerationSetting());
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_insert_dummy_data :
            insertDummyPet();
            displayDatabaseInfo();
            return true;
        case R.id.action_delete_all_entries :
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@android.support.annotation.CallSuper
@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    if ((adView) != null) {
        adView.destroy((!(isChangingConfigurations())));
    }
}

static com.solera.defrag.ViewStack.SaveStateEntry newInstance(int layout, @android.support.annotation.Nullable
android.os.Bundle parameters, @android.support.annotation.Nullable
android.util.SparseArray<android.os.Parcelable> viewState) {
    return new com.solera.defrag.AutoValue_ViewStack_SaveStateEntry(layout, parameters, viewState);
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    boolean handled = false;
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_GO)) {
        Login();
        handled = true;
    }
    return handled;
}

@java.lang.Override
public void prepareViewModel(android.os.Bundle savedInstanceState, android.os.Bundle arguments, android.app.Activity activity) {
    mOnViewModelEventBind.hideNavigationButtons(false, false);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    setNewEdgeNotif();
    context1 = context;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((isOpenInvite) && (position == 0)) {
        listener.onItemClick(v, position);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    manager.removeView(view);
}

public boolean bluetoothStateOn(android.content.Intent intent) {
    int newState = mBluetoothAdapter.getState();
    if (newState == (android.bluetooth.BluetoothAdapter.STATE_ON)) {
        progress.dismiss();
        currentContext.unregisterReceiver(fragmentBr);
        return true;
    }
    return false;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_topic_content);
    butterknife.ButterKnife.bind(this);
    setupToolbar();
    loadTopicName();
    setVocabularyListView();
    setDoExerciseButton();
}

public void onReadRecord(android.view.View view) {
    android.util.Log.v(TAG, "onReadRecord ->");
    readRecord();
    android.util.Log.v(TAG, "onReadRecord <-");
}

@java.lang.Override
public void onClick(android.view.View v) {
    max.sudoku.MainActivity.b.setBackgroundResource(R.drawable.back);
    startListener();
}

public void displayMessage(android.content.Context c) {
    if ((message) != null) {
        com.devmobile.ofait.utils.FastDialog.showDialog(c, FastDialog.SIMPLE_DIALOG, message);
    }
}

public static void startLine(@android.support.annotation.NonNull
final android.view.inputmethod.EditorInfo attribute, final boolean logBuffer) {
    if ((com.radicalninja.logger.LogManager.instance) != null) {
        com.radicalninja.logger.LogManager.instance.startNewLine(attribute, logBuffer);
    }
}

@java.lang.Override
public void onLoadMore(int currentPage) {
    android.util.Log.d(MovieApplication.TAG, (((com.example.vit.popularmovies.ui.fragment.MoviesGridFragment.CLASS) + "onLoadMore() page = ") + currentPage));
    loadMoviesPage(currentPage);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    startActivity(new android.content.Intent(this, timetoadapt.me.adapt.UserCreationActivity.class));
}

@java.lang.Override
public void onColumnCountUpdate(int colCount) {
    android.widget.TextView currentCount = ((android.widget.TextView) (findViewById(R.id.colCount)));
    currentCount.setText(java.lang.String.valueOf(colCount));
    setUpGameMakerLayout();
}

@java.lang.Override
public void onFailure(java.lang.Throwable throwable) {
    android.util.Log.e("seyi", "failed to save address to kinvey");
}

@java.lang.Override
public void onPeerDisconnected(com.mobvoi.android.wearable.Node node) {
    android.util.Log.d(com.theteamgo.fancywatch.MainActivity.TAG, ("Node Disconnected" + (node.getId())));
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    if ((train1) != null) {
        train1.setSpeed(progress);
        java.lang.String text = train1.GetSpeedTxt();
        setSpeed(progress, train1);
    }
}

@java.lang.Override
public boolean onInterceptTouchEvent(android.view.MotionEvent ev) {
    android.view.View card = mCards.getFirst();
    mMyTouchListener.onTouch(card, ev);
    return super.onInterceptTouchEvent(ev);
}

@java.lang.Override
public void onItemPosted() {
    android.widget.Toast.makeText(this.getContext(), "You event has been created!", Toast.LENGTH_LONG).show();
    this.dismiss();
}

public void addMarker(com.android.yardsale.models.YardSale ys) {
    btFlip.setVisibility(View.GONE);
    com.android.yardsale.fragments.SaleMapFragment.yardSaleList = null;
    com.android.yardsale.fragments.SaleMapFragment.yardSale = ys;
    addYardSale(ys, false);
}

@java.lang.Override
public void onFailure(okhttp3.Call call, java.io.IOException e) {
    e.printStackTrace();
    android.widget.Toast.makeText(this, "错误：根据位置查询城市信息失败。", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setInitialFragment(com.shollmann.android.fogon.ui.fragments.FavoriteSongsFragment.newInstance());
}

@java.lang.Override
public void run() {
    org.matrix.matrixandroidsdk.activity.CommonActivityUtils.goToRoomPage(this.mAutomaticallyOpenedRoomId, this, mOpenedRoomIntent);
    this.mAutomaticallyOpenedRoomId = null;
    this.mOpenedRoomIntent = null;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    Wearable.DataApi.addListener(googleApiClient, this);
}

public static java.lang.String getLanguage(android.content.Context context) {
    return com.akexorcist.localizationactivity.LanguageSetting.getLanguagePreference(context).getString(com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE, com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE);
}

@java.lang.Override
public void handleFault(com.backendless.exceptions.BackendlessFault fault) {
    android.util.Log.d("DEBUG", fault.getMessage());
    android.widget.Toast.makeText(this, fault.getMessage(), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putBoolean("MyBoolean", false);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    switch (item.getItemId()) {
        case com.sg.clockwork.R.id.action_search :
            return true;
        case com.sg.clockwork.R.id.action_notification :
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.i(TAG, "MainActivity.onDestroy()");
    unregisterReceiver(receiver);
    super.onDestroy();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.main_tab_horder, container, false);
    isPrepared = true;
    lazyLoad();
    return view;
}

protected void showCurrentLocation() {
    android.location.Location location = edu.aku.hassannaqvi.dss_census.core.MainApp.locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
    if (location != null) {
        java.lang.String message = java.lang.String.format("Current Location \n Longitude: %1$s \n Latitude: %2$s", location.getLongitude(), location.getLatitude());
    }
}

public java.lang.String getType() {
    if (android.text.TextUtils.isEmpty(type))
        return "";
    else
        return type;
    
}

public void setListData(java.util.List<by.evgen.android.apiclient.bo.Category> data) {
    if (data != null) {
        mContent = data;
        by.evgen.android.apiclient.fragment.DetailsFragment.Callbacks callbacks = getCallbacks();
        callbacks.onSetContents(data);
    }
}

@java.lang.Override
public in.tosc.digitaloceanapp.adapters.DropletsAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.single_droplet, parent, false);
    itemView.setOnClickListener(this);
    return new in.tosc.digitaloceanapp.adapters.DropletsAdapter.ViewHolder(itemView);
}

public android.view.View getDecorView() {
    return getWindow().getDecorView();
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    if (data.moveToFirst()) {
        mCursorAdapter.swapCursor(data);
    }
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    globalRelayPin = position + 6;
    return com.rmc.thienle.jedi2.MainActivity.PlaceholderFragment.newInstance((position + 1), switchId);
}

@java.lang.Override
public void onDestroy() {
    android.widget.Toast.makeText(this, "notification service destroyed", Toast.LENGTH_LONG).show();
    mNotificationsFileObserver.stopWatching();
}

private void readPhotosName() throws java.io.IOException {
    android.content.res.AssetManager am = fragment.getContext().getAssets();
    photos = am.list("photo");
}

protected synchronized void buildGoogleApiClient() {
    android.widget.Toast.makeText(this, "buildGoogleApiClient", Toast.LENGTH_SHORT).show();
    mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build();
}

private void showTripProblemFragment(org.onebusaway.android.io.elements.ObaStop obaStop) {
    if ((mArrivalInfo) == null) {
        showArrivalListFragment(obaStop);
    }else {
        org.onebusaway.android.report.ui.ReportTripProblemFragment.show(this, mArrivalInfo, R.id.ri_report_stop_problem, false, this);
        mArrivalInfo = null;
    }
}

public boolean start() {
    if (!(_isStarted)) {
        _isStarted = native_start();
        android.util.Log.i(com.android.server.onewire.OneWireNativeService.TAG, "started!");
    }
    return _isStarted;
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.accept_imageview :
            processResponse(1);
            break;
        case R.id.cancel_imageview :
            processResponse(0);
            break;
        case R.id.wait_imageview :
            waitButtonAction(id);
            break;
    }
}

public void initProcess(android.os.IBinder token, int vuid) {
    if ((this.token) != null) {
        throw new java.lang.IllegalStateException("Token is exist!");
    }
    this.token = token;
    this.vuid = vuid;
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 1 :
            return new hu.gdf.norbi.tabbedpagewithfragments.fragments.MainFragment();
        case 2 :
            return new hu.gdf.norbi.tabbedpagewithfragments.fragments.CartFragment();
    }
    return new hu.gdf.norbi.tabbedpagewithfragments.fragments.WishListFragment();
}

protected void onCreate(android.os.Bundle savedInstanceState) {
    setTheme(R.style.Theme_AppCompat_Light_DarkActionBar);
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_calltheroll);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    init();
    addIslandsToDB();
    loginSavedUser();
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mp, int what, int extra) {
    java.lang.System.out.println("error with media player");
    return true;
}

@java.lang.Override
public android.view.LayoutInflater cloneInContext(android.content.Context newContext) {
    return new cn.nekocode.emojix.EmojixLayoutInflater(this, newContext);
}

public com.danimahardhika.cafebar.CafeBar.Builder icon(@android.support.annotation.Nullable
android.graphics.Bitmap icon) {
    mIcon = com.danimahardhika.cafebar.CafeBarUtil.toDrawable(mContext, icon);
    return this;
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeString(getName());
    dest.writeString(getLocation());
    dest.writeValue(getStartTime());
    dest.writeValue(getEndTime());
}

@java.lang.Override
@android.support.annotation.NonNull
public java.util.Iterator<cgeo.geocaching.maps.mapsforge.v6.caches.GeoitemLayer> iterator() {
    return this.geoitems.values().iterator();
}

public void onPageFinished(android.webkit.WebView view, java.lang.String address) {
    android.util.Log.e(ru.kuchanov.odnako.db.ServiceDB.LOG, "onPageFinished");
    view.loadUrl("javascript:console.log('MAGIC'+'<html>'+document.getElementsByTagName('html')[0].innerHTML+'</html>');");
}

@java.lang.Override
protected void onPreExecute() {
    alertDialog = new android.app.AlertDialog.Builder(context).create();
    alertDialog.setTitle("Login");
}

private void doTheMainTask() throws com.bitdubai.fermat_api.layer.osa_android.database_system.exceptions.CantDeleteRecordException, com.bitdubai.fermat_api.layer.osa_android.database_system.exceptions.CantLoadTableToMemoryException, com.bitdubai.fermat_api.layer.osa_android.database_system.exceptions.CantUpdateRecordException, com.bitdubai.fermat_bch_api.layer.crypto_module.crypto_address_book.exceptions.CantRegisterCryptoAddressBookRecordException, com.bitdubai.fermat_bch_api.layer.crypto_network.bitcoin.exceptions.CantBroadcastTransactionException, com.bitdubai.fermat_bch_api.layer.crypto_network.bitcoin.exceptions.CantGetBroadcastStatusException, com.bitdubai.fermat_bch_api.layer.crypto_network.bitcoin.exceptions.CantGetCryptoTransactionException, com.bitdubai.fermat_bch_api.layer.crypto_vault.asset_vault.exceptions.CantCreateBitcoinTransactionException, com.bitdubai.fermat_bch_api.layer.crypto_vault.exceptions.CantCreateDraftTransactionException, com.bitdubai.fermat_bch_api.layer.crypto_vault.exceptions.CantSignTransactionException, com.bitdubai.fermat_dap_api.layer.all_definition.exceptions.DAPException, com.bitdubai.fermat_dap_api.layer.dap_wallet.asset_issuer_wallet.exceptions.CantRegisterDebitException, com.bitdubai.fermat_dap_api.layer.dap_wallet.common.exceptions.CantGetTransactionsException, com.bitdubai.fermat_dap_api.layer.dap_wallet.common.exceptions.CantLoadWalletException {
    checkUnreadMessages();
    checkPendingSells();
    checkTimeout();
}

public static boolean getZoomControlPreferences(android.content.Context ctx) {
    return android.preference.PreferenceManager.getDefaultSharedPreferences(ctx).getBoolean(Constants.PREF_SHOW_ZOOM_CONTROL, false);
}

public void launchIncludeContactPicker(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.mhmt.autoreplymate.activities.ContactPicker.class);
    if (edit) {
        intent.putExtra(com.mhmt.autoreplymate.activities.AddEditRule.outgoingExtraTag, includeString);
    }
    startActivityForResult(new android.content.Intent(this, com.mhmt.autoreplymate.activities.ContactPicker.class), com.mhmt.autoreplymate.activities.AddEditRule.PICK_INCLUDE_CONTACT_REQUEST);
}

public void insert(int position, com.saltycode.android.material2.material_playground.model.FeedItem item) {
    mItems.add(position, item);
    notifyItemInserted(position);
}

@java.lang.Override
public void onClick(android.view.View v) {
    new com.pokemongostats.view.dialogs.AddPkmnDialog() {
        @java.lang.Override
        public void onPokemonAdded(final com.pokemongostats.model.bean.Pokemon addedPokemon) {
            mCallback.onPokemonSelected(addedPokemon);
        }
    }.show(getFragmentManager(), com.pokemongostats.view.dialogs.AddTrainerDialog.class.getName());
}

public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) {
    return false;
}

@java.lang.Override
public void onSelectDate(java.util.Date date, android.view.View view) {
    setSelectedDate(date);
    if ((calendarListener) != null) {
        calendarListener.onSelectDate(date);
    }
}

public void refreshDetails(com.example.test.samplemasterdetail.entities.RelatedTopic relatedTopic) {
    mTextView.setText(relatedTopic.getText());
    android.util.Log.d(com.example.test.samplemasterdetail.fragments.DetailsFragment.TAG, ("refreshDetails: " + (mTextView)));
}

@java.lang.Override
public void onConnected(android.os.Bundle connectionHint) {
    connectAttempts = 0;
    if (loadSavedGame)
        loadSavedLevel();
    
    loadGameState();
}

@java.lang.Override
public void onTextFrame(com.neovisionaries.ws.client.WebSocket websocket, com.neovisionaries.ws.client.WebSocketFrame frame) throws java.lang.Exception {
    android.util.Log.i("fg", "onTextFrame");
    adapter.notifyItemRangeChanged(0, adapter.getItemCount());
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, at.sw2017.q_up.InfoActivity.class);
    intent.putExtra("title", at.sw2017.q_up.PlaceDetails.title);
    intent.putExtra("id", at.sw2017.q_up.PlaceDetails.id);
    startActivity(intent);
}

public void switchToBoardView() {
    if ((_viewAnimatorMain.getDisplayedChild()) != (jwtc.android.chess.pubnub.PubnubChessActivity.VIEW_MAIN_BOARD))
        _viewAnimatorMain.setDisplayedChild(jwtc.android.chess.pubnub.PubnubChessActivity.VIEW_MAIN_BOARD);
    
    startSession();
}

public void flush(@android.support.annotation.Nullable
com.google.android.sambadocumentsprovider.SambaConfiguration.OnConfigurationChangedListener listener) {
    new com.google.android.sambadocumentsprovider.SambaConfiguration.FlushTask(listener).execute();
}

public static void e(java.lang.String s) {
    if ((com.joe.zatuji.Constant.IS_DEBUG) || (com.joe.zatuji.helper.SettingHelper.isDebug())) {
        android.util.Log.e("Zatuji", s);
    }
}

public void animateRecyclerView() {
    recyclerView.startAnimation(android.view.animation.AnimationUtils.loadAnimation(getActivity(), R.anim.bottom_to_top));
}

private android.graphics.Point convertSizeToLandscapeOrientation(android.graphics.Point size) {
    if (((getDisplaySurfaceOrientation()) % 180) != 0) {
        return size;
    }else {
        return new android.graphics.Point(size.y, size.x);
    }
}

private org.json.JSONArray transformCoordinate(com.google.android.gms.maps.model.LatLng latLng) throws org.json.JSONException {
    org.json.JSONArray jsonArray = new org.json.JSONArray();
    jsonArray.put(latLng.latitude);
    jsonArray.put(latLng.longitude);
    return jsonArray;
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(("Delete * FROM " + (com.example.john.knowwoodboardapp.DatabaseHandler.TABLE_NAME)));
    db.execSQL((("CREATE TABLE " + (com.example.john.knowwoodboardapp.DatabaseHandler.TABLE_NAME)) + " (ID INTEGER PRIMARY KEY AUTOINCREMENT,NAME TEXT,SCORE INTEGER)"));
}

public static boolean isInternetAvailable(android.content.Context context) {
    android.net.ConnectivityManager service = ((android.net.ConnectivityManager) (context.getSystemService(Context.CONNECTIVITY_SERVICE)));
    android.net.NetworkInfo info = service.getActiveNetworkInfo();
    return info == null;
}

public void suspend() {
    android.util.Log.d("mbta", "Suspending");
    if ((m_db) != null) {
        m_db.close();
        m_db = null;
    }
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.LOLLIPOP)
private void tintTaskDescription(int colorId, java.lang.String name, android.app.Activity activity) {
    android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription(name, null, activity.getResources().getColor(colorId));
    activity.setTaskDescription(tDesc);
}

@butterknife.OnClick(value = R.id.text_send_log)
public void onClickTextSendLog() {
    if (isDataLogSelected) {
        android.util.Log.d(Constants.LOG_TAG, "onClickTextSendLog");
        org.cmucreatelab.flutter_android.ui.dialogs.EmailDialog emailDialog = org.cmucreatelab.flutter_android.ui.dialogs.EmailDialog.newInstance(workingDataSet);
        emailDialog.show(getSupportFragmentManager(), "tag");
    }
}

public void onDrawerOpened(android.view.View drawerView) {
    super.onDrawerOpened(drawerView);
}

@java.lang.Override
public void onClick(android.view.View v) {
    it.bsdsoftware.library.BSDUtility.handleClickItem(getActivity(), image, gallery);
}

@java.lang.Override
protected void onPause() {
    if (logging)
        android.util.Log.d("MainActivity", "Start: onPause()");
    
    super.onPause();
    this.onClick(mStopButton);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    if ((keyword) != null) {
        android.util.Log.i("keyword-> ", ("" + (keyword)));
        search(keyword);
    }
    adapter.notifyDataSetChanged();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    app.mapquest.com.mapquest.api.Getting.syncLocalDatastoreWithServer();
}

private void quitTinyScreen(android.view.ViewGroup itemContainer) {
    mXibaVideoPlayer.quitTinyScreen(itemContainer);
    mXibaVideoPlayer.setTinyScreenEventCallback(null);
    savePlayerInfo();
}

@butterknife.OnClick(value = R.id.enterConnect3)
public void setmEnterConnect3() {
    android.widget.Toast.makeText(getActivity(), "The button works", Toast.LENGTH_SHORT).show();
    startActivity(new android.content.Intent(getActivity(), com.example.kevin_sct.beastchat.activities.GameActivity.class));
}

@java.lang.Override
public void onResume() {
    if (this.application.getKioskModeEnabled()) {
        android.content.Intent intent = new android.content.Intent(this, org.fourdnest.androidclient.ui.NewEggActivity.class);
        this.startActivity(intent);
        finish();
    }
    super.onResume();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d("debug", "quicklistener");
    attemptLogin();
    android.content.Intent myIntent = new android.content.Intent(this, app.com.example.shaunchua.sentientemr.NavigationActivity.class);
    this.startActivity(myIntent);
}

public static com.z299studio.pb.Application getInstance(android.app.Activity context) {
    if ((com.z299studio.pb.Application.__instance) == null) {
        com.z299studio.pb.Application.__instance = new com.z299studio.pb.Application(context);
    }
    com.z299studio.pb.Application.__instance.mContext = context;
    return com.z299studio.pb.Application.__instance;
}

@java.lang.Override
public void setCallback(com.scooter1556.sms.android.activity.Callback callback) {
}

public void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    startPushData = getPushFromIntent(intent);
    checkMessage(intent);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    if (position == 0) {
        return new com.codepath.apps.restclienttemplate.fragment.HomeTimelineFragment();
    }else
        if (position == 1) {
            return new com.codepath.apps.restclienttemplate.fragment.MentionsTimelineFragment();
        }else {
            return null;
        }
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    doFirst();
    setContentView(mContentView);
    findViews();
    mRes = getApplicationContext().getResources();
    doCreate();
}

public void setEmptyView(android.view.View emptyView) {
    setEmptyView(false, emptyView);
}

@java.lang.Override
public void onClick(android.view.View v) {
    org.wordpress.android.ui.people.RoleSelectDialogFragment.show(this, 0, mSite.isPrivate());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    context = this;
    android.content.SharedPreferences prefs = getSharedPreferences("MisPreferencias", Context.MODE_PRIVATE);
    setLocale(prefs.getString("lang", "undefined"));
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    android.util.Log.v(com.android.camera.VideoUI.TAG, ((("surfaceChanged: width = " + width) + ", height = ") + height));
    hidePreviewCover();
}

public static synchronized com.example.ajinkya.stayhealthysg.MySingleton getInstance(android.content.Context context) {
    if ((com.example.ajinkya.stayhealthysg.MySingleton.mInstance) == null) {
        android.util.Log.v(com.example.ajinkya.stayhealthysg.MySingleton.TAG, "Already called");
        com.example.ajinkya.stayhealthysg.MySingleton.mInstance = new com.example.ajinkya.stayhealthysg.MySingleton(context);
    }
    return com.example.ajinkya.stayhealthysg.MySingleton.mInstance;
}

@java.lang.Override
public void afterTextChanged(android.text.Editable arg0) {
    arrTemp[holder.ref] = java.lang.Double.parseDouble(arg0.toString());
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    initTaskDescription();
    initTheme();
    super.onCreate(savedInstanceState);
    mFragmentManagerHelper = new com.ebnbin.ebapplication.base.FragmentManagerHelper(getFragmentManager(), android.R.id.content);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mCallbackManager = CallbackManager.Factory.create();
    setupTokenTracker();
    setupProfileTracker();
    mTokenTracker.startTracking();
    mProfileTracker.startTracking();
}

private void connectServer() {
    android.util.Log.i("Connecting ", null);
}

private void updateCanvas(android.graphics.Canvas canvas) {
    drawIcons(canvas);
    drawSelectedIcon(canvas);
    if (!(mIsTouchUp)) {
        return ;
    }
}

public long getTimeRemaining() {
    if (BuzzWordsApplication.DEBUG) {
        android.util.Log.d(com.buzzwords.PauseTimer.TAG, "getTimeRemaining()");
    }
    return this.mTimeRemaining;
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    menu.add("Clear Fields");
    menu.add("Stop Arrival Notification");
    menu.add("Start Arrival Notification");
    return true;
}

public void onSensorChanged(android.hardware.SensorEvent event) {
    x = event.values[0];
    y = event.values[1];
    z = event.values[2];
}

public void reloadSentMessages() {
    android.support.v4.app.Fragment fragment = pageAdapter.getRegisteredFragment(2);
    ((au.com.wallaceit.reddinator.ui.AccountFeedFragment) (fragment)).reload();
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    android.util.Log.e("Error", "That didn't work!");
    android.widget.Toast.makeText(getApplicationContext(), "Unable to connect to server. Swipe down to try again.", Toast.LENGTH_SHORT).show();
}

private void drawLayoutCell(android.graphics.Canvas canvas) {
    canvas.drawRect(0, 1, getWidth(), getHeight(), cellPaint);
}

public int getUnitSystemType() {
    java.lang.String unitSystem = prefs.getString(org.droidplanner.android.utils.prefs.DroidPlannerPrefs.PREF_UNIT_SYSTEM, null);
    if (unitSystem == null)
        return org.droidplanner.android.utils.prefs.DroidPlannerPrefs.DEFAULT_UNIT_SYSTEM;
    
    return java.lang.Integer.parseInt(unitSystem);
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    java.lang.String query = "CREATE TABLE todoList(_id INTEGER PRIMARY KEY AUTOINCREMENT," + " task TEXT)";
    android.util.Log.d("SQL-create", query);
    db.execSQL(query);
}

@java.lang.Override
public void register(java.lang.String pluginName) throws android.os.RemoteException {
    if (plugins.contains(pluginName)) {
        plugins.add(pluginName);
    }
}

private void register() {
    android.util.Log.e(com.mingle.autolist.AutoList.Tag, "register  Bus");
    com.mingle.utils.BusProvider.getInstance().register(this);
}

private android.support.v4.app.Fragment getCurrentFragment() {
    return getSupportFragmentManager().findFragmentById(R.id.configuration_screen);
}

public void onConnected(android.os.Bundle connectionHint) {
    if (mRequestingLocationUpdates) {
        startLocationUpdates();
    }
}

@java.lang.Override
public void onNext(java.util.List<com.angelkjoseski.live_results.model.Fixture> value) {
    android.util.Log.d(com.angelkjoseski.live_results.service.LiveResultsFetcherService.TAG, "onNext: ");
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.System.out.println("Clicked!");
    se.chalmers.projektgrupplp4.studentlivinggbg.SearchWatcherActivity.toggle();
}

public void loadAllOnlineData() {
    android.util.Log.d("WeFriends", "Loading All Data.");
    asyncTask.retrieveAndHandleNewMessages();
    asyncTask.loadOnlineFriendList();
    initNotifierService();
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    myView.setVisibility(View.VISIBLE);
}

protected void addViewToBody(android.view.View child) {
    paragraph.addView(child);
}

@java.lang.Override
public void onRightCardExit(java.lang.Object dataObject) {
    android.widget.Toast.makeText(getActivity(), "Right!", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(new com.druger.firstandroidgame.GamePanel(this));
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
}

public void addButtonPressed() {
    android.content.Intent addIntent = new android.content.Intent(this, com.example.sung.timetracker.EditListActivity.class);
    listDatas = adapter.getListItems();
    addIntent.putExtra("LIST_DATA_TO_EDIT", listDatas);
    startActivityForResult(addIntent, com.example.sung.timetracker.ListActivity.REQ_ADD);
}

@java.lang.Override
public void onClick(android.view.View v) {
    doSearch();
    mSectionsPagerAdapter = new com.vchoose.Vchoose.MainPagerActivity.SectionsPagerAdapter(getSupportFragmentManager(), jsonlist);
    mViewPager.setAdapter(mSectionsPagerAdapter);
}

@java.lang.Override
public void onClick(android.view.View v) {
    LockControl(0, false);
}

@java.lang.Override
public void run() {
    android.content.Intent mainIntent = new android.content.Intent().setClass(this, com.bquiet.bquiet.activities.MainActivity.class);
    startActivity(mainIntent);
    finish();
}

public boolean onOptionsItemSelected(android.view.MenuItem item) {
    try {
        c.close();
        finish();
        return true;
    } catch (java.io.IOException e) {
        e.printStackTrace();
        return false;
    }
}

@java.lang.Override
public com.google.android.gms.vision.Tracker<com.google.android.gms.vision.face.Face> create(com.google.android.gms.vision.face.Face face) {
    return new facetracker.donlingliang.facetrack.MainActivity.GraphicFaceTracker(mGraphicOverlay);
}

@java.lang.Override
public void onAuthCreated(com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info) {
    com.demo.dropboxupload.utils.Preferences.setPreference(AppConstants.KEY_BOX_REFRESH_TOKEN, info.refreshToken(), mParentActivity);
    mParentActivity.startFilesActivity(info.accessToken());
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    mBluetoothAdapter.cancelDiscovery();
    android.util.Log.d(edu.gatech.cc.cs7470.facecard.View.activities.MainActivity.TAG, "onDestroy GoogleApiClient disconnected");
    if (mGoogleApiClient.isConnected()) {
        mGoogleApiClient.disconnect();
    }
    super.onDestroy();
}

@java.lang.Override
public void onDataInserted(int positionStart, int itemCount) {
    mAdapter.notifyItemRangeInserted(positionStart, itemCount);
    mEventBus.post(new de.fau.cs.mad.fablab.android.view.fragments.icalandnews.NewsListChangeEvent(mAdapter.getItemCount()));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initView();
    mContext = getBaseContext();
    mPresenter.attach();
}

private static void bindPreferenceSummaryToValue(android.preference.Preference preference) {
    preference.setOnPreferenceChangeListener(com.example.vijay.popularmovies.SettingsActivity.sBindPreferenceSummaryToValueListener);
    com.example.vijay.popularmovies.SettingsActivity.sBindPreferenceSummaryToValueListener.onPreferenceChange(preference, android.preference.PreferenceManager.getDefaultSharedPreferences(preference.getContext()).getString(preference.getKey(), ""));
}

@java.lang.Override
public void propertyChange(java.beans.PropertyChangeEvent propertyChangeEvent) {
    if (propertyChangeEvent.getPropertyName().equals("MatchList")) {
        android.util.Log.d("Yellow", "wallah");
        this.hasMatches = true;
        adapter.setHasMatches(true);
    }
}

@java.lang.Override
public void attach(uk.co.rossbeazley.trackmytrain.android.wear.trackingScreen.ServiceView serviceView) {
    this.serviceViews.add(serviceView);
    announceServiceViewAttached(serviceView);
    notificationManager.serviceViewAttached();
}

@java.lang.Override
public void onClick(android.view.View v) {
    cn.shyman.library.picture.picker.SPPicker.picker().count(9).compress(80).build(this, 1);
}

@java.lang.Override
protected void onPostExecute(final java.lang.Boolean success) {
    if (success) {
        java.lang.System.out.println("Remove Task succeed");
    }else {
        android.widget.Toast.makeText(getContext(), "内部错误，您的任务将自动关闭", Toast.LENGTH_LONG).show();
        java.lang.System.out.println("Remove Task Failed!");
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(this, mName, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onEnabled(android.content.Context context) {
    super.onEnabled(context);
    android.content.Intent intent = new android.content.Intent(de.reikodd.meinwidget.MainActivity.UpdateTimeService.UPDATE);
    intent.setPackage("de.reikodd.meinwidget");
    context.startService(intent);
    de.reikodd.meinwidget.MainActivity.mcontext = context;
}

public com.shapematchandroid.Score deduct(int pts) {
    return new com.shapematchandroid.Score((points -= pts));
}

private void scanPhoto(java.io.File imageFile) {
    android.content.Intent mediaScanIntent = new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
    android.net.Uri contentUri = android.net.Uri.fromFile(imageFile);
    mediaScanIntent.setData(contentUri);
    cordova.getActivity().sendBroadcast(mediaScanIntent);
}

protected void createLocationRequest() {
    mLocationRequest = new com.google.android.gms.location.LocationRequest();
    mLocationRequest.setInterval(UPDATE_INTERVAL);
    mLocationRequest.setFastestInterval(FATEST_INTERVAL);
    mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
    mLocationRequest.setSmallestDisplacement(DISPLACEMENT);
}

@java.lang.Override
public void onOpened(boolean isSuccess) {
    if (isSuccess) {
        com.fezrestia.android.viewfinderanywhere.control.OverlayViewFinderController.getInstance().getCurrentState().onCameraReady();
    }else {
        com.fezrestia.android.viewfinderanywhere.control.OverlayViewFinderController.getInstance().getCurrentState().onCameraBusy();
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View view) {
    mItemLongClickListener.onItemLongClick(view, realData.get(position), position);
    return true;
}

public void log(java.lang.String msg) {
    android.util.Log.d("MyApp", msg);
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.util.Log.d(com.example.notepad.NoteList.TAG, "onPause");
    if ((mSelectAll) != null) {
        changeDeleteMode(false);
    }
    mToolbar.setNavigationIcon(R.drawable.ic_event_note_white_3x);
}

public static float pxToDp(float px, android.content.Context context) {
    android.content.res.Resources resources = context.getResources();
    android.util.DisplayMetrics metrics = resources.getDisplayMetrics();
    float dp = px / ((metrics.densityDpi) / 160.0F);
    return dp;
}

public void setMenuItem(android.view.MenuItem menuItem) {
    this.menuItem = menuItem;
    if ((imageView) != null) {
        menuItem.setActionView(imageView);
        if (startAnimation) {
            startAnimation();
        }
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (enterAmount_editText.getText().toString().equals("")) {
        clear_Button.performClick();
    }else
        calculateBill();
    
}

@java.lang.Override
public boolean shouldOverrideUrlLoading(android.webkit.WebView view, android.webkit.WebResourceRequest request) {
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    mParentTab.handToProgressTab(item);
    v.setEnabled(false);
}

@java.lang.Override
public void onUnexpectedError(java.lang.Exception e) {
    org.matrix.androidsdk.util.Log.e(im.vector.util.VectorCallManager.LOG_TAG, ("## startIpCall(): onUnexpectedError Msg=" + (e.getLocalizedMessage())));
    callback.onStartCallFailed(e.getLocalizedMessage());
}

@java.lang.Override
public com.devbrackets.android.recyclerextdemo.ui.viewholder.SimpleTextViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = inflater.inflate(R.layout.simple_text_item, null);
    return new com.devbrackets.android.recyclerextdemo.ui.viewholder.SimpleTextViewHolder(view);
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar seekBar) {
    if ((org.gtlp.yasb.SoundActivity.soundPlayerInstance) != null) {
        oldState = org.gtlp.yasb.SoundActivity.soundPlayerInstance.isPlaying();
        org.gtlp.yasb.SoundActivity.soundPlayerInstance.pause();
    }
}

public void close() {
    if ((bluetoothGatt) == null) {
        return ;
    }
    disconnect();
    bluetoothGatt.close();
    bluetoothGatt = null;
    android.util.Log.d(DEBUG_TAG, "close() called");
}

private void restoreInstanceState(android.os.Bundle savedInstanceState) {
    com.jparkie.givesmehope.models.Anthology.getParcelable(savedInstanceState, mTrendingAnthology);
    mTrendingAdapter = new com.jparkie.givesmehope.views.adapters.TrendingAdapter(mTrendingAnthology.getStories());
    mTrendingView.setAdapterForRecyclerView(mTrendingAdapter);
}

@java.lang.Override
public void onEditCancelled() {
    android.widget.Toast.makeText(this, "They cancelled (fragment)", Toast.LENGTH_SHORT).show();
    net.idfernando.android.uitools.FragmentTools.removeFragment(this, net.idfernando.android.shoppinglist.EditShoppingListActivity.ADD_OR_EDIT_SHOPPING_ITEM_FRAGMENT);
}

private void setPermissions() {
    java.lang.String[] PERMISSIONS = new java.lang.String[]{ Manifest.permission.CAMERA , Manifest.permission.INTERNET , Manifest.permission.ACCESS_NETWORK_STATE };
    android.support.v4.app.ActivityCompat.requestPermissions(this, PERMISSIONS, MY_PERMISSIONS_REQUEST_CODE);
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    android.util.Log.e("READING_LIST", "called");
}

@java.lang.Override
public boolean onKeyUp(int keyCode, android.view.KeyEvent event) {
    return (keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_DOWN)) || (keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_UP));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration();
    initialize(new com.alaskalinuxuser.criticalvelocity.criticalvelocity(new com.alaskalinuxuser.criticalvelocity.AndroidStringProvider()), config);
}

@java.lang.Override
public void onConnected(android.os.Bundle arg0) {
    mSwipeRefreshLayout.setRefreshing(true);
    mLastLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
    startLocationUpdates();
}

@java.lang.Override
public void onConnected(android.os.Bundle connectionHint) {
    getDeviceLocation();
    com.google.android.gms.maps.SupportMapFragment mapFragment = ((com.google.android.gms.maps.SupportMapFragment) (this.getChildFragmentManager().findFragmentById(R.id.map)));
    mapFragment.getMapAsync(this);
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    updateSharedPreferencesWithControlValues();
}

private void refreshTitle() {
    java.lang.String title = getString(R.string.online_number);
    setTitle(java.lang.String.format(title, ((org.puresoftware.chocalandroid.Chocal.getUsers().size()) + 1)));
}

@java.lang.Override
public boolean handleElementClick(de.blau.android.osm.OsmElement element) {
    super.handleElementClick(element);
    if (element == (this.element)) {
        main.performTagEdit(element, null, false);
        return true;
    }
    return false;
}

@android.support.annotation.RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
@java.lang.Override
public void onClick(android.view.View view) {
    if (runningSpeurtocht) {
        stopQuest();
    }else {
        startQuest();
        getRandomGoal();
    }
}

@java.lang.Override
public void dismissProgressDialog() {
    if ((progress) != null) {
        progress.dismiss();
        progress = null;
    }else {
        android.util.Log.e("Progressbar", " is null!");
    }
}

@java.lang.Override
public void onNotificationClicked(java.util.List<com.gimbal.android.Communication> communications) {
    for (com.gimbal.android.Communication communication : communications) {
        if (communication != null) {
            addEvent(java.lang.String.format("Communication Clicked"));
        }
    }
}

private void UiOnAccidentDetected() {
    android.util.Log.d(maustemies.halyttaja.MainActivity.LOG_TAG_MAIN_ACTIVITY, "UiOnAccidentDetected()");
    new maustemies.halyttaja.ApplicationEnforcer().start();
    textViewStatus.setText(R.string.textAccidentDetected);
    textViewAdvice.setText(R.string.textAdvicePressStopToStopAlarm);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    stopPublish();
    quitRoom();
    stopRecordAnimation();
    showDetailDialog();
}

@java.lang.Override
public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture surfaceTexture) {
    imageView.setVisibility(View.VISIBLE);
    if ((mMediaPlayer) != null) {
        mMediaPlayer.stop();
        mMediaPlayer.reset();
        mMediaPlayer.release();
    }
    return false;
}

@java.lang.Override
public void onBackPressed() {
    if ((mBottomSheetBehavior.getState()) == (android.support.design.widget.BottomSheetBehavior.STATE_EXPANDED)) {
        android.util.Log.d("CDA", "onKeyDown Called");
        mBottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);
    }else {
        super.onBackPressed();
    }
}

@java.lang.Override
public void config() {
    com.booboot.vndbandroid.util.Callback.showToast(context, message);
    if ((com.booboot.vndbandroid.util.Callback.countDownLatch) != null)
        com.booboot.vndbandroid.util.Callback.countDownLatch.countDown();
    
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    finish();
    android.app.NotificationManager nm = ((android.app.NotificationManager) (getSystemService(getApplicationContext().NOTIFICATION_SERVICE)));
    nm.cancel(apier.com.lifttrak.RunWorkout.uniqueID);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
}

@android.support.annotation.NonNull
private java.lang.String getAuthor(org.jsoup.nodes.Document document) {
    org.jsoup.select.Elements author = document.select("div#content div b");
    if (author.isEmpty()) {
        return "";
    }else {
        return author.first().ownText();
    }
}

public void onDestroy() {
    super.onDestroy();
    android.content.SharedPreferences pref = getSharedPreferences("SearchMyCarPreferences", Context.MODE_PRIVATE);
    pref.edit().putInt("isEditFilter", 0).commit();
    android.util.Log.d("lis", "destroyEdit");
}

@com.facebook.react.uimanager.annotations.ReactProp(name = "rawData")
public void setRawData(com.github.barteksc.pdfviewer.PDFView view, java.lang.String rawData) {
    assetName = null;
    filePath = null;
    rawPDFData = android.util.Base64.decode(rawData, Base64.DEFAULT);
    display(false);
}

@java.lang.Override
public void onClick(android.view.View view) {
    boolean checked = ((android.widget.CheckBox) (view)).isChecked();
    object.setChecked((!checked));
}

private void showStopProblemFragment(org.onebusaway.android.io.elements.ObaStop obaStop) {
    org.onebusaway.android.report.ui.ReportStopProblemFragment.show(this, obaStop, R.id.ri_report_stop_problem, false, this);
}

public void setUpActionBar(android.support.v7.app.ActionBar actionBar) {
    actionBar.setDisplayHomeAsUpEnabled(true);
    actionBar.setHomeButtonEnabled(true);
}

@java.lang.Override
public void onRefresh() {
    cursorInterface.updateCursor();
    ((android.support.v4.widget.SwipeRefreshLayout) (findViewById(R.id.swiperefresh))).setRefreshing(false);
}

public static java.lang.String capitalized(@android.support.annotation.NonNull
final java.lang.String string) {
    return (string.substring(0, 1).toUpperCase()) + (string.substring(1));
}

@android.annotation.SuppressLint(value = "NewApi")
public void run() {
    if (_targetView != null) {
        if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.KITKAT)) {
            _targetView.evaluateJavascript(_jsString, null);
        }else {
            _targetView.loadUrl(("javascript:" + _jsString));
        }
    }
}

protected void onPostExecute(java.lang.Boolean result) {
    if (result)
        if (adminChose)
            new com.myApplication.yosef.finalproject.AdminChooseSeries.sendActiveSerie().execute();
        else
            android.widget.Toast.makeText(this, "Cant set game to be active", Toast.LENGTH_LONG).show();
        
    
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton arg0, boolean arg1) {
    if (arg1 == true) {
        int k = (arg0.getId()) % 100;
        mCheckedIndex[k] = 1;
    }
}

public void testGetLatestFileName() {
    assertEquals("hello_20141212_120108.png", io.evercam.androidapp.photoview.SnapshotManager.getLatestFileName(ALL_FILES_ARRAY));
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d(com.sunny.leaveme.services.MonitorService.TAG, "MonitorService onDestroy");
    mSensorReader.stop();
    mLocalBroadcastManager.unregisterReceiver(mLocalBroadcastReceiver);
    unregisterReceiver(mLockScreenReceiver);
    stopMonitorTimer();
    stopScreenBlocker();
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    setFadeOutAnimation();
    mFabTrackerVisibility = android.view.View.INVISIBLE;
    if ((mFabVisibility) == (android.view.View.VISIBLE))
        mFloatingActionButton.setVisibility(View.INVISIBLE);
    
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    org.digitalillusion.droid.iching.utils.Utils.setContext(getApplicationContext());
    loadSettings();
    if ((current.viewId) == null) {
        gotoMain();
    }
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent event) {
    switch (event.sensor.getType()) {
        case android.hardware.Sensor.TYPE_LINEAR_ACCELERATION :
            showFormulaResult();
            break;
        case android.hardware.Sensor.TYPE_ROTATION_VECTOR :
            showFormulaResult();
            break;
    }
}

public void bind() {
    android.content.Intent i = new android.content.Intent(mContext, org.tlc.whereat.services.LocationService.class);
    mContext.bindService(i, mLocationServiceConnection, Context.BIND_AUTO_CREATE);
}

@java.lang.Override
public void onError() {
    mProgress.setVisibility(View.GONE);
    android.widget.Toast.makeText(getActivity(), getFlexString(R.string.IMG_OPEN_ERROR), Toast.LENGTH_SHORT).show();
}

public void setPanelHolderAndPosition(cz.metaverse.android.bilingualreader.manager.PanelHolder panelHolder, int position) {
    android.util.Log.d(cz.metaverse.android.bilingualreader.selectionwebview.SelectionWebView.LOG, "setPanelHolderAndPosition");
    this.panelHolder = panelHolder;
    panelPosition = position;
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<java.util.List<de.dreier.mytargets.shared.models.Arrow>> loader, java.util.List<de.dreier.mytargets.shared.models.Arrow> data) {
    setList(arrowDataSource, data, new de.dreier.mytargets.fragments.ArrowFragment.ArrowAdapter());
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (isConnected) {
        simpleBluetooth.sendData(dataToSend.getText().toString());
    }
}

@java.lang.Override
public void onError(java.lang.String error) {
    hideProgressDialog();
    android.widget.Toast.makeText(this, error, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public com.devbrackets.android.recyclerextdemo.ui.viewholder.SimpleTextViewHolder onCreateChildViewHolder(android.view.ViewGroup parent) {
    android.view.View view = inflater.inflate(R.layout.simple_text_item, null);
    return new com.devbrackets.android.recyclerextdemo.ui.viewholder.SimpleTextViewHolder(view);
}

protected void parseFeed() {
    new com.treble.www.treble.GetFeed(getApplicationContext()).execute();
    android.util.Log.d("doop", "okayyyyyy");
}

public static void hidePopup() {
    final android.view.WindowManager windowManager = ((android.view.WindowManager) (com.comag.aku.symptomtracker.services.NotificationService.getContext().getSystemService(Context.WINDOW_SERVICE)));
    windowManager.removeView(com.comag.aku.symptomtracker.services.InputPopup.popupLayout);
}

@java.lang.Override
public boolean onMenuItemActionCollapse(android.view.MenuItem menuItem) {
    final android.widget.ImageView toolbar_logo = ((android.widget.ImageView) (getActivity().findViewById(R.id.toolbar_logo)));
    toolbar_logo.setVisibility(View.VISIBLE);
    return true;
}

@java.lang.Override
public info.martinmarinov.drivers.usb.DvbTuner create(info.martinmarinov.drivers.usb.rtl28xx.Rtl28xxDvbDevice.Rtl28xxI2cAdapter adapter, info.martinmarinov.drivers.usb.DvbFrontend.I2GateControl i2GateControl, android.content.res.Resources resources) throws info.martinmarinov.drivers.DvbException {
    return new info.martinmarinov.drivers.usb.rtl28xx.R820tTuner(26, 2, adapter, RafaelChip.CHIP_R820T, info.martinmarinov.drivers.usb.rtl28xx.Rtl28xxTunerType.RTL2832_R820T.xtal, i2GateControl, resources);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    com.planyourexchange.app.PlanYourExchangeApplication.getPlanYourExchangeComponent(getActivity()).inject(this);
}

@java.lang.Override
public void processResponse(java.lang.String output) {
    android.util.Log.d(com.udacity.gradle.builditbigger.MainActivity.YOLOPAD, ((com.udacity.gradle.builditbigger.MainActivity.RESPONSE_FROM_SERVER_IS) + output));
    findViewById(R.id.progress_bar).setVisibility(View.VISIBLE);
    result = output;
}

public int getItemCount() {
    if ((getRealmAdapter()) != null) {
        int size = getRealmAdapter().getCount();
        android.util.Log.e("Note Adapter: ", ("Realm adapter size : " + size));
        return size;
    }
    return 0;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    stopPublish();
    stopRecordAnimation();
    showDetailDialog();
}

public static void i(java.lang.String tag, java.lang.String msg) {
    if (com.cjt2325.cameralibrary.BuildConfig.DEBUG)
        android.util.Log.i(tag, msg);
    
}

@java.lang.Override
protected void onPostExecute(java.lang.String s) {
    super.onPostExecute(s);
    jsonAccessToken = s;
    android.widget.Toast.makeText(this, jsonAccessToken, Toast.LENGTH_SHORT).show();
    checkExistUserAccount();
}

@java.lang.Override
public void onRequestPermissionsResult(int requestCode, @android.support.annotation.NonNull
java.lang.String[] permissions, @android.support.annotation.NonNull
int[] grantResults) {
    switch (requestCode) {
        case MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION :
            {
                return ;
            }
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (org.catrobat.catroid.ProjectManager.getInstance().getComingFromScriptFragmentToSoundFragment()) {
        org.catrobat.catroid.ProjectManager.getInstance().setKillSoundFragmentAfterAddButtonClickedInScriptFragment(true);
    }
    fragment.addSoundRecord();
    this.dismiss();
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    android.util.Log.i(name.chadschultz.nearbyapidemo.MainActivity.TAG, "onConnected()");
    showMessage("onConnected()");
    subscribe();
}

public synchronized boolean deleteFavorite(java.lang.String imdbID) {
    android.content.SharedPreferences.Editor editor = sharedPreferences.edit();
    editor.remove(imdbID);
    editor.apply();
    return true;
}

private void writeStringToParcel(android.os.Parcel p, java.lang.String s) {
    p.writeByte(((byte) (s != null ? 1 : 0)));
    p.writeString(s);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    me.ccrama.redditslide.Reddit.forceRestart(this, true);
}

public void unregisterAllReceiver() {
    for (android.content.BroadcastReceiver br : receivers) {
        super.unregisterReceiver(br);
    }
    receivers.clear();
}

public void oneone(android.view.View v) {
    (counter)--;
    android.widget.Toast.makeText(con, ("Counted" + (counter)), Toast.LENGTH_LONG).show();
}

public void onDrawerClosed(android.view.View view) {
    super.onDrawerClosed(view);
    setActionBarTitle(mTitle);
    invalidateOptionsMenu();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(context, nyc.c4q.syd.updateme.JobActivity.class);
    intent.putExtra("jobs", ((java.io.Serializable) (jobs)));
    context.startActivity(intent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    Upload.uploadGridList.add(vn.mbm.phimp.me.gallery.PhimpMeGallery.filePath.get(vn.mbm.phimp.me.gallery.PhimpMeGallery.position));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initiateButtons();
    setContentView(R.layout.activity_stop_error);
    android.widget.Toast toast = android.widget.Toast.makeText(this.getApplicationContext(), "STOP STOP STOP!!!", Toast.LENGTH_LONG);
    toast.show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    task.setStatus(Task.STATUS_UNFINISHED);
    setTextFor(R.id.txt_share_task_edit_status, com.example.vietnguyen.models.Task.STATUS[com.example.vietnguyen.models.Task.STATUS_UNFINISHED]);
    task.save();
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.System.out.println("clicked button2!");
    new com.example.robin.androidproject3b.MainActivity.SendDataToServerTask().execute();
}

public void toggleMapType() {
    if ((mMap.getMapType()) == (com.google.android.gms.maps.GoogleMap.MAP_TYPE_SATELLITE)) {
        mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);
    }else {
        mMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);
    }
}

@java.lang.Override
public void onAnimationStart(final android.animation.Animator animation) {
    if (!(isCancelled())) {
        imageView.setAlpha(0.0F);
        imageView.setImageBitmap(null);
        imageView.setImageDrawable(artwork);
    }
}

public void onAccuracyChanged(android.hardware.Sensor s, int i) {
    notify("Accuracy changed", Toast.LENGTH_SHORT);
    return ;
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<java.util.ArrayList<com.example.oluwatimilehin.moviebuff.Movies>> loader) {
    loader.forceLoad();
}

@java.lang.Override
public void onClick(android.view.View v) {
    CheckAnswer();
    curQ = (curQ) + 1;
    cDown.cancel();
    QuestionEngine();
}

@java.lang.Override
public void setLocation(android.location.Location location) {
    mUserLocation = location;
    shareLocation();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initData();
    com.changhong.touying.activity.Utils.requireServerVolume(this);
    com.changhong.touying.activity.QuickQuireMessageUtil.getInstance().setFeedbackListener(this, this);
    initViews();
    initEvents();
}

@java.lang.Override
public void onClick(android.view.View v) {
    es.dmoral.toasty.Toasty.success(this, "Change Location", Toast.LENGTH_SHORT).show();
    showCityInput();
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    if (!(init)) {
        postInvalidateDelayed(50);
        android.util.Log.e(me.itsrishi.exercisecounter.views.StatsView.TAG, "Data not set");
        return ;
    }
    clearScreen(canvas);
    drawGraph(canvas);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent activity = new android.content.Intent(this, com.example.android.onthespot.MenuActivity.class);
    startActivity(activity);
    finish();
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String s) {
    textSize.setTextSize(storage.getTextSize());
    categoryText.setTextSize(storage.getTextSize());
}

private static void close(android.database.sqlite.SQLiteDatabase db) {
    if ((db != null) && (db.isOpen()))
        db.close();
    
}

public com.ninjapiratestudios.trackercamera.fileContent.FileContent getFileContent() {
    java.io.File f = new java.io.File(android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES), "Tracker_Camera");
    java.io.File[] files = f.listFiles();
    com.ninjapiratestudios.trackercamera.fileContent.FileContent fC = new com.ninjapiratestudios.trackercamera.fileContent.FileContent(files);
    return fC;
}

@java.lang.Override
protected void onProgressUpdate(java.lang.Object[] values) {
    super.onProgressUpdate(values);
    android.util.Log.v("Log", "progress updating");
    notifyDataSetChanged();
}

private void onThreadWait() {
    try {
        synchronized(this) {
            android.util.Log.d(com.rustfisher.fisherandroidchart.MultiLinesChartSView.TAG, "DrawThread waiting");
            this.wait();
        }
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
}

public static boolean externalBrowserEnabled(android.content.Context context) {
    return android.support.v7.preference.PreferenceManager.getDefaultSharedPreferences(context).getBoolean(context.getString(R.string.pref_custom_tab), false);
}

protected void init() {
    setScaleType(ImageView.ScaleType.MATRIX);
    android.graphics.drawable.Drawable d = getDrawable();
    android.graphics.Bitmap bmp = ((android.graphics.drawable.BitmapDrawable) (d)).getBitmap();
    setImageBitmapReset(bmp, false);
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if ((requestCode == (EditFragment.REQUEST_TAKE_PHOTO)) && (resultCode == (android.app.Activity.RESULT_OK)))
        mEditFrag.onCameraActivityResult();
    
}

public static com.amagh.bakemate.ui.StepDetailsFragment newInstance(com.amagh.bakemate.models.Step step, int stepId) {
    android.os.Bundle args = new android.os.Bundle();
    args.putParcelable(com.amagh.bakemate.ui.StepDetailsFragment.BundleKeys.STEP, step);
    com.amagh.bakemate.ui.StepDetailsFragment fragment = new com.amagh.bakemate.ui.StepDetailsFragment();
    fragment.setArguments(args);
    return fragment;
}

public boolean storeWithId(android.content.Context context) {
    boolean wasStore;
    wasStore = insert(context);
    return wasStore;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    new com.example.adrian.leagueplayers.activity.GetPlayersTask(this).execute();
    new com.example.adrian.leagueplayers.activity.GetScheduleTask(this).execute();
}

@java.lang.Override
public void into(android.widget.ImageView imageView) {
    com.bumptech.glide.DrawableRequestBuilder drawableRequestBuilder = build();
    drawableRequestBuilder.into(imageview);
}

private void showRecordWeightNotification() {
    showNotification(R.string.record_weight_notification, R.string.record_weight, new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View v) {
            android.view.View recordWeight = findViewById(R.id.record_weight);
            showWeightDialog(recordWeight);
            hideNotification();
        }
    });
}

@java.lang.Override
public float SendOSCMessage(java.lang.String message) {
    if (!(com.teotigraphix.caustk.core.CaustkEngine.DEBUG_MESSAGES)) {
        android.util.Log.d(com.teotigraphix.caustk.core.generator.Caustic.TAG, ("Message: " + message));
    }
    return super.SendOSCMessage(message);
}

@java.lang.Override
public void onTaskDone() {
    ((android.support.v7.app.ActionBarActivity) (getActivity())).setSupportProgressBarIndeterminateVisibility(false);
}

@org.junit.Test
public void testToRunAfterSync() {
    android.support.test.espresso.Espresso.onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.recipeGrid)).perform(android.support.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition(0, android.support.test.espresso.action.ViewActions.click()));
}

@java.lang.Override
public void onResult(com.google.android.gms.common.api.Status status) {
    mGoogleApiClient = buildGoogleApiClient();
    savedCallbackContext.success("disconnected");
}

@java.lang.Override
public void onClick(android.view.View view) {
    deckEmptyDialog.cancel();
    resetGame();
    deck = new com.micste.busdriver.Deck();
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    showPopupMenu(view);
    return false;
}

public void onServiceDisconnected(android.content.ComponentName className) {
    mStumblerService = null;
    android.util.Log.d(LOG_TAG, "Service disconnected", new java.lang.Exception());
}

void loadImage(android.widget.ImageView imageView, java.lang.String url, int index);

@java.lang.Override
protected void onStart() {
    super.onStart();
    synchronized(szu.bdi.hybrid.demo.MainActivity._is_main_init) {
        if ((szu.bdi.hybrid.demo.MainActivity._is_main_init) == null) {
            szu.bdi.hybrid.demo.MainActivity._is_main_init = true;
            fwdToMain();
        }
    }
    android.util.Log.v(szu.bdi.hybrid.demo.MainActivity.LOGTAG, ".onStart()");
}

public void deleteBatch(android.content.Context context, int position) {
    com.github.jmuthu.poovali.model.Batch batch = batchList.get(position);
    batchList.remove(position);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    changeSong(position);
    play();
    layoutDrawer.closeDrawers();
}

protected static boolean isSupported(int formatSupport, boolean allowExceedsCapabilities) {
    int maskedSupport = formatSupport & (com.google.android.exoplayer2.RendererCapabilities.FORMAT_SUPPORT_MASK);
    return (maskedSupport == (com.google.android.exoplayer2.RendererCapabilities.FORMAT_HANDLED)) || (allowExceedsCapabilities && (maskedSupport == (com.google.android.exoplayer2.RendererCapabilities.FORMAT_EXCEEDS_CAPABILITIES)));
}

@java.lang.Override
protected void onDestroy() {
    android.util.Log.i(com.holger.mashpit.TempChartActivity.DEBUG_TAG, "onDestroy");
    MashPit.sensors.clear();
    snb.stopEvents();
    super.onDestroy();
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent event) {
    if ((event.sensor.getType()) == (android.hardware.Sensor.TYPE_ACCELEROMETER))
        filterAccValues(event);
    else
        if ((event.sensor.getType()) == (android.hardware.Sensor.TYPE_LINEAR_ACCELERATION))
            filterLinAccValues(event);
        
    
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    com.rupik.newstoday.NewsCategory category = newsCategories.get(position);
    return com.rupik.newstoday.SuperAwesomeCardFragment.newInstance(position, category);
}

private static void invalidate(android.content.Context context) {
    com.mishiranu.dashchan.widget.ClickableToast clickableToast = com.mishiranu.dashchan.widget.ClickableToast.TOASTS.get(com.mishiranu.dashchan.widget.ClickableToast.obtainBaseContext(context));
    if ((clickableToast != null) && (clickableToast.mShowing))
        clickableToast.updateLayoutAndRealClickable(false);
    
}

public void onEvent(java.lang.Object event) {
    android.util.Log.w("onEvent", (" " + event));
    if (event instanceof org.tribler.android.restapi.json.EventsStartEvent) {
        runOnUiThread(() -> {
            progressBar.setVisibility(View.GONE);
        });
    }
}

public void init(android.content.Context context) {
    modelSql = new com.example.nofarcohenzedek.dogo.Model.Sql.ModelSql(context);
    modelParse = new com.example.nofarcohenzedek.dogo.Model.Parse.ModelParse(context);
}

@java.lang.Override
public void onConnected(android.os.Bundle connectionHint) {
    if (android.util.Log.isLoggable(com.example.android.sunshine.app.DigitalWatchFaceService.TAG, Log.DEBUG)) {
        android.util.Log.d(com.example.android.sunshine.app.DigitalWatchFaceService.TAG, ("onConnected: " + connectionHint));
    }
    requestWeatherDataToPhone();
    updateConfigDataItemAndUiOnStartup();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(B1.getText().equals(""))) {
        b2.setVisibility(View.VISIBLE);
        B2.setVisibility(View.GONE);
        (tag_num)--;
    }
}

public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) {
    java.lang.System.out.println("***STATUS_CHANGED");
    writeLatLongToScreen();
}

private static com.google.android.gms.wearable.Asset createAssetFromBitmap(android.graphics.Bitmap bitmap) {
    final java.io.ByteArrayOutputStream byteStream = new java.io.ByteArrayOutputStream();
    bitmap.compress(Bitmap.CompressFormat.PNG, 100, byteStream);
    return com.google.android.gms.wearable.Asset.createFromBytes(byteStream.toByteArray());
}

private void resumeRemoteVideo() {
    timber.log.Timber.d("VideoDetailsFragment : resumeRemoteVideo()");
    if ((castSession) != null) {
        com.google.android.gms.cast.framework.media.RemoteMediaClient remoteMediaClient = castSession.getRemoteMediaClient();
        if (remoteMediaClient != null) {
            remoteMediaClient.play();
        }
    }
}

private void stopImgWork() {
    if ((m_DownloadImageTask.getStatus()) == (com.google.android.gms.common.api.Status.RUNNING)) {
        m_DownloadImageTask.cancel(true);
    }
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return com.teamlz.cheTajo.fragment.HomeListFragment.newIstance();
        case 1 :
            return com.teamlz.cheTajo.fragment.BlankFragment.newInstance(position);
        default :
            return null;
    }
}

@java.lang.Override
protected void applyTransformation(float interpolatedTime, android.view.animation.Transformation t) {
    float trans = interpolatedTime * totalHeight;
    mToolbarLayout.setTranslationY((trans - totalHeight));
    setWebViewTranslation(trans);
}

@java.lang.Override
@org.xwalk.core.internal.XWalkAPI
public void setLayerType(int layerType, android.graphics.Paint paint) {
    if (layerType != (LAYER_TYPE_SOFTWARE)) {
        super.setLayerType(layerType, paint);
    }else {
        android.util.Log.w(org.xwalk.core.internal.XWalkViewInternal.TAG, "LAYER_TYPE_SOFTWARE is not supported by XwalkView");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.pm.ActivityInfo activityInfo = mResolveInfo.activityInfo;
    android.content.Intent i = new android.content.Intent(android.content.Intent.ACTION_MAIN).setClassName(activityInfo.applicationInfo.packageName, activityInfo.name).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    startActivity(i);
}

@java.lang.Override
public void onSuccess(com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot) {
    android.widget.Toast.makeText(this, "Transcript Download Complete", Toast.LENGTH_SHORT).show();
    mProgress.dismiss();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.support.design.widget.Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG).setAction("Action", null).show();
    startActivity(new android.content.Intent(this, io.rasprovers.remotus.activities.NewDownloadActivity.class));
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    running = true;
    progressDialog = android.app.ProgressDialog.show(this, "", "Please wait...", true, false);
    progressDialog.setCanceledOnTouchOutside(true);
}

@java.lang.Override
public void reloadListFragment() {
    android.util.Log.i(org.openbmap.activities.StartscreenActivity.TAG, "Refreshing session list fragment");
    final org.openbmap.activities.SessionListFragment sessionFrag = ((org.openbmap.activities.SessionListFragment) (getSupportFragmentManager().findFragmentByTag("session")));
    if (sessionFrag != null) {
        sessionFrag.refreshAdapter();
    }
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    displayItem(0);
}

public void setItemsArray(final java.util.List<?> list) {
    android.widget.ArrayAdapter<?> adapter = new android.widget.ArrayAdapter(getContext(), android.R.layout.simple_spinner_item, list);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    mSpinner.setAdapter(adapter);
}

@java.lang.Override
public void onClick(android.view.View view) {
    player.setPlayWhenReady((!(player.getPlayWhenReady())));
}

public static java.lang.String getAccessTokenPref(android.content.Context context) {
    android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
    java.lang.String accessToken = sharedPreferences.getString(context.getString(R.string.access_token_pref_key), "0");
    return accessToken;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initNavigationManager();
    initActionBarHelper();
    initViews();
    initActionBar();
    setUpFragments();
}

@android.support.annotation.Nullable
public static java.lang.String getEngineIdentifier(final org.mozilla.gecko.search.SearchEngine searchEngine) {
    final java.lang.String identifier = searchEngine.getIdentifier();
    return android.text.TextUtils.isEmpty(identifier) ? null : identifier;
}

public void onItemSelected(android.widget.AdapterView<?> Spinner_D2_Adapter_View, android.view.View v, int position, long row) {
    Spinner_D2_Choice = Spinner_D2_Adapter_View.getItemAtPosition(position).toString();
    onDraw(tempCanvas);
    findViewById(R.id.map).invalidate();
}

@java.lang.Override
public void onClick(android.view.View view) {
    checkAnswer(false);
}

@java.lang.Override
public void onCTPCallback(com.android.futures.entity.TradeEntity entity) {
    entity.setInstrument(mCurrentInstrument);
    mMdSequence.add(entity);
    if ((entity.getType()) != (TradeEntity.type.MD)) {
        onTradeNotification(entity);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    submitAnswer(true);
}

@java.lang.Override
protected void onProgressUpdate(java.lang.Object... object) {
    super.onProgressUpdate(object);
    android.util.Log.d("progressUpdate", (("progress: " + (((java.lang.Integer) (object[0])) * 2)) + "%"));
}

@java.lang.Override
public void displaySurveyError() {
    android.view.View coordinatorLayout = getRootView().findViewById(R.id.coordinator_layout);
    snackBarManager.displaySnackBar(coordinatorLayout, R.string.surveys_error, getContext());
}

public void previousClick(android.view.View view) {
    (currentPosition)--;
    viewPager.setCurrentItem(currentPosition, true);
    updateProgress();
}

public static android.content.UriMatcher buildUriMatcher() {
    android.content.UriMatcher uriMatcher = new android.content.UriMatcher(android.content.UriMatcher.NO_MATCH);
    me.androidbox.busbymovies.data.MovieContentProvider.sUriMatcher.addURI(MovieContract.AUTHORITY, MovieContract.PATH_MOVIE, 100);
    me.androidbox.busbymovies.data.MovieContentProvider.sUriMatcher.addURI(MovieContract.AUTHORITY, ((MovieContract.PATH_MOVIE) + "/#"), 101);
    return uriMatcher;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    displayItem(position);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    adapter = new com.alexgilleran.hiitme.activity.ProgramListFragment.ProgramAdapter(com.alexgilleran.hiitme.data.ProgramDAOSqlite.getInstance(getActivity().getApplicationContext()).getProgramList());
    setListAdapter(adapter);
}

@java.lang.Override
public boolean onDown(android.view.MotionEvent event) {
    android.util.Log.e(com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG, "ScoreView onDown()");
    return true;
}

protected void onStop() {
    LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, ((com.google.android.gms.location.LocationListener) (this)));
    if ((mGoogleApiClient) != null) {
        mGoogleApiClient.disconnect();
    }
    super.onStop();
}

@java.lang.Override
public void liked(com.like.LikeButton likeButton) {
    firebaseutils.setlike(offlinedata.Id);
    holder.favoriteButton.setLiked(true);
    android.widget.Toast.makeText(com.example.massa.luxvilla.adaptadores.adaptadorrvtodasoffline.ctx, offlinedata.Id, Toast.LENGTH_LONG).show();
}

public android.database.Cursor getData() {
    android.database.Cursor cursor = db.rawQuery(("SELECT * FROM " + (HabitContract.HabitEntry.TABLE)), null);
    cursor.moveToFirst();
    return cursor;
}

@java.lang.Override
public void onClick(android.view.View view) {
    selectedButton.setBackgroundColor(Color.RED);
}

@android.support.annotation.Nullable
@butterknife.OnClick(value = R.id.stop)
void stop() {
    presenter.stopStream(getCachedMelody());
}

@java.lang.Override
protected void handleMessage(android.os.Message msg) {
    switch (msg.what) {
        case com.oneplus.camera.ui.PreviewGallery.MSG_START_BURST_CAPTURE :
            this.startBurstCapture();
            break;
        default :
            super.handleMessage(msg);
            break;
    }
}

public void updateStorageLocation(android.content.Context ctx, java.lang.String mount) {
    updateStorageLocation(ctx);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    setHasOptionsMenu(true);
    com.defch.blogwbly.util.LogUtil.v(com.defch.blogwbly.fragments.FragmentContainer.TAG, java.lang.Integer.toString(containerLayout.key));
    return inflater.inflate(containerLayout.layoutId, container, false);
}

public void onClick(android.view.View v) {
    final android.support.v4.app.FragmentTransaction ft = getFragmentManager().beginTransaction();
    ft.replace(R.id.main_frame, new nudelsquad.nudelcalendar.CreateTaskView(1), "NewFragmentTag");
    ft.commit();
}

public static java.lang.String decodeUrl(java.lang.String url) {
    if (url == null)
        return null;
    
    return jp.hazuki.yuzubrowser.utils.UrlUtils.decodeUrl(android.net.Uri.parse(url)).toString();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    if ((startAndStopBool) == true) {
    }else {
        cordinations = (("X:" + (location.getLatitude())) + "Y:") + (location.getLongitude());
    }
}

@java.lang.Override
public void onNetworkError(java.lang.Exception e) {
    org.matrix.androidsdk.util.Log.e(im.vector.util.VectorCallManager.LOG_TAG, ("## startIpCall(): onNetworkError Msg=" + (e.getMessage())));
    callback.onStartCallFailed(e.getLocalizedMessage());
}

private void nextActivity(java.lang.Class activity) {
    android.content.Intent intentActivity = new android.content.Intent(this, activity);
    startActivity(intentActivity);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialogInterface) {
    onDialogDismiss();
    creatingNewFolder = false;
}

protected android.content.Context getContext() {
    android.content.Context context = null;
    if ((weakContext) != null) {
        context = weakContext.get();
    }
    return context;
}

private java.lang.String getEditText() {
    android.widget.EditText name = ((android.widget.EditText) (findViewById(R.id.edit)));
    return name.getText().toString();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    recoveryArrayList.clear();
    acceleratorArrayList.clear();
    service_is_paused = false;
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    callbackManager.onActivityResult(requestCode, resultCode, data);
}

@java.lang.Override
public void onConnectionSuspended(int i) {
    android.widget.Toast.makeText(this, "onConnectionSuspended", Toast.LENGTH_SHORT).show();
}

public static com.teegarcs.mocker.MatchingInterceptor getMatchingInterceptor(android.content.Context context) {
    return null;
}

void onModeChanged(@org.androidannotations.annotations.Receiver.Extra
final com.wolkabout.hexiwear.model.Mode mode) {
    this.mode = mode;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.FragmentManager manager = getSupportFragmentManager();
    com.abhijitvalluri.android.fitnotifications.TimePickerFragment dialog = com.abhijitvalluri.android.fitnotifications.TimePickerFragment.newInstance(mStartTimeHour, mStartTimeMinute, mStopTimeHour, mStopTimeMinute, stopTimeFormatted, is24hFormat, com.abhijitvalluri.android.fitnotifications.AppSettingsActivity.START_TIME_REQUEST);
    dialog.show(manager, com.abhijitvalluri.android.fitnotifications.AppSettingsActivity.DIALOG_TIME);
}

@java.lang.Override
public void succeed() {
    mRVAdapter.setList(com.pkhope.diary.MyApplication.getDoc().getDiaryManager().getList());
    mRVAdapter.notifyDataSetChanged();
    android.widget.Toast.makeText(getApplicationContext(), "Load succeed", Toast.LENGTH_SHORT).show();
}

public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (resultCode == (RESULT_OK)) {
        loadImage(data.getData());
        mImagePath = data.getData().toString();
    }
}

@java.lang.Override
public void onLoaderReset(android.content.Loader<android.database.Cursor> loader) {
    nameEditText.setText("");
    priceEditText.setText("");
    quantityText.setText("0");
    suppliersEmailEditText.setText("");
    productsImageView.setImageURI(null);
}

public void startBrowser() {
    java.lang.String url = com.freedom.freeclient.freeclient.util.Util.readFromProxyFile(proxyFile, this);
    android.net.Uri uriUrl = android.net.Uri.parse(url);
    android.content.Intent launchBrowser = new android.content.Intent(android.content.Intent.ACTION_VIEW, uriUrl);
    startActivity(launchBrowser);
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    if ((firstLaunch) && (!(getIntent().hasExtra(com.bubelov.coins.ui.activity.MapActivity.NOTIFICATION_AREA_EXTRA)))) {
        moveToLastLocation();
    }
}

@java.lang.Override
public boolean performEditorAction(int editorAction) {
    boolean shouldConsume = false;
    switch (editorAction) {
        case android.view.inputmethod.EditorInfo.IME_ACTION_DONE :
            shouldConsume = mListener.onPostCodeEntryComplete();
    }
    return shouldConsume ? true : super.performEditorAction(editorAction);
}

@org.junit.Test
public void testGetPropertyHandler() {
    com.eclipsesource.tabris.maps.MapOperator operator = new com.eclipsesource.tabris.maps.MapOperator(org.mockito.Mockito.mock(android.app.Activity.class), org.mockito.Mockito.mock(com.eclipsesource.tabris.android.TabrisContext.class));
    com.eclipsesource.tabris.android.TabrisPropertyHandler propertyHandler = operator.getPropertyHandler();
    assertTrue((propertyHandler instanceof com.eclipsesource.tabris.maps.MapPropertyHandler));
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if ((listener) != null) {
        listener.sendImageToServer(filteredDeviceList.get(position).getId(), "BluetoothClient");
    }
}

public void registerUsageCallback(int networkType, java.lang.String subscriberId, long thresholdBytes, android.app.usage.NetworkStatsManager.UsageCallback callback) {
    registerUsageCallback(networkType, subscriberId, thresholdBytes, null);
}

@retrofit2.http.GET(value = "services/rest/?format=json&nojsoncallback=1&extras=url_s")
rx.Observable<com.rpham64.android.photogallery.network.response.FlickrResponse> getPhotosBySearchRx(@retrofit2.http.Query(value = "page")
int page, @retrofit2.http.Query(value = "method")
java.lang.String method, @retrofit2.http.Query(value = "api_key")
java.lang.String key, @retrofit2.http.Query(value = "text")
java.lang.String query, @retrofit2.http.Query(value = "sort")
java.lang.String order);

@java.lang.Override
protected void onResume() {
    super.onResume();
    if (videoCommand.isStartedPlay()) {
        android.util.Log.d(com.rokid.movie.activity.MainActivity.TAG, ("onResume startPlay : " + (videoCommand.isStartedPlay())));
        videoCommand.resumePlay();
    }
}

public com.mapbox.services.android.telemetry.location.LocationEngine getLocationEngine() {
    return (locationEngine) == null ? new com.mapbox.services.android.location.LostLocationEngine(context) : locationEngine;
}

@java.lang.Override
public void onClick(com.afollestad.materialdialogs.MaterialDialog dialog, com.afollestad.materialdialogs.DialogAction which) {
    com.facebook.login.LoginManager.getInstance().logOut();
    com.adithyaupadhya.database.sharedpref.AppPreferenceManager.getAppPreferenceInstance(this).clearAllUserPreferenceData();
    startActivity(new android.content.Intent(this, com.adithyaupadhya.moviemaniac.login.SignInActivity.class));
    finish();
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if ((this.onFocusChangeListener) != null) {
        this.onFocusChangeListener.onFocusChange(v, hasFocus);
    }
    focusChangedEvent(hasFocus);
}

public void onClick(android.view.View arg0) {
    if (true) {
        stringBuffer.append("+");
        input.setText(stringBuffer.toString());
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent callIntent = new android.content.Intent(android.content.Intent.ACTION_CALL);
    callIntent.setData(android.net.Uri.parse(("tel:+" + (android.telephony.PhoneNumberUtils.getStrippedReversed(property.value)))));
    startActivity(callIntent);
}

public void disconnect(net.sharksystem.android.protocols.wifidirect.WifiDirectPeer peer) {
    ((net.sharksystem.android.protocols.wifidirect.WifiDirectStreamStub) (currentStub)).disconnect(peer);
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    setState("stop");
    android.util.Log.d(Constants.DEBUG_TAG, "NotificationService : onUnbind");
    return super.onUnbind(intent);
}

public void showConfirmDelete() {
    android.app.DialogFragment dialog = new com.tanona.bill.positiveplasma.ConfirmDelete();
    dialog.show(getFragmentManager(), "ConfirmDelete");
    onDialogPositiveClick(dialog);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    if (which < ((available.length) - 1)) {
        add(availableTiles[which]);
    }else {
        showBroadcastTileDialog();
    }
}

@java.lang.Override
public void onError() {
    android.widget.Toast.makeText(getContext(), "信息暂时无法加载", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onViewDetachedFromWindow(android.view.View v) {
    parent.onDismiss();
}

@java.lang.Override
public void onAttachFragment(android.support.v4.app.Fragment fragment) {
    fragList.add(new java.lang.ref.WeakReference<android.support.v4.app.Fragment>(fragment));
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.raizlabs.android.dbflow.config.FlowManager.init(new com.raizlabs.android.dbflow.config.FlowConfig.Builder(this).build());
    if (com.squareup.leakcanary.LeakCanary.isInAnalyzerProcess(this)) {
        return ;
    }
    refWatcher = com.squareup.leakcanary.LeakCanary.install(this);
}

@java.lang.Override
public void onPictureTaken(byte[] data, android.hardware.Camera camera) {
    saveScaledPhoto(data);
}

@java.lang.Override
public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) {
    android.app.DatePickerDialog dialog = new android.app.DatePickerDialog(getActivity(), ((com.thonners.crosswordmaker.HomeActivity) (getActivity())), startYear, startMonth, startDay);
    return dialog;
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    com.example.attracti.audiorecorderpicture.adapters.RecyclerViewAdapter adapter = ((com.example.attracti.audiorecorderpicture.adapters.RecyclerViewAdapter) (list.getAdapter()));
    android.util.Log.wtf("on Resume works ", "in FirstscreenActivity");
    list.getAdapter().notifyDataSetChanged();
}

private void updateSummaryList(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    android.preference.ListPreference updatedPref = ((android.preference.ListPreference) (settingsFragment.findPreference(key)));
    updatedPref.setSummary(updatedPref.getEntry());
}

@java.lang.Override
public void onConnectionFailed(com.google.android.gms.common.ConnectionResult connectionResult) {
    android.widget.Toast.makeText(this, R.string.login_toast_error_identification, Toast.LENGTH_LONG);
}

@java.lang.Override
public void run() {
    info.setText(getString(R.string.serverIpNotSet));
    android.widget.Toast.makeText(this, R.string.ipNotReached, Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    context.sendBroadcast(io.github.mobodev.heartbeatfixerforgcm.HeartbeatReceiver.GTALK_HEART_BEAT_INTENT);
    context.sendBroadcast(io.github.mobodev.heartbeatfixerforgcm.HeartbeatReceiver.MCS_MCS_HEARTBEAT_INTENT);
    android.util.Log.d(io.github.mobodev.heartbeatfixerforgcm.HeartbeatFixerForGcmApp.TAG, "HeartbeatReceiver sent heartbeat request");
    io.github.mobodev.heartbeatfixerforgcm.HeartbeatFixerUtils.scheduleHeartbeatRequest(context);
}

public void searchByCategory(android.view.View v) {
    searchSpinner.getSelectedItem().toString();
    if ((category) != null) {
        new com.webwemser.letsmeetapp.MainActivity.SearchByCategoryAsync().execute();
    }
}

@java.lang.Override
public boolean onRequest(final android.content.Intent request, final android.content.Intent response) {
    mHostMediaPlayerManager.playMedia();
    setResult(response, DConnectMessage.RESULT_OK);
    return true;
}

@org.junit.Before
public void createSQLDBObject() {
    android.content.Context ctx = android.support.test.InstrumentationRegistry.getTargetContext();
    mDB1 = new com.example.boba.lookapplication.DB1(ctx, com.example.boba.lookapplication.TestSQLLiteDB.TEST_NAME_DB);
}

@java.lang.Override
public void init(android.os.Bundle savedInstanceState) {
    addSlide(com.github.paolorotolo.appintro.AppIntroFragment.newInstance("Lions", "Lion, lion everywhere!", R.drawable.ic_done_white_24px, R.color.colorAccent));
}

private void pushSpecies(java.lang.String speciesId, java.lang.String name, @android.support.annotation.Nullable
java.lang.String subname, int level) {
    subname = null;
    fragmentController.pushFragment(name, null, com.github.charmasaur.alpsinsects.ui.fragments.SpeciesItemDetailFragment.newInstance(speciesId), "SPECIES", level);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    listView = ((android.widget.ListView) (findViewById(R.id.tracking_list)));
    refreshList();
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    if (!(twoPane)) {
        inflater.inflate(R.menu.messgage_detail_menu, menu);
    }
    super.onCreateOptionsMenu(menu, inflater);
}

public static boolean confirmIntent(android.net.Uri uri, java.lang.String intent) {
    return uri.getPathSegments().get(1).equals(intent);
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    com.soctec.soctec.core.MainActivity main = ((com.soctec.soctec.core.MainActivity) (getActivity()));
    main.updateAchievementFragment();
}

@java.lang.Override
public void onClick(android.view.View v) {
    takePictureNoPreview(null);
}

@java.lang.Override
public void onClick(android.view.View view) {
    _originalList.remove(i);
    updateResults(_searchString);
    com.manoj.dlt.features.DeepLinkHistoryFeature.getInstance(_context).removeLinkFromHistory(deepLinkInfo.getDeepLink());
}

public void onTabSelected(android.app.ActionBar.Tab tab, android.app.FragmentTransaction ft) {
    ft.replace(R.id.fragment_container, fragment);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.util.Log.d(org.shreyans.greendot.fragments.CreateGoalFragment.TAG, "in CreateGoalFragment.onCreateView");
    return inflater.inflate(R.layout.fragment_create_goal, container);
}

public void setOnBackClickListener(android.view.View.OnClickListener listener) {
    titleBar.setOnClickListener(listener);
}

@java.lang.Override
public void onClick(android.view.View view) {
    button8.setText(((mark) + ""));
    placeMarkOnBoard(2, 1);
    button8.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

public void checkMarkPressed(android.view.View v) {
    delayedStatus(500, "Liked", "#458B00");
    loadNextRecipe("Black Circle Recipe");
}

private void initFragments(android.os.Bundle savedInstanceState) {
    upcomingListFragment = new com.capstone.authorfollow.BookListFragment();
    upcomingListFragment.resetSearchBar();
    wishlistFragment = new com.capstone.authorfollow.WishlistFragment();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel out, int flags) {
    out.writeValue(Nebdev);
    out.writeLong(DevId);
    out.writeValue(mBleGatt);
    out.writeValue(mDelegate);
    out.writeValue(mCtrlChar);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    com.borombo.mobileassignment.utils.LocationsManager.getInstance().delete(location);
    adapter.notifyItemRemoved(position);
    adapter.notifyDataSetChanged();
}

@java.lang.Override
public void onConfigured(@android.support.annotation.NonNull
android.hardware.camera2.CameraCaptureSession session) {
    onCaptureSessionConfigured(session, CameraDevice.TEMPLATE_PREVIEW);
    if ((mVideoRecorderStopped) != null) {
        mCurrentlyRecording = false;
        android.util.Log.d(com.dylankpowers.timelapse.TimeLapseCapture.TAG, "Video recorder stopped.");
        mVideoRecorderStopped.onEvent();
        mVideoRecorderStopped = null;
    }
}

android.net.Uri insertHistoryItem(java.lang.String url, java.lang.String guid, java.lang.Long lastVisited, java.lang.Integer visitCount) throws android.os.RemoteException {
    return insertHistoryItem(url, guid, java.lang.System.currentTimeMillis(), null, null);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.chteuchteu.lesjoiesdusysadmin.Activity_Gif.toggleTexts();
}

public void removeMyNoteView(android.view.ViewGroup parent) {
    boolean isMynoteTextEdit = isMyNoteViewShowing(parent);
    parent.setTag("");
    if (isMynoteTextEdit) {
        parent.removeView(myNoteText);
        mainActivity.unregisterForContextMenu(myNoteText);
    }
}

@java.lang.Override
public void onGetMessagesFailure(java.lang.String message) {
    android.widget.Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    TicTacToeGame.sInfoColor = mInfoTextView.getTextColors();
    TicTacToeGame.sInfo = mInfoTextView.getText().toString();
    return ;
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar refocusSeekBar) {
    mHandler.removeMessages(com.mediatek.galleryfeature.stereo.refocus.RefocusActivity.MSG_HIDE_DOF_VIEW);
    mDofView.setText(com.mediatek.galleryfeature.stereo.refocus.RefocusActivity.DOFDATA[((mDepth) / 2)]);
    mDofView.setVisibility(View.VISIBLE);
}

void loadSites() {
    if (mIsTaskRunning) {
        org.wordpress.android.util.AppLog.w(AppLog.T.UTILS, "site picker > already loading sites");
    }else {
        new org.wordpress.android.ui.main.SitePickerAdapter.LoadSitesTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
    }
}

@java.lang.Override
public void onFailure(int i, java.lang.String s) {
    android.widget.Toast.makeText(mContext, ("图片下载失败" + s), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent event) {
    return (mOnImageViewListener.onTouchEvent(event)) || (super.onTouchEvent(event));
}

public java.util.ArrayList<com.dozuki.ifixit.model.guide.GuideInfo> getAll() {
    android.util.Log.d("GuideCreateActivity", "Getall");
    return mGuides;
}

private void log(com.noveogroup.android.log.Logger.Level level, java.lang.String format, java.lang.Object arg1, java.lang.Object arg2) {
    logger.print(level, org.slf4j.helpers.MessageFormatter.format(format, arg1, arg2).getMessage(), null);
}

@java.lang.Override
public void onClick(android.view.View v) {
    operation.Connect(et_ip.getText().toString(), et_port.getText().toString());
    v.setClickable(false);
}

@java.lang.Override
public void onItemSelected() {
    recyclerViewItem.setScaleY(0.95F);
    canPullDown = false;
    android.util.Log.d("mmga", "canPullDownFalse");
}

public void sendSensorData(final long timestamp, final float value) {
    android.util.Log.i(edu.ucla.nesl.android.hrmonitor.DataMapClient.TAG, "In sendSensorData");
    executorService.submit(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            sendSensorDataInBackground(timestamp, value);
        }
    });
}

private void registerNetworkReceiver() {
    android.content.IntentFilter filter = new android.content.IntentFilter();
    filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
    filter.addAction(LocationManager.PROVIDERS_CHANGED_ACTION);
    registerReceiver(mNetworkStateReceiver, filter);
}

@java.lang.Override
public boolean onMenuItemActionExpand(android.view.MenuItem item) {
    android.util.Log.d("search", "search expanded");
    return true;
}

@java.lang.Override
protected void onSaveInstanceState(final android.os.Bundle outState) {
    outState.putString("WORKAROUND_FOR_BUG_19917_KEY", "WORKAROUND_FOR_BUG_19917_VALUE");
    super.onSaveInstanceState(outState);
    outState.putBoolean(com.egonzalez.simpleredditclient.view.MainActivity.SAVEDINSTANCESTATE_REQUESTDATA, mMustRequestData);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(context, com.ritwik.android.madfbla201415.AllEventsActivity.class);
    startActivity(intent);
}

private void navigateToNavigationActivity() {
    android.content.Intent intent = new android.content.Intent(this, com.example.mobsoft.webkorhaz.ui.navigation.NavigationActivity.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
    closeFragment();
}

@java.lang.Override
public android.support.v4.content.Loader<android.database.Cursor> onCreateLoader(int id, android.os.Bundle args) {
    android.net.Uri contactsQueryUri = DatabaseContract.ContactsContract.CONTENT_URI_CONTACTS;
    return new android.support.v4.content.CursorLoader(getActivity(), contactsQueryUri, projection, null, null, null);
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError error) {
    android.util.Log.d("saas", "cancel");
    android.util.Log.w("Oye", "Failed to read value.", error.toException());
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    isCompleted = true;
    musicController.setImageResource(R.drawable.icon_play);
}

@java.lang.Override
protected void onPostExecute(java.util.List<com.example.davidberg.androidkurs.VasttrafikJourney> journeys) {
    updateJourneyList();
}

@java.lang.Override
public void forkSpecifiedCallLog(android.content.Context context, com.pioneer.aaron.dolly.fork.calllog.ForkCallLogData data) {
    if ((mForkBinder) != null) {
        mForkBinder.startFork(ForkTask.FORK_TYPE_SPECIFIED_CALLLOGS, data.getQuantity(), data);
        toastForkTask(context);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    registerCustomer();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_get_ip);
    io.github.hendraanggrian.circularrevealanimator.CircularRevealAnimator.of(this).onCreate(R.id.text);
}

public void addRequestToList(com.codepath.contact.models.Request request) {
    if ((requestsAdapter) != null)
        requestsAdapter.add(request);
    else
        android.util.Log.d(com.codepath.contact.fragments.ListFragment.TAG, "guess what, requestsAdapter is null...");
    
}

@java.lang.Override
public void done(com.parse.ParseException e) {
    android.util.Log.w("Yuval", "setAvatar() - in done");
    put(Const.COL_NAME_AVATAR, file);
    saveEventually();
}

public void onClick(android.view.View view) {
    if ((hours) == 12) {
        hours = 1;
    }else {
        ++(hours);
    }
    displayHours(hours);
}

public void setChannelInfoList(final java.util.List<com.meituan.android.walle.WalleConfig.ChannelInfo> channelInfosList) {
    this.channelInfoList = channelInfosList;
}

static android.graphics.drawable.Drawable setDrawableColor(android.graphics.drawable.Drawable icon, int color) {
    icon.setColorFilter(new android.graphics.PorterDuffColorFilter(color, PorterDuff.Mode.SRC_ATOP));
    return icon;
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (requestCode == (com.github.codetanzania.ui.activity.SettingsActivity.EDIT_PROFILE_REQUEST)) {
        updateUserProfile();
        mayChangeDefaultLanguage(data.getBooleanExtra(EditUserProfileActivity.FLAG_LANGUAGE_CHANGED, false));
    }
}

public com.raizlabs.android.dbflow.sql.language.Set<ModelClass> conditionQuery(com.raizlabs.android.dbflow.sql.builder.ConditionQueryBuilder<ModelClass> conditionQueryBuilder) {
    mConditionQueryBuilder = conditionQueryBuilder;
    return this;
}

@java.lang.Override
public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture surface, int width, int height) {
    com.aiyaapp.camera.sdk.base.Log.d("AnimE", "onSurfaceTextureSizeChanged");
    mEnv.surfaceChanged(null, 0, width, height);
}

@java.lang.Override
protected void onDestroy() {
    android.util.Log.v(LOG_TAG, "onDestroy()");
    super.onDestroy();
    com.example.shreekant.sunshine.app.ViewServer.get(this).removeWindow(this);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    if ((getCurrentOrientation()) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) {
        getToolBar().setTitle("My Notes");
    }else {
    }
}

private void setupMap(android.os.Bundle savedInstanceState) {
    mapView.getMapAsync(this);
    mapView.onCreate(savedInstanceState);
}

@java.lang.Override
public void onTagDiscovered(android.nfc.Tag tag) {
    android.util.Log.i(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, ("onTagDiscovered " + tag));
    super.onTagDiscovered(tag);
    savedTag = tag;
    handleTag();
}

private void bindPreferenceSummaryToValue(android.preference.Preference preference) {
    preference.setOnPreferenceChangeListener(this);
    this.onPreferenceChange(preference, android.preference.PreferenceManager.getDefaultSharedPreferences(preference.getContext()).getString(preference.getKey(), ""));
}

public void phoneLogin(android.view.View v) {
    if ((loginFramgent) != null)
        loginFramgent.phoneLogin(v);
    
}

public void smsRestore(android.view.View view) {
    try {
        com.mobilesafe.utils.SmsUtils.restoreSms(this);
    } catch (java.io.IOException e) {
        e.printStackTrace();
    } catch (org.xmlpull.v1.XmlPullParserException e) {
        e.printStackTrace();
    }
}

public static android.support.v4.app.Fragment createGenericPlayerFragment(de.vanita5.twittnuker.model.ParcelableCardEntity card) {
    final java.lang.String playerUrl = card.getString("player_url");
    if (playerUrl == null)
        return null;
    
    return de.vanita5.twittnuker.fragment.support.card.CardBrowserFragment.show(playerUrl);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    if (!(mNavigationDrawerFragment.isDrawerOpen())) {
        getMenuInflater().inflate(R.menu.main, menu);
        restoreActionBar();
        return true;
    }
    return super.onCreateOptionsMenu(menu);
}

@java.lang.Override
public void run() {
    ((android.widget.ListView) (res.findViewById(R.id.settings_list))).setOnItemClickListener(listener);
    setAdapter();
    android.support.v7.widget.Toolbar toolbar = getActivity().findViewById(R.id.toolbar);
    us.dangeru.launcher.fragments.ThreadWatcherFragment.addOptions(toolbar);
}

@java.lang.Override
protected void updateView() {
    if (rebuildItems()) {
        android.util.Log.e(LOG_TAG, "Items are rebuilding, entering into Do Layout");
        measureLayout();
        doLayout(getWidth(), getHeight());
    }
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    mAlarmAutoBegin.duration = (2 * position) + 1;
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d("MyFormula", "onResume called");
    adapter.notifyDataSetChanged();
    android.util.Log.d("MyFormula", ("List count: " + (java.lang.Integer.toString(formulaList.size()))));
}

private void onCollectionClicked(java.lang.String collectionId) {
    android.content.Intent intent = new android.content.Intent(this, com.shopify.sample.activity.ProductListActivity.class);
    if (collectionId != null) {
        intent.putExtra(ProductListActivity.EXTRA_COLLECTION_ID, collectionId);
    }
    startActivity(intent);
}

public void onClick(android.view.View v) {
    initiatePopUp(((java.util.ArrayList) (finalList)), ((java.util.ArrayList) (finalIDList)), tv);
}

@java.lang.Override
public void onClick(android.view.View v) {
    textResponse.setText("lol");
}

public com.cube.storm.LanguageSettings.Builder localeUri(@android.support.annotation.Nullable
android.net.Uri localeUri) {
    this.localeUri = languageUri;
    return this;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    com.oneplus.base.Log.d(com.oneplus.camera.ui.PreviewGallery.ImageFragment.TAG, "onCreate");
    super.onCreate(savedInstanceState);
}

public static int v(java.lang.String tag, java.lang.String msg, java.lang.Throwable tr) {
    if (tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_VERBOSE) {
        return android.util.Log.v(tag, msg, tr);
    }
    return 0;
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    super.onCreateOptionsMenu(menu, inflater);
    android.util.Log.d(TAG, "OnCreateOptionsMenu");
    inflater.inflate(R.menu.fragment_landing, menu);
}

@java.lang.Override
public void onItemClick(io.github.prashantsolanki3.snaplibrary.snap.layout.viewholder.SnapViewHolder viewHolder, android.view.View view, int position) {
    if ((isSelectionEnabled()) && (io.github.prashantsolanki3.snaplibrary.snap.utils.UtilsLayoutWrapper.isViewHolderSelectable(getLayoutWrappers(), ((io.github.prashantsolanki3.snaplibrary.snap.layout.viewholder.SnapSelectableViewHolder) (viewHolder))))) {
        toggleSelection(position);
    }
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    if ((actionMode) == null) {
        actionMode = this.startActionMode(actionModeCallback);
        selectedMarker = marker;
    }
    return false;
}

@org.androidannotations.annotations.AfterViews
void afterViews() {
    com.google.android.gms.ads.AdView mAdView = ((com.google.android.gms.ads.AdView) (findViewById(R.id.adView)));
    com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().build();
    mAdView.loadAd(adRequest);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    undoPendingDismiss();
    performDismiss(downView, downPosition);
    mCallbacks.onViewSwiped(downPosition);
}

private void OnUserTripRetrievalFailure(java.lang.String message) {
    android.widget.Toast.makeText(getContext(), message, Toast.LENGTH_SHORT);
}

public java.lang.String getLabel() {
    android.util.Log.e(edu.byu.stringcheese.presenttime.recyclerviewresources.DashboardHeader.TAG, "Bad request of AbstractDashboardItem made!");
    return label;
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB_MR2)
public static void setAndroidThemeAccordingly13(android.app.Activity activity) {
    if (br.com.carlosrafaelgn.fplay.ui.UI.isAndroidThemeLight())
        activity.setTheme(android.R.style.Theme_Holo_Light_NoActionBar_Fullscreen);
    else
        activity.setTheme(android.R.style.Theme_Holo_NoActionBar_Fullscreen);
    
}

private void sendReceivedDataToMulticastMessageReceivedHandler(android.os.Messenger handlerMessenger, java.net.DatagramPacket datagramPacket) throws android.os.RemoteException {
    android.os.Message handlerMessage = createHandlerMessage(getReceivedText(datagramPacket));
    handlerMessenger.send(handlerMessage);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((onItemClickListener) != null) {
        onItemClickListener.onRootFabClick();
        isOpen = !(isOpen);
        operateChildView(isOpen);
        android.util.Log.i("Tag", "click");
    }
}

android.util.Pair<java.util.List<net.oneread.aghanim.components.utility.IRecyclerItem>, java.lang.String> getHistory(int index) {
    return this.mPageHistory.get(index);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    super.onReceive(context, intent);
    edu.hm.cs.fs.app.App.getAppComponent(context).inject(this);
}

private void initViews() {
    mTweetAdapter = new com.thoughtworks.wechat.adapter.TweetAdapter(this);
    mTweetListView.setAdapter(mTweetAdapter);
    mHeaderView = android.view.LayoutInflater.from(this).inflate(R.layout.tweet_header, mTweetListView, false);
    mTweetListView.addHeaderView(mHeaderView);
}

@java.lang.Override
public void log(java.lang.String message) {
    android.util.Log.e("RetrofitLog", ("retrofitBack = " + message));
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.addressbook.thorrism.addressbook.DroidBook.getInstance().hideKeyboard(mCurrentEdit, getApplicationContext());
    mActivity.finish();
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    init();
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    android.util.Log.e(com.example.sdp11.wmd.MainActivity.TAG, "onStart");
    mGoogleApiClient.connect();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if (saveHighScore) {
        userName = input.getText().toString();
        saveHighScore(userName);
    }
    dialogIsDisplayed = false;
    startNewGame();
}

public static void initAndStart(java.lang.String serverAddr, java.lang.String userId, java.lang.String name, java.lang.String portraitUri, android.content.Context context, int queueId, java.lang.String ngsAddr) {
    com.elitecrm.rcclient.EliteChat.initAndStart(serverAddr, userId, name, portraitUri, context, queueId, ngsAddr, null);
}

@java.lang.Override
public void onError(java.lang.Throwable arg0) {
    android.util.Log.e(com.davidinchina.showcode.lightload.load.LightLoad.TAG, "img load failed");
    if (0 != defaultView) {
        imageView.setImageDrawable(mContext.getDrawable(defaultView));
        imageView.setTag(R.id.image_type, com.davidinchina.showcode.lightload.load.LightLoad.LOAD_FAILED);
    }
}

public static void setSdpInitiatedAddress(android.bluetooth.BluetoothDevice remBtDev) {
    com.android.bluetooth.OolConnManager.mAddress = remBtDev.getAddress();
    android.util.Log.d(com.android.bluetooth.OolConnManager.TAG, ("setSdpInitiatedAddress " + (com.android.bluetooth.OolConnManager.mAddress)));
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    mLastLocation = getIntent().getParcelableExtra(com.ddup4.autonav.module.main.MainActivity.EXTRA_LAST_LOCATION);
    super.onCreate(savedInstanceState, persistentState);
}

public void playAudio(android.media.MediaPlayer mp) {
    if (mp.isPlaying()) {
        mp.pause();
    }else {
        mp.start();
    }
}

public com.afollestad.materialdialogs.MaterialDialog.Builder titleColorAttr(@android.support.annotation.AttrRes
int colorAttr) {
    titleColor(com.afollestad.materialdialogs.util.DialogUtils.resolveColor(this.context, colorAttr));
    return this;
}

public void onClick(android.content.DialogInterface dialog, int id) {
    toolbarBackToNormal();
    dialog.dismiss();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    app.setCurrentActivity(getActivity());
}

public void start(@android.support.annotation.NonNull
final android.content.ContentResolver cr, @android.support.annotation.NonNull
final com.bilibili.boxing.model.callback.IAlbumTaskCallback callback) {
    buildDefaultAlbum(cr);
    buildAlbumInfo(cr);
    getAlbumList(callback);
}

private void connectToDevice(android.bluetooth.BluetoothDevice device) {
    android.util.Log.i(com.eveningoutpost.dexdrip.Services.G5CollectionService.TAG, "Request Connect");
    mGatt = device.connectGatt(getApplicationContext(), false, gattCallback);
    stopScan();
}

public void stopRing() {
    if (com.android.phone.Ringer.DBG)
        com.android.phone.Ringer.log("stopRing()...");
    
    getRingHandler().removeCallbacksAndMessages(null);
    getRingHandler().sendMessageAtFrontOfQueue(getRingHandler().obtainMessage(com.android.phone.Ringer.RingHandler.MSG_STOP));
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    if (mAskPermissionForLocation) {
        askPermissionForLocation();
    }else {
        android.util.Log.i(com.example.olivi.maphap.LocationActivity.TAG, "mAskPermissionForLocation is false!");
    }
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.d(TAG, "onResume");
    initOptions();
}

@java.lang.Override
protected void onStop() {
    com.app.game.quizee.backend.PlayerManager.getInstance().saveCurrentPlayer();
    super.onStop();
    stopService(new android.content.Intent(this, com.app.game.quizee.backend.MusicService.class));
    com.app.game.quizee.backend.PlayerManager.getInstance().onStop();
}

@java.lang.Override
public com.Ntut.event.EventAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View contactView = android.view.LayoutInflater.from(context).inflate(R.layout.event_item, parent, false);
    com.Ntut.event.EventAdapter.ViewHolder viewHolder = new com.Ntut.event.EventAdapter.ViewHolder(contactView);
    return viewHolder;
}

@java.lang.Override
public void onBackPressed() {
    android.widget.Button userButton = ((android.widget.Button) (findViewById(R.id.userButton)));
    if (userButton != null)
        userButton.performClick();
    
    return ;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (mInterstitialAd.isLoaded()) {
        mInterstitialAd.show();
    }else {
        startPlotting();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    com.parse.Parse.initialize(this, "FjnQ7hWVa83BIknGsWTu1Hh0NuQFHbzIpAgMmggK", "i1tHxKksviI1V7kbxsnMN2y3x0AX5DrtUEG5YTow");
    super.onCreate(savedInstanceState);
    initDB();
    getExtras();
    updateHighscore();
    setupUI();
}

@java.lang.Override
public void hide() {
    mNavigationBarView.setVisibility(View.GONE);
    android.view.ViewGroup.MarginLayoutParams marginLayoutParams = ((android.view.ViewGroup.MarginLayoutParams) (mNavigationBarContentContainer.getLayoutParams()));
    marginLayoutParams.topMargin = 0;
    mNavigationBarContentContainer.setLayoutParams(marginLayoutParams);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    onWPDeleted.OnDeleted(wayPointId);
}

public void onSucess(java.lang.Class view) {
    android.content.Intent intent = new android.content.Intent(this, view);
    intent.putExtra(museum.findit.com.myapplication.view.Activities.JoinGameActivity.EXTRA_MESSAGE_USERNAME, username);
    intent.putExtra(museum.findit.com.myapplication.view.Activities.JoinGameActivity.EXTRA_MESSAGE_GAMECODE, gameCode);
    startActivity(intent);
}

@java.lang.Override
public void onShutter() {
    android.util.Log.e("ApplicationScreen", "onShutter");
    com.almalence.opencam.ApplicationScreen.getPluginManager().onShutter();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    java.lang.System.out.println("onAttach");
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    getComponent().inject(this);
    enableShowHideSwitcherForCPUser();
    return super.onCreateView(inflater, container, savedInstanceState);
}

@java.lang.Override
public void reloadData() {
    android.util.Log.d(com.flingsoftware.personalbudget.app.budgets.BudgetDetailsHistory.TAG, "Fragment History reload data");
    new com.flingsoftware.personalbudget.app.budgets.BudgetDetailsHistory.GetBudgetHistoryTask().execute(budgetId);
}

@java.lang.Override
public void showError() {
    ((by.grodno.toni7777.socialnetwork.ui.login.LoginViewState) (viewState)).setShowError();
    setViewsEnabled(true);
    mAuthorizationButton.setProgress(Constants.ACTION_BUTTON_START);
    mErrorView.setVisibility(android.view.View.VISIBLE);
}

public io.kuzzle.sdk.core.KuzzleDataCollection dataCollectionFactory(@android.support.annotation.NonNull
final java.lang.String collection) {
    this.isValid();
    if ((this.defaultIndex) == null) {
        throw new java.lang.IllegalArgumentException("KuzzleDataCollection: unable to create a new data collection object: no index specified");
    }
    return this.dataCollectionFactory(this.defaultIndex, collection);
}

@java.lang.Override
public void onClick(android.view.View v) {
    getNewAvatar();
    com.mobicage.rogerthat.util.ui.UIUtils.hideKeyboard(getApplicationContext(), newGroupName);
}

@java.lang.Override
public boolean stealTouchEventForChild() {
    if ((mRecyclerView) == null) {
        return false;
    }
    android.support.v7.widget.LinearLayoutManager lm = ((android.support.v7.widget.LinearLayoutManager) (mRecyclerView.getLayoutManager()));
    return (lm.findFirstCompletelyVisibleItemPosition()) != 0;
}

@java.lang.Override
public void onPause() {
    super.onPause();
    if (((de.htw_berlin.sharkandroidstack.modules.nfc.NfcBenchmarkFragment.nfcAdapter) != null) && ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT))) {
        de.htw_berlin.sharkandroidstack.modules.nfc.NfcBenchmarkFragment.nfcAdapter.disableReaderMode(this);
    }
}

protected void onStartTheGame(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.bugsnguns.asprokopov.tapattack.ChooseTargetActivity.class);
    startActivity(intent);
}

public void play() {
    android.util.Log.v(com.example.madisonn.musicplayer.PlayerService.LOG_TAG, "play");
    mediaPlayer.start();
    playerPlaying = true;
}

@java.lang.Override
public void onSuccess(java.lang.Object result) {
    android.util.Log.d("lmao", "Getting from the webz");
    android.graphics.Bitmap resultBitmap = ((android.graphics.Bitmap) (result));
    imageCache.writeInCache(resultBitmap, imagesrc);
    handler.imageView.setImageBitmap(resultBitmap);
}

public void onclickKeep6(android.widget.ImageView view) {
    int num = 6;
    its.farkel.MainFarkel.hand.removeDie(num);
    view.setVisibility(ImageView.INVISIBLE);
    its.farkel.MainFarkel.available[num] = true;
}

public static void init(android.content.Context context) {
    org.wordpress.android.analytics.AnalyticsTracker.loadPrefHasUserOptedOut(context, false);
}

public void redraw(android.view.View view) {
    com.count.countr.Count context = ((com.count.countr.Count) (view.getContext()));
    com.count.countr.CountListAdapter adapter = context.getAdapter();
    adapter.notifyDataSetChanged();
    adapter.notifyDataSetInvalidated();
}

@java.lang.Override
public void goBack() {
    android.app.FragmentManager fm = getChildFragmentManager();
    if ((fm.getBackStackEntryCount()) > 1) {
        fm.popBackStack();
    }
}

public void reset() {
    setCurrentPosition(com.devbrackets.android.playlistcore.manager.BasePlaylistManager.INVALID_POSITION);
    setId(com.devbrackets.android.playlistcore.manager.BasePlaylistManager.INVALID_ID);
}

public void invitePlayers() {
    android.content.Intent intent = Games.RealTimeMultiplayer.getSelectOpponentsIntent(googleApiClient, com.example.umyhpuscdi.snapthat.MainActivity.MIN_PLAYERS, ((com.example.umyhpuscdi.snapthat.MainActivity.MAX_PLAYERS) - 1));
    startActivityForResult(intent, com.example.umyhpuscdi.snapthat.MainActivity.RC_SELECT_PLAYERS);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if (id == (android.R.id.home)) {
        finish();
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onClientConnectionRequest(com.door43.translationstudio.network.Peer peer) {
    android.os.Handler hand = new android.os.Handler(android.os.Looper.getMainLooper());
    hand.post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            updatePeerList(mExportService.getPeers());
        }
    });
}

protected android.graphics.drawable.Drawable getDrawable() {
    android.graphics.Canvas canvas = new android.graphics.Canvas();
    shape.draw(canvas);
    this.onDraw(canvas);
    return shape;
}

@java.lang.Override
public com.globant.practice.presentation.view.adapter.SubscriberAdapter.SubscriberViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.subscriber_list_item, parent, false);
    com.globant.practice.presentation.view.adapter.SubscriberAdapter.SubscriberViewHolder listHomeViewHolder = new com.globant.practice.presentation.view.adapter.SubscriberAdapter.SubscriberViewHolder(itemView, onUserClickListener);
    return listHomeViewHolder;
}

@java.lang.Override
public void onDetach() {
    super.onDetach();
    android.util.Log.v(kinjouj.app.oretter.fragments.RecyclerViewFragment.TAG, "onDetach");
    butterknife.ButterKnife.unbind(this);
    adapter = null;
}

@java.lang.Override
protected void onCurrentAccessTokenChanged(com.facebook.AccessToken oldToken, com.facebook.AccessToken newToken) {
    java.lang.String log = (newToken == null) ? "newToken = null" : "newToken != null";
    android.util.Log.i(com.example.ivan.champy_v2.activity.LoginActivity.TAG, log);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putInt("mode", mode);
    outState.putLong("selected_country", selectedCountry.getId());
}

@java.lang.Override
public void onSkipToPrevious() {
    super.onSkipToPrevious();
    android.util.Log.e("MediaPlayerService", "onSkipToPrevious");
    prevTrack();
    drawNotification("play");
}

private void setCurrentUser(com.codepath.the_town_kitchen.models.User user) {
    com.codepath.the_town_kitchen.TheTownKitchenApplication.getCurrentUser().setUser(user);
    android.content.Intent intent = new android.content.Intent(this, com.codepath.the_town_kitchen.activities.MealListActivity.class);
    startActivity(intent);
}

public static int getThemNumber(android.app.Activity activity) {
    android.content.SharedPreferences sharedPreferences = activity.getPreferences(Context.MODE_PRIVATE);
    int sTheme = sharedPreferences.getInt(com.supersnek.accounting.Utils.Utils.THEME_KEY, Context.MODE_PRIVATE);
    return sTheme;
}

public void offerRepeatData(de.fau.cs.mad.kwikshop.android.common.Item item) {
    if (!(repeatList.contains(item))) {
        repeatList.add(item);
    }
}

private float pxToDp(float px) {
    android.util.DisplayMetrics displayMetrics = getContext().getResources().getDisplayMetrics();
    return px * (displayMetrics.density);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    for (de.dhbwloerrach.beaconlocation.models.Beacon beacon : selectedBeacons) {
        selectedBeacons.remove(beacon);
        databaseHandler.deleteBeacon(beacon);
    }
    updateBeaconListView();
    updateMenuButtons();
}

@java.lang.Override
public void onMarkerDragEnd(com.google.android.gms.maps.model.Marker arg0) {
    com.google.android.gms.maps.model.LatLng markerLocation = marker.getPosition();
    android.widget.Toast.makeText(mainActivity, markerLocation.toString(), Toast.LENGTH_LONG).show();
    selectedLatLng = markerLocation;
    android.util.Log.d("Marker", "finished");
}

@android.support.annotation.NonNull
private static java.io.File getStartPageFile(@android.support.annotation.NonNull
android.app.Application application) {
    return new java.io.File(application.getFilesDir(), acr.browser.lightning.constant.StartPage.FILENAME);
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    dumpCsv(Gender.MALE, false);
    dumpCsv(Gender.FEMALE, false);
    calculateChildZScores();
}

@java.lang.Override
protected java.lang.String doInBackground(android.content.Context... arg0) {
    Result = duplicate1000TimesTags(adapter.getSelectedTags());
    return null;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putParcelableArrayList(it.kdevgroup.incaneva.HomeActivity.BUNDLE_KEY_FOR_ARRAY, blogEventList);
    outState.putInt(it.kdevgroup.incaneva.HomeActivity.BUNDLE_KEY_CURRENTSECTION, currentCategory);
    android.util.Log.d(it.kdevgroup.incaneva.HomeActivity.TAG, "onSaveInstanceState: salvo elementi nel bundle");
}

public void dispose(android.content.Context context) {
    removeUpdates(context);
    home.yaron.location.LocationTracker.LocationTrackerHolder.INSTANCE = null;
}

public void e(java.lang.String tag, java.lang.String message, java.lang.Throwable e) {
    if (e != null) {
        android.util.Log.i(tag, message, e);
    }else {
        android.util.Log.i(tag, message);
    }
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    getDialog().getWindow().setSoftInputMode(((WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE) | (WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN)));
    super.onViewCreated(view, savedInstanceState);
}

@java.lang.Override
public void onClick(android.view.View view) {
    textColor = android.graphics.Color.parseColor("#0000ff");
    mEditor.setTextColor((isChanged ? android.graphics.Color.GREEN : android.graphics.Color.BLUE));
    isChanged = !(isChanged);
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.String responseString, java.lang.Throwable throwable) {
    android.util.Log.i("info", (("T" + (client.finalUrl)) + responseString));
}

@java.lang.Override
public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) {
    java.lang.Long orderValue = ((java.lang.Long) (dataSnapshot.getValue()));
    android.util.Log.e("Order update:", ("" + orderValue));
    orderRef.setValue((orderValue + 1));
}

@java.lang.Override
public lib.homhom.psv.MainActivity.ParallaxProvider.ViewHolder onCreateViewHolder(int position) {
    lib.lhh.fiv.library.FrescoImageView htv = new lib.lhh.fiv.library.FrescoImageView(this);
    htv.setLayoutParams(new android.widget.FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT));
    htv.setScaleType(ImageView.ScaleType.CENTER_CROP);
    return new lib.homhom.psv.MainActivity.ParallaxProvider.ViewHolder(htv);
}

public void openCardScreen(android.view.View view) {
    android.content.Intent intentMain = new android.content.Intent(this, com.alexpol.alexminiapp.CardView.class);
    this.startActivity(intentMain);
}

@java.lang.Override
public void onClick(android.view.View v) {
    setBpm(((currentBpm) - 1));
}

@java.lang.Override
public void onQuickSearchClick(java.lang.String type) {
    com.slavafleer.nearpois.MainActivity.poisFragment.setType(type);
    android.widget.Toast.makeText(this, ("Searched by type: " + type), Toast.LENGTH_SHORT).show();
    android.util.Log.i(com.slavafleer.nearpois.MainActivity.TAG, type);
}

public void setMediaPlayer(android.media.MediaPlayer mediaPlayer, java.lang.String s) {
    this.mediaPlayer = mediaPlayer;
    this.s = s;
}

@java.lang.Override
public void run() {
    completionListener.onCompletion(null);
    if ((bus) != null) {
        bus.post(new com.devbrackets.android.exomedia.event.EMMediaCompletionEvent());
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    txtScreen.append(b1.getText());
    if ((isFirstNumeric) && ((oneOperator) == 1))
        isLastNumeric = true;
    
    isFirstNumeric = true;
}

@java.lang.Override
public void run() {
    final android.app.AlertDialog.Builder dialogBuilder = new android.app.AlertDialog.Builder(getApplicationContext());
    dialogBuilder.show();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.ViewGroup rootView = ((android.view.ViewGroup) (inflater.inflate(R.layout.agreement, container, false)));
    return rootView;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.v(android.content.ContentValues.TAG, "ACTION_SCREEN_ON");
    android.widget.Toast.makeText(context, "Hello", Toast.LENGTH_LONG).show();
    com.ahitugrad.notifman.CustomApplication.inputData(CustomApplication.SCREEN);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    com.genevieveluyt.multiplayercardgames.CrazyEightsGameBoard.chosenSuit = which + 1;
    if (MainActivity.DEBUG)
        java.lang.System.out.println(("CrazyEightsGameBoard|activateGUI(): chose suit " + (com.genevieveluyt.multiplayercardgames.Card.suitToString(com.genevieveluyt.multiplayercardgames.CrazyEightsGameBoard.chosenSuit))));
    
    com.genevieveluyt.multiplayercardgames.CrazyEightsGameBoard.activity.findViewById(R.id.leaveButton).setClickable(true);
}

private void startMainActivity() {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.company.integer.vkmusic.MainActivity.class);
    com.company.integer.vkmusic.supportclasses.AppState.setTab(launchingIntent.getIntExtra("tab", 1));
    startActivity(intent);
    finish();
}

public boolean onBackPressedImpl(@android.support.annotation.NonNull
V v) {
    VP presenter = getPresenter(v);
    return (presenter != null) && (presenter.onBackPressed(v));
}

@java.lang.Override
public void onResolveFailed(android.net.nsd.NsdServiceInfo serviceInfo, int errorCode) {
    android.util.Log.e(moe.retro.unijoysticle.BaseActivity.TAG, ("Resolve failed" + errorCode));
    mFinishedResolve = true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    (ballCounter)++;
    display2.setText(("Your total is " + (ballCounter)));
}

@java.lang.Override
public void writeToParcel(android.os.Parcel parcel, int i) {
    parcel.writeInt(drawable);
    parcel.writeString(name);
    parcel.writeString(cashback);
    parcel.writeString(validity);
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    int progress = seekBar.getProgress();
    tvStart.setText(com.example.d038395.audioupanddown.MyUtils.formatMilliToHMS(progress));
    mediaPlayer.seekTo(progress);
}

private static void LOG(java.lang.String message, java.lang.Object... args) {
    if (args != null)
        message = java.lang.String.format(message, args);
    
    android.util.Log.d("BetterVideoPlayer", message);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putString("conference", mDisplayedConference.getId());
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((onItemClickListener) != null) {
        onItemClickListener.onItemClick(binding, io.simi.widget.RecyclerViewHolder.getAdapterPosition());
    }
}

public static com.grp10.codepath.travelmemo.fragments.TripPhotoFragment newInstance(android.content.Context context, java.lang.String tripId) {
    com.grp10.codepath.travelmemo.fragments.TripPhotoFragment tripPhotoFragment = new com.grp10.codepath.travelmemo.fragments.TripPhotoFragment();
    android.os.Bundle bundle = new android.os.Bundle();
    bundle.putString(com.grp10.codepath.travelmemo.fragments.TripPhotoFragment.ARG_TRIP_ID, tripId);
    tripPhotoFragment.setArguments(bundle);
    return tripPhotoFragment;
}

public static void i(java.lang.String tag, java.lang.String msg) {
    daylemk.xposed.xbridge.utils.Log.xposedLog(tag, msg);
    android.util.Log.i(daylemk.xposed.xbridge.utils.Log.getFormattedTag(tag), msg);
}

public retrofit2.Call<com.onehilltech.gatekeeper.android.http.JsonBearerToken> getUserToken(java.lang.String username, java.lang.String password) {
    com.onehilltech.gatekeeper.android.http.JsonPassword grant = new com.onehilltech.gatekeeper.android.http.JsonPassword();
    grant.clientId = this.config_.clientId;
    grant.username = username;
    grant.password = password;
    return this.getToken(grant);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    createActivityModule();
    super.onCreate(savedInstanceState);
    viewInjector.inject(this, onCreateViewId());
    configurationKeeper.create();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(getContext(), "FAB", Toast.LENGTH_SHORT).show();
    android.content.Intent intent = new android.content.Intent(context, com.george.autorunpro.EventAdder.class);
    startActivity(intent);
}

@java.lang.Override
public void addTextChangedListener(android.text.TextWatcher watcher) {
    if ((mListeners) == null) {
        mListeners = new com.facebook.react.views.textinput.ArrayList();
        super.addTextChangedListener(getTextWatcherDelegator());
    }
    mListeners.add(watcher);
}

@java.lang.Override
public void onPause() {
    android.util.Log.d(com.csci448.goldenrush.networkingpal.NewEventActivity.TAG, "onPause() called");
    super.onPause();
    com.csci448.goldenrush.networkingpal.EventLab.get(this).updateEvent(mEvent);
}

public void setNewGame(com.ma.schiffeversenken.android.controller.Game game2) {
    try {
        com.ma.schiffeversenken.android.model.Player.game.sleep(500);
        com.ma.schiffeversenken.android.model.Player.game.interrupt();
    } catch (java.lang.InterruptedException e) {
        java.lang.System.out.println("Unterbrechung in sleep()");
    }
    this.game = game2;
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    adapter.swapCursor(data);
}

@java.lang.Override
public void onError(com.google.android.gms.common.api.Status status) {
    android.util.Log.i(com.example.kevin.wear_where.MainActivity.TAG, ("An error occurred: " + status));
}

@java.lang.Override
public void removeMarkerClicked(com.google.android.gms.maps.model.LatLng latLng) {
    mOnFocusChangedListener.onFocusChanged(null);
    mBikeStationData.removeMarkerSelection();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_customer_sign_up_page_one);
    setEditTexts();
    humLogController = ((com.example.praduman.humlog.HumLogController) (getIntent().getSerializableExtra("controllerObject")));
    setIntentAndButton();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    com.example.android.bakers.ui.RecipeStepDetailsFragment recipeStepDetailsFragment = com.example.android.bakers.ui.RecipeStepDetailsFragment.newInstance(position, mStepArrayList);
    return recipeStepDetailsFragment;
}

private void addLocations(java.util.List<android.location.Location> ls) {
    for (android.location.Location l : ls)
        mMap.addMarker(org.tlc.whereat.modules.MapUtils.parseMarker(l));
    
}

private void setFabNextAction() {
    fabAction = BottomSheetConfig.FabAction.NEXT;
    fab.setImageResource(R.drawable.ic_arrow_forward_48dp);
    fab.setOnClickListener(new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View v) {
            displayNextExhibitPage();
        }
    });
}

public void startBarcodeScan() {
    com.google.zxing.integration.android.IntentIntegrator integrator = com.google.zxing.integration.android.IntentIntegrator.forSupportFragment(this);
    integrator.setCaptureActivity(it.jaschke.alexandria.ui.CaptureAnyOrientationActivity.class);
    integrator.setOrientationLocked(false);
    integrator.initiateScan();
}

@java.lang.Override
public void onCompleted(org.json.JSONObject object, com.facebook.GraphResponse response) {
    android.util.Log.i(MY_LOG, ("jsonObject=" + (object.toString())));
    jsonResponse = object;
}

public static void d(java.lang.String tag, java.lang.String msg) {
    if (android.text.TextUtils.isEmpty(msg)) {
        return ;
    }
    if (com.vinci.imageloader.core.util.MLog.DEBUG) {
        android.util.Log.d(tag, msg);
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    newsItem = ((com.newsbuzz.NewsItem) (getArguments().getSerializable(com.newsbuzz.NewsFragment.EXTRA_NEWS_ID)));
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onHandle() {
    getActivity().startActivity(new android.content.Intent(getActivity(), com.d.dmusic.mvp.activity.HandleActivity.class));
}

@java.lang.Override
public void showHttpError(int statusCode, java.lang.String message) {
    android.widget.Toast.makeText(java.security.AccessController.getContext(), java.lang.String.format("Http error(%d): %s", statusCode, message), Toast.LENGTH_SHORT).show();
}

public void write(byte[] buffer) {
    try {
        mmOutStream.write("Hej .. It Worked".getBytes());
    } catch (java.io.IOException e) {
        android.widget.Toast.makeText(getApplicationContext(), "Error", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    this.onBackPressed();
    stopPlayService();
}

private boolean validInput(android.view.View view) {
    android.widget.EditText editText = ((android.widget.EditText) (view.findViewById(R.id.price_tracking_input)));
    java.lang.String value = editText.toString();
    return value.matches("[0-9.]*");
}

private void saveToFile(java.io.File folder) {
    com.github.peejweej.androidsideloading.utilities.ShareManager.copyFile(new java.io.File(sideLoadInformation.getUri().getPath()), folder);
}

public com.mikepenz.iconics.IconicsDrawable color(int color) {
    mIconPaint.setAlpha(android.graphics.Color.alpha(color));
    mIconPaint.setColor(color);
    invalidateSelf();
    return this;
}

@java.lang.Override
public void update(java.util.Observable observable, java.lang.Object o) {
    android.util.Log.d("favoritesfrag update", "entered");
    this.detailsAdapter.notifyDataSetChanged();
    listView.setAdapter(detailsAdapter);
}

@java.lang.Override
public void onNext(com.infinote.differentthinking.infinote.models.base.UserContract value) {
    android.util.Log.d("HERE", "sdfhadsfg");
    view.notifySuccessful();
    view.showListNotesActivity();
}

@java.lang.Override
public com.mecuryli.xianxia.support.adapter.adapter.ReadingAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.item_reading, null);
    final com.mecuryli.xianxia.support.adapter.adapter.ReadingAdapter.ViewHolder vh = new com.mecuryli.xianxia.support.adapter.adapter.ReadingAdapter.ViewHolder(itemView);
    return vh;
}

@org.testng.annotations.Test
public void useAppContext() throws java.lang.Exception {
    android.content.Context appContext = android.support.test.InstrumentationRegistry.getTargetContext();
    junit.framework.Assert.assertEquals("com.example.dellpc.wechat", appContext.getPackageName());
}

@java.lang.Override
public void onFailure(java.lang.Throwable t) {
    mDbHelper.queryTable(table, contentArray);
    scrollLoading = false;
    de.greenrobot.event.EventBus.getDefault().postSticky(new com.projects.nosleepproject.events.FailedLoadEvent(contentArray));
    android.util.Log.e("getListings: ", "failed to get list");
}

public android.graphics.Bitmap getPhotoBitmap(android.content.ContentResolver contentResolver, android.net.Uri photoUri) throws java.io.IOException {
    android.graphics.Bitmap photo = MediaStore.Images.Media.getBitmap(contentResolver, photoUri);
    return photo;
}

@java.lang.Override
public void onGlobalLayout() {
    if ((mScreenChangedListener) != null) {
        getWindowVisibleDisplayFrame(mWindowRect);
        mScreenChangedListener.onScreenChanged((((mLastUiVisibility) != (android.view.View.SYSTEM_UI_FLAG_VISIBLE)) || ((mWindowRect.top) == 0)));
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    try {
        com.example.c4q_ac35.espy.FavoritesFragment.venueList = myFavoritesHelper.getVenueDao().queryForAll();
    } catch (java.sql.SQLException e) {
        e.printStackTrace();
    }
    myFavoritesHelper.close();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(com.codepath.apps.tweetter.TweetAdapter.context, "DMing...", Toast.LENGTH_SHORT).show();
}

@android.support.annotation.NonNull
public java.io.InputStream getStream(org.thoughtcrime.securesms.crypto.MasterSecret masterSecret, long id) throws java.io.IOException {
    final byte[] cached = cache.get(id);
    return cached != null ? new java.io.ByteArrayInputStream(cached) : new org.thoughtcrime.securesms.crypto.DecryptingPartInputStream(getFile(id), masterSecret);
}

@java.lang.Override
public void onCompleted(android.content.Context context, net.gotev.uploadservice.UploadInfo uploadInfo, net.gotev.uploadservice.ServerResponse serverResponse) {
    attach.hasUpload = true;
    cb.success();
}

@java.lang.Override
public void onClick(android.view.View v) {
    basic.zhenyuan0502.nguyenlt.armstore.global.GlobalFunction.setNumberOfItem(rowView.getRootView().getContext(), position);
    arrayCart.notifyAll();
}

@java.lang.Override
public void run() {
    for (android.support.v4.widget.SwipeRefreshLayout current : com.zigapk.gimvic.suplence.Main.swipeRefreshLayouts) {
        current.setRefreshing(state);
    }
    if (state)
        android.support.design.widget.Snackbar.make(com.zigapk.gimvic.suplence.Main.coordinatorLayout, R.string.refreshed, Snackbar.LENGTH_SHORT).show();
    
}

public void DoDraw(android.graphics.Canvas c) {
    c.save();
    listener.drawing(c);
    c.restore();
}

private void changeToMenu() {
    android.content.Intent i = new android.content.Intent(this, com.phil.whisha.Activitys.ActivityMenu.class);
    startActivity(i);
}

@java.lang.Override
public java.lang.CharSequence[] getAutofillOptions() {
    android.util.Log.i("POSITION", "getAutofillOptions: ");
    return new java.lang.CharSequence[0];
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    com.app.deemounus.musiccards.MainActivity mainActivity = ((com.app.deemounus.musiccards.MainActivity) (getActivity()));
    ismTwoPane = mainActivity.ismTwoPane();
}

@java.lang.Override
public void onGroupExpand(int groupPosition) {
    android.widget.Toast.makeText(getApplicationContext(), ((expandableListTitle.get(groupPosition)) + " List Expanded."), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.list_credits);
}

public void addBitmap(java.lang.String key, android.graphics.Bitmap bitmap) {
    addBitmapToMemoryCache(key, bitmap);
    addBitmapToDiskCache(key, bitmap);
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder holder) {
    mCameraModel = new com.yydcdut.note.camera.model.camera.CameraModel(getApplicationContext(), holder, mCategoryId);
    mCameraModel.onCreate(this);
    mCameraModel.openCamera(mCameraId, mCameraRotation);
}

private android.content.Context getContext() {
    return context;
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    if ((getActivity()) instanceof com.globant.practice.presentation.view.fragment.SubscriberListFragment.SubscriberListFragmentActions) {
        subscriberListFragmentActions = ((com.globant.practice.presentation.view.fragment.SubscriberListFragment.SubscriberListFragmentActions) (context));
    }
}

public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    switch (keyCode) {
        case android.view.KeyEvent.KEYCODE_BACK :
            android.content.Intent intent = new android.content.Intent(this, com.system.dormitory.dormitory_system_android.activity_main.Manager.Activity_Manager_Rental.class);
            startActivity(intent);
            finish();
            return false;
        default :
            return false;
    }
}

@java.lang.Override
protected java.lang.Void doInBackground(java.lang.Void... params) {
    com.example.marinex.gittrendapp.HttpHandler sh = new com.example.marinex.gittrendapp.HttpHandler();
    jsonStr = sh.makeServiceCall(url);
    android.util.Log.e(TAG, ("Response from url: " + (jsonStr)));
    return null;
}

@java.lang.Override
public void finish() {
    super.finish();
    overridePendingTransition(0, android.R.anim.fade_out);
    com.videobox.main.DownloadTubeRecomActivity.launch(mContext);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void addFragment(android.support.v4.app.Fragment fragment, int stringResource) {
    com.framgia.fpoll.util.ActivityUtil.addFragmentToActivity(getSupportFragmentManager(), fragment, R.id.frame_layout);
    setTitle(stringResource);
}

@java.lang.Override
public void onStop() {
    super.onStop();
    android.util.Log.d(MovieApplication.TAG, ((com.example.vit.popularmovies.ui.fragment.MoviesGridFragment.CLASS) + "onStop()"));
    bus.unregister(this);
}

@java.lang.Override
public void onMakeReceivedProcessFinish() {
    android.content.Intent intent = getIntent();
    setResult(humane.vuram.com.humane.organisationgoodsdetail.RESULT_OK, intent);
    finish();
    hideProgress();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_osm_generator);
    if ((getIntent().getExtras()) != null) {
        extractData(getIntent().getExtras());
    }
}

public void onClick(android.view.View v) {
    if (!(com.meezo.eventtus.twittereventtus.ListOnLineFollowersActivity.waitingForRefresh))
        com.meezo.eventtus.twittereventtus.ListOnLineFollowersActivity.onLineFollowersListKeeper.forceRefresh();
    
}

public void updateScreen(android.graphics.Canvas canvas) {
    android.graphics.Paint paintBackground = new android.graphics.Paint();
    canvas.drawBitmap(mBackground, 0, 0, paintBackground);
    mNote.update(canvas);
    mScoreBar.update(canvas);
}

public void onClick(android.view.View v) {
    setResult(henrywei.henrywei_sizebook.RESULT_OK);
    setIntent(new android.content.Intent());
    finish();
}

@java.lang.Override
public void onCheckedChanged(android.widget.RadioGroup group, int checkedId) {
    switch (checkedId) {
        case R.id.male :
            sexFactor = 1.0;
            android.util.Log.i("AppInfo", java.lang.String.valueOf(sexFactor));
            break;
        case R.id.female :
            sexFactor = 0.9;
            break;
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            drawerLayout.openDrawer(GravityCompat.START);
            onBackPressed();
            return true;
    }
    return super.onOptionsItemSelected(item);
}

private org.adaptlab.chpir.android.participanttracker.models.ParticipantType getParticipantType() {
    int participantTypeId = getArguments().getInt(org.adaptlab.chpir.android.participanttracker.ParticipantListActivity.ParticipantListFragment.ARG_SECTION_NUMBER, 0);
    org.adaptlab.chpir.android.participanttracker.models.ParticipantType participantType = org.adaptlab.chpir.android.participanttracker.models.ParticipantType.getAll().get(participantTypeId);
    return participantType;
}

public void logout(android.view.View view) {
    com.parse.ParseUser.getCurrentUser().logOut();
    android.content.Intent intent = new android.content.Intent(this, com.blueit.g1_chat.LoginActivity.class);
    startActivity(intent);
}

public void addFooterView(android.view.View view) {
    mFooterView = view;
    mGloriousAdapter.notifyItemInserted(((mGloriousAdapter.getItemCount()) - 1));
}

@java.lang.Override
public void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator animation) {
    float alpha = ((float) (animation.getAnimatedValue()));
    mHeaderColorIsChanging = alpha != 0;
    changeHeaderBarColor(alpha);
}

private void changeState(@de.wackernagel.android.sidekick.widgets.CircularRevealView.State
int newState) {
    if ((state) == newState) {
        return ;
    }
    state = newState;
    if ((stateChangeListener) != null) {
        stateChangeListener.onStateChange(newState);
    }
}

@java.lang.Override
public void onSignalStrengthsChanged(android.telephony.SignalStrength signalStrength) {
    super.onSignalStrengthsChanged(signalStrength);
    statusView.setSignalStrength(((int) ((signalStrength.getGsmSignalStrength()) / 7.75)));
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(context, getString(R.string.slow_connectivity), Toast.LENGTH_LONG).show();
    tv_Gauge_TextView_PsuedoButton.setClickable(true);
}

private void updatePortActionHandler(android.content.Intent intent) {
    int port = intent.getIntExtra(WifiP2pService.INTENT_EXTRA_REGISTRATION_PORT, 0);
    if (port == 0) {
        ip = "";
    }
    wifiP2pActivity.setPort(port);
}

public void slideshowSpeedChanged(int newSpeed) {
    android.widget.Toast.makeText(this, ("speed = " + newSpeed), Toast.LENGTH_SHORT).show();
    asbridge.me.uk.MPhoto.helper.Utils.setSlideshowDelay(this, newSpeed);
}

public void onClickFinalize(android.view.View view) {
    android.content.Intent newIntent = new android.content.Intent(getApplicationContext(), pinkteampdm.farmerhelper.PlantActivity.class);
    newIntent.putExtra("cultures", insertedCulturesArray);
    newIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    startActivity(newIntent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    java.io.File oldFile = new java.io.File(keepFileName);
    oldFile.renameTo(file);
    fragmentMedia.close();
    fragmentMedia.open(file.getPath());
    keepFileName = null;
}

@java.lang.Override
public void onReceivedLoginRequest(android.webkit.WebView view, java.lang.String realm, java.lang.String account, java.lang.String args) {
    new com.github.takahirom.zerobrowser.webview.DeviceAccountLogin(mWebViewController.getActivity(), view, this, mWebViewController).handleLogin(realm, account, args);
}

private boolean canChildDragDown() {
    ensureTarget();
    boolean result = android.support.v4.view.ViewCompat.canScrollVertically(mTarget, (-1));
    return result;
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.i(LOG_TAG, "destroying...");
    stopForeground(true);
}

@java.lang.Override
public void writeToParcel(final android.os.Parcel out, final int flags) {
    out.writeSerializable(direction);
    super.writeToParcel(out, flags);
}

@java.lang.Override
public void onSecondaryViewAppeared(final com.innovativetech.audio.audiobookmaster.fabreveallayout.FABRevealLayout fabRevealLayout, android.view.View secondaryView) {
    showSecondaryViewItems();
    if ((mMediaPlayer) == null) {
        initializeMediaPlayer();
    }
    if (!(mMediaPlayer.isPlaying())) {
        mMediaPlayer.start();
    }
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    this.mContext = context;
}

@java.lang.Override
public void peerDeviceListUpdated(java.util.Collection<android.net.wifi.p2p.WifiP2pDevice> deviceList) {
    jobSocketListener.peerListUpdated(deviceList);
    if (com.minhld.multihop.supports.Utils.getConfig("role").equals("server")) {
        return ;
    }
}

@java.lang.Override
public void onSwipeRight(android.support.v7.widget.RecyclerView recyclerView, int[] dismissedItems) {
    if ((dismissedItems != null) && ((dismissedItems.length) > 0)) {
        handleAcceptDecline(true, 0);
    }
}

public void logout(android.view.View view) {
    com.facebook.login.LoginManager.getInstance().logOut();
    android.content.Intent login = new android.content.Intent(this, com.example.friends.fitfriend.LoginActivity.class);
    startActivity(login);
    finish();
}

private int dip2px(android.content.Context context, float dpValue) {
    final float scale = context.getResources().getDisplayMetrics().density;
    return ((int) ((dpValue * scale) + 0.5F));
}

private void log(java.lang.String msg) {
    java.lang.String format = "pos[%s], pages[%s] %s";
    java.lang.String text = java.lang.String.format(format, mPosition, com.shopgun.android.sdk.pageflip.utils.PageflipUtils.join(",", mPages), msg);
    com.shopgun.android.sdk.log.SgnLog.d(com.shopgun.android.sdk.pageflip.CatalogPageFragment.TAG, text);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    if (position == 0) {
        currentFragment = new advancedui.android.bootcamp.end.advancedui.FragmentWillBeContent();
        return new advancedui.android.bootcamp.end.advancedui.FragmentWillBeContent();
    }else {
        return new advancedui.android.bootcamp.end.advancedui.FragmentThereWasContentContent();
    }
}

public android.graphics.Bitmap getFromCache(java.lang.String filename) {
    java.io.File path = new java.io.File(directory, filename);
    android.graphics.BitmapFactory.Options options = new android.graphics.BitmapFactory.Options();
    options.inPreferredConfig = Bitmap.Config.ARGB_8888;
    return android.graphics.BitmapFactory.decodeFile(path.getAbsolutePath(), options);
}

private android.graphics.Bitmap getScreenShot() {
    return getScreenShot(tolomet.getWindow().getDecorView().findViewById(android.R.id.content));
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    com.utama.madtodo.models.LocalRemoteTodo.setupPersistence(getActivity());
    if (key.equals("offlineMode")) {
        setupOfflineModePreferenceDependencies();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.support.design.widget.Snackbar.make(null, "Replace with your own action", Snackbar.LENGTH_LONG).setAction("Action", null).show();
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.options_menu, menu);
    menu.removeItem(R.id.item_goto_move);
    return true;
}

public void addButton(int id, java.lang.String description) {
    android.widget.RadioButton radioButton = getNewButton();
    radioButton.setId(id);
    radioButton.setContentDescription(description);
    addButton(radioButton);
}

@java.lang.Override
protected void bindImpl() {
    getContext().bindService(createServiceIntent().setAction(IpcConstant.ACTION_CLIENT_MANAGER), (mClientManagerConn = new com.heaven7.android.ipc.MessageClient.ClientManagerConnectionImpl()), Context.BIND_AUTO_CREATE);
    super.bindImpl();
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.floatingActionButton :
            getData();
    }
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    isLock = false;
    list.remove(position);
    animationGridViewAdapter.removeItem(0).commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    try {
        com.soomla.profile.SoomlaProfile.getInstance().getSocialController().logout(mProvider);
    } catch (com.soomla.profile.exceptions.ProviderNotFoundException e) {
        e.printStackTrace();
    }
    updateUIOnLogout();
}

@java.lang.Override
public void onClick(android.view.View v) {
    int current = getItem((-1));
    if (current > 0) {
        viewPager.setCurrentItem(current);
    }
}

public void withMaxResultSize(@android.support.annotation.IntRange(from = 100)
int width, @android.support.annotation.IntRange(from = 100)
int height) {
    mOptionBundle.putBoolean(com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_SET, true);
    mOptionBundle.putInt(com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_X, width);
    mOptionBundle.putInt(com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_Y, height);
}

@java.lang.Override
public void run() {
    try {
        applyGlobalContent(false, view, activity);
        android.support.design.widget.Snackbar.make(view, "Updated special date!", Snackbar.LENGTH_SHORT).show();
    } catch (java.lang.IllegalArgumentException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    java.lang.System.out.println("ConfirmationActivity : onActivityResult");
    if (com.simplify.android.sdk.Simplify.handleAndroidPayResult(requestCode, resultCode, data)) {
        return ;
    }
    super.onActivityResult(requestCode, resultCode, data);
}

@java.lang.Override
public void run() {
    player.markCurrentSong(DoubanAPI.OP_MARK_AS_LIKE);
    mine.android.api.ContextAPI.makeToast("已标记为喜欢");
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    com.tianyl.android.offlinereader.sync.SyncService.addLog("onConfigurationChanged");
}

@java.lang.Override
public void onTaskViewDismissed(com.android.systemui.recents.model.Task t) {
    com.android.systemui.recents.model.RecentsTaskLoader loader = com.android.systemui.recents.model.RecentsTaskLoader.getInstance();
    loader.deleteTaskData(t, false);
    loader.getSystemServicesProxy().removeTask(t.key.id);
    updateMemoryStatus();
}

@android.annotation.SuppressLint(value = "NewApi")
@android.support.annotation.RequiresPermission(value = Manifest.permission.USE_FINGERPRINT)
public final boolean areFingerprintsEnrolled() {
    if ((fingerprintManager) != null) {
        return fingerprintManager.hasEnrolledFingerprints();
    }else {
        return false;
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.salesforce.androidsdk.reactnative.app.SalesforceReactSDKManager.initReactNative(getApplicationContext(), new com.salesforce.samples.smartsyncexplorerreactnative.ReactNativeKeyImpl(), com.salesforce.samples.smartsyncexplorerreactnative.MainActivity.class);
}

public void postGame(android.view.View v) {
    if (load) {
        android.content.Intent i = new android.content.Intent(this, com.example.recleague.PostGame.class);
        startActivity(i);
    }
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putString("messageDraft", message.getText().toString());
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    if ((uk.ac.abertay.firedroidpager.SQLDatabaseHelper.DBVER) > 1) {
        db.execSQL(("DROP IF TABLE EXISTS " + (uk.ac.abertay.firedroidpager.SQLDatabaseHelper.TABLE_NAME)));
    }
}

private void initializeInjector() {
    this.activityComponent = getApplicationComponent().plus(new cat.xlagunas.andrtc.di.modules.ActivityModule(this));
    activityComponent.inject(this);
    android.util.Log.d(cat.xlagunas.andrtc.view.activity.LoginActivity.TAG, ("CallbackManager " + (callbackManager.toString())));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    showSpinnerDialog();
    randomNumber2to10 = (nyc.c4q.ashiquechowdhury.androidnekoproject.util.RandomNumberChooser.chooseRandomNumber(8)) + 2;
}

@java.lang.Override
public void onBackPressed() {
    drawer = ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout)));
    if (drawer.isDrawerOpen(GravityCompat.START)) {
        drawer.closeDrawer(GravityCompat.START);
    }else {
        super.onBackPressed();
    }
}

private synchronized void actionPause() {
    pauseActiveElements();
    mState = com.android.mms.dom.smil.SmilPlayer.SmilPlayerState.PAUSED;
    mAction = com.android.mms.dom.smil.SmilPlayer.SmilPlayerAction.NO_ACTIVE_ACTION;
    notifyPlayStateChangeListener();
}

private void scanInternalSubtitleTracks() {
    if ((mSubtitleController) == null) {
        android.util.Log.d(android.media.MediaPlayer.TAG, "setSubtitleAnchor in MediaPlayer");
        setSubtitleAnchor();
    }
    populateInbandTracks();
    if ((mSubtitleController) != null) {
        mSubtitleController.selectDefaultTrack();
    }
}

@java.lang.Override
public void onPlaceSelected(com.google.android.gms.location.places.Place place) {
    vacationLatitude = place.getLatLng().latitude;
    vacationLongitude = place.getLatLng().longitude;
    android.util.Log.i(com.example.kevin.wear_where.MainActivity.TAG, ("Place: " + (place.getName())));
}

private com.visenze.visearch.android.ResultList getResult(java.lang.String jsonResponse) {
    com.visenze.visearch.android.ResultList resultList = null;
    try {
        resultList = com.visenze.visearch.android.util.ResponseParser.parseResult(jsonResponse);
    } catch (com.visenze.visearch.android.ViSearchException exception) {
        exception.printStackTrace();
    }
    return resultList;
}

public void clearKeyguardWallpaper() {
    if (com.android.server.wallpaper.WallpaperManagerService.DEBUG)
        android.util.Slog.v(com.android.server.wallpaper.WallpaperManagerService.TAG, "clearWallpaper");
    
    synchronized(mLock) {
        clearKeyguardWallpaperLocked(android.os.UserHandle.getCallingUserId(), null);
    }
}

public void showDialogInitializingCommandPlayer(final android.app.Activity uiContext, boolean warningNoneProvider) {
    showDialogInitializingCommandPlayer(uiContext, warningNoneProvider, null, true);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    mSettings.setShowImeWithHardKeyboard(isChecked);
    hideInputMethodMenu();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_delete_from_trash :
            handleRemoveFromTrashAction();
        case R.id.action_restore_from_trash :
            handleRestoreFromTrashAction();
            break;
    }
    return true;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    com.facebook.Session session = com.facebook.Session.getActiveSession();
    com.facebook.Session.saveSession(session, outState);
    com.kii.cloud.storage.Kii.onSaveInstanceState(outState);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return com.example.guest.coffeeShop.ui.CoffeeShopDetailFragment.newInstance(mCoffeeShops, position);
}

@java.lang.Override
public void onFingerprintDialogVerifyPassword(com.aitorvs.android.fingerlock.FingerprintDialog fingerprintDialog, java.lang.String s) {
    android.widget.Toast.makeText(this, "onFPDverifyPassword", Toast.LENGTH_SHORT).show();
}

protected void onCancelPressed(android.view.View view) {
    android.util.Log.d("Edit", "Cancel User Profile");
    finish();
}

@java.lang.Override
public void onError(java.lang.Exception e) {
    android.widget.Toast.makeText(getApplicationContext(), "Error fetching data", Toast.LENGTH_SHORT).show();
}

private void initLauncherChildren(android.view.View launcher) {
    icList = ((android.support.v7.widget.RecyclerView) (launcher.findViewById(R.id.ic_list)));
    trigger = ((android.widget.ImageView) (launcher.findViewById(R.id.touch_trigger)));
    initIconList();
    initTrigger();
}

public static void recordActivity(org.json.JSONObject jmessage) {
    de.xavaro.android.common.ActivityManager.getInstance().onMessage(jmessage, false);
}

private void log(java.lang.String s) {
    android.util.Log.d(org.epfl.locationprivacy.privacyestimation.PrivacyEstimator.LOGTAG, s);
    org.epfl.locationprivacy.util.Utils.appendLog(((org.epfl.locationprivacy.privacyestimation.PrivacyEstimator.LOGTAG) + ".txt"), s);
}

@java.lang.Override
public boolean onFling(android.view.MotionEvent e1, android.view.MotionEvent e2, float velocityX, float velocityY) {
    mFlingShow = (java.lang.Math.abs(velocityX)) >= (mFlingVelocity);
    return mFlingShow;
}

public void onRestoreInstanceState(android.os.Bundle outState) {
    if (outState.containsKey("image_pick_request_code")) {
        mRequestCode = outState.getInt("image_pick_request_code");
    }
}

public synchronized java.lang.String getAuthToken() {
    com.salesforce.androidsdk.util.SalesforceSDKLogger.i(com.salesforce.androidsdk.rest.RestClient.TAG, ("Found account -- get token " + (authToken)));
    return authToken;
}

@org.opendatakit.common.android.views.JavascriptInterface
public void saveCheckpointAsIncomplete(java.lang.String tableId, java.lang.String stringifiedJSON, java.lang.String rowId, java.lang.String callbackJSON, java.lang.String transId, java.lang.Boolean leaveTransactionOpen) throws android.os.RemoteException {
    weakData.get().saveCheckpointAsIncomplete(tableId, stringifiedJSON, rowId, callbackJSON, transId, leaveTransactionOpen);
}

private void sortByLocations(android.location.Location userLocation) {
    if (userLocation != null) {
        adapter.sortByLocation(userLocation);
    }
}

public void openSong(studio6ty9.gesamp.Song song) {
    android.content.Intent startSong = new android.content.Intent(this, studio6ty9.gesamp.MusicPlayer.class);
    startSong.putExtra("songId", song.getId());
    startActivity(startSong);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    saveScadenzeValues(dialogScadenze);
    org.greenrobot.eventbus.EventBus.getDefault().post(new simone.datecar.bus.DatiAggiornatiEvent("Aggiornati dati auto"));
}

@java.lang.Override
public void onClick(android.view.View v) {
    max.sudoku.MainActivity.b.setText("6");
    startListener();
}

public void clickFAB(android.view.View view) {
    com.fourthwardcoder.android.volumemanager.data.ProfileManager.newProfile(this, mTabLayout.getSelectedTabPosition());
}

public boolean isTagEnabled(java.lang.String tag) {
    try {
        return mService.isTagEnabled(tag);
    } catch (android.os.RemoteException e) {
        return false;
    }
}

protected void addTab(java.lang.String id, java.lang.String title, java.lang.Class<? extends android.support.v4.app.Fragment> fragment, android.os.Bundle args) {
    mTabsAdapter.addTab(mTabHost.newTabSpec(id).setIndicator(title), fragment, args);
}

@java.lang.Override
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    filePicker.onActivityResult(requestCode, resultCode, data);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent();
    intent.setClass(getActivity(), com.example.emiya.myapp8.Open.class);
    startActivity(intent);
    getActivity().finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.home_find_bringer :
            android.content.Intent intent = new android.content.Intent(getActivity(), com.morgane.painauchocolat.activities.BringerActivity.class);
            startActivityForResult(intent, Constant.REQUEST_CODE_FIND_BRINGER);
            break;
    }
}

@java.lang.Override
public void onValueChange(android.widget.NumberPicker numberPicker, int oldVal, int newVal) {
    quantity = newVal * 5;
    android.util.Log.e("quantity", ((quantity) + ""));
}

@java.lang.Override
public void onClick(android.view.View v) {
    it.bsdsoftware.library.BSDUtility.handleClickItem(getActivity(), image, gallery, 0);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.crashlytics.android.Crashlytics.log(Log.DEBUG, TAG, "more clicked");
    showNextPage();
}

@java.lang.Override
public void onClick(android.view.View v) {
    callingActivity.startActivityForResult(new android.content.Intent(android.provider.Settings.ACTION_SETTINGS), 0);
    snackbar.dismiss();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (v == (mSignOut)) {
        mFirebaseAuth.signOut();
        finish();
        mIntent = new android.content.Intent(this, com.example.a6sigma.great4ip.LoginActivity.class);
    }
    startActivity(mIntent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent recordIntent = new android.content.Intent();
    startActivity(recordIntent);
}

public void setLocOption(com.baidu.location.LocationClientOption option) {
    if ((mClient) == null)
        android.util.Log.e(C.TAG, "locationclient can not be null before using is");
    else
        mClient.setLocOption(option);
    
}

public void onClick(android.view.View view) {
    if ((hours) == 1) {
        hours = 12;
    }else {
        --(hours);
    }
    displayHours(hours);
}

public void onSignInClick(android.view.View view) {
    if (!(googleApiClient.isConnecting())) {
        textViewStatus.setText("Signing in");
        resolveSignInError();
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.menu_book_edit_save :
            if (saveBook()) {
                finish();
            }
        default :
            return super.onOptionsItemSelected(item);
    }
}

protected void refresh(final android.os.Bundle b) {
    if ((loader) != null) {
        onStartLoading();
    }
    au.com.pactera.pacterapulse.core.BaseFragment.getLoaderManager().restartLoader(this.hashCode(), b, this);
}

@java.lang.Override
public void onTextChanged(java.lang.CharSequence s, int start, int before, int count) {
    topic = topicS.getText().toString();
    android.util.Log.e("Topic", topic);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    setContentView(R.layout.activity_main);
    initializeComponents();
}

@java.lang.Override
public void callback(java.lang.String url, android.widget.ImageView iv, android.graphics.Bitmap bm, com.androidquery.callback.AjaxStatus status) {
    aq.id(ivScreen).image(com.florianmski.tracktoid.Utils.shadowBitmap(com.florianmski.tracktoid.Utils.borderBitmap(bm, getActivity()))).animate(android.R.anim.fade_in);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent();
    intent.setClass(this, com.inkenka.devdemos.ActivityStack.SecondActivity.class);
    intent.setClass(this, com.inkenka.devdemos.ActivityStack.ThirdActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putInt("position", mPairsSpinner.getSelectedItemPosition());
}

protected static java.lang.String getDeviceID(android.content.Context context) {
    java.lang.String uuid = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
    return java.util.UUID.nameUUIDFromBytes(uuid.getBytes()).toString();
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker datePicker, int year, int month, int day) {
    textToEdit.setText(((((year + "-") + month) + "-") + day), TextView.BufferType.EDITABLE);
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    android.util.Log.wtf("!!!!!!!!!!!!", query);
    findAttendees(query);
    return true;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    init();
    initTabs(savedInstanceState);
    checkIntentData(getIntent());
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError error) {
    android.content.Intent intent = new android.content.Intent(this, com.app.scope.myapplication.LoginActivity.class);
    startActivity(intent);
    finish();
}

private void closeFragment() {
    android.support.v4.app.FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
    fragmentManager.beginTransaction().remove(this).commit();
    fragmentManager.popBackStackImmediate();
}

@java.lang.Override
public void onClick(android.view.View v) {
    ((me.ccrama.redditslide.Activities.AlbumPager) (getActivity())).showBottomSheetImage(url, false);
}

private int getAsOpaque(int color) {
    return android.graphics.Color.argb(255, android.graphics.Color.red(color), android.graphics.Color.green(color), android.graphics.Color.blue(color));
}

private void startAppendToMovieListTask(int firstPageToAppend) {
    mAppendProgressSpinner.setVisibility(View.VISIBLE);
    if ((mLoadMovieListTask) != null) {
        return ;
    }
    mLoadMovieListTask = new com.example.android.popularmovies.PosterGridFragment.LoadMovieList();
    mLoadMovieListTask.execute(firstPageToAppend, com.example.android.popularmovies.PosterGridFragment.APPEND_PAGE_COUNT, com.example.android.popularmovies.PosterGridFragment.LoadMovieList.APPEND_TO_LIST_ON_COMPLETE);
}

@java.lang.Override
public void onStopNestedScroll(android.view.View target) {
    mNestedScrollingParentHelper.onStopNestedScroll(target);
    if ((mTotalUnconsumed) > 0) {
        finishSpinner(mTotalUnconsumed);
        mTotalUnconsumed = 0;
    }
    stopNestedScroll();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_error);
    final android.support.wearable.view.WatchViewStub stub = ((android.support.wearable.view.WatchViewStub) (findViewById(R.id.watch_view_stub)));
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_find_master :
            android.util.Log.d("BasicActivity", "find master");
            break;
        case R.id.action_free_area :
            android.util.Log.d("BasicActivity", "free area");
            break;
    }
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    org.osmdroid.views.overlay.TilesOverlay orthophotoOverlay = ((org.osmdroid.views.overlay.TilesOverlay) (mapView.getOverlayManager().get(0)));
    showOrtophoto = !(showOrtophoto);
    orthophotoOverlay.setEnabled(showOrtophoto);
    mapView.invalidate();
}

@java.lang.Override
public void onMapLongClick(com.google.android.gms.maps.model.LatLng ll) {
    com.digitalartthingy.witw.CustomMarker customMarker = new com.digitalartthingy.witw.CustomMarker(ll);
    com.digitalartthingy.witw.MarkerDetails details = new com.digitalartthingy.witw.MarkerDetails();
    details.enterDetails(mContext, customMarker);
    mMarkerStorage.addNewMarker(customMarker);
}

@java.lang.Override
protected void onResume() {
    android.util.Log.v(szu.bdi.hybrid.demo.MainActivity.LOGTAG, ".onResume()");
    super.onResume();
    synchronized(szu.bdi.hybrid.demo.MainActivity._is_main_init) {
        if ((szu.bdi.hybrid.demo.MainActivity._is_main_init) == true)
            return ;
        
        szu.bdi.hybrid.demo.MainActivity._is_main_init = true;
    }
    fwdToMain();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    butterknife.ButterKnife.bind(this);
    setContentView(R.layout.activity_donate);
}

@java.lang.Override
public void onClick(android.view.View view) {
    searchedLocationEditTextField.setText("My Location");
    shouldGetLocationFromLocationEditText = true;
    shouldGetLocationFromUserData = false;
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    rl.setVisibility(View.GONE);
    updateVisibility();
}

public static de.htwberlin.f4.ai.ma.measurement.IndoorMeasurement getIndoorMeasurement(android.content.Context context) {
    if ((de.htwberlin.f4.ai.ma.measurement.IndoorMeasurementFactory.indoorMeasurement) == null) {
        de.htwberlin.f4.ai.ma.measurement.IndoorMeasurementFactory.indoorMeasurement = new de.htwberlin.f4.ai.ma.measurement.IndoorMeasurementImpl(context);
    }
    return de.htwberlin.f4.ai.ma.measurement.IndoorMeasurementFactory.indoorMeasurement;
}

public static void sendMessage(com.google.api.services.gmail.model.Message message) throws java.io.IOException, javax.mail.MessagingException {
    if ((android.g38.ritik.Gmail.ScheduleMail.mService) != null)
        android.g38.ritik.Gmail.ScheduleMail.mService.users().messages().send("me", message).execute();
    
}

@java.lang.Override
public void onLongPress(android.view.MotionEvent e) {
    android.util.Log.e(com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG, "ScoreView onLongPress()");
    ((com.coralcreations.mylittlescoreapp.MainActivity) (getContext())).handle_long_press();
}

@java.lang.Override
public void saveAdminDataToSharedPreferences(java.lang.Boolean isAdmin) {
    android.content.SharedPreferences.Editor editor = getSharedPreferences(Constants.ADMIN, cazimir.com.bancuribune.ui.list.MODE_PRIVATE).edit();
    editor.putBoolean(Constants.ADMIN, true);
    editor.apply();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_setting);
    android.app.ActionBar actionBar = getActionBar();
    actionBar.setDisplayHomeAsUpEnabled(true);
}

protected void goToAnswersActivity(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, ace.quizbowl.AnswersActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent sensorEvent) {
    java.lang.System.out.println("new step registered!");
    manager.newStepDone();
    loadTodo();
}

@java.lang.Override
public void onClick(android.view.View v) {
    stopMediaPlayer(mp);
    dialog.dismiss();
}

@org.androidannotations.annotations.Background
private void downloadMap(java.lang.String mapType) {
    publishDownloadComplete(mapType);
}

protected void playPause(android.view.View view) {
    if (paused)
        startTimer();
    else
        stopTimer();
    
}

public void onClick(android.content.DialogInterface dialog, int which) {
    writeToNFC = false;
}

public void onClick(android.view.View v) {
    (clicks)++;
    checknumberOfOutcomes(",");
    insertDisplayCharacter(",");
}

private void log(com.noveogroup.android.log.Logger.Level level, java.lang.String format, java.lang.Object arg) {
    logger.print(level, org.slf4j.helpers.MessageFormatter.format(format, arg).getMessage(), null);
}

public static native android.graphics.Bitmap generateQRCode(java.lang.String string, android.content.res.AssetManager assetManager);

@butterknife.OnClick(value = R.id.btn_next_step)
public void nextStep(android.view.View v) {
    nextButtonClickListener.onNextButtonClick(currentStep.getId());
}

@java.lang.Override
public void write(@android.support.annotation.NonNull
com.google.gson.stream.JsonWriter out, @android.support.annotation.NonNull
com.codebutler.farebot.core.ByteArray value) throws java.io.IOException {
    out.value(value.base64());
}

public void scheduledRecordingStopped() {
    android.util.Log.d(com.danielkim.soundrecorder.fragments.RecordFragment.TAG, "RecordFragment - scheduledRecordingStopped");
    updateUI(false);
    isRecording = false;
}

@java.lang.Override
public void start() {
    if ((audioRecord) == null) {
        audioRecord = new android.media.AudioRecord(MediaRecorder.AudioSource.MIC, com.novoda.canvas.audioviz.SimpleSoundMeter.SAMPLE_RATE, android.media.AudioFormat.CHANNEL_IN_MONO, android.media.AudioFormat.ENCODING_PCM_16BIT, minBufferSize);
    }else {
        audioRecord.startRecording();
    }
}

@java.lang.Override
public void onBackPressed() {
    super.onBackPressed();
    android.content.Intent intent = getParentActivityIntent();
    startActivity(intent);
}

@java.lang.Override
public void onSeekComplete(android.media.MediaPlayer mp) {
    android.util.Log.e(com.infthink.flintreceiver.receiver.SimpleMediaPlayerActivity.TAG, "onSeekComplete!");
    mFlintVideo.notifyEvents(FlintVideo.SEEKED, "Media SEEKED");
    if (!(mMediaPlayer.isPlaying())) {
        mFlintVideo.notifyEvents(FlintVideo.PAUSE, "Media PAUSED?");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    this.loadNewIssue();
}

public void onClickItem(android.view.View v, int position) {
    selectItem(position);
}

public void launchActivity(java.lang.Class target, android.support.v4.util.Pair<android.view.View, java.lang.String>[] sharedElements, java.util.Map<java.lang.String, java.lang.Object> data, boolean killCurrunt) {
    launchActivity(activity, target, null, null, false);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_splashscreen);
    try {
        handleSetUp();
    } catch (java.lang.InterruptedException e) {
        e.printStackTrace();
    }
}

private boolean isExternalStorageAvalaible() {
    java.lang.String state = android.os.Environment.getExternalStorageState();
    if (state.equals(Environment.MEDIA_MOUNTED))
        return true;
    else
        return false;
    
}

@java.lang.Override
protected java.lang.Void doInBackground(java.lang.Void... params) {
    android.os.Debug.waitForDebugger();
    try {
        cursor = dbManager.getAllBusinesses();
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
    return null;
}

@java.lang.Override
public void onResume() {
    super.onResume();
    getActivity().registerReceiver(mScanResultsReceiver, new android.content.IntentFilter(android.net.wifi.WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));
    mWifiUtils.startWifiScan();
}

@java.lang.Override
public void onClick(android.view.View v) {
    try {
        retrieveDataFromBasicKidFields();
        kid.setId(Daos.KID.save(kid));
        startKidActivity(kid);
    } catch (ar.edu.unlp.info.hermescelascolus.validation.ValidationError validationError) {
    }
}

@java.lang.Override
public void refreshMovieList() {
    mLoadManager.restartLoader(com.manpdev.androidnanodegree.popularmov.movie.movielist.MovieList.MOVIE_LOADER_ID, null, this);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    for (java.lang.Class c : us.michaelchen.compasslogger.receiver.PeriodicReceiver.PERIODICS) {
        context.startService(new android.content.Intent(context, c));
    }
    us.michaelchen.compasslogger.utils.PreferencesWrapper.updateLastAlarmTimestamp();
}

@android.annotation.SuppressLint(value = "NewApi")
@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    mHandlerThread.quit();
    android.util.Log.v(TAG, "onDestroy");
}

@java.lang.Override
public void run() {
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        public void run() {
            showPlay(btn);
            showChart(tag, chart, btn);
        }
    }, 500);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    loadData(false);
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    android.util.Log.v(leoliang.runningcadence.BackgroundService.LOG_TAG, "onUnbind'd");
    clientHandler = null;
    return false;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if ((getArguments()) != null) {
        mParam1 = getArguments().getString(nmct.howest.be.desproject.ShowMapFragment.ARG_PARAM1);
        mParam2 = getArguments().getString(nmct.howest.be.desproject.ShowMapFragment.ARG_PARAM2);
    }
}

@java.lang.Override
public void onRestResults(int state, java.util.ArrayList<?> results) {
    android.util.Log.d("TEST", "");
}

@java.lang.Override
public boolean isViewFromObject(android.view.View view, java.lang.Object object) {
    return view == object;
}

@java.lang.Override
public void onItemClick(final android.view.View view, final int verticalIndex, final int position) {
    mc2.tvz.croatiago.activities.DetailActivity.startDetailsActivity(getActivity(), listModels.get(verticalIndex).objects, position);
}

private void createGridViewAdapter() {
    moviesAdapter = new com.example.android.popularmovies.app.MoviesAdapter(new java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>(), getActivity(), getContext());
    updateMoviesViewMode();
    gridView.setAdapter(moviesAdapter);
}

@java.lang.Override
public void onActionTopicClicked(com.cngu.androidfun.data.ActionTopic topic, com.cngu.androidfun.main.TopicListAdapter.ViewHolder viewHolder) {
    if (mTopicManager.isActionTopicReached()) {
        mTopicManager.popTopicFromHistory();
    }
    mTopicManager.pushTopicToHistory(topic);
}

public void run() {
    if ((null != (mMediaServer)) && (mMediaRenderer.isRunning())) {
        mMediaServer.stop();
        mMediaServer = null;
        android.util.Log.i(com.meizu.ruandongchuan.dlnatest.service.DLNAService.TAG, "stopMediaServer");
    }
}

@java.lang.Override
public void onImageDownloaded(android.graphics.Bitmap bitmapResult) {
    imageLoadingProgress.setVisibility(View.GONE);
    floatingActionButton.setVisibility(View.VISIBLE);
    mainContentImageView.setImageBitmap(bitmapResult);
}

public static void loadWriteImg(android.content.Context context, final android.widget.ImageView img, final com.aoliao.notebook.utils.entity.Write.Content content) {
    com.bumptech.glide.Glide.with(context).load(content.getImg()).error(R.mipmap.sidebar).diskCacheStrategy(DiskCacheStrategy.NONE).into(img);
}

public void displayPlayerRolesDialog() {
    android.app.FragmentManager fm = getActivity().getFragmentManager();
    com.cs428.pandemic.frontEnd.gamePlay.RoleSummaryFragment dialog = new com.cs428.pandemic.frontEnd.gamePlay.RoleSummaryFragment();
    dialog.setTargetFragment(this, 0);
    dialog.show(fm, "roles");
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    data.add(3, input.getText().toString());
    desc0 = input.getText().toString();
}

protected int parseComponentStrength(java.lang.String strength) {
    switch (strength) {
        case "MAX" :
            return uk.ac.aber.gij2.olandroid.visualisation.Component.MAX;
        case "ZERO" :
            return uk.ac.aber.gij2.olandroid.visualisation.Component.ZERO;
        case "MIN" :
            return uk.ac.aber.gij2.olandroid.visualisation.Component.MIN;
    }
    return uk.ac.aber.gij2.olandroid.visualisation.Component.ZERO;
}

@java.lang.Override
public void create(android.app.Activity activity, android.os.Bundle savedInstanceState) {
    loadNavList();
    if ((mCategory) != null) {
        selectItem(mCategory, false);
    }
    mView.onLockDragLayout(needLockDrawerLayout());
}

public android.content.Context getContext() {
    return eu.focusnet.app.FocusApplication.instance.getApplicationContext();
}

@java.lang.Override
public android.view.View getHeader(android.app.Activity activity) {
    android.view.LayoutInflater inflater = android.view.LayoutInflater.from(activity);
    header = inflater.inflate(R.layout.view_browse_peer_header, ((android.view.ViewGroup) (getView())));
    updateHeader();
    return header;
}

protected boolean isValidFragment(java.lang.String fragmentName) {
    android.util.Log.d("FRAG FETCH", "degug stop...");
    return (android.preference.PreferenceFragment.class.getName().equals(fragmentName)) || (com.is.was.be.wannareddit.SettingsActivity.GeneralPreferenceFragment.class.getName().equals(fragmentName));
}

@java.lang.Override
protected void onPostExecute(java.lang.Void aVoid) {
    android.util.Log.d("jai done Thread", "populateFragment");
    dayAdapter = new org.buildmlearn.mconference.adapters.DayRecyclerView(talks);
    dayRecyclerView.setAdapter(dayAdapter);
}

private void weChatAction(int flag) {
    if (!(checkWXInstalled())) {
        android.widget.Toast.makeText(mContext, R.string.weiChat_not_installed, Toast.LENGTH_SHORT).show();
    }else {
        weChatShare(flag);
        setVisible();
    }
}

private void iniData() {
    new com.kejian.mike.mike_kejian_android.ui.campus.HottestPostListFragment.InitDataTask().execute("1234");
}

public void guestAccessClick() {
    android.app.DialogFragment dialog = new com.funhausclicker.saxypandabear.funhausclicker.GuestAccessDialog();
    dialog.show(getFragmentManager(), "guest_access");
}

@java.lang.Override
public void answerRandomInput(java.lang.String randomInput) {
    if (!(android.text.TextUtils.isEmpty(randomInput)))
        webViewBooker.sendCaptcha(randomInput);
    
}

private void handleThemeActivated(@android.support.annotation.NonNull
org.wordpress.android.fluxc.store.ThemeStore.ActivateThemePayload payload) {
    org.wordpress.android.fluxc.store.ThemeStore.OnThemeActivated event = new org.wordpress.android.fluxc.store.ThemeStore.OnThemeActivated(payload.site, payload.theme);
    if (payload.isError()) {
        event.error = payload.error;
    }
    emitChange(event);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (((weight.getText()) != null) && ((height.getText()) != null)) {
        cal_BMI();
    }
}

@java.lang.Override
public void onCreate() {
    android.util.Log.d(ListviewFragment.LOG_TAG, "onCreate() called from AutoStartUpService");
    super.onCreate();
    oth_regensburg.automaticnewspaperdownloader.AutoStartUpService.InitService(this);
    oth_regensburg.automaticnewspaperdownloader.AutoStartUpService.setAlarm(this, true);
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(getBaseContext(), ("Error: " + errorMsg), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    mainRad.setSelected(false);
    optionalRad.setSelected(true);
    isOnlyMain = false;
}

@java.lang.Override
public void onMessageReceived(com.google.android.gms.wearable.MessageEvent messageEvent) {
    if (messageEvent.getPath().equals("/increase_wear_counter")) {
        tvMessage.setText(java.lang.Integer.toString(((count)++)));
    }
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) {
    editNamsinh.setText(java.lang.String.valueOf(((((dayOfMonth + "/") + monthOfYear) + "/") + year)));
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    if (position == (com.thedeveloperworldisyours.carouselviewpager.MainActivity.FIRST_PAGE))
        mScale = com.thedeveloperworldisyours.carouselviewpager.CustomPagerAdapter.BIG_SCALE;
    else
        mScale = com.thedeveloperworldisyours.carouselviewpager.CustomPagerAdapter.SMALL_SCALE;
    
    position = position % (com.thedeveloperworldisyours.carouselviewpager.MainActivity.PAGES);
    return com.thedeveloperworldisyours.carouselviewpager.CustomFragment.newInstance(mContext, position, mScale);
}

@java.lang.Override
public void onClick(android.view.View view) {
    contributorDialog(false).show();
    dialog.dismiss();
}

public void onDrawerClosed(android.view.View view) {
    getSupportActionBar().setTitle(buildStyledString(mTitle));
    supportInvalidateOptionsMenu();
}

public static void e(final java.lang.Exception e) {
    if (com.stanko.tools.Log.isDebuggable)
        android.util.Log.e(com.stanko.tools.Log.getMethodName(), e.getMessage(), e);
    
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.support.design.widget.Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG).setAction("Action", null).show();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if (id == (R.id.action_settings)) {
        mNavigationHandler.switchFragment(new org.hisp.dhis2.android.sdk.fragments.SettingsFragment(), SettingsFragment.TAG);
    }
    return super.onOptionsItemSelected(item);
}

@org.junit.Test(expected = java.lang.IllegalArgumentException.class)
public void test_crash_if_unknown_view_class() {
    io.nlopez.smartadapters.builders.AABindableLayoutBuilder builder = new io.nlopez.smartadapters.builders.AABindableLayoutBuilder();
    int viewType = io.nlopez.smartadapters.utils.Mapper.viewTypeFromViewClass(builder.viewType(0, 0, mapper));
    android.view.View bindableLayout = builder.build(parent, 0, null, mapper);
}

@java.lang.Override
public void onConnectionFailed(@android.support.annotation.NonNull
com.google.android.gms.common.ConnectionResult connectionResult) {
    if ((connectionResult.getErrorCode()) == (com.google.android.gms.common.ConnectionResult.SERVICE_VERSION_UPDATE_REQUIRED)) {
        android.util.Log.i(com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS, "Google play service not updated");
    }
    locationUpdateListener.cannotReceiveLocationUpdates();
}

public void changeTestProviderLocation(android.location.Location location) {
    if ((locationManager) != null) {
        locationManager.setTestProviderLocation(preferredLocationProvider, location);
        android.util.Log.d("GPSTest", "changeTestProviderLocation called");
    }else {
        android.util.Log.w("TagSwipeActivity", "Location manager is null, cannot change the location in the test provider");
    }
}

@java.lang.Override
public android.view.View newView(android.content.Context context, android.database.Cursor cursor, android.view.ViewGroup viewGroup) {
    return android.view.LayoutInflater.from(context).inflate(R.layout.contact_adapter_view, null);
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.LOLLIPOP)
private void tintNotificationBar(int colorId, java.lang.String name, android.app.Activity activity) {
    activity.getWindow().setStatusBarColor(activity.getResources().getColor(colorId));
}

private boolean isExternalStorageReadable() {
    java.lang.String state = android.os.Environment.getExternalStorageState();
    if ((Environment.MEDIA_MOUNTED.equals(state)) || (Environment.MEDIA_MOUNTED_READ_ONLY.equals(state))) {
        return true;
    }
    return false;
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, byte[] responseBody, java.lang.Throwable error) {
    java.lang.String r = new java.lang.String(responseBody);
    android.util.Log.e("Update check", "Couldn't get latest version");
}

public void startGame(android.view.View view) {
    com.yalinwang.birdhunter.BirdHunterView gameView = ((com.yalinwang.birdhunter.BirdHunterView) (findViewById(R.id.game_view)));
    gameView.startGame();
}

@java.lang.Override
public void onStart() {
    super.onStart();
    gapiClient.connect();
    android.widget.Toast.makeText(this, "gapiClient.connect()", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onPostExecute(android.graphics.Bitmap bitmap) {
    super.onPostExecute(bitmap);
    this.photo.setImageBitmap(bitmap);
}

@java.lang.Override
public it.zerocool.batmacaana.ContentAdapter.ContentViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = inflater.inflate(R.layout.card_content, parent, false);
    it.zerocool.batmacaana.ContentAdapter.ContentViewHolder holder = new it.zerocool.batmacaana.ContentAdapter.ContentViewHolder(view);
    return holder;
}

@java.lang.Override
@android.support.annotation.CallSuper
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(getLayoutResource());
    butterknife.ButterKnife.bind(this);
}

@java.lang.Override
public void onClick(@android.support.annotation.NonNull
com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull
com.afollestad.materialdialogs.DialogAction which) {
    dialog.dismiss();
    if (!(activity.requestCameraPermissions()))
        activity.takePictureWithIntent();
    
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(R.layout.item_full_screen_image, container, false);
    initUI(rootView);
    if (savedInstanceState == null)
        initSupportActionBar(rootView);
    
    return rootView;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((viewDetailsListener) != null)
        viewDetailsListener.onViewClickListener(v.getId(), tradeBackupDataDTO.getTicket(), new java.lang.Object());
    
}

@java.lang.Deprecated
protected android.view.View getViewInternal(int position, android.view.View convertView, android.view.ViewGroup container) {
    return getView((position % (getItemCount())), convertView, container);
}

public void uploadSamplesToGithub(android.view.View v) {
    android.content.Intent myIntent = new android.content.Intent(this, de.volzo.tapper.RecordActivity.class);
    myIntent.putExtra("GESTURE", GestureType.DOUBLETAP);
    this.startActivity(myIntent);
}

public void removeNotification(android.content.Context context) {
    android.util.Log.i("Player Service", "removeNotification");
    android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (context.getSystemService(Context.NOTIFICATION_SERVICE)));
    notificationManager.cancel(org.oucho.radio2.PlayerService.NOTIFY_ID);
}

private void setUses(android.content.SharedPreferences prefs, int uses) {
    prefs.edit().putInt(Constants.PREF_KEY_RATING_USES, uses).commit();
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    if (NITConfig.ENABLE_PROXIMITY) {
        android.util.Log.i(MainActivity.TAG, "NITManager proximity listener stop");
        it.near.sdk.NearItManager.getInstance(this).removeProximityListener(this);
    }
}

public void guardarUsuarioLogueado(java.lang.Integer idUsuario) {
    android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity());
    prefs.edit().putInt(getString(R.string.pref_sesion_inic), idUsuario).apply();
}

public static void storeImage(android.graphics.Bitmap image, java.lang.String saveFilePath) throws java.io.IOException {
    java.io.FileOutputStream fos = new java.io.FileOutputStream(saveFilePath);
    image.compress(Bitmap.CompressFormat.PNG, 70, fos);
    fos.close();
    org.unicef.rapidreg.utils.ImageCompressUtil.recycleBitmap(image);
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    friends = new java.util.ArrayList<>();
    newfriends = new java.util.ArrayList<>();
    getfriends();
    getNewfriends();
    bindViews();
    populate();
}

@java.lang.Override
public void onDeleted(android.content.Context context, int[] appWidgetIds) {
    android.widget.Toast.makeText(context, "onDeleted()", Toast.LENGTH_LONG).show();
}

public byte[] asset(android.content.Context context) {
    try {
        return com.echsylon.atlantis.internal.Utils.readAsset(context, asset);
    } catch (java.io.IOException e) {
        return new byte[0];
    }
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    if ((this.getResources().getConfiguration().orientation) == 1) {
        startAlarm();
    }
    android.util.Log.d("start", "onDestroy");
}

@java.lang.Override
public void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession session, android.hardware.camera2.CaptureRequest request, android.hardware.camera2.TotalCaptureResult result) {
    android.widget.Toast.makeText(getApplicationContext(), "Done", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mTasks = com.infiniteloop.mytasks.TaskLab.get().getTasks();
}

private void deactivateView(android.view.View parent) {
    for (android.view.View foo : parent.getTouchables()) {
        foo.setClickable(false);
        foo.setEnabled(false);
    }
    parent.setEnabled(false);
}

public static final void i(java.lang.Object tag, java.lang.String msg) {
    if (com.llxx.socket.loger.Ll_Loger.LOGED)
        android.util.Log.i(tag.getClass().getSimpleName(), ((com.llxx.socket.loger.Ll_Loger.LOG_BUILD) + msg));
    
}

public void onClick(android.view.View v) {
    this.changeExpress(ivLike, ivDislike, tvLikeCount, true, false, llLikeAnimator);
}

@java.lang.Override
protected void onSaveInstanceState(@android.support.annotation.NonNull
android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    if (player.isPlaying()) {
        outState.putInt("video-position", player.getCurrentPosition());
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_diaryentry);
    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
    evaluateData();
}

private android.hardware.Camera getCamera() {
    return getCamera(false);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    com.example.mango.focustime.util.PreferenceUtilities.setForceQuit(mContext, false);
    android.content.Intent intent = new android.content.Intent(mContext, com.example.mango.focustime.Activity.PunishmentActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<java.util.List<apps.novin.tvcompanion.db.ShowEntity>> loader) {
    mAdapter = null;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((cm.com.newdon.common.CommonData.bottomBarActivity) != null) {
        CommonData.bottomBarActivity.changePostDonationsFragment(post.getId());
    }
}

public void onClickListenerLog(android.view.View v) {
    equation = "";
    addString(getString(R.string.log));
}

public void onClickLanding(android.view.View view) {
    sendCommand(de.hhn.munz.ardrone2.ATCommand.land());
}

private void onGameEnd(int Score, int difficulty) {
    android.content.Intent endGame = new android.content.Intent(this, com.twotowerstudios.clickr.PostGameScreen.class);
    endGame.putExtra("score", score);
    endGame.putExtra("difficulty", difficulty);
    startActivity(endGame);
}

private boolean sendBroadcast(com.cloudinary.android.sample.model.Resource updatedResource) {
    return android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(new android.content.Intent(com.cloudinary.android.sample.app.CloudinaryService.ACTION_RESOURCE_MODIFIED).putExtra("resource", updatedResource));
}

public static void deletePermit(java.lang.String permitId, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<java.lang.Void> callback) {
    com.airmap.airmapsdk.networking.services.PilotService.deletePermit(permitId, callback);
}

public com.hkm.disqus.api.AuthTokenServiceManager createAuthenticationManager(android.content.Context contex) {
    return new com.hkm.disqus.api.AuthTokenServiceManager(contex, createTokenService(), _config);
}

public org.json.JSONObject get(java.lang.String link) {
    try {
        return remoteGet.send(link, null);
    } catch (java.lang.Exception e) {
        android.util.Log.i("WEB", e.getMessage());
    }
    return null;
}

public void openFragment(android.support.v4.app.Fragment fragment) {
    android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
    ft.replace(R.id.container, fragment);
    ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
    ft.addToBackStack(null);
    ft.commitAllowingStateLoss();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel parcel, int i) {
    parcel.writeString(mName);
    parcel.writeInt(mTotalPages);
    parcel.writeInt(mCurrentPage);
}

@java.lang.Override
public void accept(java.util.List<prada.lab.android.pingo.model.PingoPlace> pingoPlaces) throws java.lang.Exception {
    mLastUpdatedTime.set(java.lang.System.currentTimeMillis());
    mPlaces = pingoPlaces;
    mPlacesSubject.onNext(mPlaces);
    success.accept(mPlaces);
}

public void displayImage() {
    android.content.Intent intent = new android.content.Intent(this, com.example.jimmyklein.geosnap.ImageViewActivity.class);
    intent.putExtra("EXTRA_FILE_URI", fileUri);
    startActivity(intent);
}

protected java.lang.Void doInBackground(java.lang.Void... params) {
    try {
        this.userProfile = rs.veselinromic.eref.wrapper.Wrapper.getUserProfile();
    } catch (java.io.IOException e) {
        android.util.Log.e("GetUserProfileTask", "e", e);
    }
    return null;
}

@java.lang.Override
public void onLongPress(android.view.MotionEvent e) {
    java.lang.CharSequence word = bookView.getWordAt(e.getX(), e.getY());
    selectedWord = word;
    openContextMenu(bookView);
}

@java.lang.Override
public void bindLayout(java.lang.Object target, int layoutId) {
    ((android.app.Activity) (target)).setContentView(layoutId);
}

public static boolean isPackageInstalled(java.lang.String packagename, android.content.pm.PackageManager packageManager) {
    try {
        packageManager.getPackageInfo(packagename, 0);
        return true;
    } catch (android.content.pm.PackageManager e) {
        return false;
    }
}

public void onClick(android.view.View view) {
    relativeLayout.removeView(screenLayout);
    screenLayout.removeAllViews();
    gameBoardView.removeScoreText();
}

@java.lang.Override
public com.skoczo.animalhealthbook.main.ngview.MyItemRecyclerViewAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.animal_main_layout, parent, false);
    return new com.skoczo.animalhealthbook.main.ngview.MyItemRecyclerViewAdapter.ViewHolder(view);
}

@java.lang.Override
public void onClick(android.view.View v) {
    feedbackManager.giveLikeToThreadFeedback(currThreadFeedback, pos);
    android.util.Log.d("data log", ("pos: " + pos));
}

@java.lang.Override
public void onFigureMoved(android.graphics.Rect oldArea, android.graphics.Rect newArea) {
    renderThread.execute(new net.dimatomp.tetris.TetrisView.Refresher(oldArea, model.getFigureRect()));
}

@javax.inject.Singleton
@dagger.Provides
android.net.ConnectivityManager provideConnectivityManager(com.danieldisu.dagger2intro.UserPreferencesManager userPreferencesManager) {
    return ((android.net.ConnectivityManager) (application.getSystemService(Context.CONNECTIVITY_SERVICE)));
}

public void onClick(android.view.View v) {
    Buttons[position].setText(java.lang.Integer.toString(hideTextArray[position]));
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            super.onBackPressed();
            break;
    }
    return super.onOptionsItemSelected(item);
}

public void sendUpdateMessage() {
    de.ohg.fitag.android.discoveryVehicleRemote.DataMessage message = de.ohg.fitag.android.discoveryVehicleRemote.DataMessage.build().append("degree", java.lang.Math.round(new_rotation));
    communicationManager.sendMessage(message);
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.jonasgerdes.schauburgr.model.Guide> call, java.lang.Throwable t) {
    android.util.Log.e(com.jonasgerdes.schauburgr.usecase.home.guide.GuidePresenter.TAG, "onFailure: ");
}

@java.lang.Override
public void onClick(android.view.View view) {
    currentShotObjList.clear();
    dribbbleAdapter.notifyDataSetChanged();
    retrieveDataFromAPi();
}

public static void startComm(com.airmap.airmapsdk.models.flight.AirMapFlight flight, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<com.airmap.airmapsdk.models.comm.AirMapComm> callback) {
    com.airmap.airmapsdk.networking.services.FlightService.getCommKey(flight, callback);
}

public static void w(java.lang.String tag, java.lang.String msg) {
    daylemk.xposed.xbridge.utils.Log.xposedLog(tag, msg);
    android.util.Log.w(daylemk.xposed.xbridge.utils.Log.getFormattedTag(tag), msg);
}

private void FocusAble(android.widget.EditText te, boolean b) {
    te.setFocusable(b);
    te.setFocusableInTouchMode(b);
    te.setClickable(b);
}

protected void connectDevice(final org.deviceconnect.android.deviceplugin.hitoe.data.HitoeDevice device) {
    if (org.deviceconnect.android.deviceplugin.hitoe.util.BleUtils.isEnabled(this)) {
        mConnectingDevice = device;
        getManager().connectHitoeDevice(device);
        showProgressDialog(device.getName());
    }
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.widget.Toast.makeText(context, "destroyed", Toast.LENGTH_SHORT).show();
}

public static boolean canShowWelcomeScreen(android.content.Context context) {
    final android.content.SharedPreferences prefs = context.getSharedPreferences(com.android.dialer.util.DialerUtils.PREFS_MESSAGE, Context.MODE_PRIVATE);
    return prefs.getBoolean(com.android.dialer.util.DialerUtils.KEY_STATE, true);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.vpn_profile_list);
    setHasOptionsMenu(true);
    refreshList();
    de.blinkt.openvpn.OpenVPN.foo();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    commentDialog(input.getText().toString());
}

@com.facebook.react.bridge.ReactMethod
public void getOrientation(com.facebook.react.bridge.Callback success) {
    com.facebook.react.bridge.WritableNativeMap data = getDataMap();
    android.util.Log.e("DeviceOrientation", data.toString());
    success.invoke(data);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.util.Log.i(com.example.oce.langlock.QuestionsFragment.TAG, ((getClass().getSimpleName()) + ":entered onCreate()"));
    return super.onCreateView(inflater, container, savedInstanceState);
}

void showUnlockDialog() {
    android.widget.Toast.makeText(context, "showUnlockDialog", Toast.LENGTH_SHORT).show();
    showDialog();
}

public void onClick(android.view.View v) {
    android.widget.Toast.makeText(getApplicationContext(), "提示：点击窗口外部关闭窗口！", Toast.LENGTH_SHORT).show();
}

void bindNewDetails() {
    textView.setText(arrayList.get(currentPosition).getDescription());
    initializePlayer(android.net.Uri.parse(arrayList.get(currentPosition).getVideoURL()));
}

public void setContext(android.content.Context c) {
    putObject(com.jstakun.gms.android.config.ConfigurationManager.CONTEXT, c);
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<android.database.Cursor> loader) {
    mAdapter.swapCursor(null);
    if (mGoogleApiClient.isConnected())
        mGoogleApiClient.disconnect();
    
    mGoogleApiClient.connect();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    controller = new com.app.dimbo.simplecalculator.Controller(this);
    bindViewControls();
    initHistoryView();
}

@java.lang.Override
public void onItemClick(android.view.View view, int position) {
    setAdapter();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    mMeetings = new ca.rmen.android.scrumchatter.meeting.Meetings(((android.support.v4.app.FragmentActivity) (activity)));
}

@java.lang.Override
public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture surface, int width, int height) {
    setSize(width, height);
    configureTransform();
    dispatchSurfaceChanged();
    setTruePreviewSize(mTrueWidth, mTrueHeight);
}

@java.lang.Override
public boolean onNavigationItemSelected(@android.support.annotation.NonNull
android.view.MenuItem item) {
    if ((mOnNavItemClickListener) != null) {
        closeDrawer();
        mOnMenuItemSelectedListener.onItemSelected(item);
    }
    return false;
}

public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    startDetailsActivity(listOfTreatments.get(position).get_Id());
}

public void onClick(android.content.DialogInterface dialog, int id) {
    fragment.topic.tDatabaseReference.child(ui.TopicActivity.topicId).removeValue();
    android.content.Intent i = new android.content.Intent(ui.TopicActivity.AlertFragment.context, ui.TopicActivity.AlertFragment.okClass);
    com.deaspostudios.devchats.MainActivity.navItemIndex = 1;
    startActivity(i);
}

@java.lang.Override
public void onClick(android.view.View view) {
    org.swain.asa.famous_pres_speeches.Controller.PlaybackController.loadPlayerScreen(currentActivity, c, currentSpeech.getOrator().getFullName(), currentSpeech.getTitle());
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View arg1, int arg2, long arg3) {
    if (com.mk4droid.IMC_Activities.Fragment_NewIssueA.flagStarter) {
        com.mk4droid.IMC_Activities.Fragment_NewIssueA.flagStarter = false;
    }else {
        com.mk4droid.IMC_Activities.Fragment_NewIssueA.spPosition = arg2;
    }
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    mBottomBar.onSaveInstanceState(outState);
}

@java.lang.Override
protected void onStop() {
    android.util.Log.e(com.example.user.edeasy.Welcome.TAG, "onStop");
    super.onStop();
    if ((authStateListener) != null)
        auth.removeAuthStateListener(authStateListener);
    
    detachDatabaseListeners();
}

public void stopLoading() {
    android.app.ActionBar actionBar = getActivity().getActionBar();
    if (actionBar != null) {
        actionBar.setSubtitle(null);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    butterknife.ButterKnife.bind(this);
    com.bionic.kvt.serviceapp.db.DbUtils.createUserTableIfNotExist();
    com.bionic.kvt.serviceapp.helpers.HeaderHelper headerHelper = new com.bionic.kvt.serviceapp.helpers.HeaderHelper(this);
    headerHelper.setHeader();
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    viewPager.setCurrentItem(0);
    return true;
}

@java.lang.Override
public void onCreate(final android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (getArguments().containsKey(MasterDetailOuterFragment.ARG_ITEM_ID)) {
        getLoaderManager().initLoader(nl.adaptivity.process.ui.task.TaskDetailFragment.LOADER_TASKITEM, getArguments(), this);
    }
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.fragment_configuration);
    auth = com.google.firebase.auth.FirebaseAuth.getInstance();
    database = com.google.firebase.database.FirebaseDatabase.getInstance();
    butterknife.ButterKnife.bind(this);
}

public void addFooterView(android.view.View footer) {
    mNextLoadEnable = false;
    if (footer == null) {
        throw new java.lang.RuntimeException("footer is null");
    }
    this.mFooterView = footer;
    this.notifyDataSetChanged();
}

public static void storeRecipientId(android.content.Context context, java.lang.String recipientId) {
    android.content.SharedPreferences sharedPreferences = com.silverpop.engage.config.EngageConfig.getConfigSharedPrefs(context);
    android.content.SharedPreferences.Editor editor = sharedPreferences.edit();
    editor.putString(com.silverpop.engage.config.EngageConfig.SharedProperties.RECIPIENT_ID.toString(), recipientId).commit();
}

@java.lang.Override
public void onPreviewFrame(byte[] bytes, android.hardware.Camera camera) {
    com.futsal.manager.LogModule.LogManager.PrintLog("CameraRecordProcess", "onPreviewFrame", "Getting Video Frame Image Data", DefineManager.LOG_LEVEL_INFO);
}

@java.lang.Override
public int onTileAdded() {
    android.util.Log.d("QS", "Tile added");
    return android.service.quicksettings.TileService.TILE_MODE_ACTIVE;
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    this.fetchEmergencyDetails();
    this.sendSMSToNumber();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    setContentView(R.layout.activity_my_favourite);
    mContext = this;
    mDataListener = this;
    super.onCreate(savedInstanceState);
    initLayout();
}

@java.lang.Override
public void onClick(android.view.View v) {
    popupWindow.dismiss();
    ((dynafios.trace.MainActivity) (getActivity())).restoreActivity();
}

public boolean isScreenSizeAtLeast(int screenSize) {
    int currentScreenSize = (android.support.test.InstrumentationRegistry.getContext().getResources().getConfiguration().screenLayout) & (android.content.res.Configuration.SCREENLAYOUT_SIZE_MASK);
    return currentScreenSize <= screenSize;
}

@java.lang.Override
public void onUpdateResult(org.wordpress.android.ui.reader.actions.ReaderActions.UpdateResult result) {
    if (!(isAdded())) {
        return ;
    }
    setIsUpdating(false, updateAction);
    if (result.isNewOrChanged()) {
        refreshPosts();
    }
}

public void play(android.content.Context context, cc.xiaoyuanzi.pianorobot.data.Staff staff) {
    play(context, cc.xiaoyuanzi.pianorobot.player.PlayerModelConvertor.getPlayStaffModel(staff));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration();
    config.useAccelerometer = false;
    config.useCompass = false;
    initialize(new com.remnants.game.Remnants(), config);
}

void updateCommentList() {
    org.wordpress.android.ui.comments.CommentsListFragment listFragment = getListFragment();
    if (listFragment != null) {
        listFragment.updateComments(false);
        listFragment.setRefreshing(true);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mSingleDocumentAnalyzer = ((net.gini.android.vision.screen.ScreenApiApp) (getApplication())).getSingleDocumentAnalyzer();
}

@java.lang.Override
public void onLoadingFailed(java.lang.String imageUri, android.view.View view, com.nostra13.universalimageloader.core.assist.FailReason failReason) {
    imageView.setImageResource(R.drawable.notification_error);
    item.conError = true;
    item.save();
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView textView, int i, android.view.KeyEvent keyEvent) {
    if ((keyEvent.getKeyCode()) == (android.view.KeyEvent.KEYCODE_BACK)) {
        clearFocus();
    }
    return false;
}

@java.lang.Override
public void onCreate() {
    android.util.Log.i("Information : ", "開啟打電話功能");
    android.telephony.TelephonyManager manager = ((android.telephony.TelephonyManager) (this.getSystemService(com.project.final_project.TELEPHONY_SERVICE)));
    manager.listen(phoneStateListener, phoneStateListener.LISTEN_CALL_STATE);
    super.onCreate();
}

private void finishTurn() {
    super.finishTurn(getNextParticipantId());
    android.util.Log.i(com.levigilad.javaplay.yaniv.YanivPlayFragment.TAG, "Turn Ended");
    mInstructionsTV.setText(R.string.games_waiting_for_other_player_turn);
}

public void deleteTable(java.lang.String milliIdentifier) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    java.lang.String SQL_DELETE_TABLE = ("DROP TABLE " + milliIdentifier) + ";";
    db.execSQL(SQL_DELETE_TABLE);
    db.close();
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    mMap.clear();
    circleOptions.radius((progress * 50));
    mMap.addCircle(circleOptions);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    if ((com.myandroid.popularmovies.fragments.MainActivityFragment.state) != null) {
        android.util.Log.v(LOG_TAG, "state != null");
        gridView.onRestoreInstanceState(com.myandroid.popularmovies.fragments.MainActivityFragment.state);
    }
}

@java.lang.Override
public void onAuthenticationHelp(int helpCode, java.lang.CharSequence helpString) {
    android.widget.Toast.makeText(this, "请重刷指纹", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public com.wenjiehe.xingji.RecyclerViewAdapter.NewsViewHolder onCreateViewHolder(android.view.ViewGroup viewGroup, int i) {
    android.view.View v = android.view.LayoutInflater.from(context).inflate(R.layout.recyclerview_sign_item_info, viewGroup, false);
    com.wenjiehe.xingji.RecyclerViewAdapter.NewsViewHolder nvh = new com.wenjiehe.xingji.RecyclerViewAdapter.NewsViewHolder(v);
    return nvh;
}

@java.lang.Override
public void onClick(android.view.View v) {
    mClickListener.onClick();
}

private android.view.View setSystemUiVisilityMode() {
    android.view.View decorView = getWindow().getDecorView();
    int options;
    options = (android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
    decorView.setSystemUiVisibility(options);
    return decorView;
}

int LAC() {
    return ((android.telephony.gsm.GsmCellLocation) (((android.telephony.TelephonyManager) (getSystemService(Context.TELEPHONY_SERVICE))).getCellLocation())).getLac();
}

public void glBufferData(int target, java.nio.ByteBuffer data, int usage) {
    com.jme3.renderer.android.AndroidGL.checkPosition(data);
    android.opengl.GLES20.glBufferData(target, com.jme3.renderer.android.AndroidGL.getLimitBytes(data), data, usage);
}

private void setAnimation(android.view.View viewToAnimate, int position) {
    android.view.animation.Animation animation = android.view.animation.AnimationUtils.loadAnimation(viewToAnimate.getContext(), R.anim.scale_in);
    viewToAnimate.startAnimation(animation);
}

@java.lang.Override
public void onStart() {
    super.onStart();
    android.util.Log.i(com.shimastripe.gpsmountainview.MainActivity.TAG, "onStart");
    mGoogleApiClient.connect();
    android.util.Log.i(com.shimastripe.gpsmountainview.MainActivity.TAG, "Connect to Google Api");
}

public void sendGuidedPoint(com.o3dr.services.android.lib.coordinate.LatLong point, boolean force) {
    com.o3dr.android.client.apis.ControlApi.getApi(this).goTo(point, force);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    android.util.Log.v("a", "selected");
    android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT);
    intent.setType("*/*");
    startActivityForResult(intent, com.example.pii5656.shadowingmanager.MainActivity.CHOSE_FILE_CODE);
    return true;
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent event) {
    counter += event.values[0];
    android.widget.Toast.makeText(getApplicationContext(), ("STEP " + (counter)), Toast.LENGTH_SHORT).show();
    android.util.Log.d("SensorChange", "triggered");
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    if (isDataSet) {
        com.example.umyhpuscdi.danceapp15.CreateEditCourse.buttonTime.setText(chosenTime);
    }else {
        com.example.umyhpuscdi.danceapp15.CreateEditCourse.buttonTime.setText(getResources().getText(R.string.tid_datum));
    }
}

@java.lang.Override
public void onFailure(java.lang.Throwable t) {
    scrollLoading = false;
    de.greenrobot.event.EventBus.getDefault().postSticky(new com.projects.nosleepproject.events.FailedLoadEvent(new java.util.ArrayList<android.content.ContentValues>()));
    android.util.Log.e("getFrontpage: ", "failed to get front page");
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animator) {
    gameView.player.getCardsQueue().addFirst(GameConstants.NOT_A_CARD);
    gameView.player.updateOneMove();
    super.onAnimationStart(animator);
}

@java.lang.Override
protected void setResource(android.graphics.Bitmap resource) {
    android.support.v4.graphics.drawable.RoundedBitmapDrawable circularBitmapDrawable = android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory.create(mContext.getResources(), resource);
    circularBitmapDrawable.setCircular(true);
    homeVH.ivAuthor.setImageDrawable(circularBitmapDrawable);
}

public void addAll(java.util.ArrayList<com.dozuki.ifixit.model.guide.GuideInfo> list) {
    android.util.Log.d("GuideCreateActivity", "addall");
    mGuides.addAll(list);
    notifyDataSetChanged();
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    nl.qbusict.cupboard.CupboardFactory.cupboard().withDatabase(database).createTables();
}

@java.lang.Override
public boolean onMenuItemActionCollapse(android.view.MenuItem item) {
    android.util.Log.d("Reached", "Menu Collapse menu");
    dayAdapter.setFilter(talks);
    return true;
}

public void onClickTakeOff(android.view.View view) {
    sendCommand(de.hhn.munz.ardrone2.ATCommand.takeOff());
    networkLoop();
}

public synchronized boolean save(@android.support.annotation.NonNull
TTable model, com.raizlabs.android.dbflow.structure.database.DatabaseWrapper wrapper) {
    return save(model, getWritableDatabase(), modelAdapter.getInsertStatement(wrapper), new android.content.ContentValues());
}

private java.lang.String getContactName(android.database.Cursor contactLookupCursor) {
    java.lang.String name = null;
    if (contactLookupCursor.moveToFirst()) {
        name = contactLookupCursor.getString(contactLookupCursor.getColumnIndexOrThrow(ContactsContract.PhoneLookup.DISPLAY_NAME));
    }
    return name;
}

@java.lang.Override
public boolean onActionItemClicked(in.nashapp.epublibdroid.ActionMode mode, android.view.MenuItem item) {
    return true;
}

private java.lang.String getURL(android.content.Context ctx) {
    boolean isDebuggable = 0 != (ctx.getApplicationInfo().flags &= android.content.pm.ApplicationInfo.FLAG_DEBUGGABLE);
    if (isDebuggable) {
        return com.boha.golfpractice.library.util.OKUtil.DEV_URL;
    }else {
        return com.boha.golfpractice.library.util.OKUtil.PROD_URL;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    randomiseFortune();
    android.content.res.AssetManager am = this.getAssets();
}

@java.lang.Override
protected void attachBaseContext(android.content.Context base) {
    super.attachBaseContext(base);
    android.support.multidex.MultiDex.install(this);
}

public static boolean shouldLoadMoreBars(android.app.Activity act) {
    return ((org.wordpress.android.ui.stats.StatsUtils.getSmallestWidthDP()) >= (org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP)) || (((org.wordpress.android.ui.stats.StatsUtils.getSmallestWidthDP()) == (org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP)) && (org.wordpress.android.ui.stats.StatsUIHelper.isInLandscape(act)));
}

public void regNoCheckDone(android.os.Bundle data) {
    com.extenprise.mapp.medico.util.Utility.showProgressDialog(this, false);
    if (data.getBoolean("exists")) {
        mRegNo.setError("This Registration Number is already Registered.");
        mRegNo.requestFocus();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (superClassManager.saveSubject(subjectDialog, rootView, false, false, false)) {
        superClassManager.startNewDetailPage();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    butterknife.ButterKnife.bind(this);
    realm = io.realm.Realm.getDefaultInstance();
    loadVersionCode();
    checkIfUserIsLoggedIn();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.google.android.gms.maps.SupportMapFragment mapFragment = ((com.google.android.gms.maps.SupportMapFragment) (getSupportFragmentManager().findFragmentById(R.id.map)));
    mapFragment.getMapAsync(this);
}

@java.lang.Override
public void onNext(com.aniruddh.kubratest.API.Utils.apiModel.apiResponse response) {
    android.util.Log.i("Tag", "Tag");
    mUsers.add(response);
    mAdapter.setList(mUsers);
    mAdapter.notifyDataSetChanged();
}

public android.os.Parcelable getParent(android.os.Bundle state) {
    android.util.Log.e("Restore", baseKey);
    return state.getParcelable(((baseKey) + "$$SUPER"));
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.main_activity_settings, menu);
    android.view.MenuItem item = menu.findItem(R.id.action_change_units);
    setDisplayModeMenuItemIcon(item);
    return true;
}

@java.lang.Override
public void onFailure(com.chalmers.tda367.localfeud.data.handler.DataResponseError error, java.lang.String errormessage) {
    imageButton.setImageResource(originalLikeDrawable);
    android.support.design.widget.Snackbar.make(recyclerView, getString(R.string.like_error_msg), Snackbar.LENGTH_LONG).show();
}

public static com.okhttplib.OkHttpUtil.Builder init(android.app.Application context) {
    com.okhttplib.OkHttpUtil.application = context;
    com.okhttplib.OkHttpUtil.application.registerActivityLifecycleCallbacks(new com.okhttplib.callback.BaseActivityLifecycleCallbacks());
    return com.okhttplib.OkHttpUtil.BuilderGlobal();
}

@java.lang.Override
protected android.webkit.WebView createViewInstance(com.facebook.react.uimanager.ThemedReactContext reactContext) {
    webView = reactContext;
    enableFileUpload(webView);
    return webView;
}

@java.lang.Override
void onError(java.lang.Throwable e) {
    android.util.Log.e(com.spartahack.spartahack17.Presenter.AnnouncementPresenter.TAG, e.toString());
    if (isViewAttached()) {
        getView().onError(e.toString());
    }
}

@java.lang.Override
public void onCancel(android.content.DialogInterface dialog) {
    super.onCancel(dialog);
    com.android.gallery3d.filtershow.FilterShowActivity activity = ((com.android.gallery3d.filtershow.FilterShowActivity) (mContext));
    activity.cancelCurrentFilter();
    activity.leaveSeekBarPanel();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    mFileDirectory = android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC);
    super.onCreate(savedInstanceState);
}

@android.webkit.JavascriptInterface
public void stopRecording() {
    android.util.Log.e(org.innovationsforlearning.StudentPortal.MainActivity.TAG, "stop recording");
    audio.stopRecording();
    audio.startPlaying();
}

@java.lang.Override
public void onLayoutChange(android.view.View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {
    if (!(this.paused)) {
        this.cacheView();
    }
}

@java.lang.Override
public com.rutvik.bhagwatiholidays.LazyAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View vi = inflater.inflate(R.layout.offers_list_item, null);
    com.rutvik.bhagwatiholidays.LazyAdapter.ViewHolder vh = new com.rutvik.bhagwatiholidays.LazyAdapter.ViewHolder(vi);
    return vh;
}

public int getFirstVisibleScrollPosition() {
    android.support.v7.widget.LinearLayoutManager layoutManager = ((android.support.v7.widget.LinearLayoutManager) (recyclerView.getLayoutManager()));
    int firstVisiblePosition = layoutManager.findFirstVisibleItemPosition();
    return firstVisiblePosition;
}

public static com.google.android.maps.GeoPoint coordinatesToGeoPoint(double latitude, double longitude) {
    return new com.google.android.maps.GeoPoint(new java.lang.Double((latitude * 1000000.0)).intValue(), new java.lang.Double((longitude * 1000000.0)).intValue());
}

@java.lang.Override
protected void onPreExecute() {
    setLocationStatus(org.wordpress.android.ui.posts.EditPostSettingsFragment.LocationStatus.SEARCHING);
    showLocationView();
}

@java.lang.Override
public void execute(android.os.Bundle bundle) {
    loadingMore = false;
    if ((skipMessages) != 0) {
        messagesListView.setSelection(0);
    }
    hideActionBarProgress();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.os.Bundle options = getIntent().getExtras();
    setBuilderOptions(options);
    this.finish();
}

public void setClaims(java.util.ArrayList<com.CMPUT301W15T02.teamtoapp.Model.Claim> claims) {
    this.claims = claims;
    android.util.Log.i("CLAIMSSET", "blah");
}

@java.lang.Override
public void onClick(android.view.View v) {
    mIsClick = true;
    int pos = ((int) (v.getTag()));
    highlight(pos);
    setCurrentItem(pos);
}

@java.lang.Override
public void onPageSelected(int position) {
    android.util.Log.d("myLogs", ("onPageSelected " + position));
    setCurrentPosition(position);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getSupportFragmentManager().beginTransaction().add(R.id.fragment, new com.weather.portiaprosampleweather.MainActivityFragment()).commit();
    setContentView(R.layout.activity_main);
}

private void sortByLocations(android.location.Location userLocation) {
    if (userLocation != null) {
        sortOrder = org.septa.android.app.models.SortOrder.LOCATION;
        returnedLocation = userLocation;
        mAdapter.sortByLocation(userLocation);
        removeSortOptions();
    }
}

private android.content.SharedPreferences getSharedPreferences() {
    android.content.SharedPreferences prefs = com.jana.android.core.app.AbstractApplication.getApplication().getSharedPreferences(PREFERENCE_NAME, Context.MODE_PRIVATE);
    return prefs;
}

public void onSongPrevious(android.view.View view) {
    musicService.previous();
    setPlayerTitleText();
}

@java.lang.Override
public void onMyError(com.android.volley.VolleyError err) {
    com.swjtu.walker.utils.L.v(com.swjtu.walker.activity.home.TAG, "请求失败");
    if ((proDialog) != null) {
        proDialog.dismiss();
    }
    mPullRefreshListView.setVisibility(View.GONE);
    networkErrorLayout.setVisibility(View.VISIBLE);
}

@com.facebook.react.uimanager.annotations.ReactProp(name = "title")
public void setTitle(com.reactlibrary.video.player.RCTVideoPlayer player, java.lang.String title) {
    android.util.Log.i("RCTVideoPlayer", ("set title " + title));
    player.getTitleTextView().setText(title);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (proceed)
        saveInformation();
    
}

@java.lang.Override
public void onSuccess(com.google.firebase.storage.UploadTask.TaskSnapshot taskSnapshot) {
    @java.lang.SuppressWarnings(value = "VisibleForTests")
    android.net.Uri downloadUrl = taskSnapshot.getDownloadUrl();
    profile.setPhotoURI(downloadUrl.getPath());
    writeUser(profile);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    try {
        int totalOunces = java.lang.Integer.parseInt(editable.toString());
        mShipItem.setmOunces(totalOunces);
    } catch (java.lang.NumberFormatException e) {
        mShipItem.setmOunces(0);
    }
    updateViews();
}

@java.lang.Override
public void onClick(android.view.View view) {
    new com.example.margo.json.JSONDownloader(this, jsonURL, sp).execute();
}

public android.database.Cursor getTableCursorFromDB(java.lang.String tableName) {
    java.lang.String selectQuery = "SELECT * FROM " + tableName;
    com.mycompany.kittylogs.SQLiteDatabase db = this.getReadableDatabase();
    return db.rawQuery(selectQuery, null);
}

@java.lang.Override
public void onRefresh() {
    android.util.Log.d(name.parker.alon.viewerforgithub.view.InfoActivity.LOG_TAG, "PullToRefresh");
    swipeLayout.setRefreshing(false);
    loadData(true);
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.LOLLIPOP)
private void init() {
    setOrdering(com.volha.yandex.school.musicartists.ui.ORDERING_TOGETHER);
    addTransition(new android.transition.ChangeBounds()).addTransition(new android.transition.ChangeTransform()).addTransition(new android.transition.ChangeImageTransform());
}

protected native long createRenderer(long parent, android.view.Surface surface);

static long getMatchedMusicId(java.lang.Object musicInfo) {
    return ((long) (de.robv.android.xposed.XposedHelpers.callMethod(musicInfo, "getMatchedMusicId")));
}

private void freeMemory() {
    java.lang.System.runFinalization();
    java.lang.Runtime.getRuntime().gc();
    java.lang.System.gc();
    android.util.Log.e("Memory", "freeMemory executed...");
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) {
    updateIntervalSettings.set(((java.lang.Integer) (newValue)));
    pirattoManager.refresh();
    return true;
}

private void startRun() throws java.lang.Exception {
    try {
        configure();
        android.util.Log.i(org.getlantern.lantern.service.LanternVpn.TAG, "Started VPN mode");
    } catch (java.lang.Exception e) {
        android.util.Log.e(org.getlantern.lantern.service.LanternVpn.TAG, ("Error with VPN" + e));
    }
}

public static me.twango.twango.entity.User getInstance(android.content.Context context) {
    me.twango.twango.helper.DBHelper dbHelper = new me.twango.twango.helper.DBHelper(context);
    me.twango.twango.entity.User.me = dbHelper.getUser();
    return me.twango.twango.entity.User.me;
}

@java.lang.Override
public void onClick(android.view.View view) {
    startActivity(new android.content.Intent(getApplicationContext(), appcorp.mmb.activities.feeds.ManicureFeed.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK));
}

public void setLoadMoreEnabled(boolean loadMoreEnabled) {
    isLoadMoreEnabled = loadMoreEnabled;
    if ((com.kogimobile.android.baselibrary.app.base.recyclerview.BaseFragmentMVPList.getAdapter()) != null) {
        com.kogimobile.android.baselibrary.app.base.recyclerview.BaseFragmentMVPList.getAdapter().setLoadingMore(loadMoreEnabled);
    }
}

@java.lang.Override
public boolean onDoubleTap(android.view.MotionEvent e) {
    android.util.Log.d(se.anotherhermit.voxels.GLESView.MyGestureListener.DEBUG_TAG, "onDoubleTap");
    se.anotherhermit.voxels.GLESView.doubleTap();
    android.widget.Toast.makeText(getContext(), "Switched View", Toast.LENGTH_SHORT).show();
    return super.onDoubleTap(e);
}

protected void onPostExecute(java.util.ArrayList<java.lang.String> alerts) {
    android.util.Log.d(com.forestoden.locationservices.services.GetAlertsTask.TAG, java.lang.String.valueOf(alerts.size()));
    caller.asyncResponse(alerts);
}

private void hideSubmitBarFragment(android.app.Fragment submitBarFragment) {
    android.app.FragmentTransaction ft = getFragmentManager().beginTransaction();
    ft.setCustomAnimations(android.R.animator.fade_in, android.R.animator.fade_out);
    ft.hide(submitBarFragment);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    android.util.Log.v(Constants.TAG, ("SAVED POSITION AT " + (videoPosition)));
    outState.putLong(JsonKeys.VIDEO_POSITION_KEY, videoPosition);
    outState.putParcelable(JsonKeys.VIDEO_DATA_KEY, stepItem);
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onError(java.lang.Throwable t) {
    android.util.Log.e(org.almende.proheal.MainActivity.TAG, "error: ", t);
    onConnectionError();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.ActivityCompat.requestPermissions(getActivity(), new java.lang.String[]{ Manifest.permission.READ_CONTACTS }, MY_PERMISSIONS_REQUEST_READ_CONTACTS);
    if ((android.support.v4.content.ContextCompat.checkSelfPermission(getContext(), Manifest.permission.READ_CONTACTS)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    checkedItems.put(((int) (buttonView.getTag())), isChecked);
    activity.onItemSelected();
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_choose_market);
    findViews();
    setListeners();
    supportActionBar();
    setSearchSuggestionAdapter();
    initRececlerView();
    com.example.framgia.imarketandroid.util.findpath.InternetUtil.isInternetConnected(this);
}

@java.lang.Override
protected void onPostExecute(upv.ejercicios.proyectofinal.quierosermillonario.model.taskParams.HighScoresTableParams highScoresTableParams) {
    super.onPostExecute(highScoresTableParams);
    android.widget.TableLayout highScoresTable;
    highScoresTable = ((android.widget.TableLayout) (findViewById(R.id.user_high_scores_table_view)));
    displayInTable(highScoresTable, highScoresTableParams.getGameScoreList());
}

@java.lang.SuppressWarnings(value = "unused")
public void expand(java.lang.String url) {
    android.util.Log.d("TEST", "expand with url");
    loadUrl(url);
    if ((mState) == (de.madvertise.android.sdk.MadvertiseMraidView.STATE_HIDDEN)) {
        expand();
    }
}

public void setRestoreItemClicked(int clickedPosition) {
    if (twoPane) {
        android.util.Log.v(LOG_TAG, "GOT HERE134");
        ((example.com.popularmovies.Main.MovieMainFragment.MovieMainListener) (context)).itemClicked(movieList.get(clickedPosition), clickedPosition);
    }
}

private org.androidannotations.internal.model.AnnotationElements validateAnnotations(org.androidannotations.internal.model.AnnotationElements extractedModel, org.androidannotations.internal.model.AnnotationElementsHolder validatingHolder) {
    timeStats.start("Validate Annotations");
    org.androidannotations.internal.process.ModelValidator modelValidator = new org.androidannotations.internal.process.ModelValidator(androidAnnotationsEnv);
    org.androidannotations.internal.model.AnnotationElements validatedAnnotations = modelValidator.validate(extractedModel, validatingHolder);
    timeStats.stop("Validate Annotations");
    return validatedAnnotations;
}

public void onClick(android.view.View button) {
    int[] location = new int[2];
    cb.getLocationOnScreen(location);
    mColorId = (cb.isChecked()) ? com.sharad.epocket.AddCategoryActivity.UNASSIGNED : color;
    updateColorGroup();
}

public boolean CheckEmailFormat(java.lang.String emailAddress) {
    if (emailAddress == null) {
        return false;
    }else {
        return android.util.Patterns.EMAIL_ADDRESS.matcher(emailAddress).matches();
    }
}

public void layoutInit() {
    android.widget.TextView textView4 = ((android.widget.TextView) (findViewById(R.id.textView4)));
    textView4.setText(android.text.Html.fromHtml(getString(R.string.sign_up_link)));
    getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB)
private void setFragment(android.app.Fragment fragment) {
    android.app.FragmentManager fm = getFragmentManager();
    android.app.FragmentTransaction transaction = fm.beginTransaction();
    transaction.replace(R.id.id_content, fragment);
    transaction.commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.amazingcoders_android.activities.VenuePageActivity.class);
    intent.putExtra("venue_id", venue.id);
    startActivity(intent);
}

public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if ((org.indywidualni.fblite.webview.MyWebViewClient.webView) != null) {
        org.indywidualni.fblite.webview.MyWebViewClient.webView.loadUrl(page.get(position));
        dialog.dismiss();
    }
}

@java.lang.Override
public void onLike() {
    liked = !(liked);
    setLikeDrawable();
    com.lupolupo.android.controllers.retrofit.LupolupoHTTPManager.getInstance().postLikeUnlike(episodeData.id, liked);
}

public boolean onOptionsItemSelectedImpl(@android.support.annotation.NonNull
V v, android.view.MenuItem item) {
    VP presenter = getPresenter(v);
    return (presenter != null) && (presenter.onOptionsItemSelected(v, item));
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.dismiss();
    if (exitOnFinish) {
        getActivity().finish();
    }else {
        getActivity().setRequestedOrientation(prevOrientation);
    }
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.add, menu);
    return super.onCreateOptionsMenu(menu);
}

public void fetchMovieGallery(int movieIdForQuery) {
    com.example.android.popularmovies.fetchRawJSON.FetchMovieGalleryTask galleryTask = new com.example.android.popularmovies.fetchRawJSON.FetchMovieGalleryTask(getActivity(), ((android.support.v4.view.ViewPager) (getView().findViewById(R.id.pager))));
    galleryTask.execute(java.lang.Integer.toString(movieIdForQuery));
}

public static void changeVirtualizerLevel(android.content.Context context, int level) {
    android.content.Intent intent = new android.content.Intent(context, com.fesskiev.player.services.PlaybackService.class);
    intent.setAction(com.fesskiev.player.services.PlaybackService.ACTION_PLAYBACK_VIRTUALIZER_LEVEL);
    intent.putExtra(com.fesskiev.player.services.PlaybackService.PLAYBACK_EXTRA_BASS_BOOST_LEVEL, level);
    context.startService(intent);
}

@com.fasterxml.jackson.annotation.JsonIgnore
public void setMyImage(android.graphics.Bitmap myImage) {
    if (myImage == null)
        setMyImage(com.example.chowdi.qremind.utils.Commons.convertBase64ToBitmap(image));
    
    this.myImage = myImage;
}

@java.lang.Override
public void onMultiPageStateChanged(boolean isMultiPage) {
    if ((paginationView) != null) {
        paginationView.setVisibility((isMultiPage ? android.view.View.VISIBLE : android.view.View.GONE));
    }
}

@java.lang.Override
public RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(getApplicationContext()).inflate(R.layout.dbquerycard, null);
    com.zhangwx.z_utils.Z_DB.DataBaseActivity.DBAdapter.DBViewHolder viewHolder = new com.zhangwx.z_utils.Z_DB.DataBaseActivity.DBAdapter.DBViewHolder(view);
    return viewHolder;
}

public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc(long l) {
    return org.dbtools.android.domain.Instant.ofEpochMilli(l).atZone(ZoneOffset.UTC).toLocalDateTime();
}

private void addMarker(com.google.android.gms.maps.GoogleMap map, double lat, double lon, com.whiterabbit.pisabike.model.Station s) {
    mClusterManager.addItem(new com.whiterabbit.pisabike.screens.map.MapItem(s));
}

@android.support.annotation.Nullable
public java.lang.Object getCache(java.lang.String name) {
    try {
        return com.xushuzhan.quiltnews.cache.CacheFileManger.readFromCache(name);
    } catch (java.io.IOException e) {
        android.util.Log.d(com.xushuzhan.quiltnews.cache.Cache.TAG, ("getCache: " + (e.getMessage())));
        return null;
    }
}

protected me.gujun.android.taggroup.TagGroup.TagView getLastNormalTagView() {
    final int lastNormalTagIndex = (isAppendMode) ? (getChildCount()) - 2 : (getChildCount()) - 1;
    me.gujun.android.taggroup.TagGroup.TagView lastNormalTagView = getTagAt(lastNormalTagIndex);
    return lastNormalTagView;
}

public void onLocationChanged(android.location.Location location) {
    makeUseOfNewLocation(location, callbackContext);
    mLocationManager.removeUpdates(locationListener);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            setResult(BaseActivity.CODE_RESULT_CHANGED);
            finish();
            break;
        case R.id.action_finish :
            finish();
            break;
    }
    return true;
}

@java.lang.Override
public void onStop() {
    super.onStop();
    android.view.animation.Animation animation = android.view.animation.AnimationUtils.loadAnimation(getContext(), R.anim.fade_out);
    relativeLayout.startAnimation(animation);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    android.util.Log.e("possssssssssssssss", java.lang.String.valueOf(item));
    if (mDrawerToggle.onOptionsItemSelected(item)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.CheckBox checkBox = ((android.widget.CheckBox) (v));
    com.growthbeat.analytics.GrowthAnalytics.getInstance().setDevelopment(checkBox.isChecked());
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.i(TAG, "MainActivity.onResume()");
    mTextView = ((android.widget.TextView) (findViewById(R.id.msg_view)));
    startServer();
}

@java.lang.Override
public void onTouched(nl.saxion.act.playground.model.GameBoard gameBoard) {
    android.util.Log.d(SoZGame.TAG, "Touched Enemy");
    callMovement(gameBoard);
    gameBoard.updateView();
}

public void init(final android.content.Context context) {
    if (context == null) {
        throw new java.lang.IllegalArgumentException("No context set.");
    }
    sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
}

public java.lang.String cleanEmail(android.widget.EditText email) {
    return email.getText().toString().replaceFirst("\\.", "");
}

@java.lang.Override
public void onClick(android.view.View view) {
    onSupportNavigateUp();
    supportFinishAfterTransition();
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (resultCode == (RESULT_OK)) {
        fragmentSwitcher.updateFragment();
    }
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.d("tag", "service stopped");
}

@java.lang.Override
public void onLoadComplete(android.media.SoundPool soundPool, int sampleId, int status) {
    com.huhx0015.hxaudio.utils.HXLog.d(com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG, (("READY (" + (engineID)) + "): onLoadComplete(): The SoundPool object is ready."));
    playSoundFx(resource, isLoop, volume);
    soundPool.setOnLoadCompleteListener(null);
}

@java.lang.Override
public boolean isViewFromObject(android.view.View view, java.lang.Object object) {
    return (view instanceof android.widget.ListView) && (((nl.tue.san.ui.TaskSetFragment.TaskAdapter) (((android.widget.ListView) (view)).getAdapter())).taskSet.equals(object));
}

@android.support.annotation.NonNull
@java.lang.Override
public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) {
    android.app.Dialog dialog = super.onCreateDialog(savedInstanceState);
    dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE);
    return dialog;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    saveTask.execute();
    startLoadImageIntent();
    org.catrobat.paintroid.dialog.LayersDialog.getInstance().resetLayer();
}

public static ru.spbau.mit.foodmanager.MenuStorage getInstance(android.content.Context context) {
    if ((ru.spbau.mit.foodmanager.MenuStorage.instance) == null) {
        ru.spbau.mit.foodmanager.MenuStorage.instance = new ru.spbau.mit.foodmanager.MenuStorage(ru.spbau.mit.foodmanager.CookBookStorage.getInstance(context));
    }
    return ru.spbau.mit.foodmanager.MenuStorage.instance;
}

protected float[] getMvMatrix(float[] mMatrix, float[] vMatrix) {
    float[] mvMatrix = new float[16];
    android.opengl.Matrix.multiplyMM(mvMatrix, 0, vMatrix, 0, mMatrix, 0);
    return mvMatrix;
}

public void onNewQuestionClick(android.view.MenuItem item) {
    android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
    com.cp1.translator.fragments.AskQuestionFragment askQuestionFragment = com.cp1.translator.fragments.AskQuestionFragment.newInstance();
    askQuestionFragment.setTargetFragment(new com.cp1.translator.fragments.PageFragment(), 300);
    askQuestionFragment.show(fm, "AskQuestion");
}

@java.lang.Override
public void onAppWidgetOptionsChanged(android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int appWidgetId, android.os.Bundle newOptions) {
    super.onAppWidgetOptionsChanged(context, appWidgetManager, appWidgetId, newOptions);
    android.util.Log.d("MainWidget", "onAppWidgetOptionsChanged");
    com.xwhiteknuckle.soundfx.WidgetHelper.changeWidgetToPlay(context);
}

public static com.example.administrator.leehom.fragment.ThridFragment getInstance(int currentPostion) {
    android.os.Bundle bundle = new android.os.Bundle();
    bundle.putInt(com.example.administrator.leehom.fragment.ThridFragment.CURRENT_POSITION, currentPostion);
    com.example.administrator.leehom.fragment.ThridFragment thridFragment = new com.example.administrator.leehom.fragment.ThridFragment();
    thridFragment.setArguments(bundle);
    return thridFragment;
}

protected void loadPageSync(java.lang.String title, @android.support.annotation.NonNull
org.wikipedia.Site site, @android.support.annotation.NonNull
org.wikipedia.page.PageLoadLatchCallback callback) {
    getFragment().setPageLoadCallbacks(callback);
    loadPage(title, site);
    callback.await();
}

public static boolean satisfiesTextContrast(int backgroundColor, int foregroundColor) {
    return (com.android.internal.util.NotificationColorUtil.calculateContrast(backgroundColor, foregroundColor)) >= 4.5;
}

@java.lang.Override
public void onAnimationUpdate(android.animation.ValueAnimator animation) {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) {
        pbProgress.setProgress(((int) (animation.getAnimatedValue())));
    }
}

@java.lang.Override
protected void onPostExecute(java.lang.Void result) {
    android.util.Log.d(TAG, "Search results read");
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.inhand.inhandappbeta.ResultsActivity.class);
    com.inhand.inhandappbeta.DataHolder.getInstance().setData(url);
    startActivity(intent);
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    if ((savedInstanceState != null) && (savedInstanceState.getBoolean("isConflict", false)))
        return ;
    
    super.onActivityCreated(savedInstanceState);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mPhoneTwoEditTextString = mPhoneTwoEditText.getText().toString();
    if (validateEditText()) {
        sendingDataToServer();
        android.widget.Toast.makeText(getActivity(), "errors", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public boolean onSingleTapUp(android.view.MotionEvent e) {
    android.util.Log.d("DEBUG_TAG", "On SingleTapUp OscMode Event!");
    butOscMode.setBackgroundColor(-1442807680);
    return super.onSingleTapUp(e);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_ctrl);
    initHandler();
    initRobotControl();
    initInfoView();
    initVideoView();
    initTestBtn();
    initMoveBtns();
    initServoBtns();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    com.ufone.uess.UserAuthentication.unauthenticate();
    finish();
    android.content.Intent intent = new android.content.Intent(this, com.ufone.uess.LoginActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, kevts.washington.edu.quizdroid.QuestionPage.class);
    startActivityForResult(intent, 1);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.btn_yes :
            c.finish();
            break;
        case R.id.btn_no :
            dismiss();
            break;
        default :
            break;
    }
    dismiss();
}

@java.lang.Override
public void onFailure(java.lang.Throwable t) {
    progressBar.setVisibility(View.GONE);
    recyclerView.setVisibility(View.GONE);
    android.support.design.widget.Snackbar.make(v, "Unable to load fake people", Snackbar.LENGTH_LONG).show();
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    com.example.sunshinewatch.MyWatchFace.Engine engine = mWeakReference.get();
    if (engine != null) {
        switch (msg.what) {
            case com.example.sunshinewatch.MyWatchFace.MSG_UPDATE_TIME :
                engine.handleUpdateTimeMessage();
                break;
        }
    }
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    getData("n2");
    getData("p2");
    return ;
}

@java.lang.Override
public void onClick(android.view.View view) {
    spinner.setVisibility(View.VISIBLE);
    new com.udacity.gradle.builditbigger.JokeEndpointsAsyncTask().execute(new android.support.v4.util.Pair<android.content.Context, java.lang.String>(getContext(), "Paid"));
}

private java.util.Set<java.lang.String> getStringSetFromSharedPreferences(java.lang.String preferenceName) {
    android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(mContext);
    return prefs.getStringSet(preferenceName, new java.util.HashSet<java.lang.String>());
}

@java.lang.Override
public void onClick(android.view.View view) {
    mItemClickListener.onItemClick(viewHolder, mDatas.get(position), position, viewType);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return amai.org.conventions.events.activities.ProgrammeDayFragment.newInstance(getDate(position), delayScrolling, new amai.org.conventions.map.AggregatedEventTypes().get(ConventionsApplication.settings.getProgrammeSearchCategories(getApplicationContext())));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    FlightNoEnter = ((android.widget.EditText) (findViewById(R.id.FlNoEnter)));
    DateEnter = ((android.widget.EditText) (findViewById(R.id.FlightDateEnter)));
    setContentView(R.layout.activity_input_flights);
}

private void toast(java.lang.String message) {
    android.widget.Toast toast = android.widget.Toast.makeText(this, message, Toast.LENGTH_LONG);
    toast.show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    switch (view.getId()) {
        case R.id.signInButton :
            signIn();
            break;
        case R.id.signOutButton :
            signOut();
            break;
    }
}

@java.lang.Override
public void onSuccess() {
    android.widget.Toast.makeText(getApplicationContext(), "Peer Discovery ready", Toast.LENGTH_SHORT).show();
    android.util.Log.d("WiFiDBC", "Peer Discovery ready");
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    int result = super.onStartCommand(intent, flags, startId);
    com.tianyl.android.offlinereader.sync.SyncService.addLog("onStartCommand");
    return result;
}

private void openErrorPopup() {
    android.widget.Toast popup = android.widget.Toast.makeText(this, R.string.input_error_msg, Toast.LENGTH_SHORT);
    popup.show();
}

public static void updatePilot(com.airmap.airmapsdk.models.pilot.AirMapPilot pilot, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<com.airmap.airmapsdk.models.pilot.AirMapPilot> callback) {
    com.airmap.airmapsdk.networking.services.PilotService.updatePilot(pilot, callback);
}

public boolean store(android.content.Context context) {
    boolean wasStore;
    if (hasPrimaryKeyValue())
        wasStore = update(context);
    else
        wasStore = insert(context);
    
    return wasStore;
}

public void incrementCounter(android.view.View v) {
    selectedCounter.setCurrentValue(((selectedCounter.getCurrentValue()) + 1));
    selectedCounter.setDate(new java.util.Date());
    updateDateField();
    updateCurrentValueField();
}

@java.lang.Override
public boolean dispatchTouchEvent(android.view.MotionEvent ev) {
    if (!(mFragmentClickable))
        return true;
    
    return super.dispatchTouchEvent(ev);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return new com.dismas.imaya.info_parks.GameParksFragment();
        case 1 :
            return new com.dismas.imaya.info_parks.GameReservesFragment();
    }
    return null;
}

@butterknife.OnClick(value = R.id.buttonAddTurn)
public void addInning(android.view.View view) {
    addTurnButton.hide(new android.support.design.widget.FloatingActionButton.OnVisibilityChangedListener() {
        @java.lang.Override
        public void onHidden(android.support.design.widget.FloatingActionButton fab) {
            super.onHidden(fab);
            showAddTurnDialog();
        }
    });
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_bluetooth__app);
    bT = new com.example.bluetooth_app.Bluetooth(this);
    bT.isCompat();
    bT.getAdapter();
    bT.pairedDevices();
}

@java.lang.Override
public void onBeaconStoppedSeeking() {
    android.widget.Toast.makeText(mActivity, "Beacon stopped", Toast.LENGTH_SHORT).show();
    android.util.Log.d("BEACON", "Beacon stopped");
}

private void finish() {
    android.widget.Toast.makeText(getContext(), "Finish", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(mContext, com.androidteam.jobnow.acitvity.DetailJobsActivity.class);
    mContext.startActivity(intent);
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    readMarkerView.setVisibility(View.GONE);
    if ((mReadMarkerListener) != null) {
        mReadMarkerListener.onReadMarkerDisplayed(event, readMarkerView);
    }
}

public void goToTexting() {
    java.lang.System.out.print("ERROR");
    startActivity(new android.content.Intent(this, com.example.guy.smsclassproject.TextingActivity.class));
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    mPresenter.copy(mAskAdapter.getItem(((int) (v.getTag(R.id.tag_position)))));
    return true;
}

public com.google.android.gms.maps.model.LatLng getLocation() {
    return new com.google.android.gms.maps.model.LatLng(latitude, longitude);
}

@java.lang.Override
protected com.shadark.android.react.amaps.mapview.ATextureMapView createViewInstance(com.facebook.react.uimanager.ThemedReactContext reactContext) {
    android.util.Log.d(com.shadark.android.react.amaps.mapview.ATextureMapManager.TAG, "ATextureMapView");
    com.amap.api.maps.AMapOptions options = new com.amap.api.maps.AMapOptions();
    return new com.shadark.android.react.amaps.mapview.ATextureMapView(reactContext, mAppContext, this, options);
}

public void Action_Signup(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), project.tp.whattocook.Signup.class);
    startActivity(intent);
}

public void show(int x, int y, @android.support.annotation.Nullable
android.view.animation.Animation.AnimationListener listener) {
    show(x, y, me.yugy.github.reveallayout.RevealLayout.DEFAULT_DURATION, null);
}

public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    int prevPosition = floorPosition(seekBar.getProgress(), 0);
    musicService.seekTo(prevPosition);
    seekBar.setProgress(prevPosition);
    ignoreSeekBar = false;
}

public void onSettingsButtonClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.sensei.easycalc.SettingsActivity.class);
    startActivity(intent);
    finish();
}

public void onWakeupReceived(android.content.Context applicationContext, android.content.Intent intent) {
    com.magnet.mmx.client.common.Log.d(com.magnet.mmx.client.api.MMX.TAG, "onWakeupReceived() start");
    com.magnet.mmx.client.api.MMX.wakeup(intent);
}

@java.lang.Override
public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) {
    updateTitleBar(view.getTitle(), url);
    view.loadUrl(url);
    return false;
}

public com.onehilltech.gatekeeper.android.JsonRequest loginUser(java.lang.String username, java.lang.String password, final com.onehilltech.gatekeeper.android.ResponseListener<com.onehilltech.gatekeeper.android.model.UserToken> listener) {
    return this.client_.getUserToken(username, password, listener);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if ((getArguments()) != null) {
    }
    org.greenrobot.eventbus.EventBus.getDefault().register(this);
}

@android.annotation.SuppressLint(value = "InlinedApi")
@java.lang.Override
public void run() {
    mContentView.setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LOW_PROFILE) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)));
}

protected void createUser(java.lang.String username, java.lang.String password) {
    com.example.root.quiettime.User user = new com.example.root.quiettime.User();
    user.name = username;
    user.pw = password;
    storeUser(user);
    android.util.Log.v("QT", "User stored");
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    de.greenrobot.event.EventBus.getDefault().register(this);
    ((android.support.v7.app.AppCompatActivity) (getActivity())).getSupportActionBar().hide();
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    drawer.onAnimationEnd(animation);
    state = org.codetwisted.widget.DrawerLayout.STATE_IDLE;
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    super.onAnimationEnd(animation);
    getFloatingToolbar().setVisibility(View.INVISIBLE);
    getFab().setVisibility(View.VISIBLE);
    getAnimationListener().onAnimationFinished();
}

private synchronized de.blau.android.osm.Node getClickedNodeOrCreatedWayNode(final float x, final float y) throws de.blau.android.exception.OsmIllegalOperationException {
    return getClickedNodeOrCreatedWayNode(null, x, y);
}

public void onStop(android.view.View view) {
    if (mBound) {
        unbindService(mConnection);
        mBound = false;
    }
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_managing_existing_products, container, false);
    initializeData();
    initializeAdapter();
    initializeRecyclerView(view);
    return view;
}

@java.lang.Override
public com.augmentis.ayp.alarmclock.AlarmListFragment.AlarmHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemView = android.view.LayoutInflater.from(getActivity()).inflate(R.layout.item_list_card_alarm, parent);
    return new com.augmentis.ayp.alarmclock.AlarmListFragment.AlarmHolder(itemView);
}

private boolean actionReset() {
    for (android.support.v4.app.Fragment player : mFragmentManager.getFragments().subList(0, numPlayers)) {
        ((com.blogspot.onekeyucd.healthtracker.PlayerFragment) (player)).reset();
    }
    return true;
}

@java.lang.Override
public void onCreate(final android.database.sqlite.SQLiteDatabase db) {
    getWritableDatabase().execSQL((((((("CREATE TABLE IF NOT EXISTS " + (this.tableName)) + " (") + "id INTEGER PRIMARY KEY AUTOINCREMENT, ") + "name TEXT, ") + "done INTEGER") + ");"));
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent i2 = new android.content.Intent(this, heyheyoheyhey.com.ifoundclassmate3.registerActivity.class);
    startActivityForResult(i2, 2);
}

static int getNewUniqueLoaderId() {
    return com.example.android.app.moviesapp.Generator.sCurrentUniqueId.getAndIncrement();
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB)
@java.lang.Override
public void onDone(github.tmdb.bo.Film data) {
    final java.lang.String urlBackdrop = data.getBackdropPath(ApiTMDB.SizePoster.w1280);
    backdrop.setImageBitmap(null);
    backdrop.setTag(urlBackdrop);
    com.nostra13.universalimageloader.core.ImageLoader.getInstance().displayImage(urlBackdrop, backdrop);
}

@java.lang.Override
public void onAdFailed(com.rfm.sdk.RFMAdView adView) {
    android.util.Log.d(com.rfm.extras.adapters.RFMAdmobAdapter.LOG_TAG, "RFM :onAdFailed ");
    rfmAdView.setVisibility(View.GONE);
    if ((customEventListener) != null) {
        customEventListener.onAdFailedToLoad(222);
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    mMobvoiApiClient = new com.mobvoi.android.common.api.MobvoiApiClient.Builder(this).addApi(Wearable.API).build();
    mMobvoiApiClient.connect();
}

@java.lang.Override
protected void finalize() throws java.lang.Throwable {
    super.finalize();
    if ((mLeakedException) != null) {
        android.util.Log.e(fast.simple.download.http.DownloadHttpClient.TAG, "Leak found", mLeakedException);
        mLeakedException = null;
    }
}

private void startOcrActivity(android.content.Intent data) {
    android.content.Intent intent = new android.content.Intent(this, com.mgtv.qxx.ttsdemo.OcrActivity.class);
    intent.putExtras(data);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.unibo.koci.moneytracking.Activities.EditActivity.class);
    intent.putExtra("item", item);
    startActivity(intent);
    finish();
}

public void winner() {
    android.widget.TextView t = ((android.widget.TextView) (findViewById(R.id.textView)));
    t.setText("Winner");
}

public void addFragment(android.support.v4.app.Fragment fragment, java.lang.String title) {
    mFragmentList.add(fragment);
    mFragmentTitleList.add(title);
}

public java.lang.String getQuantityString(@android.support.annotation.PluralsRes
int pluralId, int size) {
    return mContext.getResources().getQuantityString(pluralId, size);
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.e("Destroy", "Changes");
    super.onDestroy();
    displayImage = null;
    myGallery.removeAllViews();
    myGallery = null;
    java.lang.System.gc();
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    android.util.Log.v(LOG_TAG, "onActivityCreated: initLoader");
    getLoaderManager().initLoader(com.example.shreekant.sunshine.app.ForecastFragment.FORECAST_LOADER_ID, null, this);
}

@java.lang.Override
public android.content.ComponentName proceed(final android.content.Intent intent) {
    return com.oasisfeng.condom.CondomContext.super.startService(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    fam.close(false);
    android.content.Intent i = new android.content.Intent(getApplicationContext(), com.me.squad.bankop.AddTransactionActivity.class);
    startActivity(i);
}

@com.android.tools.layoutlib.annotations.LayoutlibDelegate
static void native_getValues(long native_object, float[] values) {
    android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager.getDelegate(native_object);
    if (d == null) {
        return ;
    }
    java.lang.System.arraycopy(d.mValues, 0, d.mValues, 0, android.graphics.Matrix_Delegate.MATRIX_SIZE);
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mediaPlayer) {
    mediaPlayer.seekTo(0);
    android.widget.Toast.makeText(this, "The audio lesson has finished playing.", Toast.LENGTH_SHORT).show();
    fab.setImageResource(R.drawable.ic_play);
}

@java.lang.Override
public void onFocusChange(android.view.View view, boolean b) {
    org.md2k.utilities.Report.Log.d(org.md2k.ema.FragmentTextNumeric.TAG, ("Focus=" + b));
    if (b)
        setEditTextFocused();
    else
        setEditTextNotFocused();
    
}

private void moveToAddFillup() {
    android.content.Intent moveToAddFillup = new android.content.Intent(super.getContext(), com.twild.gastracker.ActivityAddFillup.class);
    moveToAddFillup.putExtra("car_index", currentCarIndex);
    getActivity().finish();
    startActivity(moveToAddFillup);
}

@java.lang.Override
protected void onPostExecute(java.lang.String s) {
    super.onPostExecute(s);
    com.example.jarvus.tummybuddy.MenuClick.globalCal = s;
    android.util.Log.e("done", "*******************************************|||");
}

protected void doDecrypt(android.view.View v) {
    doWork(2);
}

@java.lang.Override
public void onPageScrollStateChanged(int state) {
    super.onPageScrollStateChanged(state);
    mUpButton.animate().alpha((state == (android.support.v4.view.ViewPager.SCROLL_STATE_IDLE) ? 1.0F : 0.0F)).setDuration(300);
}

@java.lang.Override
public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) {
    israelbgf.gastei.mobile.actvities.ExpenseManagementActivity activity = getExpenseManagementActivity();
    return new android.app.DatePickerDialog(activity, this, activity.chosenYear, activity.chosenMonth, 1);
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    android.util.Log.d(com.xiongxh.popularmovies.fragments.MovieGridFragment.LOG_TAG, "MoviesGridFragment starts!");
    getLoaderManager().initLoader(com.xiongxh.popularmovies.fragments.MovieGridFragment.LOADER_ID, null, this);
    super.onActivityCreated(savedInstanceState);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    android.widget.Toast.makeText(this, "onLocationChange", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle bundle) {
    currentState = bundle.getParcelable("state");
    onActivityModeChanged();
    locationHandler.onRestoreInstanceState(bundle);
    super.onRestoreInstanceState(bundle);
}

@java.lang.Override
public void done(com.parse.ParseException e) {
    if (e != null)
        android.util.Log.d("Object saving error", e.toString());
    
    java.lang.System.out.println(("New upvote count: " + (object.getNumber("upvotes"))));
    java.lang.System.out.println("Post updated");
}

@java.lang.Override
public void run() {
    webSocket.ping("ping");
    if ((connectState) == (org.deviceconnect.android.deviceplugin.slackmessagehook.slack.SlackManager.CONNECT_STATE_CONNECTED)) {
        handler.postDelayed(this, org.deviceconnect.android.deviceplugin.slackmessagehook.slack.SlackManager.KEEPALIVE_SPAN);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    allRe.get(java.lang.Integer.parseInt(v.getTag().toString())).setUnderline();
    updateTextNoteControlListners(R.id.action_underline);
}

@java.lang.Override
public void onBindViewHolder(com.example.android.popularmovies.TrailerRecyclerViewAdapter.TrailerViewHolder holder, int position) {
    android.util.Log.d(com.example.android.popularmovies.TrailerRecyclerViewAdapter.TAG, ("#" + position));
    com.example.android.popularmovies.TrailerObject currentTrailer = myTrailerData[position];
    holder.trailerNameView.setText(currentTrailer.getName());
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    startActivity(new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    Config.context = this;
}

@java.lang.Override
public void onCreate(android.os.Bundle state) {
    super.onCreate(state);
    mScannerView = new me.dm7.barcodescanner.zxing.ZXingScannerView(this);
    setContentView(mScannerView);
    com.example.chowdi.qremind.utils.QRCodeScanner.scanningCancelled = false;
    com.example.chowdi.qremind.utils.QRCodeScanner.scanningFinished = false;
    com.example.chowdi.qremind.utils.QRCodeScanner.result = "";
}

@java.lang.Override
public void onClick(android.view.View v) {
    insideScroller.scrollTo(0, ((insideScroller.getScrollY()) + 250));
    LogHop(hop.time, hop.name);
}

@java.lang.Override
public void onBatchScanResults(java.util.List<android.bluetooth.le.ScanResult> results) {
    android.util.Log.d(com.example.nutri_000.testinggauge.MainActivity.TAG, (("onBatchScanResults: " + (results.size())) + " results"));
    for (android.bluetooth.le.ScanResult result : results) {
        processResult(result);
    }
}

android.service.voice.VoiceInteractionSession.Request removeRequest(android.os.IBinder reqInterface) {
    synchronized(this) {
        android.service.voice.VoiceInteractionSession.Request req = mActiveRequests.get(reqInterface);
        if (req != null) {
            mActiveRequests.remove(req);
        }
        return req;
    }
}

private void conway() {
    for (android.graphics.Point toToggle : togglePoints()) {
        cellLoc[toToggle.y][toToggle.x].toggleLive();
    }
}

@java.lang.Override
public void onAssignmentClick(com.example.android.grader.models.Assignment assignment) {
    com.example.android.grader.fragments.AssignmentDetailFragment assignmentDetailFragment = com.example.android.grader.fragments.AssignmentDetailFragment.newInstance(assignment);
    fragmentManager.beginTransaction().replace(R.id.fragmentContainer, assignmentDetailFragment, com.example.android.grader.activities.MainActivity.ASSIGNMENT_DETAIL_FRAGMENT).addToBackStack(null).commit();
}

@java.lang.Override
protected void onNewIntent(final android.content.Intent intent) {
    android.util.Log.d(org.comparemydinner.activity.SearchListActivity.TAG, "onNewIntent");
    setIntent(intent);
    handleIntent(intent);
}

@java.lang.Override
public void onCreate() {
    mNotificationManager = android.support.v4.app.NotificationManagerCompat.from(getApplicationContext());
    showNotification(NOTIFICATION);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    super.onAnimationEnd(animation);
    mForceReset = false;
    if (!(mIsRefreshing)) {
        mWillReleaseToRefresh = true;
    }
    setHeaderForCurrentOffsetTop();
}

@java.lang.Override
public void onStopped() {
    java.lang.String toastMessage = "video stopped";
    android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), toastMessage, Toast.LENGTH_SHORT);
    toast.show();
}

public void start() {
    countDownHandler.cancel();
    android.util.Log.d("waleola", "called start..in CountDownManager");
    countDownHandler.start();
}

public void addTwoTeamA(android.view.View view) {
    scoreTeamA = (scoreTeamA) + 2;
    displayForTeamA(scoreTeamA);
}

private void changeRangeTemp(com.example.perk.xtremegreenclient.Ranges range) {
    android.content.Intent intent = new android.content.Intent(this, com.example.perk.xtremegreenclient.RangeSetterActivity.class);
    intent.putExtra("Range", range);
    startActivity(intent);
}

@java.lang.Override
public void onAnimationStart(android.view.animation.Animation animation) {
    handler.post(createRunnable(parent, startTime, startScale, endScale));
    can_scroll = false;
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.howell.protocol.utils.SDKDebugLog.LogEnable(true);
    initPlayView();
    initFun();
    start();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    mMvpDelegate.onCreate(com.rey.mvp.impl.MvpActivity.getPresenterCache(), com.rey.mvp.impl.MvpActivity.getViewStateCache(), savedInstanceState, mPresenterFactory, mViewStateFactory);
    super.onCreate(savedInstanceState);
}

void setAddress(android.location.Location loc) {
    address.updateAddress(loc);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent previewActivity = new android.content.Intent("com.keepingatimeline.kat.PreviewEvent");
    startActivity(previewActivity);
}

@java.lang.Override
public void onImagesSelected(java.util.ArrayList<android.net.Uri> uriList) {
    selectedUriList = uriList;
    android.widget.Toast.makeText(this, ("length " + (uriList.size())), Toast.LENGTH_SHORT).show();
}

public static void clearComm(com.airmap.airmapsdk.models.flight.AirMapFlight flight, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<java.lang.Void> callback) {
    com.airmap.airmapsdk.networking.services.FlightService.clearCommKey(flight, callback);
}

@java.lang.Override
public void destroyItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    ((android.support.v4.view.ViewPager) (container)).removeView(((com.kun.comicreader.Extra.ZoomImageView) (object)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    data.remove(text);
    notifyDataSetChanged();
    closeAllItems();
}

@android.support.annotation.NonNull
static me.oriley.bunyan.Bunyan.Level getThreshold(@android.support.annotation.NonNull
java.lang.Class c) {
    if (me.oriley.bunyan.Bunyan.sClassThresholds.containsKey(c)) {
        return me.oriley.bunyan.Bunyan.sClassThresholds.get(c);
    }else {
        return me.oriley.bunyan.Bunyan.sGlobalThreshold;
    }
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    taskAdapter.saveState(this, outState);
}

private int getEvents(android.content.SharedPreferences prefs) {
    return prefs.getInt(Constants.PREF_KEY_RATING_EVENTS, 0);
}

@java.lang.Override
public void onClick(android.view.View v) {
    int idx = v.getId();
    name.mjs001.expensereport.User u2 = gc.getUserList().get(idx);
    gc.setCurUser(u2);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
}

void onClick(android.view.View view);

@java.lang.Override
public boolean onSingleTapConfirmed(android.view.MotionEvent e) {
    listener.get().onTapped();
    return true;
}

public void secondChoiceMade(android.view.View view) {
    (level_move)++;
    if ((this.result_choices[3]) == 2) {
        updateScore();
    }
    timer.cancel();
    newMove();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setBaseContent();
    getPermissions();
    com.example.kaveon14.workoutbuddy.DataBase.TableManagers.ProgressPhotosTable table = new com.example.kaveon14.workoutbuddy.DataBase.TableManagers.ProgressPhotosTable(getBaseContext());
    table.printTable();
}

@java.lang.Override
public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo outAttrs) {
    return new com.layer.atlas.utilities.views.EmptyDelEditText.EmptyDelInputConnection(super.onCreateInputConnection(outAttrs), true);
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.hustunique.parsingplayer.LogUtil.d(com.hustunique.parsingplayer.player.android.VideoActivity.TAG, "click on view");
    toggle();
}

private static void updateSharedPreferences() {
    android.content.SharedPreferences.Editor editor = org.redcross.openmapkit.OSMMapBuilder.sharedPreferences.edit();
    editor.putStringSet(org.redcross.openmapkit.OSMMapBuilder.PERSISTED_OSM_FILES, org.redcross.openmapkit.OSMMapBuilder.persistedOSMFiles);
    editor.apply();
}

private void parseIntent(android.content.Intent intent) {
    if (intent == null)
        return ;
    
    token = intent.getStringExtra(IntentTypeUtils.INTENT_KEY);
    user = intent.getStringExtra(IntentTypeUtils.USER_KEY);
    rooms = java.lang.Integer.valueOf(intent.getStringExtra(IntentTypeUtils.ROOM_NUM));
}

@java.lang.Override
public void onTokenRefresh() {
    java.lang.String refreshedToken = com.google.firebase.iid.FirebaseInstanceId.getInstance().getToken();
    android.util.Log.d(andre.com.datapushandroid.services.FCM_InstanceIdService.TAG, ("Refreshed token: " + refreshedToken));
    sendRegistrationToServer(refreshedToken);
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    bluetoothStatus.setSummaryOff(R.string.switch_pref_summary_off);
    databaseHelperActivity.onUpdateBluetoothValue(activityTitle, profileDisabled);
    android.bluetooth.BluetoothAdapter mBluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();
    mBluetoothAdapter.disable();
    return true;
}

@java.lang.Override
public void onCancel(android.content.DialogInterface dialog) {
    de.beacon.tom.viibenav_radiomapper.model.RadioMap.getRadioMap().deleteLastAnchor();
    main.getApplicationUI().updateLayer1();
    cleanBeacons();
    cleanInfo();
}

@java.lang.Override
protected void onStop() {
    if (((mGoogleApiClient) != null) && (mGoogleApiClient.isConnected())) {
        android.util.Log.d(edu.umbc.cs.iot.clients.android.UMBCIoTApplication.getDebugTag(), "Disconnecting API client");
        unsubscribe();
    }
    super.onStop();
}

public void setUserCoordinateSystem(int userCoordinateSystem) {
    if ((userCoordinateSystem < (com.example.damianmichalak.bluetooth_test.view.widget.JoystickView.COORDINATE_CARTESIAN)) || ((movementConstraint) > (com.example.damianmichalak.bluetooth_test.view.widget.JoystickView.COORDINATE_DIFFERENTIAL)))
        android.util.Log.e(TAG, "invalid value for userCoordinateSystem");
    else
        this.userCoordinateSystem = userCoordinateSystem;
    
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    hideStatusBar();
    mFirebaseAnalytics = com.google.firebase.analytics.FirebaseAnalytics.getInstance(this);
    registerJPushMessageReceiver();
    registerRongCloudReceiveMessageListener();
}

public void resume() {
    com.duckduckgo.mobile.android.duckduckgo.ui.tab.DDGWebView webView = getWebViewForTabId(currentId);
    if (webView == null)
        return ;
    
    browserPresenter.attachTabView(webView);
    resumeWebView(webView);
}

private void init() {
    progressBar = ((android.widget.ProgressBar) (findViewById(R.id.loading_progressBar)));
    tipTxt = ((android.widget.TextView) (findViewById(R.id.tip_txt)));
    setOnClickListener(this);
    eventBus = new org.greenrobot.eventbus.EventBus();
}

@java.lang.Override
protected java.util.ArrayList<com.android.infosessions.Session> doInBackground(java.lang.String... params) {
    java.util.ArrayList<com.android.infosessions.Session> sessions = com.android.infosessions.QueryUtils.fetchInfos(params[0], getContext());
    insertSession(sessions);
    return sessions;
}

protected void cancelNotification() {
    android.util.Log.i("Cancel", "notification");
    mNotificationManager.cancel(notificationID);
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parent) {
    com.example.inspired.inspiredvideo.app.MovieAdapter videoAdapter = ((com.example.inspired.inspiredvideo.app.MovieAdapter) (mRecyclerView.getAdapter()));
    videoAdapter.updatemVideoItems(Context.mCurrentData, false);
}

public void onStart(android.app.Activity a) {
    this.active = true;
    ScheduleSleep();
}

public void downloadSelected(android.view.View v) {
    sk.matus.ksp.guitarist_swiss_knife.SongDatabaseHelper db = new sk.matus.ksp.guitarist_swiss_knife.SongDatabaseHelper(this);
    java.util.ArrayList<sk.matus.ksp.guitarist_swiss_knife.ScrapeUGActivity.ResultEntryView> marked = gatherMarked();
    saveExtracted = true;
    extractSongs(marked);
}

@java.lang.Override
public void onSuccess() {
    if ((mApp.getRepo()) != null)
        goToMain();
    else
        android.widget.Toast.makeText(this, "The selected repo does not exist", Toast.LENGTH_SHORT).show();
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    setTheme(R.style.AppTheme);
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.pref_general);
    bindPreferenceSummaryToValue(findPreference(getString(R.string.pref_location_key)));
    bindPreferenceSummaryToValue(findPreference(getString(R.string.pref_temperature)));
}

private void saveLog(android.preference.Preference logLoc) {
    java.lang.String file = com.woalk.apps.xposed.htcblinkfeedauthorizer.Logger.saveLogcat(getActivity());
    logLoc.setEnabled(true);
    logLoc.setSummary(file);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    setFullscreen(true);
    if ((mControlsFrame) != null)
        mControlsFrame.setVisibility(View.INVISIBLE);
    
}

public void onStartAgain() {
    android.util.Log.v(com.example.kirstiebooras.colors.activities.ColorActivity.TAG, "onStartAgain");
    android.content.Intent intent = new android.content.Intent(this, com.example.kirstiebooras.colors.activities.MainActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void handleMessage(android.os.Message message) {
    org.chromium.chromoting.TapGestureDetector detector = mDetector.get();
    if (detector != null) {
        detector.mListener.onLongPress(detector.mPointerCount, detector.mInitialPoint.x, detector.mInitialPoint.y);
        detector.mTapCancelled = true;
    }
}

void changeSecondViewPosition() {
    com.nineoldandroids.view.ViewHelper.setY(secondView, dragView.getBottom());
    com.nineoldandroids.view.ViewHelper.setX(secondView, dragView.getLeft());
}

public boolean checkCameraHardware(android.content.Context context) {
    if (context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA)) {
        return true;
    }else {
        return false;
    }
}

public android.graphics.Bitmap peekBitmap() {
    if (stack.empty())
        return null;
    
    android.util.Log.i("test", "#peek");
    return stack.peek();
}

@java.lang.Override
public void OnCartItemsLoaded() {
    itemsList = mCart.cartProducts;
    adapter.itemsList = itemsList;
    adapter.notifyDataSetChanged();
    android.app.ActionBar actionbar = getActionBar();
    actionbar.setTitle("your text");
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if ((android.content.DialogInterface.BUTTON_POSITIVE) == which) {
        isAlertDialogShown = false;
        clearModelManager();
        copyDefaultConfig();
        loadModelManager();
    }
}

public android.view.View getLeftOuterView() {
    if ((mLeftOuterView) != null) {
    }
    return mLeftOuterView;
}

@java.lang.Override
public void switchToDetailFragment(comcsse483.github.scoutr.models.Match match) {
    android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
    ft.replace(R.id.fragment_container, new comcsse483.github.scoutr.fragments.ViewDataFragment());
    ft.addToBackStack("detail");
    ft.commit();
}

public static void loadBitmap(android.content.Context context, android.widget.ImageView img, java.lang.String url) {
    com.bumptech.glide.Glide.with(context).load(url).asBitmap().placeholder(R.mipmap.sidebar).error(R.mipmap.sidebar).into(img);
}

private void swipeLeft(int distance) {
    android.view.View animationView = holder.mainLayout;
    android.widget.RelativeLayout.LayoutParams params = ((android.widget.RelativeLayout.LayoutParams) (animationView.getLayoutParams()));
    params.rightMargin = -distance;
    params.leftMargin = distance;
    animationView.setLayoutParams(params);
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (requestCode == 100) {
        if (requestCode == (RESULT_OK)) {
            iv_takeImage.setImageURI(file);
        }
    }
}

private void publishResults(com.example.mappingservice.Result result) {
    android.content.Intent intent = new android.content.Intent(com.example.mappingservice.MappingService.NOTIFICATION);
    intent.putExtra("result", result);
    android.util.Log.e("DEBUG", result.getVenue(0).getAddress());
    sendBroadcast(intent);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    stopPosition = videoView.getCurrentPosition();
    videoView.pause();
    outState.putInt("position", stopPosition);
}

@java.lang.Override
public void onBackPressed() {
    android.util.Log.d("BUG", "onBP");
    backPressed = true;
    super.onBackPressed();
}

@rxbus.ecaray.com.rxbuslib.rxbus.RxBusReact(clazz = { java.lang.String.class , java.lang.Integer.class , java.lang.Double.class }, tag = "tag")
public void showContent2(java.lang.String content, int i, double k) {
    android.util.Log.d("tagutil", ("收到的参数: " + content));
}

public void pauseSong() {
    mediaPlayer.pause();
    ((android.app.NotificationManager) (getApplicationContext().getSystemService(com.example.kyler.musicplayer.Model.NOTIFICATION_SERVICE))).cancel(NOTIFY_ID);
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    this.lastNotifMillis = intent.getLongExtra("lastRunElapsedRealtime", 0);
    rescheduleNotifications();
}

@java.lang.Override
public void onResult(com.google.android.gms.wearable.Node selectedNode) {
    if (selectedNode == null)
        nodeName = null;
    
    nodeName = selectedNode.getDisplayName();
}

@org.junit.Test
public void testDataItemNotInAdapter() {
    android.support.test.espresso.Espresso.onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.listView)).check(android.support.test.espresso.assertion.ViewAssertions.matches(org.hamcrest.CoreMatchers.not(com.example.jens.kitchenconverter.UnitsActivityEspressoTest.withAdaptedData(com.example.jens.kitchenconverter.UnitsActivityEspressoTest.withUnitName("kgl")))));
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (isPause)
        stop();
    
    startActivityForResult(new android.content.Intent(this, com.entersnowman.alarmclock.ListOfRingtonesActivity.class), com.entersnowman.alarmclock.MusicSettingsActivity.LIST_OF_RINGTONES);
}

public void removeElement(edu.istic.tdf.dfclient.domain.element.IElement element) {
    com.google.android.gms.maps.model.Marker marker = getMarker(element);
    if (marker != null) {
        markersList.remove(marker);
    }
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent event) {
    com.itheima.mobilesafe.utils.CLog.d(com.itheima.mobilesafe.ui.my_viewpager.MyViewPager.TAG, "TouchEvent");
    if (this.enabled) {
        return super.onTouchEvent(event);
    }
    return false;
}

private void leaveLobby() {
    android.util.Log.d(com.github.mrm1st3r.cards.lobby.LobbyActivity.TAG, "leaving lobby");
    conn.setOnConnectionChangeHandler(null);
    if ((conn) != null) {
        conn.close();
        conn = null;
    }
    playerList.clear();
}

@java.lang.Override
public void onLoadMore(int current_page) {
    page = current_page;
    new com.androidbelieve.drawerwithswipetabs.FilmsFragment.LoadFilms().execute();
}

public void addLabel(java.lang.String text) {
    android.content.ContentValues values = new android.content.ContentValues();
    values.put(exjobb.selfannotationsystem.Database.DBLabelHelper.COLUMN_VALUE, text);
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    db.insert(exjobb.selfannotationsystem.Database.DBLabelHelper.TABLE_LABELS, null, values);
    db.close();
}

@org.jetbrains.annotations.NotNull
private com.jaspersoft.android.sdk.service.report.ReportExport performExport(com.jaspersoft.android.sdk.service.report.RunExportCriteria criteria) throws com.jaspersoft.android.sdk.service.exception.ServiceException {
    com.jaspersoft.android.sdk.network.entity.export.ExportExecutionDescriptor exportDetails = runExport(criteria);
    waitForExportReadyStatus(criteria, exportDetails);
    com.jaspersoft.android.sdk.network.entity.execution.ReportExecutionDescriptor currentDetails = requestExecutionDetails();
    return mExportFactory.create(criteria, currentDetails, exportDetails);
}

private void signInGoogle() {
    android.content.Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(SIM.getmGoogleApiClient());
    startActivityForResult(signInIntent, nl.rug.www.summerschool.controller.myprofile.SignInFragment.GOOGLE_SIGN_IN);
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    pDialog = new android.app.ProgressDialog(this);
    pDialog.setMessage("Updating Location..");
    pDialog.setIndeterminate(false);
    pDialog.setCancelable(true);
    pDialog.show();
}

public void setView() {
    setTextColor((fullMode ? android.graphics.Color.WHITE : color));
    setGravity(Gravity.CENTER);
    setLayoutParams(new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
}

public static void readAnswers() {
    io.realm.RealmResults<io.mdevlab.ocatraining.model.Answer> answers = io.mdevlab.ocatraining.modelManager.AnswerManager.getAllAnswers();
    for (io.mdevlab.ocatraining.model.Answer answer : answers)
        android.util.Log.e(io.mdevlab.ocatraining.test.AnswerTest.TAG, answer.toString());
    
}

public static void restoreDefaultFont(android.content.Context context) {
    android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit().putString(context.getString(R.string.settings_change_font_key), context.getString(R.string.settings_change_font_default_value)).apply();
}

public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) {
    setDatePickerEditText(year, monthOfYear, dayOfMonth);
    selectedYear = year;
    selectedMonth = monthOfYear + 1;
    selectedDay = dayOfMonth;
}

public void onImageSearch(android.view.View v) {
    java.lang.String query = searchView.getQuery().toString();
    this.imageResults.clear();
    fetchSearchResults(query, 0, true);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    if ((item.getItemId()) == (android.R.id.home)) {
        com.arashpayan.util.L.i("onback");
        getActivity().onBackPressed();
        return true;
    }
    return false;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putString("tState", tView.getSaveState());
    outState.putString("selectedFilePath", tView.getSelectedFilePath());
}

private void checkPerm() {
    boolean hasPermission = (android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) == (android.content.pm.PackageManager.PERMISSION_GRANTED);
    if (!hasPermission) {
        android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, qwikstats.qwikcut.kerbysoft.com.qwikstats.MainActivity.REQUEST_WRITE_STORAGE);
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    configureImageButton1();
    configureImageButton2();
    configureImageButton3();
    configureImageButton4();
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    com.zzzmode.appopsx.ui.core.LangHelper.updateLanguage(getApplicationContext());
    super.onCreate(savedInstanceState);
    android.support.v7.app.AppCompatDelegate.setDefaultNightMode(com.zzzmode.appopsx.ui.core.SpHelper.getThemeMode(this));
}

protected void closeRealm() {
    if (((myRealm) != null) && (!(myRealm.isClosed()))) {
        myRealm.close();
        android.util.Log.d(com.zhan.budget.Fragment.BaseRealmFragment.TAG, "----- CLOSE REALM -----");
    }
}

protected void onPreExecute() {
    this.dialog = new android.app.ProgressDialog(this);
    this.dialog.setMessage("Please wait while finishing the installation...");
    this.dialog.show();
    dialog.setCanceledOnTouchOutside(false);
    dialog.setCancelable(false);
}

public static void display(final android.content.Context mContext, java.lang.String url, final android.widget.ImageView img) {
    com.bumptech.glide.Glide.with(mContext).load(url).placeholder(com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.placeHolderRes).error(com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.errorHolderRes).dontAnimate().into(img);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.cancel();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if (id == (R.id.action_settings)) {
        return true;
    }
    if (id == (R.id.saveCategory)) {
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public boolean onSelection(com.afollestad.materialdialogs.MaterialDialog dialog, android.view.View view, int which, java.lang.CharSequence text) {
    why[0] = text.toString();
    return true;
}

private void setPaymentInstallment() {
    if ((layoutInstallment.getVisibility()) == (android.view.View.VISIBLE)) {
        ((com.midtrans.sdk.uikit.activities.CreditCardFlowActivity) (getActivity())).setInstallment(installmentCurrentPosition);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    if (com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.DEBUG)
        android.util.Log.d(com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.TAG, "onCreate()");
    
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_jukebox_main);
    buildGoogleApiClient();
}

private void disconnectGoogleApiClient() {
    if ((googleApiClient) != null) {
        android.util.Log.d("google_api", "Disconnecting from google api");
        googleApiClient.disconnect();
    }
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    android.util.Log.d(com.byagowi.persiancalendar.view.AthanVolumePreference.TAG, ("volume: " + progress));
    com.byagowi.persiancalendar.view.AthanVolumePreference.audioManager.setStreamVolume(AudioManager.STREAM_ALARM, progress, 0);
}

@java.lang.Override
public void onSuccess(java.lang.String deviceId) {
    setStatus(("Device Registered Successfully " + deviceId), true);
    android.util.Log.i(com.ibm.hellopush.MainActivity.TAG, "Successfully registered for push notifications");
    push.listen(notificationListener);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.preferences);
    android.preference.PreferenceManager.setDefaultValues(getActivity(), R.xml.preferences, true);
    initSummary(getPreferenceScreen());
}

@java.lang.Override
public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture surface) {
    if ((resClient) != null) {
        resClient.stopPreview();
    }
    return true;
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    android.widget.Toast.makeText(this, "搜索", Toast.LENGTH_SHORT).show();
    return false;
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    android.util.Log.i(LOG_TAG, "on handle intent");
    startForeground(28373, buildForegroundNotification("Lankasri FM"));
    handleIntent(intent);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_send);
    textView = ((android.widget.TextView) (findViewById(R.id.full_json_data)));
    textView.setMovementMethod(new android.text.method.ScrollingMovementMethod());
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    if (container == null) {
        return null;
    }
    setHasOptionsMenu(true);
    return inflater.inflate(R.layout.activity_feed, null);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.kidoz.sdk.api.KidozSDK.initialize(this, "5", "i0tnrdwdtq0dm36cqcpg6uyuwupkj76s");
    setContentView(R.layout.activity_main);
    initFeedButton();
    initFeedPanel();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.nutricampus.app.activities.CadastrarPropriedadeActivity.class);
    startActivity(intent);
    this.finish();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putBoolean("hasLoaded", true);
    outState.putBoolean("hasInitializedFirstFragment", mHasInitializedFirstFragment);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    android.content.Intent i = new android.content.Intent(getApplicationContext(), com.example.thefe.newsmartkedex.PokemonDetails.class);
    i.putExtra("id", pokeID);
    startActivity(i);
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(isConnected)) {
        bluetoothHandler.scanLeDevice(true);
    }else {
        killService();
        unbindService(myConnection);
    }
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    mRevealView.setBackgroundColor(getResources().getColor(toColor));
    mRevealView.setVisibility(View.VISIBLE);
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    com.bas.tagger.Node node = nodes.get(position);
    android.widget.Toast.makeText(context, ("adding use to " + (node.uuid)), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onChange(boolean selfChange) {
    if (DebugLog.DEBUG)
        android.util.Log.d(edu.nd.darts.cimon.MMSInfoService.TAG, "MMSInfoService - MmsContentObserver: changed");
    
    getMmsData();
    performUpdates();
    super.onChange(selfChange);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    android.util.Log.i("seekBar val", progress);
}

@java.lang.Override
public void onClick(android.view.View v) {
    m.togglePeriodicLocationUpdates();
    if (!(m.mRequestingLocationUpdates)) {
        startLocationUpdatesButton.setText(getString(R.string.stop_location_updates_button));
    }else {
        startLocationUpdatesButton.setText(getString(R.string.start_location_updates_button));
    }
}

public com.x91tec.appshelf.v7.XDividerDecoration build(android.content.Context context) {
    checkParams(context);
    return new com.x91tec.appshelf.v7.XDividerDecoration(this);
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    if ((getActivity()) instanceof kamini.app.moviecollection.MovieDetailActivity) {
        inflater.inflate(R.menu.menu_detail, menu);
        finishCreatingMenu(menu);
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    mapView.refreshMap();
    listener.confirm();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    settings = new org.digitalillusion.droid.iching.utils.SettingsManager(getApplicationContext());
    dsHexSection = new org.digitalillusion.droid.iching.utils.sql.HexSectionDataSource(getApplicationContext());
    current = new org.digitalillusion.droid.iching.IChingActivityRenderer.CurrentState();
}

public static java.lang.String getPublicPath(android.content.Context context, android.net.Uri uri, java.lang.Long publicId) throws edu.mit.mobile.android.locast.data.NoPublicPath {
    return edu.mit.mobile.android.locast.data.MediaProvider.getPublicPath(context, uri, publicId, false);
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(org.secuso.privacyfriendlyweather.database.PFASQLiteHelper.CREATE_TABLE_CITIES);
    db.execSQL(org.secuso.privacyfriendlyweather.database.PFASQLiteHelper.CREATE_TABLE_FORECASTS);
    db.execSQL(org.secuso.privacyfriendlyweather.database.PFASQLiteHelper.CREATE_CURRENT_WEATHER);
    db.execSQL(org.secuso.privacyfriendlyweather.database.PFASQLiteHelper.CREATE_TABLE_CITIES_TO_WATCH);
    fillCityDatabase();
}

public void updateViews(com.darrienglasser.clockwork.AlarmData data) {
    android.util.Log.d("DGl", "Updating views...");
    mGridView.invalidateViews();
    ((com.darrienglasser.clockwork.AlarmAdapter) (mGridView.getAdapter())).updateData(data);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onConnectionFailed(com.google.android.gms.common.ConnectionResult connectionResult) {
    android.widget.Toast.makeText(getActivity(), ("Could not connect to Google API Client: Error " + (connectionResult.getErrorCode())), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onUndo(android.os.Parcelable parcelable) {
    org.wordpress.android.ui.reader.actions.ReaderBlogActions.undoBlockBlogFromReader(blockResult);
    refreshPosts();
}

@java.lang.Override
public void onFailGetPartyList(de.dhbw.model.Party[] parties) {
    android.widget.Toast.makeText(getActivity(), "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen.", Toast.LENGTH_SHORT).show();
    mSwipeRefreshLayout.setRefreshing(false);
}

public void CreateCategory(java.lang.String categoryName) {
    android.content.ContentValues values = new android.content.ContentValues();
    values.put(team5.diabetesself_managmentapp.DatabaseHelper.CATEGORY_NAME, categoryName);
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    db.insert(team5.diabetesself_managmentapp.DatabaseHelper.TABLE_CATEGORIES, null, values);
    db.close();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootLayout = inflater.inflate(R.layout.fragment_cht_identity_create, container, false);
    initViews(rootLayout);
    getActivity().getWindow().requestFeature(Window.FEATURE_ACTION_BAR);
    return rootLayout;
}

protected boolean checkInternetConnectivity() {
    if (!(com.thetidbitapp.util.InternetUtil.isOnline(mContext))) {
        android.widget.Toast.makeText(mContext, "Stahp, no internet.", Toast.LENGTH_LONG).show();
        return false;
    }
    return true;
}

public void signout(android.view.MenuItem item) {
    finish();
    session.logoutUser();
}

public void viewFish(android.view.View view) {
    android.util.Log.d(com.home.pete.aquarium.MainActivity.TAG, "Viewing my fish");
    setContentView(R.layout.activity_webview);
    startActivity(m_webview);
}

@java.lang.Override
public void load() {
    android.util.Log.i(org.oucho.mpdclient.fragments.AlbumSongsFragment.TAG, "load");
    getLoaderManager().restartLoader(0, null, mLoaderCallbacks);
}

public void cleanup() {
    commitPending();
    android.content.SharedPreferences globalPrefs = android.preference.PreferenceManager.getDefaultSharedPreferences(mContext);
    globalPrefs.unregisterOnSharedPreferenceChangeListener(this);
    mContext = null;
}

public void unsubscribeUpdates(com.example.jonathan.myapplication.GPSUpdate removeListener) {
    synchronized(this.notificationSetLock) {
        this.notificationSet.remove(removeListener);
        android.util.Log.d("GPS", (("Removing " + (removeListener.toString())) + " from GPS event listener pool."));
    }
}

protected void onDestroy() {
    com.example.devicechecker.ResultHandler handler = new com.example.devicechecker.ResultHandler(this);
    handler.removeResultFile();
    super.onDestroy();
    android.os.Process.killProcess(android.os.Process.myPid());
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    startActivity(new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS));
}

@java.lang.Override
public android.graphics.Bitmap onPreSetBitmap(android.widget.ImageView imageView, android.graphics.Bitmap loadedBitmap, java.lang.String url, boolean loadedFromCache) {
    android.util.Log.e("AAA", "Bitmap: onPreSetBitmap REGULAR");
    return loadedBitmap;
}

@java.lang.Override
protected void onLoad(android.os.Bundle savedInstanceState) {
    super.onLoad(savedInstanceState);
    this.getContacts.execute(new leonardo2204.com.br.flowtests.presenter.FirstScreenPresenter.GetContactsSubscriber(), new android.os.Bundle(0));
}

@java.lang.Override
public void setSurface(android.view.Surface surface) {
    android.util.Log.d(com.example.xwalkproxy.XWalkExoMediaPlayer.TAG, "==== in setSurface ");
    player.setSurface(surface);
    mVideoSizeChangedListener.onVideoSizeChanged(null, 640, 360);
    player.setSelectedTrack(0, ExoPlayer.TRACK_DEFAULT);
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    if ((oldState) && ((org.gtlp.yasb.SoundActivity.soundPlayerInstance) != null))
        org.gtlp.yasb.SoundActivity.soundPlayerInstance.start();
    
}

@java.lang.Override
public boolean onCreateActionMode(android.view.ActionMode mode, android.view.Menu menu) {
    android.util.Log.d(com.bruyu.imagewalker.LimitedGridActivity.TAG, ("try create action mode while inActionMode is " + (java.lang.Boolean.toString(inActionMode))));
    inActionMode = true;
    mode.setTitle("select items");
    return true;
}

private void updateRecipeData(com.example.android.bakingapp.data.RecipeData collection) {
    mRecipeData = collection;
    if ((mDetailFragment) != null) {
        mDetailFragment.setRecipeData(mRecipeData);
    }
}

@java.lang.Override
public void failure(retrofit.RetrofitError error) {
    android.widget.Toast.makeText(getApplication(), "retorfit erro freind", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public boolean updatePerson(net.hokiegeek.android.dondeestas.data.Person p) {
    android.util.Log.v(net.hokiegeek.android.dondeestas.datasource.DbSource.TAG, "updatePerson()");
    org.json.JSONObject resp = this.req(net.hokiegeek.android.dondeestas.datasource.DbSource.PATH_UPDATE_LOCATION, net.hokiegeek.android.dondeestas.Util.PersonToJson(p));
    return false;
}

@java.lang.Override
public void run() {
    notifyInterfaceClassActivity(type, DataConnectionRealTimeInfo.DC_POWER_STATE_HIGH, android.os.SystemClock.elapsedRealtimeNanos(), false);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main_menu);
    android.util.Log.d(msg, "listening");
    mainControls();
}

@java.lang.Override
public void onClick(android.view.View v) {
    floatingActionsMenu.collapse();
    getActivity().startActivity(shts.jp.android.nogifeed.utils.ShareUtils.getShareBlogIntent(blog));
}

public void deleteAllChannel() {
    long a = java.lang.System.currentTimeMillis();
    com.tcl.gc.popgrid.util.Db4oUtil.delAll(com.tcl.gc.popgrid.dao.CategoryItem.class);
    long b = (java.lang.System.currentTimeMillis()) - a;
    android.util.Log.e("yy", ("deleteAllChannel time:" + b));
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder holder) {
    try {
        if (!(mInitSuccesful))
            initRecorder(mHolder.getSurface());
        
    } catch (java.io.IOException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int choice) {
    switch (choice) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            itemPhoto.setImageResource(R.drawable.photo_placeholder);
            break;
        case android.content.DialogInterface.BUTTON_NEGATIVE :
            break;
    }
}

private java.lang.String getAlbumTitleWithYearAsPrefix(android.database.Cursor cursor) {
    java.lang.String albumTitleWithYear = cursor.getString(MyLibrary.IDX_ALBUM);
    int releaseYear = cursor.getInt(MyLibrary.IDX_YEAR);
    if (releaseYear > 0) {
        albumTitleWithYear += (releaseYear + " - ") + albumTitleWithYear;
    }
    return albumTitleWithYear;
}

@java.lang.Override
public void onClick(android.view.View view) {
    seatUpdateRefresh(view);
    dialog.dismiss();
}

@java.lang.Override
public void run() {
    notifyInterfaceClassActivity(params.type, DataConnectionRealTimeInfo.DC_POWER_STATE_LOW, android.os.SystemClock.elapsedRealtimeNanos(), true);
}

public void onProfileClick(android.view.MenuItem item) {
    android.content.Intent intent = new android.content.Intent(this, com.ravimandala.labs.chirp.activity.ProfileActivity.class);
    startActivity(intent);
}

public java.lang.String loadAvatarThumbnail(org.matrix.androidsdk.HomeserverConnectionConfig hsConfig, android.widget.ImageView imageView, java.lang.String url, int side) {
    return loadBitmap(imageView.getContext(), hsConfig, imageView, url, side, side, 0, ExifInterface.ORIENTATION_UNDEFINED, null, getThumbnailsFolderFile());
}

@java.lang.Override
public void call() {
    application.sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_BATTERY_CHANGED).putExtra(BatteryManager.EXTRA_PLUGGED, BatteryManager.BATTERY_PLUGGED_AC));
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    java.lang.System.out.println("---> save from Details");
    outState.putSerializable("currentVideo", video);
}

@java.lang.Override
public void callback(java.lang.String url, android.widget.ImageView iv, android.graphics.Bitmap bm, com.androidquery.callback.AjaxStatus status) {
    aq.id(iv).image(com.florianmski.tracktoid.Utils.shadowBitmap(com.florianmski.tracktoid.Utils.borderBitmap(bm, getActivity()))).animate(android.R.anim.fade_in);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    getSupportFragmentManager().putFragment(outState, "SavedFrag", mCurrentFragment);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.content.Intent intent = new android.content.Intent();
    setResult(com.myhitchhikingspots.RESULT_CANCELED, intent);
    finish();
}

@java.lang.Override
public void onCancel(android.view.View view, android.view.MotionEvent event) {
    com.heaven7.android.dragflowlayout.DragFlowLayout.sDebugger.i("onCancel", "------------->");
    releaseDragInternal();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    android.util.Log.i(deeplife.gcme.com.deeplife.DeepLife.TAG, "Application Started");
    deeplife.gcme.com.deeplife.DeepLife.mContext = this;
    deeplife.gcme.com.deeplife.DeepLife.myDATABASE = new deeplife.gcme.com.deeplife.Database.Database(this);
    myJobScheduler = me.tatarka.support.job.JobScheduler.getInstance(this);
    JobConstr();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putString(Constants.FILE_NAME, fileName);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    java.lang.String android_id = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
    ph.rateNap(l.id(), which, android_id);
}

@android.databinding.BindingAdapter(value = { "bind:layout_manager" })
public void setLayoutManager(final android.support.v7.widget.RecyclerView rv, final android.support.v7.widget.RecyclerView.LayoutManager lm) {
    if ((rv.getLayoutManager()) != null) {
        rv.setLayoutManager(lm);
    }
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) {
    android.widget.Toast.makeText(this.getActivity(), R.string.home_widget_change, Toast.LENGTH_SHORT).show();
    return true;
}

@java.lang.Override
public void setAdapter(android.widget.SpinnerAdapter adapter) {
    hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter(adapter, getContext());
    super.setAdapter(hintAdapter);
}

@java.lang.Override
public void onBackPressed() {
    isBackPress = true;
    android.util.Log.d(Utils.TAG, "====================== onBackPress ======================");
    if ((fragment) == null) {
        changeToPauseFragment();
        gcs.sendGameEvent("game_pause", new java.lang.String[]{  });
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    invalidateSavedGame();
    android.content.Intent intent = com.matthias.android.amginori.fragments.BoardFragment.newIntent(getActivity(), mLevel);
    startActivity(intent);
}

@java.lang.Override
public void onOffsetChanged(android.support.design.widget.AppBarLayout appBarLayout, int verticalOffset) {
    jLogger.e(verticalOffset);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    if ((this.language) != null) {
        outState.putInt("CURRENT_LANG", this.language.getId());
        super.onSaveInstanceState(outState);
    }
}

@java.lang.Override
public boolean onCreateOptionsMenu(final android.view.Menu menu) {
    enableLoginMenu(menu);
    return true;
}

@java.lang.Override
public void onRequestPermissionsResult(int requestCode, @android.support.annotation.NonNull
java.lang.String[] permissions, @android.support.annotation.NonNull
int[] grantResults) {
    com.nelson.api.PermissionsHandle.onRequestPermissionsResult(this, requestCode, permissions, grantResults);
}

private void makeLouderExplosion() {
    final android.media.MediaPlayer mp = android.media.MediaPlayer.create(this, R.raw.sunk);
    android.util.Log.v("Ship has been sunk", "Ka-baam");
    mp.start();
}

@java.lang.Override
public void onClick(android.view.View view) {
    dateTimeFragment = com.kunzisoft.switchdatetime.SwitchDateTimeDialogFragment.newInstance(getString(R.string.label_datetime_dialog), getString(android.R.string.ok), getString(android.R.string.cancel));
    setupDatetimeFragment();
    dateTimeFragment.show(getSupportFragmentManager(), com.kunzisoft.switchdatetimesample.Sample.TAG_DATETIME_FRAGMENT);
}

private void privateConstructor(android.content.Context context) {
    mMatrix.set(getImageMatrix());
    super.setScaleType(ScaleType.MATRIX);
    super.setLongClickable(false);
    setClickable(true);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.e(null, "Browse fragment onResume");
    andrzej.example.com.wordunscrambler.fragments.tabs.DictionariesFragment.otherWindowOpened = true;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mPresenter.checkAutoUpdateByUmeng();
    initRecycleView();
    setTitle(getString(R.string.app_name), false);
    mPresenter.checkVersionInfo();
    java.lang.String ste = "^*";
}

@java.lang.Override
protected void endStageEvent(it.playfellas.superapp.events.game.EndStageEvent event) {
    android.util.Log.d(it.playfellas.superapp.ui.slave.game3.Slave3Presenter.TAG, "------->EndStageEvent received by the Slave Presenter");
    slaveGame3Fragment.getConveyorUp().clear();
    this.pause();
}

public static boolean isExternalStorageWritable() {
    java.lang.String state = android.os.Environment.getExternalStorageState();
    if (Environment.MEDIA_MOUNTED.equals(state)) {
        return true;
    }
    return false;
}

void onScroll(app.ctrlyati.android.lazyquickreturn.QuickReturnHelper.Direction direction, float scrollY);

@com.facebook.react.bridge.ReactMethod
public java.lang.String version(@android.support.annotation.NonNull
com.facebook.react.bridge.Callback callback) {
    java.lang.String version = com.vwo.mobile.VWO.version();
    callback.invoke(version);
    return version;
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    if ((savedInstanceState != null) && (savedInstanceState.containsKey(edu.cuhk.bus.RouteListFragment.STATE_ACTIVATED_POSITION))) {
        setActivatedPosition(savedInstanceState.getInt(edu.cuhk.bus.RouteListFragment.STATE_ACTIVATED_POSITION));
    }
}

private int getPXWithDP(java.lang.Integer dp) {
    if (dp == null) {
        return 0;
    }
    return ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, context.getResources().getDisplayMetrics())));
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    this.tableLayout = ((android.widget.TableLayout) (this.getActivity().findViewById(R.id.budgetTable)));
    setDataOnTable(this.budgetEntities);
}

@java.lang.Override
protected void onPostResume() {
    super.onPostResume();
    com.nanitesol.drivethruconsumer.Misc.TrackConsumerService.orderid = orderId;
    startService(new android.content.Intent(getApplicationContext(), com.nanitesol.drivethruconsumer.Misc.TrackConsumerService.class));
}

private void setNumberInputType() {
    int inputType = android.text.InputType.TYPE_CLASS_NUMBER;
    if ((digsAfterDot) > 0) {
        inputType |= android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL;
    }
    setInputType(inputType);
    setFilters(new android.text.InputFilter[]{ new ru.softbalance.widgets.filters.NumberInputFilter(digsAfterDot, digsBeforeDot) });
}

@java.lang.Override
protected void onResume() {
    android.util.Log.i("Starting", tech.travis.poolpos.MainActivity.getMethodName());
    super.onResume();
    android.util.Log.i("Finished", tech.travis.poolpos.MainActivity.getMethodName());
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    onDrawReady = true;
    imageRenderedAtLeastOnce = true;
    if ((delayedZoomVariables) != null) {
        setZoom(delayedZoomVariables.scale, delayedZoomVariables.focusX, delayedZoomVariables.focusY, delayedZoomVariables.scaleType);
        delayedZoomVariables = null;
    }
    super.onDraw(canvas);
}

@java.lang.Override
public void onActivityStopped(android.app.Activity activity) {
    currentActivity = null;
    stopMonitoringLightLevels();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.app.FragmentTransaction ft = getFragmentManager().beginTransaction();
    fragString = com.kree.keehoo.yourcarinfo.DialogFragments.EditFieldFragment.newInstance(this, "carBrand");
    fragString.show(ft, "carModel");
    declineEdit();
}

public static void d(java.lang.String tag, java.lang.String msg) {
    if (daylemk.xposed.xbridge.utils.Log.debug) {
        daylemk.xposed.xbridge.utils.Log.xposedLog(tag, msg);
        android.util.Log.d(daylemk.xposed.xbridge.utils.Log.getFormattedTag(tag), msg);
    }
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(R.layout.fragment_opentime, container, false);
    android.widget.ImageView view = ((android.widget.ImageView) (rootView.findViewById(R.id.imageView1)));
    return rootView;
}

@java.lang.Override
public void onPause() {
    super.onPause();
    getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR);
    ((android.view.inputmethod.InputMethodManager) (getActivity().getSystemService(Context.INPUT_METHOD_SERVICE))).hideSoftInputFromWindow(emailRetv.getWindowToken(), 0);
}

private void createList() {
    example.kissanproject.ui.TabFragments.Fragment2.smsRecords = dbHelper.getAllToDos();
    dbHelper.closeDB();
    android.util.Log.e("error_dbinflate", java.lang.String.valueOf(example.kissanproject.ui.TabFragments.Fragment2.smsRecords.get(0).getmNumber()));
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (!hasFocus) {
        mActions.setVisibility(com.fiberlink.maas360.android.richtexteditor.GONE);
        blockAndDisableAllButtons();
    }else {
        mActions.setVisibility(com.fiberlink.maas360.android.richtexteditor.VISIBLE);
    }
}

@java.lang.Override
public void onAutoFocus(boolean b, android.hardware.Camera camera) {
    if (success) {
        camera.cancelAutoFocus();
    }
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, byte[] response, java.lang.Throwable error) {
    com.facebook.react.bridge.WritableMap responseMap = populateResponseData(statusCode, headers, response);
    cb.invoke(error.getMessage(), responseMap);
}

public void startButtonAction(android.view.View view) {
    for (android.widget.CheckBox check : checkBoxes)
        if (!(check.isChecked()))
            return ;
        
    
    android.content.Intent intent = new android.content.Intent(this, com.rizz.pdf.pdfsensing.FullscreenActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<java.lang.Void> task) {
    mCallbacks.searchingForChat();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    if ((item.getItemId()) == (android.R.id.home)) {
        finish();
        overridePendingTransition(R.anim.slide_up, R.anim.slide_down);
    }
    return super.onOptionsItemSelected(item);
}

boolean isPasswordValid(java.lang.String password) {
    return (android.text.TextUtils.isEmpty(password)) || ((password.length()) <= 8);
}

public static synchronized boolean addClockEntry(mine.android.api.modules.ClockEntry entry) {
    int newId = mine.android.api.ClockEntryAPI.getNextId();
    entry.setId(newId);
    mine.android.api.ClockEntryAPI.list.add(entry);
    mine.android.api.ClockEntryAPI.save();
    mine.android.api.AlarmAPI.activeClock(newId);
    return true;
}

@org.junit.Test
public void checkEmailField() {
    android.support.test.espresso.Espresso.onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.txtEmail)).perform(android.support.test.espresso.action.ViewActions.scrollTo()).perform(android.support.test.espresso.action.ViewActions.click());
}

@java.lang.Override
public void run() {
    finish();
    android.content.Intent intent = new android.content.Intent();
    intent.setClass(this, com.example.domjonathan.webviewteste.TalaUnicaActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState, android.os.PersistableBundle outPersistentState) {
    super.onSaveInstanceState(outState, outPersistentState);
    icepick.Icepick.saveInstanceState(this, outState);
}

private void removeUserFilter() {
    android.content.SharedPreferences preferences = getActivity().getPreferences(Activity.MODE_PRIVATE);
    android.content.SharedPreferences.Editor editor = preferences.edit();
    tech.niemandkun.domain.FilterSettings.deleteFromPreferences(editor);
    editor.apply();
}

@java.lang.Override
public void onChildViewRemoved(android.view.View parent, android.view.View child) {
    updateChildIndices();
}

private void startGame(int i) {
    android.util.Log.d(aditi.hangman.MainActivity.TAG, ("clicked on " + i));
    android.content.Intent intent = new android.content.Intent(this, aditi.hangman.Game.class);
    intent.putExtra(Game.KEY_CATEGORY, i);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (v == (buttonAddPatient)) {
        startActivity(new android.content.Intent(this, com.example.aa.electronicpatientscard.AddPatient.class));
    }
}

@java.lang.Override
public void onItemClicked(com.yannickschuchmann.peng.model.entities.User user) {
    android.content.Intent intent = new android.content.Intent(getContext(), com.yannickschuchmann.peng.app.views.activities.ProfileActivity.class);
    intent.putExtra("userId", user.id);
    startActivityWithAnimation(intent);
}

public void disconnectBle() {
    android.util.Log.v(TAG, "disconnectBle");
    mBleGatt.disconnect();
    mBleGatt = null;
}

public static void showNotify(android.content.Context context, android.app.PendingIntent pendingIntent) {
}

@java.lang.Override
public void onAutoFocus(boolean b, android.hardware.Camera camera) {
    sensorManager.registerListener(sensorEventListener, sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER), SensorManager.SENSOR_DELAY_NORMAL);
    android.util.Log.e("tag", "came");
}

public void setNewEdgeNotif() {
    android.util.Log.d("!edgehelper worked", "im ok with life");
    new corve.nohsedge.MainActivity().loadPreferences(true);
    new corve.nohsedge.MainActivity().activateEdgeHelper();
}

public static void checkBlacklist(android.app.Activity activity) {
    appaloosa_store.com.appaloosa_android_tools.tools.AppaloosaTools.getInstance().checkBlacklist(appaloosa_store.com.appaloosa_android_tools.Appaloosa.getStoreId(), appaloosa_store.com.appaloosa_android_tools.Appaloosa.getStoreToken(), activity);
}

private void saveImageUri(android.net.Uri imageUri) {
    preferences.edit().putString("imageUri", imageUri.toString()).apply();
}

@java.lang.Override
public void goWriteComment(java.lang.String comment) {
    android.content.Intent intent = new android.content.Intent(getActivity(), com.belatrixsf.allstars.ui.comment.CommentActivity.class);
    intent.putExtra(com.belatrixsf.allstars.ui.givestar.GiveStarFragment.COMMENT_KEY, comment);
    getActivity().startActivityForResult(intent, com.belatrixsf.allstars.ui.givestar.GiveStarFragment.RQ_COMMENT);
}

public void onClick(android.view.View v) {
    android.widget.ImageView image = ((android.widget.ImageView) (findViewById(R.id.editImageView)));
    image.setImageDrawable(null);
    deletePicture.setImageResource(android.R.color.transparent);
    bitmapImage = null;
}

public amagi82.modularcharactersheetcreator.entities.characters.Splat getSplat(int position) {
    android.util.Log.i("AxisFragment", ("getSplat - axisViewModel = " + (axisViewModel)));
    amagi82.modularcharactersheetcreator.entities.characters.Splat splat = axisViewModel.getList().get(position).getSplat();
    updateIfNotEndpoint(splat);
    return splat;
}

@java.lang.Override
public org.smartpaws.recycler.cards.CardDealer onCreateViewHolder(android.view.ViewGroup viewGroup, int i) {
    return new org.smartpaws.recycler.cards.CardDealer(android.view.LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.card_dealer, viewGroup, false), dealers[i]);
}

private void stopPreview() {
    android.util.Log.w(org.thoughtcrime.securesms.components.camera.CameraView.TAG, "stopPreview()");
    camera.startPreview();
    inPreview = false;
    getHost().autoFocusUnavailable();
    camera.stopPreview();
}

@java.lang.Override
public void config() {
    com.booboot.vndbandroid.util.SettingsManager.setUsername(this, null);
    com.booboot.vndbandroid.util.SettingsManager.setPassword(this, null);
    android.widget.Toast.makeText(this, message, Toast.LENGTH_LONG).show();
    enableAll();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mListener) != null)
        mListener.onClick();
    
}

@java.lang.Override
public void onTick(long millisUntilFinished) {
    android.util.Log.d("Autosave", ("time left: " + (millisUntilFinished - (historian.timeSinceChange))));
    editorActivity.setSaveStatusBar(false);
}

public void reflectSettings() {
    android.content.Context context = getApplicationContext();
    if (context != null) {
        setFontSize(com.app.strkita.measurenote.SettingPrefUtil.getFontSize(context));
        switchTheme(com.app.strkita.measurenote.SettingPrefUtil.isScreenReverse(context));
    }
}

private void changeFragment(android.support.v4.app.Fragment fragment) {
    getSupportFragmentManager().beginTransaction().addToBackStack(fragment.getTag()).replace(R.id.container, fragment).commit();
}

@java.lang.Override
public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) {
    android.util.Log.v(edu.uw.samueldc.assassin_manager.MainActivity.TAG, ("users: " + (dataSnapshot.getValue())));
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putLong(org.dvbviewer.controller.ui.fragments.EpgPager.KEY_GROUP_ID, mGroupId);
    outState.putLong(ChannelPager.KEY_GOUP_INDEX, mGroupIndex);
    outState.putInt(org.dvbviewer.controller.ui.fragments.EpgPager.KEY_CHANNEL_INDEX, mPager.getCurrentItem());
}

@java.lang.Override
public void onAnimationStart(android.view.animation.Animation animation) {
    mPager.setClickable(false);
}

public static java.lang.String getKeyString(java.lang.String key) {
    android.content.SharedPreferences sharedPref = com.krkeco.dateit.PrefHelper.context.getSharedPreferences("dateit", Context.MODE_PRIVATE);
    java.lang.String host = sharedPref.getString(key, null);
    com.krkeco.dateit.PrefHelper.log(("host is: " + host));
    return host;
}

private void init() {
    tabLayout = ((android.support.design.widget.TabLayout) (findViewById(R.id.tabs)));
    viewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.add_view_pager)));
}

public static void inflateCastMemberFragment(android.support.v4.app.FragmentActivity activity, com.ae.curtain.model.CastMemberListItem castMemberListItem) {
    com.ae.curtain.helper.ViewInflater.inflatePlayFragment(activity, castMemberListItem.getId());
}

@java.lang.Override
public void onEnabled(android.content.Context context) {
    super.onEnabled(context);
    android.util.Log.d("WIDGET", "onEnabled");
}

public static <T extends java.lang.Object> T getCastData(java.lang.String key, android.os.Bundle dataStore) {
    if (!(dataStore.containsKey(key))) {
        return null;
    }
    return ((T) (dataStore.get(key)));
}

@java.lang.Override
public void onResume() {
    super.onDestroy();
    android.util.Log.i(com.playxiangqi.hoxchess.MainActivity.PlaceholderFragment.TAG, "onResume...");
    com.playxiangqi.hoxchess.MainActivity activity = ((com.playxiangqi.hoxchess.MainActivity) (getActivity()));
    activity.onBoardViewResume(activity);
}

@java.lang.Override
protected java.lang.Void doInBackground(java.lang.Void... voids) {
    android.util.Log.d(com.ashomok.imagetotext.sign_in.social_networks.silent_login.SilentSignInAsyncTask.TAG, "SilentSignInAsyncTask called");
    weakLoginManager.get().trySignInAutomatically();
    return null;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent().addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    intent.setClass(this, cn.y1n9k17.emergencycalldialer.MainActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    getLoaderManager().initLoader(com.example.jamie.popularmovies.fragments.MainMovieFragment.MAIN_MOVIE_LOADER, null, this);
    com.example.jamie.popularmovies.fragments.MainMovieFragment.mPosition = getActivity().getIntent().getIntExtra(MovieContract.MovieEntry.POSITION, 0);
    super.onActivityCreated(savedInstanceState);
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    android.util.Log.d(askim.eratactics.activities.TacticsGame.TAG, "STOP");
    if (playMusic)
        mBackgroundSound.end();
    
}

public boolean addEpisode(@android.support.annotation.NonNull
org.bottiger.podcast.provider.IEpisode argEpisode, boolean argSilent) {
    if ((mEpisodes.indexOf(argEpisode)) > 0)
        return false;
    
    mEpisodes.add(argEpisode);
    if (!argSilent)
        notifyEpisodeAdded(true);
    
    return true;
}

@java.lang.Override
public int getCount() {
    android.util.Log.d("Get Count Two: ", java.lang.String.valueOf(movieUrls.size()));
    return movieUrls.size();
}

private void onRequestComplete(com.google.protobuf.RpcController controller) {
    se.qxx.android.tools.ResponseMessage msg = checkResponse(controller);
    if ((this.getListener()) != null)
        this.listener.onRequestComplete(msg);
    
}

@java.lang.Override
public void onDestroy() {
    audioManager.unregisterMediaButtonEventReceiver(new android.content.ComponentName(this, com.github.guwenk.smuradio.PlayerService.RemoteControlReceiver.class));
    updateUI(null);
    super.onDestroy();
}

@java.lang.Override
public void onClick(android.view.View v) {
    firstLoad = true;
    processLoadQuestion(eventId, userid);
}

public static int mercatorE7ToLatE7(final int mer) {
    return ((int) ((de.blau.android.util.GeoMath.mercatorToLat((mer / 1.0E7))) * 1.0E7));
}

public float computeDistanceFrom(android.location.Location other) {
    return ((float) ((other.distanceTo(mLocation)) / 1000.0));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_what_is);
    toolbarSetUpCase();
    logo = ((android.widget.ImageView) (findViewById(R.id.pouce_logo)));
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(this, errorMessage, Toast.LENGTH_SHORT).show();
    inviteParticipants(room, participants, (index + 1));
}

public static boolean isMessageFromMe(@android.support.annotation.NonNull
com.nethergrim.vk.models.Message message) {
    return (message.getOut()) == 1;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    if (((player) != null) && (player.isPlaying())) {
        outState.putInt(ru.korsander.tedrss.fragment.VideoFragment.POSITION, player.getCurrentPosition());
    }
}

@java.lang.Override
public void onItemClick(android.view.View view, int postion) {
    android.widget.Toast.makeText(getActivity(), ("click --" + postion), Toast.LENGTH_SHORT).show();
}

public static android.graphics.Bitmap getBitmapFromUrl(java.lang.String imageUrl, int readTimeOut) {
    return cn.trinea.android.common.util.ImageUtils.getBitmapFromUrl(imageUrl, readTimeOut, null);
}

public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) {
    ((android.preference.EditTextPreference) (preference)).setSummary(newValue.toString());
    return true;
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    android.content.Intent intent = new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
    intent.addCategory(Intent.CATEGORY_DEFAULT);
    startActivityForResult(intent, sk.henrichg.phoneprofilesplus.PhoneProfilesPreferencesNestedFragment.RESULT_LOCATION_SYSTEM_SETTINGS);
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    rename(file);
    dismissQuickActions(actionMenu);
}

public android.net.Uri getImageUriFromPosition(int position) {
    return photoData[position].getImageUri();
}

public void enableSpinButton() {
    android.widget.ImageView spinButton = ((android.widget.ImageView) (getActivity().findViewById(R.id.logo_icono)));
    spinButton.setEnabled(true);
    dialer.setEnabled(false);
}

public android.net.wifi.WifiConfiguration getWifiApConfiguration() {
    try {
        wifiApConfigurationMethod.setAccessible(true);
        return ((android.net.wifi.WifiConfiguration) (wifiApConfigurationMethod.invoke(mWifiManager, null)));
    } catch (java.lang.Exception e) {
        return null;
    }
}

public void stopMainService(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, www.app.remindme.com.remindme.MainServices.class);
    stopService(intent);
}

public static java.lang.String getAllContent(java.lang.String content) {
    java.lang.String result = android.jiang.com.library.utils.HttpUtils.getXSSContent(content);
    return android.jiang.com.library.utils.HttpUtils.getContent(result);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putLong(com.tahutelorcommunity.bakingapp.ui.ExoPlayerFragment.POSITION_BUNDLE_KEY, mExoplayer.getCurrentPosition());
}

public static void insertChild(java.lang.String name, java.lang.String photo) {
    com.raizlabs.android.dbflow.sql.language.SQLite.insert(com.example.a1.projecttest.Entities.ChildEntity.class).columns("name", "photo", "selected").values(name, photo, View.GONE).execute();
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<java.util.ArrayList<com.example.oluwatimilehin.moviebuff.Movies>> loader) {
    movies.clear();
    loader.forceLoad();
}

@java.lang.Override
public void onHourSelected(int mHour) {
    hourSelected = mHour;
    hour.add(hourSelected);
    for (int hours : hour) {
        android.util.Log.i("Hours: ", java.lang.String.valueOf(hour));
    }
}

@java.lang.Override
public void showData(java.util.List<com.pratilipi.mobile.android.datafiles.Pratilipi> pratilipiList) {
    mRecentReadsAdapter.addItems(pratilipiList);
    hideProgressIndicator();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.select_picture :
            openGallery();
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    initView(mView);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    if (location != null) {
        updateLocation(location);
    }else {
        mListener.onLocationFailed();
    }
    LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, this);
}

public void onRegistrationSuccess() {
    com.taibah.busservice.utils.Helpers.closeKeyboard(getActivity(), etDriverContactNumber.getWindowToken());
    android.widget.Toast.makeText(getActivity(), "Registration successful", Toast.LENGTH_SHORT).show();
    getActivity().onBackPressed();
}

public void setEpisodesWatched(int episodes_watched_value) {
    if ((episodes_watched) == null)
        episodes_watched = ((android.widget.TextView) (findViewById(R.id.episodes_watched)));
    
    episodes_watched.setText(episodes_watched_value);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    android.content.Intent i = new android.content.Intent(this, demo.kolorob.kolorobdemoversion.activity.PlaceChoiceActivity.class);
    startActivity(i);
    dialog.dismiss();
    finish();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_maintabs);
    super.onCreate(savedInstanceState);
    fragmentManager = getFragmentManager();
    setTabSelection(0);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    setContentView(R.layout.knapp_test);
}

@java.lang.Override
public void onbindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder holder, int position) {
    com.stickheaderlayout.simple.RecyclerViewSimpleActivity.RecyclerAdapter.RecyclerItemViewHolder viewHolder = ((com.stickheaderlayout.simple.RecyclerViewSimpleActivity.RecyclerAdapter.RecyclerItemViewHolder) (holder));
    viewHolder.tvTitle.setText(mItemList.get((position - 1)));
}

@java.lang.Override
protected void onStop() {
    if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        mLocationManager.removeUpdates(this);
    }
    super.onStop();
}

private void showSystemControls() {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) {
        getActivityView().setSystemUiVisibility((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)));
    }
}

private void closeConnection() {
    for (android.os.AsyncTask current : threadList) {
        if (current.isCancelled())
            current.cancel(true);
        
    }
    s.close();
    multicastLock.release();
}

public void setActivityContext(android.content.Context ctx) {
    mActivityContext = ctx;
    if ((mButler) == null) {
        mButler = new me.makeachoice.movies.controller.butler.MovieButler(mActivityContext, this);
    }
}

public com.danimahardhika.cafebar.CafeBar.Builder customView(@android.support.annotation.LayoutRes
int res) {
    mCustomView = android.view.View.inflate(mContext, res, null);
    return this;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    ((cunycodes.parkmatch.MapsActivity) (getActivity())).startPlacePickerActivity();
}

public void initToolbar() {
    android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar)));
    setSupportActionBar(toolbar);
    assert (getSupportActionBar()) != null;
    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    task = new com.commonsware.android.constants.ConstantsBrowser.LoadCursorTask();
    task.execute();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mPage = getArguments().getInt(com.nathanromike.yes_you_can.ui.GuideListFragment.ARG_PAGE);
    getGuides(Constants.ELECTRONIC);
}

@java.lang.Override
public void onNetworkDisconnected() {
    android.util.Log.e("Network", "Network DISSSSSS");
    android.widget.Toast.makeText(this, "Disconnected", Toast.LENGTH_SHORT).show();
}

private void bindViews() {
    mLayoutRoot = ((android.widget.RelativeLayout) (findViewById(R.id.gv_root)));
    mFragment = ((net.gini.android.vision.camera.CameraFragmentCompat) (getSupportFragmentManager().findFragmentById(R.id.gv_fragment_camera)));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
}

public void run() {
    buttonStop.setEnabled(false);
    buttonUpload.setEnabled(false);
    buttonDownload.setEnabled(false);
    buttonRun.setEnabled(false);
    android.widget.Toast.makeText(this, "Begin Download", Toast.LENGTH_LONG).show();
}

public com.random.anim.RandomTextHelper.RandomSavedState createFromParcel(final android.os.Parcel in) {
    return new com.random.anim.RandomTextHelper.RandomSavedState(in);
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    if ((mOnItemClickListener) != null) {
        int position = holder.getAdapterPosition();
        return mOnItemLongClickListener.onItemOnLongClick(v, mDataList.get(position), position);
    }
    return false;
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics());
    com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true);
    com.example.gek.pizza.data.AllDishes.getInstance();
}

public void onDestroy() {
    request = null;
    super.onDestroy();
    android.util.Log.d("BugWithService:ServiceDestroy", "ServiceDestroy");
}

@java.lang.Override
public void onAlways(org.jdeferred.Promise.State state, org.json.JSONArray resolved, com.androidquery.callback.AjaxStatus rejected) {
    restore();
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<android.database.Cursor> loader) {
    android.util.Log.d("Ziolle", "onLoaderReset");
    mForecastAdapter.swapCursor(null);
}

@java.lang.Override
public byte[] getBody() throws com.android.volley.AuthFailureError {
    return bodyContent.getBytes();
}

@java.lang.Override
public void onClick(android.view.View view) {
    changeNavigationHeader(((android.widget.TextView) (findViewById(R.id.tvNavHeader))).getText().toString());
    popBackStack();
    if (shouldShowLogo()) {
        setUpInitStateOfMenu();
    }
}

@java.lang.Override
public int getItemCount() {
    return com.ngynstvn.android.blocspot.BlocspotApplication.getSharedDataSource().getCategoryList().size();
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    if (me.ccrama.redditslide.SettingValues.swap) {
        doOnClick(holder, comment, baseNode);
    }else {
        doLongClick(holder, comment, baseNode, finalPos, finalPos1);
    }
    return true;
}

@java.lang.Override
public void failure(retrofit.RetrofitError error) {
    showProgress(false);
    android.widget.Toast.makeText(context, error.getMessage(), Toast.LENGTH_LONG).show();
    assignButton.setEnabled(true);
}

@java.lang.Override
public void onClick(android.view.View view) {
    nextopic.com.nextopic.UI.DatePickerFragment datePicker = new nextopic.com.nextopic.UI.DatePickerFragment();
    datePicker.show(getSupportFragmentManager(), ((TAG) + "2"));
}

private static android.content.Intent cloneIntent(android.content.Intent src) {
    return uk.co.ashtonbrsc.intentexplode.Explode.cloneIntent(uk.co.ashtonbrsc.intentexplode.Explode.getUri(src));
}

public void insertArtistCV(android.content.ContentValues values) {
    insertArtistCV(helper.getWritableDatabase(), values);
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(C.getApplicationContext(), e.toString(), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onResponse(org.json.JSONObject response) {
    if ((mListener) != null) {
        mProgressDialog.cancel();
        org.wordpress.android.analytics.AnalyticsTracker.track(AnalyticsTracker.Stat.LOGIN_MAGIC_LINK_REQUESTED);
        mListener.onMagicLinkSent();
    }
}

void uploadAttach(android.net.Uri uri) {
    int size = com.xfrocks.api.androiddemo.App.getFeatureAttachmentResize();
    if (size > 0) {
        attemptResize(uri, size);
    }else {
        uploadAttach(uri, uri.getPath(), null);
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    android.util.Log.d(com.zhan.budget.Fragment.AccountFragment.TAG, "onCreate");
}

@java.lang.Override
public int getCount() {
    android.util.Log.d(Constant.TAG, ("mList.size:" + (mList.size())));
    return mList.size();
}

@java.lang.Override
public void onBackPressed() {
    super.onBackPressed();
    android.widget.Toast.makeText(getBaseContext(), "Press once again to exit!", Toast.LENGTH_SHORT).show();
}

public static android.graphics.Bitmap getBitmapFromBlob(byte[] blob) {
    return android.graphics.BitmapFactory.decodeByteArray(blob, 0, blob.length);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d("MainActivity", "onresume called");
    new com.edsapps.weather.MainActivity.HttpAsyncTask(this, "Fetching forecast").execute();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent arg1) {
    if (com.tropicgame.data.HelperFactory.getObjectsHelper().getProfileOfShowHelper().getProfileOfShow().isBoxReboot())
        com.tropicgame.common.Utils.AutoStartShow(context);
    
}

public void onClick(android.view.View V) {
    hY.setTextSize((size -= 5));
}

@java.lang.Override
public void onClick(android.view.View view) {
    switch (view.getId()) {
        case R.id.button :
            break;
        case R.id.send :
            byte[] message = "this is a test".getBytes();
            mChatService.write(message);
            break;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    zenTimer.cancel();
    viewFlipper.showNext();
    timePicker.setCurrentHour(0);
    timePicker.setCurrentMinute(0);
}

public byte[] getBody() {
    return android.util.Base64.decode(body, Base64.NO_WRAP);
}

@java.lang.Override
void setFont(final com.codename1.impl.android.CodenameOneTextPaint font) {
    super.setFont(font);
}

public void deleteIngredientMeasures(long id) {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    db.delete(com.example.caitlin.cookhelper.database.DatabaseHandler.TABLE_INGREDIENT_MEASURES, ((com.example.caitlin.cookhelper.database.DatabaseHandler.KEY_INGREDIENT_MEASURE_RECIPE) + " =?"), new java.lang.String[]{ java.lang.String.valueOf(id) });
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    ((com.standapp.common.BaseActionBarActivity) (getActivity())).inject(this);
}

@java.lang.Override
public void onAnimationUpdate(android.animation.ValueAnimator valueAnimator) {
    float progress = ((float) (valueAnimator.getAnimatedValue()));
    android.util.Log.e("angcyo", ("progress-->" + progress));
    updateClipPath(((clipStartRadius) + progress));
}

@android.support.annotation.Nullable
public java.lang.String getGender() {
    return (gender) == null ? "" : gender;
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.e(getClass().toString(), "OnResume");
}

public static com.example.miljanrakita.shoppingapplication.Fragments.DialogFragments.AddProductDialogFragment getStartIntent(java.lang.String parentId) {
    com.example.miljanrakita.shoppingapplication.Fragments.DialogFragments.AddProductDialogFragment intent = new com.example.miljanrakita.shoppingapplication.Fragments.DialogFragments.AddProductDialogFragment();
    android.os.Bundle args = new android.os.Bundle();
    args.putString(com.example.miljanrakita.shoppingapplication.Util.Constants.ADD_PRODUCT_PARENT_ID_KEY, parentId);
    intent.setArguments(args);
    return intent;
}

@java.lang.Override
protected void onPrepareDialog(int id, android.app.Dialog dialog) {
    for (net.osmand.plus.activities.DialogProvider dp : dialogProviders) {
        dp.onPrepareDialog(id, dialog);
    }
}

@java.lang.Override
public void onLoadMore(int page, final int totalItemsCount, android.support.v7.widget.RecyclerView view) {
    mNetManager.downloadArticles(page, false, com.android.casopisinterfon.interfon.model.Category.getCategory(mFragPosition));
}

public void onTimeSet(android.widget.TimePicker view, int shour, int smin) {
    chosenHour = shour;
    chosenMinute = smin;
    chooseTime();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    org.bcss.collect.android.bcss_utilities.ToastUtils.showLongSafe("Site deletion is disabled");
    deleteSelectedSites();
    disableActionMode();
}

public void deleteItem(com.codepath.simpletodo.Item item) {
    com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite.select().from(com.codepath.simpletodo.Item.class).where(Item_Table.id.eq(item.id)).querySingle();
    deletedItem.delete();
}

public void onClick(android.view.View v) {
    android.content.Intent intent = getIntent();
    intent.putExtra("page", v.getId());
    setResult(Activity.RESULT_OK, intent);
    finish();
}

private void saveRecord() {
    android.util.Log.d(com.han.will.pushup.view.PushUpFragment.TAG, ("saveRecord: mTimes = " + (mTimes)));
    mPushUpPresenter.saveRecord(mUid, mName, mTimes);
}

public void finishActivity(android.app.Activity activity) {
    if (activity != null) {
        de.mpg.mpdl.labcam.code.common.AppManager.activityStack.remove(activity);
        activity.finish();
        activity = null;
    }
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    switch (position) {
        case 0 :
            timeSig = 3;
            break;
        case 1 :
            timeSig = 4;
            break;
    }
}

public void start_voicecall(java.lang.Boolean SS) {
    android.content.Intent intent = new android.content.Intent(this, com.rm.flashinglight.Text_to_speech.class);
    if (SS) {
        this.startService(intent);
    }else {
        this.stopService(intent);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    new com.verizon.mvyas.verizonproject.TagListActivity.LoadDataTask().execute(context);
    adapter.resetSelectedTags();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v7.app.AlertDialog.Builder number_of_tries_help_dialog_builder = new android.support.v7.app.AlertDialog.Builder(getActivity());
    number_of_tries_help_dialog_builder.setMessage(R.string.circular_floating_action_menu_mit_license).create().show();
}

@java.lang.Override
protected void onRestart() {
    android.app.Fragment frag = getFragmentManager().findFragmentByTag("services");
    if (frag != null) {
        getFragmentManager().beginTransaction().remove(frag).commit();
    }
}

public final void destroy() {
    animViewList.clear();
    animDisposable.dispose();
    animDisposable = null;
    animObservableList.clear();
    prevScrollEvent = tech.thdev.androidrecyclerview.view.scroll.anim.OnRecyclerScrollListener.SCROLL_NONE;
}

@java.lang.Override
public void protocolDidReceivePinMode(int pin, int mode) {
    android.util.Log.e(TAG, ((("protocolDidReceivePinMode - pin: " + pin) + "\tmode: ") + mode));
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    mMap.clear();
    showLocation(location);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int i, boolean b) {
    if (((mediaPlayer) != null) && b) {
        mediaPlayer.seekTo(i);
        pauseLength = mediaPlayer.getCurrentPosition();
    }
}

public void onClick(android.content.DialogInterface dialog, int which) {
    if ((mListener) != null) {
        assignAllValuesToCalendar();
        mListener.onPositiveButtonClick(dateTimeCalendar.getTime());
    }
}

public void drawBackground(android.graphics.Canvas canvas) {
    if ((mAmbient) && ((!(mLowBitAmbient)) || (mBurnInProtection))) {
        canvas.drawColor(Color.BLACK);
    }else {
        canvas.drawColor(mCenterCircleColor);
    }
}

private void gotoMainScreen() {
    progressDialog.hide();
    getActivity().startActivity(new android.content.Intent(getContext(), com.sven.ou.module.lol.activities.MainViewActivity.class));
    getActivity().finish();
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    mBeerListAdapter.swapCursor(data);
    if ((mPosition) != (android.widget.ListView.INVALID_POSITION)) {
        mBeerListView.smoothScrollToPosition(mPosition);
    }
    loadingMore = false;
    mBeers = "Check out all these awesome beers that I found on this cool new app, BREWSKI.";
}

@java.lang.Override
public void onClick(android.view.View v) {
    pickNewSong();
    Globals.playlistArray.add(new angelhack.seattle.soundhop.SongItem(angelhack.seattle.soundhop.MainActivityFragment.generateID(), angelhack.seattle.soundhop.MainActivityFragment.generateID(), 500));
    angelhack.seattle.soundhop.MainActivityFragment.playlistAdapter.notifyDataSetChanged();
}

public int getVersionCode() {
    int versionCode = 0;
    android.content.pm.PackageInfo info = getPackageInfo();
    if (info != null) {
        versionCode = info.versionCode;
    }
    return versionCode;
}

public com.sbxcloud.android.sbxcloudsdk.query.SbxQueryBuilder filterWhereIsEqual(java.lang.String field, java.lang.Object value) throws java.lang.Exception {
    this.find.setReferenceJoin(com.sbxcloud.android.sbxcloudsdk.query.SbxQueryBuilder.OP.EQ, this.field, this.referenceField, this.referenceModel, value);
    return this.find;
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(edu.gatech.cs2340.willcode4money.shoppingwithfriends.databases.DatabaseStrings.ReportStrings.CREATE_TABLE);
}

@java.lang.Override
public void onLocationStoppedSeeking() {
    android.widget.Toast.makeText(mActivity, "Tracking stopped", Toast.LENGTH_SHORT).show();
    android.util.Log.d("LOCATION", "Tracking stopped");
    com.unity3d.player.UnityPlayer.UnitySendMessage("LOCATIONCHECKER", "OnLocationStoppedSeeking", "");
}

@java.lang.Override
public java.lang.Boolean call(com.google.gson.JsonObject jsonObject) {
    android.util.Log.d("sfparks parksModule", "about to filter 1");
    return !((jsonObject == null) || ((jsonObject.get(com.sfparks.model.ParksModule.LOCATION_1)) == null));
}

@java.lang.Override
public void onClickItem(android.view.View v, int position) {
    android.content.Intent intent = new android.content.Intent(this, com.abyx.loyalty.activities.CardActivity.class);
    intent.putExtra(Constants.INTENT_CARD_ID_ARG, originalData.get(position).getID());
    startActivity(intent);
}

@java.lang.Override
public void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener newOnDoubleTapListener) {
    if (newOnDoubleTapListener != null)
        this.mGestureDetector.setOnDoubleTapListener(newOnDoubleTapListener);
    else
        this.mGestureDetector.setOnDoubleTapListener(new io.togoto.imagezoomcrop.photoview.DefaultOnDoubleTapListener(this));
    
}

public static com.tomeokin.lspush.common.SMSCaptchaUtils init(android.content.Context context, java.lang.String smsId, java.lang.String smsKey) {
    if ((com.tomeokin.lspush.common.SMSCaptchaUtils.sInstance) == null) {
        com.tomeokin.lspush.common.SMSCaptchaUtils.sInstance = new com.tomeokin.lspush.common.SMSCaptchaUtils(context, smsId, smsKey);
    }
    return com.tomeokin.lspush.common.SMSCaptchaUtils.sInstance;
}

public static void updateViewWithCameraMaskValue(android.widget.ImageView view, com.omikronsoft.whatsthatcolor.component.CameraMask cameraMask, int value) {
    view.setImageBitmap(cameraMask.getMaskBitmap(value));
    com.omikronsoft.whatsthatcolor.utility.ViewUtility.viewLastUpdate.put(view, org.joda.time.DateTime.now());
}

public android.graphics.Paint getPaintColorFromUserId(java.lang.String userId) {
    return net.aboutgoods.remotedrawing.helper.PaintHelper.createPaintFromRGB(mUserList.get(userId));
}

private java.util.List<com.tdp2.androidclient.activity.BaseDrawerActivity.MenuEntry> getStartMenuEntries() {
    return com.google.common.collect.ImmutableList.of(buildHomeMenuEntry(), buildWallMenuEntry(), buildMapMenuEntry(), buildContactListMenuEntry());
}

@java.lang.Override
protected void drawValue(android.graphics.Canvas c, float val, float xPos, float yPos, com.github.mikephil.charting.utils.ValueFormatter formatter) {
    super.drawValue(c, val, xPos, (yPos + (mYOffset)), formatter);
}

@java.lang.Override
public void onRevMobRewardedVideoFinished() {
    android.util.Log.d(com.cranberrygame.cordova.plugin.ad.revmob.RevMobPluginOverlap.LOG_TAG, java.lang.String.format("%s", "onRevMobRewardedVideoFinished"));
    org.apache.cordova.PluginResult pr = new org.apache.cordova.PluginResult(PluginResult.Status.OK, "onRewardedVideoAdHidden");
    pr.setKeepCallback(true);
    plugin.getCallbackContextKeepCallback().sendPluginResult(pr);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle savedInstanceState) {
    super.onSaveInstanceState(savedInstanceState);
    savedInstanceState.putString(Constants.SavedInstanceState.Characters.LAST_ITEM_SEARCHED, java.lang.String.valueOf(searchView.getQuery()));
}

@java.lang.Override
public android.app.Fragment getItem(int position) {
    mCursor.moveToPosition(position);
    return com.example.xyzreader.ui.ArticleDetailFragment.newInstance(mCursor.getLong(ArticleLoader.Query._ID));
}

@java.lang.Override
public void onClick(android.view.View view) {
    new net.alhazmy13.hijridatepicker.HijriCalendarDialog.Builder(this).setOnDateSetListener(this).setMinMaxHijriYear(1430, 1450).setMinMaxGregorianYear(2013, 2020).setUILanguage(HijriCalendarDialog.Language.English).setMode(HijriCalendarDialog.Mode.Hijri).show();
}

public static int timeBetweenInDays(long prevDate) {
    long diff = (java.lang.System.currentTimeMillis()) - prevDate;
    diff /= android.text.format.DateUtils.DAY_IN_MILLIS;
    return ((int) (diff));
}

@java.lang.Override
public void onDrawerStateChanged(int newState) {
    android.util.Log.v("Sokolov", ("onDrawerStateChanged " + newState));
}

@java.lang.Override
protected void onPause() {
    android.util.Log.d(com.cross.CrossActivity.TAG, "onPause");
    super.onPause();
    if (com.cross.CrossActivity.cross_initialized) {
        com.cross.CrossActivity.cross.Suspend();
        renderer.onPause();
    }
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    setupProfilePicture(view);
    setupButton(view);
    setupLoginButton(view);
    setupMessageText(view);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    int userDays = java.lang.Integer.parseInt(userDaysNumber);
    clearChart();
    searchSingleCurrencyLastRates(singleCurrencyCode, userDays, singleMidRate);
    android.util.Log.d(com.example.android.currencyobserver.ChartActivity.LOG_TAG, java.lang.String.valueOf(userDays));
}

@java.lang.Override
public void onClick(android.view.View view) {
    changeToolbar(null, 1);
    setParams(0);
    isInflate = true;
}

public void launch(android.view.View view) {
    android.util.Log.d(com.vibejukebox.jukebox.activities.MusicParameterActivty.TAG, " Start Playlist Launch ");
    if (mIsArtistRadio)
        requestArtistRadio();
    else
        requestVibedPlaylist();
    
}

@org.mozilla.gecko.annotation.WrapForJNI
public org.mozilla.gecko.media.HlsVideoInfo GetVideoInfo(int trackNumber) {
    if (org.mozilla.gecko.media.GeckoHlsSampleGetter.DEBUG)
        android.util.Log.d(org.mozilla.gecko.media.GeckoHlsSampleGetter.LOGTAG, "[HasTrackType]");
    
    vInfo = new org.mozilla.gecko.media.HlsVideoInfo();
    return vInfo;
}

public void validateInput(android.view.View v) {
    listener.onTextNameChanged(getPosition(), etNameInput);
}

public void onClickTrim(android.view.View view) {
    isRunning = false;
    sendCommand(de.hhn.munz.ardrone2.ATCommand.trim(), false);
}

protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (mHelper.handleActivityResult(requestCode, resultCode, data)) {
        return ;
    }
}

@java.lang.Override
public void onPause() {
    super.onPause();
    trinityconnect.android.bignerdranch.com.trinityconnect.EventLab.get(getActivity()).updateEvent(mEvent);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    if (fromUser && ((mProgressAnimator) != null)) {
        mProgressAnimator.cancel();
        mProgressAnimator = null;
    }
}

public void drawCard(com.aause2s15.gruppe3.cheatingandroid.CardDeck cardDeck) {
    cardDeck.drawTopCard();
    com.aause2s15.gruppe3.cheatingandroid.Card currentCard = cardDeck.drawTopCard();
    this.playerCards.add(currentCard);
    this.sortPlayerCards();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent serviceUpdateIntent = new android.content.Intent(getApplicationContext(), com.wojtechnology.sunami.TheBrain.class);
    serviceUpdateIntent.setAction(TheBrain.UPDATE_SETTINGS);
    startService(serviceUpdateIntent);
    finish();
}

@java.lang.Override
public android.content.Intent buildVoiceRecognitionIntent() {
    android.content.Intent intent = new android.content.Intent(android.speech.RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, getActivity().getString(R.string.speak_now));
    return intent;
}

@java.lang.Override
public void onLoadError() {
    super.onLoadError();
    if ((mImageView) != null) {
        mImageView.setBackgroundColor(android.support.v4.content.ContextCompat.getColor(getContext(), R.color.light_gray));
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    pdialog.dismiss();
    check = false;
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.content.SharedPreferences sharedPref = getPreferences(ru.caustic.lasertag.ui.MODE_PRIVATE);
    android.content.SharedPreferences.Editor editor = sharedPref.edit();
    editor.putBoolean("bridge_bluetooth_autoconnect", switchRememberDevice.isChecked());
}

@java.lang.Override
public void onItemClick(int position) {
    android.os.Bundle bundle = new android.os.Bundle();
    bundle.putString("url", albumList.get(position).getUrl());
    goToNext(storm.magicspace.activity.album.WebActivity.class, bundle);
}

private void setFullscreenFlags(boolean fullscreen) {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) {
        int fullscreenFlags = (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN);
        setSystemUiFlags(fullscreenFlags, fullscreen);
    }
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    com.techfly.liutaitai.util.Utility.getScreenSize(activity);
    mActivity = ((com.techfly.liutaitai.util.activities.CitySelectActivity) (activity));
    mIsFromMainActivity = mActivity.getIntent().getBooleanExtra(IntentBundleKey.REDIRECT_TYPE, false);
}

@java.lang.Override
protected java.lang.CharSequence queryValue() {
    android.net.Uri rideUri = getRideUri();
    if (rideUri == null)
        return "";
    
    return org.jraf.android.bikey.common.UnitUtil.formatSpeed(((float) (org.jraf.android.bikey.backend.log.LogManager.get().getAverageMovingSpeed(rideUri))));
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(view.getContext(), com.example.justine.taragala.SignIn.class);
    startActivityForResult(intent, 0);
    finish();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_dashboard);
    this.bindUi();
    this.mCurrentUser = this.mSession.getCurrentUser();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.util.Log.i(com.example.eurka.comp90018.MyIntentService.TAG, "starting!!");
    android.util.Log.i(com.example.eurka.comp90018.MyIntentService.TAG, "THIS WAS HIT IN THE BACKGROUND SERVICE");
    startLogging();
    return 0;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (((currentValue) > (minValue)) && (((currentValue) - (stepValue)) > (minValue))) {
        currentValue -= stepValue;
        updateCurrentValue();
    }
}

@java.lang.Override
public boolean onSingleTapConfirmed(android.view.MotionEvent e) {
    java.lang.System.out.println("CaptureGestureListener");
    return (onTap(e.getRawX(), e.getRawY())) || (super.onSingleTapConfirmed(e));
}

static long getInstallDate(android.content.Context context) {
    return hotchemi.android.rate.PreferenceHelper.getPreferences(context).getLong(hotchemi.android.rate.PreferenceHelper.PREF_KEY_INSTALL_DATE, new java.util.Date().getTime());
}

public void onSharedPreferenceChanged(android.content.SharedPreferences prefs, java.lang.String key) {
    switch (key) {
        case com.af.synapse.Settings.PREF_THEME :
            {
                com.af.synapse.Settings.theme = null;
                com.af.synapse.Settings.setWallpaper(Utils.mainActivity);
                com.af.synapse.Settings.setWallpaper(Utils.settingsActivity);
                break;
            }
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    refreshFxUi(net.atomarea.flowx.ui.FxUi.State.SINGLE_CONVERSATION, false, (MessageCountToShow + 30));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((armor) > 0)
        (armor)--;
    
    updateValues();
}

@com.facebook.react.bridge.ReactMethod
public void sharedInstanceWithToken(java.lang.String apiToken) {
    this.mixpanel = com.mixpanel.android.mpmetrics.MixpanelAPI.getInstance(this.reactContext, apiToken);
    android.util.Log.d("mixpanel", "sharedInstanceWithToken");
}

private void placeView(android.content.Context context) {
    if (((mMenuView) == null) || ((mContentView) == null)) {
        throw new java.lang.NullPointerException("The content and menu can not be null!");
    }
    addView(mContentView, 0);
    addView(mMenuView, 1);
}

@java.lang.Override
public void onChartTranslate(android.view.MotionEvent me, float dX, float dY) {
    android.util.Log.i("Translate / Move", ((("dX: " + dX) + ", dY: ") + dY));
}

@java.lang.Override
public void onSearchResultDownloaded(java.util.ArrayList<com.example.user.cloudplayer.model.PlayList> playLists) {
    if (playLists == null) {
        android.widget.Toast.makeText(this, getResources().getString(R.string.search_alert), Toast.LENGTH_LONG).show();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration();
    config.useAccelerometer = false;
    config.useWakelock = true;
    initialize(new com.scarlettapps.skydiver3d.Skydiver3D(), config);
}

@java.lang.Override
public boolean shouldShow(android.content.SharedPreferences p) {
    de.tum.in.tumcampusapp.auxiliary.Utils.log((("CountUnansweredQuesti: " + (manager.getUnansweredQuestions().getCount())) + " "));
    return (manager.getUnansweredQuestions().getCount()) >= 1;
}

@java.lang.Override
public void onLeftCardExit(java.lang.Object dataObject) {
    if ((list.size()) == 0)
        android.widget.Toast.makeText(this, "no more users!", Toast.LENGTH_LONG).show();
    else
        com.bnutalk.ui.AddContactsActivity.makeToast(this, "dislike");
    
}

protected void updateGregorianDateLabel() {
    gregorianDateText.setText(org.odk.collect.android.utilities.DateTimeUtils.getDateTimeBasedOnUserLocale(getDateAsGregorian(getOriginalDate()).toLocalDate().toDate(), calendarMode, false));
}

private void setupPullToRefresh() {
    swipeRefreshLayout.setOnRefreshListener(new android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener() {
        @java.lang.Override
        public void onRefresh() {
            mainChannelPresenter.getLastVideosFromYoutubeChannel(true);
        }
    });
}

@java.lang.Override
public void onSearchTermChanged(java.lang.String term) {
    android.util.Log.e("debug", ("searching.. " + term));
    getSearchResults(term);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    mCamera = android.hardware.Camera.open(0);
    android.hardware.camera2.CameraManager manager = ((android.hardware.camera2.CameraManager) (getActivity().getSystemService(Context.CAMERA_SERVICE)));
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    super.writeToParcel(dest, flags);
    dest.writeString(fileName);
    dest.writeParcelable(warranty, flags);
    dest.writeInt(position);
}

@java.lang.Override
public boolean onCreateOptionsMenu(final android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu, menu);
    return true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    mCamera.takePicture(mShutterCallback, mRawCallback, null, mJPEGCallback);
    showSavedCrouton();
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    mEditTextCallback.changeErrorView();
    mEditTextCallback.toggleLineColorOnError(false);
    if ((s.length()) == 0) {
        mEditTextCallback.saveIdentificationName("");
    }
}

void dispatchOnPanelSlide(android.view.View panel) {
    for (com.sothree.slidinguppanel.SlidingUpPanelLayout.PanelSlideListener l : mPanelSlideListeners) {
        l.onPanelSlide(panel, mSlideOffset);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    speed += ((speed) == 0) ? 0 : -1;
    java.lang.String cmd = "" + (speed);
    this.sendCommand(cmd);
}

public void cancel(android.view.View view) {
    android.widget.Toast.makeText(getBaseContext(), "Cancel pressed! No changes made to the alarm. ", Toast.LENGTH_LONG).show();
    finish();
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_DONE)) {
        setResult();
        finish();
    }
    return false;
}

@java.lang.Override
public void onShowPress(android.view.MotionEvent e) {
    molecule.scale().x += 0.01F;
    molecule.scale().y += 0.01F;
    molecule.scale().z += 0.01F;
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    setContentView(R.layout.activity_master);
    populateListView(result);
    dialog.dismiss();
    android.widget.Toast.makeText(this, "Items successfully parsed!", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main1);
    if (savedInstanceState == null)
        com.example.slava.lenta2.MainPresenter.createPresenter(getFragmentManager());
    
}

@java.lang.Override
public void onStop() {
    super.onStop();
    if (gapiClient.isConnected()) {
        gapiClient.disconnect();
        android.widget.Toast.makeText(this, "Compass gapiClient.disconnect();", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onScroll(com.comcast.freeflow.core.FreeFlowContainer container) {
    android.util.Log.d(com.comcast.freeflow.examples.artbook.ArtbookActivity.TAG, ("scroll percent " + (container.getScrollPercentY())));
}

@java.lang.Override
public void onPrepareLayout() {
    mRecyclerView.setHasFixedSize(true);
    android.support.v7.widget.RecyclerView.LayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager(getActivity());
    mRecyclerView.setLayoutManager(layoutManager);
    mRecyclerView.setNestedScrollingEnabled(false);
    getPresenter().getData(boxes);
}

@java.lang.Override
protected void onServiceConnected() {
    super.onServiceConnected();
    android.accessibilityservice.AccessibilityServiceInfo accessibilityServiceInfo = new android.accessibilityservice.AccessibilityServiceInfo();
    accessibilityServiceInfo.eventTypes = android.view.accessibility.AccessibilityEvent.TYPES_ALL_MASK;
    accessibilityServiceInfo.feedbackType = android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_ALL_MASK;
    accessibilityServiceInfo.notificationTimeout = 50;
    setServiceInfo(accessibilityServiceInfo);
}

protected void startAddExpense() {
    android.content.Intent intent = new android.content.Intent(this, com.vish.cloudexpense.AddExpenseActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    java.lang.System.err.println((("There was an error " + "getting the GeoFire location: ") + databaseError));
    android.widget.Toast.makeText(this, "Permission Denied. Please Login again.", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(final android.view.View view) {
    presentFragment(new org.telegram.techrunch.select_city.SelectCity(), false);
}

public void onImageButtonBack_Clicked(android.view.View v) {
    if ((com.aiworker.bcineuroskyservice.MainActivity.layer) == 2) {
        switchToLayer1();
    }
    if ((com.aiworker.bcineuroskyservice.MainActivity.layer) == 3) {
        switchToLayer2from3();
    }
}

private int extractInt(android.content.res.XmlResourceParser xpp) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException {
    xpp.next();
    int val = java.lang.Integer.parseInt(xpp.getName());
    xpp.next();
    xpp.next();
    return val;
}

public void initTasksList(android.content.Intent intent) {
    android.support.v4.app.Fragment f = checkFragmentInstance(R.id.fragment_container, net.fred.taskgame.fragment.ListFragment.class);
    if (f != null) {
        ((net.fred.taskgame.fragment.ListFragment) (f)).initTasksList(intent);
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    callback.accept(true);
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    com.github.dfa.diaspora_android.util.AppLog.i(this, "onConfigurationChanged()");
    super.onConfigurationChanged(newConfig);
    setContentView(R.layout.main__activity);
    com.github.dfa.diaspora_android.util.AppLog.v(this, "Rebuild the UI");
    setupUI(null);
}

public com.jana.android.core.app.config.Configuration build() {
    com.jana.android.core.app.config.Configuration configs = new com.jana.android.core.app.config.Configuration(this);
    return configs;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    progressDialog.dismiss();
    getActivity().finish();
}

@java.lang.Override
public void onStatusChanged(java.lang.String s, int i, android.os.Bundle bundle) {
    android.util.Log.d("GPSTest", "onStatusChanged called");
    checkLocationProviderEnabled();
}

private void onStartTimeSet(int hourOfDay, int minute) {
    if (de.thm.ap.openfit.BuildConfig.DEBUG)
        android.util.Log.d(de.thm.ap.openfit.view.MotionFormActivity.LOG_TAG, ((hourOfDay + ":") + minute));
    
    mStart.setText(((hourOfDay + ':') + minute));
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.TextureView previewView = new android.view.TextureView(getActivity());
    previewView.setSurfaceTextureListener(this);
    return previewView;
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    android.util.Log.i(com.example.annemarie.worldofbikesdublin.TAG, "The activity is visible and about to be started.");
}

@java.lang.Override
public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) {
    android.widget.Toast t = android.widget.Toast.makeText(getApplicationContext(), java.lang.Integer.toString(status), Toast.LENGTH_SHORT);
    t.show();
}

private void setToggleButton(java.lang.String str, android.widget.ToggleButton btn) {
    if (str == "1") {
        btn.setChecked(true);
    }else {
        btn.setChecked(false);
    }
}

@java.lang.Override
public void onResponse(retrofit2.Response<com.example.sidneysmall.finalproject121.response.SchedulePost> response) {
    if ((response.body().response.compareTo("ok")) == 0) {
        android.util.Log.d("DEBUG", "Should be calling getSchedule here");
        getSchedule();
    }
}

public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (context.getSystemService(Context.NOTIFICATION_SERVICE)));
    notificationManager.notify(ben.avgmovies.notifications.NotificationPublisher.NOT_OD, getNotification());
}

@java.lang.Override
public void onClick(android.view.View view) {
    contributorDialog(true).show();
    dialog.dismiss();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.cancel();
    dialog.dismiss();
    startActivity(new android.content.Intent(this, hyjjr.cs160.com.safe_radius.MainActivity.class));
    this.finish();
}

@java.lang.Override
public void onActivityDestroyed(final android.app.Activity activity) {
    com.apptentive.android.sdk.ApptentiveInternal.getInstance().onActivityDestroyed(activity);
}

@android.support.annotation.NonNull
protected abstract PresenterT createPresenter();

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_done_verification);
    android.content.Intent intent = getIntent();
    image_path = intent.getStringExtra("ImagePathForAvatar");
}

@android.support.annotation.NonNull
protected com.github.vivchar.rendererrecyclerviewadapter.RendererRecyclerViewAdapter getAdapter() {
    if ((mAdapter) == null) {
        mAdapter = createAdapter();
    }
    return mAdapter;
}

@java.lang.Override
public void onClick(android.view.View v) {
    org.wordpress.android.ui.ActivityLauncher.viewBlogStats(getActivity(), mBlog.getLocalTableBlogId());
}

java.lang.CharSequence getLabelForAccessibility(android.content.Context context) {
}

public void attackersCancel(android.content.DialogInterface dialog, int id) {
    mBinding.nextStep.setEnabled(true);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    grocText.setText(java.lang.String.valueOf(progress));
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    handler = new android.os.Handler();
    com.xiaolei.easyfreamwork.utils.Log.d(TAG, ((this.getClass().getName()) + ":onActivityCreated"));
    onSetContentView();
    super.onActivityCreated(savedInstanceState);
}

void setCalendarTextColor(android.content.res.ColorStateList calendarTextColor) {
    mCalendarTextColor = calendarTextColor;
    notifyDataSetChanged();
}

public void showResultButtonClicked(android.view.View view) {
    java.util.ArrayList<com.example.etasheva.kinveytest.models.LaptopSqlite> result = this.mLoadDataService.showResult();
    android.content.Intent intent = new android.content.Intent(this, com.example.etasheva.kinveytest.activities.SecondActivity.class);
    intent.putExtra("result", result);
    startActivity(intent);
}

@java.lang.Override
public void onCreate() {
    btManager = null;
    mBluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();
    if ((mBluetoothAdapter) == null) {
        java.lang.System.exit(0);
    }
    smokinoGUI = null;
    super.onCreate();
}

public synchronized void setLightControllable(org.deviceconnect.android.deviceplugin.fplug.profile.FlashingExecutor.LightControllable controllable) {
    mListener = controllable;
    java.lang.Object o = null;
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    markCurrentSong(WebAPI.OP_END);
    if ((playedSong) >= (size))
        stop();
    
    nextSong();
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialogInterface) {
    if (!(navigateSuccess)) {
        funnel.logCancel();
    }
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    android.widget.Toast.makeText(getBaseContext(), "Attempt to POST made!", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    mPeople = new java.util.ArrayList<>();
    mAdapter = new android.widget.ArrayAdapter(getContext(), android.R.layout.simple_list_item_1, mPeople);
}

@java.lang.Override
public void onConnected() {
    microsoftBands.register();
    notificationManager = new org.md2k.microsoftband.notification.NotificationManager(this, microsoftBands.find());
    android.widget.Toast.makeText(this, "MicrosoftBand Started successfully", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    android.util.Log.i("AudioService", "start to play music");
    mediaPlayer.start();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.mycompany.CMSBHelpdesk.Settings.class);
    sharedPreference.setString(this, "oneTS", "true");
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onError(@io.reactivex.annotations.NonNull
java.lang.Throwable e) {
    com.takescoop.americanwhitewaterandroid.utility.Dialogs.toast(e.getMessage());
}

@java.lang.Override
public void onGlobalLayout() {
    getViewTreeObserver().removeOnGlobalLayoutListener(this);
    mCameraPreviewContainer.setLayoutParams(new android.widget.LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, ((int) ((CAMERA_PREVIEW_ASPECT_RATIO) * (getWidth())))));
    setupCameraPreview();
}

public com.brouding.simpledialog.SimpleDialog.Builder setGuideImage(@android.support.annotation.DrawableRes
int imageId, @android.support.annotation.IntRange
int padding) {
    this.guideImageId = imageId;
    this.guideImagePadding = getPXWithDP(padding);
    return this;
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    yearsTerm.setText(((yearsBar.getProgress()) + " Year(s)"));
}

@java.lang.Override
public void onPress(int primaryCode) {
    android.util.Log.d(TAG, "onPress: ");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_home);
    mUnbinder = butterknife.ButterKnife.bind(this);
    initData();
    initView();
}

@java.lang.Override
public void onConfigured(android.hardware.camera2.CameraCaptureSession session) {
    mRecordCaptureSession = session;
    try {
        mRecordCaptureSession.setRepeatingRequest(mCaptureRequestBuilder.build(), null, null);
    } catch (android.hardware.camera2.CameraAccessException e) {
        e.printStackTrace();
    }
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.M)
public static boolean isSystemAlertPermissionGranted(android.content.Context context) {
    return ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.M)) || (android.provider.Settings.canDrawOverlays(context));
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.skillvo.android.ProjectApplication.projectApplication = this;
    setUpDefaultCalligraphy();
}

public boolean updatePerformed(long dataTime) {
    android.util.Log.i(com.tpb.brainfuck_app.Storage.TAG, ((("updatePerformed: DataTime " + dataTime) + " LastUpdate ") + (com.tpb.brainfuck_app.Storage.lastUpdate)));
    return (com.tpb.brainfuck_app.Storage.lastUpdate) > dataTime;
}

private void onMissingDisplayNamesComplete(int mResultCount, java.lang.StringBuffer debugMessage) {
    if (debugMessage != null) {
        android.util.Log.w(Global.LOG_CONTEXT, ((mDebugPrefix) + debugMessage));
    }
    if (mResultCount > 0) {
    }
}

private void toaster(java.lang.String message) {
    final java.lang.String toastMessage = message;
    mHandler.post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            android.widget.Toast.makeText(tcslab.syndesiapp.controllers.localization.WifiService.this, toastMessage, Toast.LENGTH_SHORT).show();
        }
    });
}

@android.support.annotation.CheckResult
com.oasisfeng.hack.Hack.HackInvocation<R, C, T1, T2, T3> invoke(java.lang.Object... args);

@java.lang.Override
public void onPoiClick(com.google.android.gms.maps.model.PointOfInterest pointOfInterest) {
    android.widget.Toast.makeText(mContext, "pointOfInterest.name", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onPageSelected(int position) {
    android.widget.Toast.makeText(getActivity(), ("Selected page position: " + position), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    activity.clickOnViewItem(cursor.getLong(cursor.getColumnIndex(StockContract.StockEntry._ID)));
}

private boolean isStoragePermissionGiven() {
    boolean tmp;
    if ((android.support.v4.content.ContextCompat.checkSelfPermission(this.getApplicationContext(), Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        tmp = false;
    }else {
        tmp = true;
    }
    return tmp;
}

@java.lang.Override
public void onStart() {
    super.onStart();
    android.util.Log.d(com.mmm.parq.fragments.DriverHomeFragment.TAG, "in HomeFragment onStart");
    if ((mState) != null) {
        setOverlayFragment();
    }
}

@java.lang.Override
public void onVerificationFailed(com.google.firebase.FirebaseException e) {
    android.util.Log.w(TAG, "onVerificationFailed", e);
    progressDialog.dismiss();
    if (e instanceof com.google.firebase.auth.FirebaseAuthInvalidCredentialsException) {
    }else
        if (e instanceof com.google.firebase.FirebaseTooManyRequestsException) {
        }
    
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    android.util.Log.d("VideoPlayer", "Completed");
    mp.reset();
    mp.seekTo(0);
    videoUpdateListener.onComplete();
}

public void resetObject(com.mozidev.testopengl.Base3DObject object) {
    android.util.Log.d(com.mozidev.testopengl.MyGLRenderer.TAG, "resetObject");
    if (object != null) {
        m3DObject = object;
        createFigure();
        createMarkers();
    }
}

@java.lang.Override
public int getItemCount() {
    android.util.Log.d("SESSION SIZE", java.lang.Integer.toString(com.matthew.gymapp.SessionStore.getSize()));
    return com.matthew.gymapp.SessionStore.getSize();
}

protected final android.app.PendingIntent createPendingIntent(int notificationId, java.lang.String action, android.os.Bundle data, int flags) {
    return module.createPendingIntent(notificationId, action, data, flags);
}

public boolean onOptionsItemSelected(android.view.MenuItem item) {
    try {
        c.close();
        finish();
    } catch (java.io.IOException e) {
        e.printStackTrace();
    }
    return true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent nowPlayingIntent = new android.content.Intent(this, com.example.android.musique.NowPlaying.class);
    if (songSelected) {
        startActivity(nowPlayingIntent);
    }
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) {
    android.util.Log.d(com.beccap.weathervane.WeatherStatusFragment.TAG, "onMapReady, setting up map");
    _googleMap = googleMap;
    _googleMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);
    _googleMap.setIndoorEnabled(false);
    android.util.Log.d(com.beccap.weathervane.WeatherStatusFragment.TAG, "calling updateMap from onMapReady()");
    updateMap();
}

@java.lang.Override
public boolean onTouchEvent(@android.support.annotation.NonNull
android.view.MotionEvent event) {
    this.mDetector.onTouchEvent(event);
    return true;
}

public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    com.childstudios.promunchkincounter.player getplayer = players.get(position);
    playerScreen(view, getplayer);
}

public static twitter4j.Twitter getTwitterInstance(final android.content.Context context, final long accountId, final boolean includeEntities) {
    return org.mariotaku.twidere.util.Utils.getTwitterInstance(context, accountId, includeEntities, true, (!(org.mariotaku.twidere.util.MIUIUtils.isMIUI())));
}

@javax.annotation.Nonnull
public static java.lang.String encrypt(@javax.annotation.Nonnull
java.lang.String message, @javax.annotation.Nonnull
java.lang.String salt) {
    return new java.lang.String(android.util.Base64.encode(ua.boberproduction.bbr.util.Encryption.xor(message, salt).getBytes(), 0));
}

private void setPreferenceForRevenueItem(android.widget.CheckBox revenuSourceCheckbox, int revenueSourceId) {
    com.android.ssm.ssm.models.RevenueSource source = com.android.ssm.ssm.models.RevenueSource.findById(com.android.ssm.ssm.models.RevenueSource.class, revenueSourceId);
    if (source != null) {
        revenuSourceCheckbox.setChecked(true);
    }else {
        revenuSourceCheckbox.setChecked(false);
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    com.pquach.vocabularynote.Category.delete(getActivity(), mCategory);
    ((com.pquach.vocabularynote.MainActivity) (getActivity())).updateSpinner();
}

public void handleMessage(android.os.Message msg) {
    if ((msg.what) == 0) {
        try {
            builder.show();
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
        ScrollingActivity.mAdapter.notifyDataSetChanged();
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    updateGUI(intent);
    android.util.Log.d("memelol", "received something");
}

public void registerAuthenticationListener(com.concavenp.artistrymuse.services.UserAuthenticationService.OnAuthenticationListener listener) {
    android.util.Log.d(com.concavenp.artistrymuse.services.UserAuthenticationService.TAG, "Auth listener has been registered");
    mAuthListener = listener;
    android.util.Log.d(com.concavenp.artistrymuse.services.UserAuthenticationService.TAG, "Listening for Auth changes");
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    if (marker != (myLocation)) {
        com.vanshil.checkpoint.SelectedActivity.start(this, businesses.get(java.lang.Integer.parseInt(marker.getSnippet())));
    }
    return false;
}

@java.lang.Override
public void onSwipeLeft(android.support.v7.widget.RecyclerView recyclerView, int[] dismissedItems) {
    if ((dismissedItems != null) && ((dismissedItems.length) > 0)) {
        handleAcceptDecline(false, 0);
    }
}

@java.lang.Override
public void onAdapterAboutToEmpty(int itemsInAdapter) {
    android.widget.Toast.makeText(getApplicationContext(), "About to get empty!", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    int position = getAdapterPosition();
    android.widget.Toast.makeText(v.getContext(), "SUCCESS", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void run() {
    android.util.Log.d(com.seniordesign.wolfpack.quizinator.Activities.HostGameActivity.TAG, "updateThisDevice: Runnable: update device in list fragment");
    com.seniordesign.wolfpack.quizinator.WifiDirect.DeviceListFragment fragment = ((com.seniordesign.wolfpack.quizinator.WifiDirect.DeviceListFragment) (getFragmentManager().findFragmentById(R.id.frag_list)));
    if (fragment != null) {
        fragment.updateThisDevice(device);
    }
}

@java.lang.Override
protected void setUp() throws java.lang.Exception {
    super.setUp();
    getActivity();
    android.support.test.espresso.Espresso.closeSoftKeyboard();
    if ((com.parse.ParseUser.getCurrentUser()) == null) {
        com.parse.ParseUser.logIn("TestUser", "1234");
    }
}

@java.lang.Override
public int getItemViewType(int position) {
    if ((mLuckResutList.get(position).get_id()) != null) {
        return com.innofang.gankiodemo.module.main.dailygank.DailyGankAdapter.TYPE_NORMAL;
    }else {
        android.util.Log.i(com.innofang.gankiodemo.module.main.dailygank.DailyGankAdapter.TAG, "getItemViewType: type footer");
        return com.innofang.gankiodemo.module.main.dailygank.DailyGankAdapter.TYPE_FOOTER;
    }
}

@com.squareup.otto.Subscribe
public void subscribe(today.gacha.android.services.GachaLocationService.CurrentLocationEvent event) {
    assertTrue(event.isSuccess());
    assertNotNull(event.getLocation());
    latch.countDown();
}

private boolean isTablet() {
    boolean isLarge = getResources().getBoolean(R.bool.isTablet);
    android.util.Log.d(com.example.android.musicstreamer.MainActivity.LOG_TAG, ("isLarge: " + isLarge));
    return isLarge;
}

private void randomImg(android.widget.ImageView imageView) {
    int num = mRandom.nextInt(6);
    if (num == 0) {
        num = 1;
    }
    mCount += num;
    imageView.setImageResource(mImgs[(num - 1)]);
}

protected void bleGattDisConnected(java.lang.String address) {
    android.content.Intent intent = new android.content.Intent(com.hypercryptic.bleware.BLEService.BLE_GATT_DISCONNECTED);
    intent.putExtra(com.hypercryptic.bleware.BLEService.EXTRA_ADDR, address);
    sendBroadcast(intent);
    requestProcessed(address, RequestType.CONNECT_GATT, false);
}

@java.lang.Override
public void onBeginOfSpeech() {
    android.util.Log.d(com.lixl.waveform.WaveformViewModule.TAG, "evaluator begin");
    showTip("evaluator begin");
}

public void onClick(android.view.View v) {
    game.playTheGame(myMap.get(v));
    UpdateUIValues();
    ChangePlayer();
    CheckGameFinished();
}

public void glBufferSubData(int target, long offset, java.nio.ByteBuffer data) {
    com.jme3.renderer.android.AndroidGL.checkPosition(data);
    android.opengl.GLES20.glBufferSubData(target, ((int) (offset)), com.jme3.renderer.android.AndroidGL.getLimitBytes(data), data);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.os.Bundle bundle = getArguments();
    return inflater.inflate(R.layout.fragment_action, null);
}

@java.lang.Override
public texus.autozoneuae.fragments.ProductsFragment.ProductRecycleAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.item_product, parent, false);
    view.setBackgroundResource(mBackground);
    return new texus.autozoneuae.fragments.ProductsFragment.ProductRecycleAdapter.ViewHolder(view);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((fragment.getArguments()) == null) {
        fragment.getActivity().onBackPressed();
    }
    fragment.getActivity().onBackPressed();
}

@android.support.annotation.CheckResult
com.oasisfeng.hack.Hack.HackInvocation<R, C, T1, T2, T3> invoke(A1 arg1, A2 arg2, A3 arg3, A4 arg4);

@java.lang.Override
public void onBitmapFailed(android.graphics.drawable.Drawable errorDrawable) {
    SearchActivity.protectedFromGarbageCollectorTargets.remove(this);
    onBitmapFailed.run();
}

@java.lang.Override
public void onReceive(final android.content.Context context, android.content.Intent intent) {
    android.util.Log.d(com.theah64.pigeon.receivers.LocationProviderListener.X, ("Location provider changed : " + intent));
    this.context = context;
    new com.theah64.pigeon.utils.PermissionUtils(context, this, null).begin();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(getLayoutResource());
    android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar)));
    setSupportActionBar(toolbar);
}

@java.lang.Override
public void onScrollChange(android.view.View v, int scrollX, int scrollY, int oldScrollX, int oldScrollY) {
    if ((listener) != null) {
        listener.setRefresh((scrollY == 0));
    }
}

public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    mGoogleOAuthManager.onActivityResult(requestCode, resultCode, data);
}

@java.lang.Override
public java.lang.Object instantiateItem(android.view.ViewGroup container, int position) {
    android.support.v4.app.Fragment fragment = ((android.support.v4.app.Fragment) (super.instantiateItem(container, position)));
    mIdMapper.put(position, fragment.getId());
    return fragment;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    setContentView(R.layout.master_detail);
    super.onCreate(savedInstanceState);
    butterknife.ButterKnife.bind(this);
    android.util.Log.v("DEBUG", "MasterDetail.onCreate()");
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.category.base.BaseApplication.sApplicationContext = this;
    mRequestQueueInstance = com.android.volley.toolbox.Volley.newRequestQueue(getBaseContext());
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putSerializable(com.ratik.popularmovies.ui.MainActivity.MOVIES_DATA, movies);
}

private void initBitmap(int res) {
    mBitmap = android.graphics.BitmapFactory.decodeResource(getResources(), res);
    mBitWidth = mBitmap.getWidth();
    mBitHeight = mBitmap.getHeight();
}

@java.lang.Override
public android.os.Parcelable onSaveInstanceState() {
    if ((badge) != null) {
        android.os.Bundle bundle = badge.saveState(indexInContainer);
        bundle.putParcelable("superstate", super.onSaveInstanceState());
        return bundle;
    }
    return super.onSaveInstanceState();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    initTheme();
    super.onCreate(savedInstanceState);
    initLayout();
    initToolbar();
}

public void saveHTML(android.view.View view) {
    cs246.ilearntracker.Student.getInstance().setHTMLData(HTMLData);
    java.lang.System.out.println(cs246.ilearntracker.Student.getInstance().getHTMLData());
    android.content.Intent intent = new android.content.Intent(this, cs246.ilearntracker.iLearnTracker.class);
    startActivity(intent);
}

public boolean onMenuItemClick(android.view.MenuItem item) {
    sortedByColor = true;
    updateList();
    return true;
}

@java.lang.Override
public com.yalantis.fitfilter.QuestionsAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    return new com.yalantis.fitfilter.QuestionsAdapter.ViewHolder(android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.item_list, null, false));
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent ev) {
    super.onTouchEvent(ev);
    android.util.Log.i("VerticalScrollView", ("onTouchEvent. action: " + (ev.getAction())));
    return true;
}

public void openFragmentNoHistory(android.support.v4.app.Fragment fragment, java.lang.String tag) {
    android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
    ft.replace(R.id.container, fragment, tag);
    ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
    ft.commitAllowingStateLoss();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
}

@java.lang.Override
public void onPause() {
    android.support.v4.content.LocalBroadcastManager.getInstance(this.context).unregisterReceiver(messageReceiver);
    this.myGridView.setAdapter(null);
    super.onPause();
}

@java.lang.Override
public void onListItemClick(android.widget.ListView listView, android.view.View view, int position, long id) {
    super.onListItemClick(listView, view, (position - 2), id);
    selectItem(position);
}

public static java.lang.String getDefaultSkin(java.lang.String targetName) {
    com.android.sdklib.IAndroidTarget target = com.motorola.studio.android.adt.SdkUtils.getTargetByName(targetName);
    return target != null ? target.getDefaultSkin() : "HVGA";
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.widget.ImageButton pause_button = ((android.widget.ImageButton) (findViewById(R.id.button_pause)));
    pause_button.setImageResource(R.drawable.resume);
    controller.stop();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.fly.firefly.AnalyticsApplication.sendEvent("Click", "btnUpdateProfile");
    android.util.Log.e("Clicked", "Ok");
    mValidator.validate();
    requestUpdateProfile();
    com.fly.firefly.utils.Utils.hideKeyboard(getActivity(), v);
}

@java.lang.Override
public void setPrimaryItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    super.setPrimaryItem(container, position, object);
    com.example.xyzreader.ui.ArticleDetailFragment fragment = ((com.example.xyzreader.ui.ArticleDetailFragment) (object));
    if (fragment != null) {
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    com.bloodshare.bloodshareandroid.ui.login.MobileInputFragment mobileInputFragment = com.bloodshare.bloodshareandroid.ui.login.MobileInputFragment.newInstance();
    addFragment(mobileInputFragment, MobileInputFragment.TAG);
    startActivity(new android.content.Intent(this, com.bloodshare.bloodshareandroid.ui.main.MainActivity.class));
}

@java.lang.Override
public void onClick(android.view.View view) {
    textRequest(textUrl);
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    android.util.Log.d(com.udacity.bakappies.fragment.FragmentStepDetail.TAG, ("onActivityCreated " + (step.getShortDescription())));
}

public void confirmationToDrinkOrdered(android.view.View view) {
    buildRecipe(drinkOrder);
    new com.example.lamperry.smartbar_r1.ConfirmationActivity.DrinkOrder().execute();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mobidev.com.notesfeed.User accessUser = ((mobidev.com.notesfeed.User) (savedInstanceState.getSerializable("currentUser")));
    java.lang.String userId = accessUser.getUserId();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startid) {
    fetchRssItemsFromResources();
    return START_NOT_STICKY;
}

@java.lang.Override
public void onResume() {
    android.widget.Toast.makeText(getApplicationContext(), "Resuming activity", Toast.LENGTH_SHORT).show();
    android.content.Intent serviceIntent = new android.content.Intent(getApplicationContext(), com.example.victor.lfm.MessageService.class);
    startService(serviceIntent);
    super.onResume();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    try {
        SendIMEI();
    } catch (java.lang.Exception e) {
        SendIMEIFailedDialog().show();
    }
    dialog.cancel();
}

@java.lang.Override
public void onConnectionSuspended(int i) {
    android.util.Log.d("GeofencesScanner.onConnectionSuspended", "xxx");
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.jady.retrofitclient.download.DownloadManager.getInstance().remove(downloadInfo);
    downloadInfoList.remove(position);
    notifyDataSetChanged();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    tasks.add(touchedTask);
    tasks.remove(touchedTask);
    touchedTask.setComplete(true);
    setUpTasksWithNewTasks();
    taskAdapter.notifyDataSetChanged();
    com.todome.ToDoMeActivity.writeTasks(ToDoMeActivity.tasks);
}

private void setShareIntent(android.content.Intent shareIntent) {
    if (((mShareActionProvider) != null) && ((listViewScores.getItemAtPosition(0)) != null)) {
        mShareActionProvider.setShareIntent(shareIntent);
    }
}

@java.lang.Override
public boolean onKeyUp(int keyCode, android.view.KeyEvent event) {
    return (mController.onKeyUp(keyCode, event)) || (super.onKeyUp(keyCode, event));
}

@java.lang.Override
public void onStop() {
    android.util.Log.d(be.ugent.zeus.hydra.service.urgent.SimpleSessionCallback.TAG, "stop");
    ensureStop();
    if (registered) {
        context.unregisterReceiver(myNoisyAudioStreamReceiver);
        registered = false;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    speed += ((speed) == 4) ? 0 : -1;
    java.lang.String cmd = "" + (speed);
    this.sendCommand(cmd);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(POIpath.getText().toString().equals("")))
        checkPathField();
    else
        addNewPOI();
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    signUpForm = ((com.example.michael.tddc73project.SignUpForm) (findViewById(R.id.SignUpForm)));
    signUpForm.addEditableText("Extra TextField");
    setContentView(R.layout.activity_main);
}

private void showResult(java.lang.Integer message) {
    android.widget.Toast.makeText(this, message, Toast.LENGTH_LONG).show();
}

private void initView() {
    mPicker = new wuxian.me.filepicker.FilePickerImpl(new wuxian.me.filepicker.ListViewProxy(getBaseContext(), ((android.widget.ListView) (findViewById(R.id.listView)))), mListener);
    mPicker.listRootFiles();
}

public void tellJoke(android.view.View view) {
    if ((fragment) != null) {
        fragment.onCallFragment();
    }
    progressBar.setVisibility(View.VISIBLE);
    jokesAsyncTask = new com.udacity.gradle.builditbigger.tasks.JokesAsyncTask(this);
    jokesAsyncTask.execute();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeString(this.server);
    dest.writeString(this.email);
    dest.writeValue(this.is_shib);
    dest.writeString(this.token);
}

@java.lang.SuppressWarnings(value = "deprecation")
@java.lang.Override
public void onAttach(android.app.Activity activity) {
    if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.M)) {
        dagger.android.AndroidInjection.inject(this);
        super.onAttach(activity);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    BI2.setVisibility(View.GONE);
    (tag_num)--;
    buttonStack.push(BI2);
}

private static void disableAnimations() {
    int permStatus = org.xbmc.kore.testhelpers.Utils.context.checkCallingOrSelfPermission(org.xbmc.kore.testhelpers.Utils.ANIMATION_PERMISSION);
    if (permStatus == (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        org.xbmc.kore.testhelpers.Utils.setSystemAnimationsScale(org.xbmc.kore.testhelpers.Utils.DISABLED);
    }
}

@java.lang.Override
public void onScrollStateChanged(android.support.v7.widget.RecyclerView recyclerView, int newState) {
    super.onScrollStateChanged(recyclerView, newState);
    android.util.Log.d(com.ray.rssmovie.widget.EasyListingView.TAG, ("EasyListingView scroll stated:" + newState));
}

@java.lang.Override
public void onErrorCreationCustomer() {
    android.widget.Toast.makeText(getActivity(), "Email is already in use, choose a different one", Toast.LENGTH_SHORT).show();
    android.widget.Toast.makeText(getActivity(), "Something went wrong", Toast.LENGTH_SHORT).show();
}

public void get(android.view.View view) {
    android.util.Log.d("info", "get called");
    overlandthomas.shopinglistalpha.UnitConversions.Unit u = new overlandthomas.shopinglistalpha.UnitConversions.Unit("Cup", 0, "volume");
    add(u, "test item add");
}

@java.lang.Override
public void onActivityUpdated(com.google.android.gms.location.DetectedActivity a) {
    android.widget.Toast.makeText(getApplicationContext(), ("Latitude : " + (com.example.omair.minethetag.LoginActivity.latitude)), Toast.LENGTH_SHORT).show();
}

public void onClick(android.content.DialogInterface arg0, int arg1) {
    finish();
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    numWords = progress + 3;
    numWordsDisplay.setText(java.lang.String.valueOf(numWords));
}

public static synchronized com.tinyweather.model.TinyWeatherDB getInstance(android.content.Context cintext) {
    if ((com.tinyweather.model.TinyWeatherDB.tinyWeatherDB) == null) {
        com.tinyweather.model.TinyWeatherDB.tinyWeatherDB = new com.tinyweather.model.TinyWeatherDB(cintext);
    }
    return com.tinyweather.model.TinyWeatherDB.tinyWeatherDB;
}

public boolean remove(int id) {
    android.database.sqlite.SQLiteDatabase db2 = urlHistory.getWritableDatabase();
    return (db2.delete(com.example.koti.androidbrowser.HistoryAdapter2.UrlHistory.TABLE_NAME, (((com.example.koti.androidbrowser.HistoryAdapter2.UrlHistory.ID) + " = ") + id), null)) > 0;
}

@java.lang.Override
public com.example.android.popularmovies.fragments.MovieListFragment getItem(int position) {
    android.os.Bundle args = new android.os.Bundle();
    switch (position) {
        case 0 :
            return mPopularFrag;
        case 1 :
            return mTopRatedFrag;
        case 2 :
            return mFavoritesFrag;
        default :
            return mPopularFrag;
    }
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    setUpMapIfNeeded();
    android.util.Log.i(com.intersog.androidcourse.rimma.googlemaphw19.MapsActivity.TAG, ("onResume " + (mGoogleApiClient.isConnected())));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((v.getId()) == (R.id.button_right)) {
        headBar.setRightButtonIcon("fa-chevron-up");
        initmPopupWindowView();
        popupwindow.showAsDropDown(v, 0, 3);
    }
}

public static void getInfoForTourLocation(android.app.Activity activity, com.example.john.norfolktouring.TourLocation tourLocation) {
    java.util.List<com.example.john.norfolktouring.TourLocation> tourLocations = new java.util.ArrayList(java.util.Arrays.asList(tourLocation));
    com.example.john.norfolktouring.Utils.PlacesUtils.getInfoForTourLocations(activity, tourLocations, null);
}

@android.support.annotation.Nullable
public com.charlesmadere.hummingbird.models.LibraryUpdate getLibraryUpdate() {
    if (mLibraryUpdate.containsModifications(mLibraryEntry)) {
        return mLibraryUpdate;
    }else {
        return null;
    }
}

private synchronized void addUpdate(android.content.ContentProviderOperation update) {
    mDataUpdateList.add(update);
    if ((mDataUpdateList.size()) > (org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE)) {
        update(mDataUpdateList);
    }
}

@java.lang.Override
public void onFailure(retrofit2.Call<io.filepicker.models.FPFile> call, java.lang.Throwable throwable) {
    android.util.Log.e(io.filepicker.services.ContentService.LOG_TAG, "failure", throwable);
    countDownLatch.countDown();
}

private void setupPlayer() {
    android.util.Log.v(Constants.LOG_TAG, "Setting up the player...");
    uk.co.qubitssolutions.bharatradios.app.services.BackgroundAudioPlayerService.audioPlayer.initPlayer();
    acquireWakeLock();
    acquireWifiLock();
    setupAudioFocus();
    setupMediaSession();
    android.util.Log.v(Constants.LOG_TAG, "Player setup successfully");
}

public android.content.Intent[] getSavedIntents() {
    return savedIntents;
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    setStarted(true);
    com.example.jose.updated.controller.NotificationService.pagesToTrack = pagesHolder.getPagesToTrack();
    com.example.jose.updated.controller.NotificationService.updatedPages = pagesHolder.getUpdatedPages();
    createTimerTask();
    setUpTimer(updateTimerTask);
}

private void OnCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.yes_service_activity);
}

private void resetMediaPlayer() {
    if (mMediaPlayer.isPlaying()) {
        mMediaPlayer.stop();
    }
    mMediaPlayer = new android.media.MediaPlayer();
}

public void load(TModel model, com.raizlabs.android.dbflow.structure.database.DatabaseWrapper databaseWrapper) {
    getSingleModelLoader().load(databaseWrapper, com.raizlabs.android.dbflow.sql.language.SQLite.select().from(getModelClass()).where(getPrimaryConditionClause(model)).getQuery());
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.JELLY_BEAN)
public void handleMessage(android.os.Message msg) {
    switch (msg.what) {
        case 1 :
            wrongPasswordAlert.setVisibility(View.GONE);
            passwordInput.setText("");
            passwordInput.setInputType(InputType.TYPE_CLASS_NUMBER);
            break;
        default :
            break;
    }
}

private static android.content.Context getContext() {
    synchronized(com.unbelievable.library.android.utils.PreferencesUtil.class) {
        if ((com.unbelievable.library.android.utils.PreferencesUtil.getContext()) == null) {
            throw new java.lang.NullPointerException("Call PreferencesUtil.initialize(context) within your Application onCreate() method.");
        }else {
            return com.unbelievable.library.android.utils.PreferencesUtil.mContext;
        }
    }
}

public void attach() {
    android.util.Log.e(li.klass.fhem.util.UIBroadcastReceiver.class.getName(), "attach");
    activity.registerReceiver(this, intentFilter);
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    hidingAlphaBeforeRepeatWorking = true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    for (fiskinfoo.no.sintef.fiskinfoo.Baseclasses.ToolEntry toolEntry : unconfirmedRemovedTools) {
        toolEntry.setToolStatus(ToolEntryStatus.STATUS_REMOVED);
    }
    user.writeToSharedPref(v.getContext());
    dialog.dismiss();
}

@java.lang.Override
public void run() {
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    if (actionBar != null)
        getSupportActionBar().hide();
    
}

private void onRegistreClicked(android.view.View view) {
    mListener.onFragmentInteraction("");
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    world.model.player.baseTraits.maxHP = 500;
    world.model.player.health.max = world.model.player.baseTraits.maxHP;
    controllerContext.actorStatsController.setActorMaxHealth(world.model.player);
    world.model.player.conditions.clear();
    showToast(mainActivity, "DEBUG: hp set to max", Toast.LENGTH_SHORT);
}

@com.mindorks.placeholderview.annotations.swipe.SwipingDirection
private void onSwipingDirection(com.mindorks.placeholderview.SwipeDirection direction) {
    android.util.Log.d(LOG_TAG, ("SwipingDirection " + (direction.name())));
}

public void submit(android.view.View v) {
    if (checkForm()) {
        android.widget.Toast.makeText(this, "Informaton saved to the database successfully.", Toast.LENGTH_SHORT).show();
    }else {
        android.widget.Toast.makeText(this, "Error", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onScrollStateChanged(android.widget.AbsListView view, int scrollState) {
    android.util.Log.e("ListView", "onScrollStateChanged");
}

@java.lang.Override
public void loadingLoginPage(java.lang.String loginUrl) {
    final android.app.ActionBar ab = getActionBar();
    ab.setTitle(loginUrl);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((context) instanceof internetofeveryone.ioe.Downloads.DownloadsView) {
        ((internetofeveryone.ioe.Downloads.DownloadsView) (context)).onClickOpen(getItem(position));
    }else {
    }
}

public static java.lang.String getPublicPath(android.content.Context context, android.net.Uri uri) throws edu.mit.mobile.android.locast.data.NoPublicPath {
    return edu.mit.mobile.android.locast.data.MediaProvider.getPublicPath(context, uri, null, false);
}

private void initImageGetter() {
    mImageGetter = new com.heaven7.android.util2.ImageHelper(getExternalFilesDir(Environment.DIRECTORY_PICTURES).getAbsolutePath(), this, new com.heaven7.android.util2.demo.sample.TestGetImageInN.ImageCallbackImpl()) {    };
}

@java.lang.Override
public void onItemClick(int position) {
    mAdapterNavigationCallback.onItemClick(position);
    com.pentapus.pentapusdmh.Fragments.EncounterPrep.ImageGridAdapter.selectedUri = android.net.Uri.parse(imageUris[position].toString());
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d("onDestroy", category);
    galleryPresenter.destroy();
    super.onDestroy();
}

public static de.dfki.iui.mmir.plugins.speech.nuance.NuanceEngine getInstance() {
    android.util.Log.d(de.dfki.iui.mmir.plugins.speech.nuance.NuanceEngine.PLUGIN_NAME, "getInstance called");
    return de.dfki.iui.mmir.plugins.speech.nuance.NuanceEngine.instance;
}

@java.lang.Override
public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    android.util.Log.i("TM tabEditorActWBtns", ("page finished loading " + url));
    createWebPrintJob(view);
    mWebView = null;
}

@java.lang.Override
public void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView recyclerView) {
    super.onAttachedToRecyclerView(recyclerView);
    android.util.Log.d(getClass().getSimpleName(), "Attaching to recycler view");
    mLastSelectedViewHolder.mLastSelectedItem = mSharedPreferences.getLong(DEADLINES_LAST_SELECTED_ITEM_KEY, (-1));
}

public void updateScaleData(com.health.openscale.core.datatypes.ScaleData scaleData) {
    scaleDB.updateEntry(android.R.attr.id, scaleData);
    alarmHandler.entryChanged(context, scaleData);
    updateScaleData();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
}

@java.lang.Override
public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) {
    initLocation();
    updateLocation(false);
}

@java.lang.Override
public void finishUpdate(android.view.View container) {
    if ((fragmentTransaction) != null) {
        fragmentTransaction.commitAllowingStateLoss();
    }
    fragmentTransaction = null;
    fragmentManager.executePendingTransactions();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.main_preferences);
    ((android.support.v7.app.AppCompatActivity) (getActivity())).getSupportActionBar().setTitle(R.string.settings_title);
}

public void logoutCurrentUser() {
    android.util.Log.e(org.ei.opensrp.view.activity.DrishtiApplication.TAG, "Child classes should implement this function");
}

@java.lang.Override
public void onImageSelected(android.net.Uri uri) {
    imagePreview(uri);
    android.widget.Toast.makeText(this, "length ", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onPostExecute(android.graphics.Bitmap result) {
    if (result != null)
        icon.setImageBitmap(result);
    else
        icon.setImageResource(R.drawable.icon);
    
}

public void setSlideOffset(int offset) {
    mSlideOffset = java.lang.Math.min(java.lang.Math.max(0, offset), mSlideMaxHeight);
    android.util.Log.d("Slide", ("mSlideOffset -> " + (mSlideOffset)));
    requestLayout();
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.lang.String> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(getActivity(), "An error occurred", Toast.LENGTH_SHORT).show();
    android.util.Log.d("TAG", java.lang.String.valueOf(t));
}

@java.lang.Override
public void modificarRuta(com.google.android.gms.maps.model.LatLng miPosicion) {
    controlador.obtenerRuta(this, ubicacion, miPosicion);
    cambiarFragmento(fragMapa, fragRincones, fragMisRincones, getString(R.string.fragmento_mapa));
}

public void setData(final T object) {
    itemView.setOnClickListener(new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View v) {
            onItemViewClick(object);
        }
    });
}

@java.lang.Override
public void setSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putParcelable(com.mycvapps.rav.vk1000.WallFragment.RECYCLER_STATE_TAG, mLayoutManager.onSaveInstanceState());
}

protected void addCursorRow(android.database.MatrixCursor cursor, jp.redmine.redmineclient.entity.IMasterRecord changes, int id, int title_id) {
    if (changes == null)
        return ;
    
    cursor.addRow(new java.lang.Object[]{ id , title_id , null , changes.getName() });
}

public void showAndLock(android.view.animation.Animation.AnimationListener listener) {
    if (!(mLogoEnabled)) {
        return ;
    }
    unlockAndShow(listener);
    mVisibilityLock = com.android.internal.navigation.fling.FlingLogoController.LOCK_SHOW;
}

@java.lang.Override
public void onDestroyActionMode(android.support.v7.view.ActionMode mode) {
    enableSelectionMode(false);
    runSelection(false);
    allGpxAdapter.notifyDataSetChanged();
}

private void sendBroadcastWithPermission(android.content.Intent intent, java.lang.String receiverPermission) {
    java.util.List<org.robolectric.shadows.ShadowApplication.Wrapper> wrappers = getAppropriateWrappers(intent, receiverPermission);
    postToWrappers(wrappers, intent, receiverPermission);
}

public void backupOriginalImage() {
    android.util.Log.d("PuzzleAdapter", "Backuping...");
    bitmapOriginalImage = img.copy(Bitmap.Config.ARGB_8888, true);
    android.util.Log.d("PuzzleAdapter", "Backuping done");
}

@java.lang.Override
public void doFrame(long vsyncTimeNs) {
    sampledVsyncTimeNs = vsyncTimeNs;
    choreographer.postFrameCallbackDelayed(this, com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.CHOREOGRAPHER_SAMPLE_DELAY_MILLIS);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.dismiss();
}

@dagger.Provides
android.app.ProgressDialog provideMainPresenter() {
    android.app.ProgressDialog dialog = new android.app.ProgressDialog(activity, android.app.ProgressDialog.STYLE_SPINNER);
    dialog.setCancelable(false);
    dialog.setCanceledOnTouchOutside(false);
    return dialog;
}

public void openDataBase() throws java.sql.SQLException {
    java.lang.String myPath = (dataBasePath) + (is.bjorfinnur.bjorfinnur.DataBaseManager.DB_NAME);
    myDataBase = android.database.sqlite.SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READONLY);
}

public void handleMessage(android.os.Message msg) {
    mTime.setText(getTime());
    mScore.setText(getString(R.string.score, mScoreValue));
    mGameView.update();
}

public boolean isEmpty(android.widget.EditText string) {
    if ((string.getText().toString()) == "")
        return true;
    else
        return false;
    
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.e("ApplicationScreen", "onClick");
    if ((com.almalence.opencam.ApplicationScreen.mApplicationStarted) && (com.almalence.opencam.ApplicationScreen.mCameraStarted))
        com.almalence.opencam.ApplicationScreen.getGUIManager().onClick(v);
    
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    de.jochen_manns.buyitv0.ListActivity.getMenuInflater().inflate(m_menu, menu);
    android.view.MenuItem newItem = menu.findItem(R.id.action_new);
    newItem.setTitle(R.string.action_new);
    return true;
}

public static void log(java.lang.String packageName, java.lang.String msg) {
    if (tw.fatminmin.xposed.minminguard.blocker.Util.pref.getBoolean((packageName + "_log"), false)) {
        de.robv.android.xposed.XposedBridge.log(msg);
        android.util.Log.d(tw.fatminmin.xposed.minminguard.blocker.Util.TAG, msg);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    finish();
    android.content.Intent intent = new android.content.Intent(this, com.mlabs.bbm.iquiz.On_Touch.class);
    startActivity(intent);
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    org.give2peer.give2peer.entity.Server newServer = new org.give2peer.give2peer.entity.Server().loadDummy();
    newServer.save();
    refreshView();
    return true;
}

private void initButtonRow() {
    mColor = getResources().getIntArray(R.array.pickerColors)[0];
    btnVibrate = ((android.widget.ToggleButton) (findViewById(R.id.btnToggleVibration)));
    btnColor = ((android.widget.ImageButton) (findViewById(R.id.btnPickColor)));
}

@java.lang.Override
public void done(java.util.List<reli.reliapp.co.il.reli.dataStructures.Discussion> li, com.parse.ParseException e) {
    dia.dismiss();
    ((android.widget.TextView) (bla.findViewById(textId))).setText(java.lang.Integer.toString(li.size()));
}

public void reading(android.view.View v) {
    android.content.Intent i = new android.content.Intent(this, com.binil.reading.quick_response_code.CaptureActivity.class);
    finish();
    startActivity(i);
}

public void tellJoke(android.view.View view) {
    android.widget.Toast.makeText(this, "derp", Toast.LENGTH_SHORT).show();
    new com.shentuo.builditbigger.EndpointsAsyncTask().execute(new android.util.Pair<android.content.Context, java.lang.String>(this, "Testing from BuildItBigger"));
}

@java.lang.Override
public void onConnectionSuspended(int arg0) {
    mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addApi(Drive.API).addScope(Drive.SCOPE_FILE).addConnectionCallbacks(this).addOnConnectionFailedListener(this).build();
    mGoogleApiClient.connect();
}

@java.lang.Override
public void onTabReSelected(@android.support.annotation.IdRes
int tabId) {
    if (tabId == (id.contacts)) {
        android.content.Intent contactsIntent = new android.content.Intent(getApplicationContext(), com.example.user.kchat01.GroupsActivity.class);
        startActivity(contactsIntent);
    }
}

protected void checkLocationPermission() {
    if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.ACCESS_COARSE_LOCATION }, ch.kanti_baden.ma.ninemensmorrisapp.MainActivity.REQUEST_COARSE_LOCATION);
    }else
        mBluetoothAdapter.startDiscovery();
    
}

@java.lang.Override
public void evaluate() throws java.lang.Throwable {
    de.czyrux.store.toolbox.idlingresource.RxIdlingResource rxIdlingResource = new de.czyrux.store.toolbox.idlingresource.RxIdlingResource();
    android.support.test.espresso.Espresso.registerIdlingResources(rxIdlingResource);
    io.reactivex.plugins.RxJavaPlugins.setScheduleHandler(rxIdlingResource);
    base.evaluate();
    android.support.test.espresso.Espresso.unregisterIdlingResources(rxIdlingResource);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    HoursLeft = new java.lang.Long(0);
    MinutesLeft = new java.lang.Long(2);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View v = inflater.inflate(R.layout.fragment_parcourt_choice, container, false);
    initFragment(v);
    return v;
}

@android.support.annotation.Nullable
public static java.lang.Long getLong(@android.support.annotation.NonNull
java.lang.String key, @android.support.annotation.Nullable
java.lang.Long defaultValue) {
    long start = java.lang.System.currentTimeMillis();
    return java.lang.Long.valueOf(com.pepperonas.aesprefs.AesPrefs.get(key, java.lang.String.valueOf(defaultValue)));
}

public void addUser(io.angelhack.verd.model.User user) {
    java.lang.String id = user.getId().toString();
    java.lang.String name = user.getName();
    android.graphics.Bitmap photo = user.getPhoto();
}

@java.lang.Override
public void nextStory(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.sweets.rumandapp.StageSelectActivity.class);
    intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP) | (android.content.Intent.FLAG_ACTIVITY_NEW_TASK)));
    startActivity(intent);
    this.finish();
}

private void finishTurn() {
    super.finishTurn(getNextParticipantId());
    mInstructionsTV.setText(R.string.games_waiting_for_other_player_turn);
    disableGui();
    android.util.Log.i(com.levigilad.javaplay.yaniv.YanivPlayFragment.TAG, "Turn Ended");
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    android.util.Log.i("Check", "onCompletion");
    divyang.musicapp_v6.BackgroundMediaService.mediaPlayer.stop();
    setMediaPlaybackState(PlaybackState.STATE_STOPPED);
    stopForeground(true);
    showPausedNotification();
}

@java.lang.Override
public void onUnlockUser(@android.annotation.UserIdInt
final int userHandle) {
    mService.mHandler.sendMessage(mService.mHandler.obtainMessage(com.android.server.InputMethodManagerService.MSG_SYSTEM_UNLOCK_USER, userHandle));
}

@java.lang.Override
public void handleResult(com.google.zxing.Result rawResult) {
    android.util.Log.d(br.usp.ime.mac5743.ep1.seminarioime.activity.ReadQRCodeActivity.TAG, rawResult.getText());
    android.util.Log.d(br.usp.ime.mac5743.ep1.seminarioime.activity.ReadQRCodeActivity.TAG, rawResult.getBarcodeFormat().toString());
    saveResult(rawResult.getText());
}

@java.lang.Override
public void loadUrl(final java.lang.String url, boolean clearNavigationStack, android.util.Map<java.lang.String, java.lang.String> headers) {
    webView.loadUrl(url, headers);
}

private void setMonth(int month) {
    android.widget.Spinner s = ((android.widget.Spinner) (findViewById(R.id.spnMonth)));
    s.setSelection(month);
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    mp.release();
    currentState = com.trojx.fangyan.activity.StoryActivity.STATUS_IDLE;
    ad.stop();
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    if ((mNetworkService) != null) {
        waiters.put(msg.what, msg);
        mNetworkService.downloadImage(msg.what);
    }else {
        synchronized(msg) {
            msg.notify();
        }
    }
}

@java.lang.Override
public io.reactivex.ObservableSource<? extends java.lang.String> call() throws java.lang.Exception {
    android.os.SystemClock.sleep(500);
    return io.reactivex.Observable.just("test1", "test2", "test3");
}

@java.lang.Override
protected com.bitdubai.sub_app.intra_user_community.holders.AppNotificationsHolder createHolder(android.view.View itemView, int type) {
    return null;
}

boolean isSilver(android.graphics.Point p) {
    if (board.isEmpty(p)) {
        return false;
    }
    return (board.getColour(p)) == (email.com.gmail.songjiapei.arimaa.Piece.PieceColour.SILVER);
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> adapterView) {
    mCurrentDB.setText(mSavedDB);
}

public void createDirectory() {
    this.identifyDir();
    java.io.File filePath = new java.io.File(this.proposedPath);
    filePath.mkdirs();
    android.util.Log.d(neildg.com.eagleeyesr.io.DirectoryStorage.TAG, ("Image storage is set to: " + (proposedPath)));
}

public static java.lang.String getUserName(android.content.Context ctx) {
    android.util.Log.d("SaveSharedPreference", "Getting username");
    return edu.purdue.cs.hvzmasterapp.SaveSharedPreference.getSharedPreferences(ctx).getString(edu.purdue.cs.hvzmasterapp.SaveSharedPreference.PREF_USER_NAME, "");
}

public void onClick(android.view.View activity_main) {
    android.content.Intent intent = new android.content.Intent(this, com.example.good_morning.AccountSettingsActivityView.class);
    this.startActivity(intent);
}

public void addOneTeamA(android.view.View view) {
    scoreTeamA = (scoreTeamA) + 1;
    displayForTeamA(scoreTeamA);
}

public void setBrushSize(float newSize) {
    brushSize = android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, newSize, getResources().getDisplayMetrics());
    drawPaint.setStrokeWidth(brushSize);
    lastBrushSize = brushSize;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((clickable) && (enabled))
        toggle(pos, animateSelectorDuration, true);
    
}

private int getEmojiCoount() {
    android.content.SharedPreferences preferences = android.preference.PreferenceManager.getDefaultSharedPreferences(mContext);
    return preferences.getInt("emojiCount", 1);
}

public void deleteData(java.lang.String ID) {
    android.database.sqlite.SQLiteDatabase db = getReadableDatabase();
    db.execSQL(("DELETE FROM Reminder_tabledb WHERE _id =" + ID));
}

public static synchronized com.vcredit.cameraHelper.CameraInterface getInstance(android.content.Context context) {
    if ((com.vcredit.cameraHelper.CameraInterface.mCameraInterface) == null) {
        com.vcredit.cameraHelper.CameraInterface.mCameraInterface = new com.vcredit.cameraHelper.CameraInterface(context);
    }
    return com.vcredit.cameraHelper.CameraInterface.mCameraInterface;
}

@java.lang.Override
public android.content.Loader<java.util.List<fr.sims.coachingproject.model.UserProfile>> onCreateLoader(int id, android.os.Bundle args) {
    return new fr.sims.coachingproject.loader.network.GroupMembersLoader(getContext(), mGroupId, false);
}

public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    super.createHeaders("Milestones in:", ("Project: " + (this.mCallbacks.getSelectedProject().getName())));
    createAdapter();
}

@com.facebook.react.bridge.ReactMethod
public void isSimCardValid(com.facebook.react.bridge.Callback callback) {
    android.telephony.TelephonyManager tm = ((android.telephony.TelephonyManager) (this.reactContext.getSystemService(Context.TELEPHONY_SERVICE)));
    com.wangghon.RNSimInfo.Bool isSimCardValid = (tm.getSimState()) == (android.telephony.TelephonyManager.SIM_STATE_READY);
    callback.invoke(isSimCardValid);
}

private static void ensurePreferencesEditor(android.content.Context context) {
    if ((ds.framework.v4.Settings.sPreferencesEditor) == null) {
        ds.framework.v4.Settings.sPreferencesEditor = ds.framework.v4.Settings.getPreferencesEditor(context);
    }
}

@java.lang.Override
protected void logEvent(final java.lang.String event) {
    java.lang.String manager = getFragmentManager().toString();
    java.lang.String format = com.pajato.android.gamechat.chat.BaseChatFragment.FORMAT_NO_BUNDLE;
    android.util.Log.v(com.pajato.android.gamechat.chat.BaseChatFragment.TAG, java.lang.String.format(java.util.Locale.US, format, event, this, manager, mItemListType));
}

public void openDB() {
    if ((mSQLiteDatabase.isOpen()) == false)
        mSQLiteDatabase = android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(dbPath, null);
    
}

@java.lang.Override
public void onScrolled(android.support.v7.widget.RecyclerView recyclerView, int dx, int dy) {
    super.onScrolled(recyclerView, dx, dy);
    if (dy > 0) {
        mViewModel.hideLayoutFooter();
        return ;
    }
    mViewModel.showLayoutFooter();
}

@org.androidannotations.annotations.AfterViews
protected void init() {
    initSharedPreferences();
    scannerQrCode(getActivity());
}

@java.lang.Override
public void onClick(android.view.View v) {
    sharedRadio.setChecked(false);
    edit.remove(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.SHARED_BATHROOM);
    edit.remove(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.PRIVATE_BATHROOM);
    edit.putBoolean(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.SHARED_BATHROOM, true);
    edit.apply();
}

public void stopAlarm(android.view.View view) {
    if ((sm) != null) {
        sm.close();
    }
    finish();
    jd.android.myfirstapp.utils.Utils.release();
}

@java.lang.Override
protected void onPreExecute() {
    android.support.design.widget.Snackbar.make(mRootView, "Finished task, saving...", Snackbar.LENGTH_INDEFINITE).show();
    if ((!(mIsStepSaved)) || (!(mInEditMode))) {
        saveStep(findViewById(R.id.save_step_option_button));
    }
}

public de.androidpit.androidcolorthief.MMCQ.VBox clone() {
    de.androidpit.androidcolorthief.MMCQ.VBox clone = new de.androidpit.androidcolorthief.MMCQ.VBox(r1, r2, g1, g2, b1, b2, histo);
    return clone;
}

@java.lang.Override
protected void restoreUiState(@android.support.annotation.NonNull
android.os.Bundle savedInstanceState) {
    super.restoreUiState(savedInstanceState);
    progressLoading.setVisibility((savedInstanceState.getBoolean("progressLoadingVisible") ? android.view.View.VISIBLE : android.view.View.INVISIBLE));
    btnLoad.setEnabled(savedInstanceState.getBoolean("btnLoadEnabled"));
}

@android.support.annotation.DrawableRes
private int getStatusIcon(com.airmap.airmapsdk.models.rules.AirMapRule.Status status) {
    switch (status) {
        case Conflicting :
            return R.drawable.ic_restricted;
        case MissingInfo :
            return R.drawable.ic_asterisk;
        case InformationRules :
            return R.drawable.ic_asterisk_yellow;
        case NotConflicting :
            return R.drawable.ic_checkmark;
    }
    return R.drawable.com_auth0_lock_ic_check_error;
}

public void msgReciveManufacturer(de.dmarcini.submatix.android4.full.comm.BtServiceMessage msg) {
    if (de.dmarcini.submatix.android4.full.ApplicationDEBUG.DEBUG) {
        android.util.Log.d(de.dmarcini.submatix.android4.full.gui.MainActivity.TAG, (("SPX Manufacturer <" + ((java.lang.String) (msg.getContainer()))) + "> recived. Ignore."));
    }
}

private void parseServerData(java.lang.String dataFromServer, android.view.View rootView) {
    java.util.List<java.lang.String> arrayOfRankedStatus = java.util.Arrays.asList(dataFromServer.split("/"));
    setupTitle(rootView);
    setupRank(rootView, arrayOfRankedStatus);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    if ((Build.VERSION.SDK_INT) > 22) {
        if (needPermission()) {
            askForPermission();
        }
    }else {
        doDefaults();
    }
}

public static void initBackGroundMusic(int musicRaw) {
    try {
        com.android.sjsofteducationapp.utils.Sound.mService = new com.android.sjsofteducationapp.utils.MusicBackground(com.android.sjsofteducationapp.utils.Sound.mContext, musicRaw, true);
        com.android.sjsofteducationapp.utils.Sound.mService.execute("");
    } catch (java.lang.Exception ex) {
        ex.printStackTrace();
    }
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    super.onDismiss(dialog);
    if (facesDetected) {
        showPanel(com.android.gallery3d.filtershow.category.MainPanel.TRUEPORTRAIT);
    }else {
        v.setEnabled(false);
        com.android.gallery3d.filtershow.tools.TruePortraitNativeEngine.getInstance().showNoFaceDetectedDialog(getFragmentManager());
    }
}

@java.lang.Override
public void run() {
    android.view.View view = mCommentsLayoutManager.findViewByPosition(destPos);
    this.highlightRow(view);
}

public void startAndRestoreTime() {
    if ((this.pauseTime) > 0) {
        this.millisInFuture -= (android.os.SystemClock.elapsedRealtime()) - (this.pauseTime);
        this.pauseTime = 0;
    }
}

@java.lang.Override
public void onBackPressed() {
    myCountDownTimer.cancel();
    android.content.Intent intent = new android.content.Intent(this, com.randpdevs.calcoff.MainActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    lazaro.dam.gabriel.starwarsencyclopedia.ListItem deathstar = new lazaro.dam.gabriel.starwarsencyclopedia.ListItem("Estrella de la Muerte");
    lazaro.dam.gabriel.starwarsencyclopedia.ListItem millenniumfalcon = new lazaro.dam.gabriel.starwarsencyclopedia.ListItem("Halcón Milenario");
    data.add(deathstar);
    data.add(millenniumfalcon);
}

public void onItemLongClick(android.view.View view, int postion);

@java.lang.Override
public void onChanged(@android.support.annotation.Nullable
com.abnormallydriven.architecturecomponentspost.common.data.entities.User[] users) {
    userListAdapter.update(users);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (callBack != null)
        callBack.onReplay();
    
    dialog.dismiss();
}

@java.lang.Override
public void onClick(android.view.View view) {
    getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    (quantity)++;
    quantityTextView.setText(java.lang.Integer.toString(quantity));
}

private void addFragment(android.support.v4.app.Fragment fragment) {
    android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
    transaction.replace(R.id.place_fragement, inputPasscodeFragment);
    transaction.addToBackStack(null);
    transaction.commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    playVideo(p);
}

public static void showInputMethod(android.content.Context context) {
    android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (context.getSystemService(Context.INPUT_METHOD_SERVICE)));
    imm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(checkFileisDownloaded(filename))) {
        new com.thepoweroftether.interactivetraining.LearningModule.DownloadFileFromURL().execute(new java.lang.String[]{ com.thepoweroftether.interactivetraining.LearningModule.file_url , filename });
    }
}

private android.view.animation.Animation createFadeOutAnimation() {
    android.view.animation.Animation fadeOut = new android.view.animation.AlphaAnimation(1, 0);
    fadeOut.setInterpolator(new android.view.animation.AccelerateInterpolator());
    fadeOut.setDuration(me.anoxic.bulber2.BaseActivity.ANIMATION_DURATION);
    return fadeOut;
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    arret = marker.getTitle();
    btn8.setText(("Arrêt : " + (arret)));
    return false;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.event_list);
    displayPrivateEvents();
    client = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addApi(AppIndex.API).build();
}

@java.lang.Override
public void onSucces(com.evernote.edam.type.Note result) {
    android.util.Log.e("NOTECREATED", result.toString());
    recycleview.scrollToPosition(0);
    arrayNotes.add(0, result);
    adapter.animateTo(arrayNotes);
}

@java.lang.Override
public void waypointFileLoaded(org.droidplanner.android.utils.file.IO.MissionReader reader) {
    openedMissionFilename = getSelectedFilename();
    missionProxy.readMissionFromFile(reader);
    gestureMapFragment.getMapFragment().zoomToFit();
}

@java.lang.Override
protected void onFreeBitmap(android.graphics.Bitmap bitmap) {
    if (!(bitmap.isRecycled())) {
        bitmap.recycle();
    }
}

private static void setItemVisibility(android.app.Activity activity, int labelId, int spacerId, int valueId, boolean show) {
    org.cowboycoders.cyclismo.util.StatsUtils.setItemVisibility(activity, labelId, spacerId, valueId, show, true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (zillaAdapterButtonClickListener != null) {
        zillaAdapterButtonClickListener.onZillaAdapterButtonClick(((zilla.libcore.ui.util.Button) (v)), position);
    }
}

private void notifyStateChangedToListeners(@android.support.annotation.NonNull
android.view.View bottomSheet, @com.github.ljarka.filterbottomsheet.BottomSheetBehavior.State
int newState) {
    for (com.github.ljarka.filterbottomsheet.BottomSheetBehavior.BottomSheetCallback bottomSheetCallback : mCallback) {
        bottomSheetCallback.onStateChanged(bottomSheet, newState);
    }
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    out[0] = langList.get(position);
    validate();
}

@java.lang.Override
public void onClick(android.view.View v) {
    removeAt(holder.getAdapterPosition());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((check_if_SVM_params_set()) == false)
        return ;
    
    if ((is_svm_has_been_intialized) == false)
        initSVM();
    
    if (is_cropped)
        predict_this_picture();
    
}

public void nextActivity() {
    android.content.Intent templateIntent = new android.content.Intent(currentActivity, com.example.kbb12.dms.Template.TemplateActivity.class);
    templateIntent.putExtra("UserModel", model);
    currentActivity.startActivity(templateIntent);
}

public void onAddItem() {
    android.widget.EditText etNewItem = findViewById(R.id.etNewItem);
    java.lang.String itemText = etNewItem.getText().toString();
    itemsAdapter.add(itemText);
    etNewItem.setText("");
}

@java.lang.Override
public void onClick(android.view.View view) {
    lineNum = 0;
    currentText = "";
    log.setText(currentText);
    shapeLayout.removeAllViews();
    interpreter.clear();
}

public android.os.Bundle putParent(android.os.Parcelable superState) {
    android.util.Log.e("Save", baseKey);
    android.os.Bundle state = new android.os.Bundle();
    state.putParcelable(((baseKey) + "$$SUPER"), superState);
    return state;
}

@java.lang.Override
public boolean isPortrait() {
    if ((mNavigationManager) instanceof com.dmcapps.navigationfragment.manager.MasterDetailNavigationManagerFragment) {
        return ((com.dmcapps.navigationfragment.manager.MasterDetailNavigationManagerFragment) (mNavigationManager)).isPortrait();
    }else {
        android.util.Log.e("NavigationFragment", "isPortrait() - Navigation Manager must be a MasterDetailNavigationManagerFragment TODO Have all report this.");
        return false;
    }
}

public void onServiceDisconnected(android.content.ComponentName className) {
    android.util.Log.e(edu.grinnell.kdic.MainActivity.TAG, "onServiceDisconnected");
    boundToRadioService = false;
}

@java.lang.Override
public void onSaveSuccessful(long recordId) {
    android.widget.Toast.makeText(getActivity(), "CaseRgisterFragment save successfully", Toast.LENGTH_SHORT).show();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.cancel();
    finish();
    java.lang.System.exit(0);
    startActivityForResult(new android.content.Intent(android.provider.Settings.ACTION_SETTINGS), 0);
}

public void autoTwoLevelRefreshHint(@android.support.annotation.IntRange(from = 0, to = java.lang.Integer.MAX_VALUE)
int stayDuration) {
    autoTwoLevelRefreshHint(true, stayDuration);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_inbox);
    com.parse.Parse.enableLocalDatastore(this);
    com.parse.Parse.initialize(this, "H9NFC1K9LmahxGcCrMOdT0qMaE0lDGT6BgbrSOAc", "4K2VfxRGIyk69KlQJ2B8NMnD71llrlkEPLdTNh9M");
    new com.example.ricardogarcia.politojobs.Inbox.RetrieveFromDatabase().execute("rgarcia");
}

@java.lang.Override
public void onPostCreate(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState) {
    super.onPostCreate(savedInstanceState, persistentState);
    mActionBarDrawerToggle.syncState();
}

@java.lang.Override
public void onLongPress(android.view.MotionEvent e) {
    android.util.Log.i("Long Press", "gesture detector");
    android.widget.Toast.makeText(getActivity(), "Long Press (gesture detector)", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    dagger.android.support.AndroidSupportInjection.inject(this);
}

public void conceal(@android.support.annotation.Size(value = 2)
@android.support.annotation.NonNull
final int[] to) {
    changeState(de.wackernagel.android.sidekick.widgets.CircularRevealView.STATE_CONCEAL_STARTED);
    animationState = de.wackernagel.android.sidekick.widgets.CircularRevealView.ANIMATION_STARTING;
    circleX = to[0];
    circleY = to[1];
    android.support.v4.view.ViewCompat.postInvalidateOnAnimation(this);
}

public void newList() {
    android.content.Intent intent = new android.content.Intent(this, com.sashavarlamov.shubershop.NewListActivity.class);
    startActivity(intent);
}

public void tellJoke(android.view.View view) {
    new com.example.nik.builditbigger.MainActivity.EndpointsAsyncTask().execute(new android.support.v4.util.Pair<android.content.Context, java.lang.String>(this, " "));
}

@java.lang.Override
public void show() {
    if (isReady()) {
        android.app.Activity activity = weakActivity.get();
        if (activity != null) {
            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
        }
        ad.show();
    }
}

@java.lang.Override
public void onLoaderReset(android.content.Loader<android.graphics.Bitmap> loader) {
    mAdapter.swapCursor(null);
}

public static void init(android.content.Context appContext) {
    com.unit5app.Settings.load(com.unit5app.notifications.MyNotificationHandler.context);
    com.unit5app.notifications.MyNotificationHandler.context = appContext;
    com.unit5app.notifications.MyNotificationHandler.calendar = new com.unit5app.calendars.Unit5Calendar(60, false);
    com.unit5app.notifications.MyNotificationHandler.checkCalendarLoaded();
}

public static alex.imhere.fragment.StatusFragment newInstance(java.lang.String param) {
    alex.imhere.fragment.StatusFragment fragment = new alex.imhere.fragment.StatusFragment();
    android.os.Bundle args = new android.os.Bundle();
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    binder = new com.elirex.fayeclient.FayeService.FayeServiceBinder();
    startFayeClient();
    android.util.Log.i(com.elirex.fayeclient.FayeService.LOG_TAG, ("Faye Service Starts: " + (this)));
}

@java.lang.Override
public void turnFrontScreenFlashOn() {
    if (MyDebug.LOG)
        android.util.Log.d(vn.mbm.phimp.me.opencamera.MyApplicationInterface.TAG, "turnFrontScreenFlashOn");
    
    used_front_screen_flash = true;
    main_activity.setBrightnessForCamera(true);
    drawPreview.turnFrontScreenFlashOn();
}

@android.webkit.JavascriptInterface
public void reset() {
    stack.clear();
    nStep = -1;
    this.play = true;
    gameStates.clear();
    if ((lins) != null)
        lins.clear();
    
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        com.bdqn.zev.videowallpaperdemo.VideoLiveWallpaper.voiceSilence(this);
    }else {
        com.bdqn.zev.videowallpaperdemo.VideoLiveWallpaper.voiceNormal(this);
    }
}

private void displayScreen(net.rossharper.hexrot.android.ScreenFactory screenFactory) {
    mFragmentManager.beginTransaction().replace(mRootContainerId, ((android.app.Fragment) (screenFactory.getScreen()))).addToBackStack(null).commit();
}

public boolean updateAchievement(C change, android.content.Context context) {
    boolean wasUnlocked = isUnlocked();
    updater.updateAchievement(this, change, context);
    return (!wasUnlocked) && (isUnlocked());
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.awchoudhary.bookpocket.BookNote note = new com.awchoudhary.bookpocket.BookNote();
    note.setBookId(book.getId());
    notes.add(note);
    updateEntries(notes);
    newNoteButton.setVisibility(View.GONE);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.cancel();
    if (importFromFile()) {
        android.content.Intent i = new android.content.Intent(this, com.DataFinancial.NoteJackal.MainActivity.class);
        startActivity(i);
    }
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    android.util.Log.i(LOG_TAG, (((this.getClass().getSimpleName()) + (getId())) + ".onAttach()"));
    super.onAttach(context);
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent sensorEvent) {
    if ((sensorEvent.sensor.getType()) == (android.hardware.Sensor.TYPE_ACCELEROMETER)) {
        xAccel = sensorEvent.values[0];
        updatePlane();
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    pageList.get(pos).setIsSelected(isChecked);
}

@java.lang.Override
public void onPanelCollapsed(android.view.View view) {
    android.util.Log.d(com.gcw.sapienza.places.fragments.PlacesMapListFragment.TAG, "Panel collapsed");
    gMap.getUiSettings().setScrollGesturesEnabled(true);
}

@java.lang.Override
protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
    android.util.Log.e("tag", "on layout called");
    super.onLayout(changed, left, top, right, bottom);
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    outState.putString("WORKAROUND_FOR_BUG_19917_KEY", "WORKAROUND_FOR_BUG_19917_VALUE");
    super.onSaveInstanceState(outState);
}

public static void init(android.app.Application application) {
    com.vk.sdk.VKSdk.initialize(application);
    com.facebook.FacebookSdk.sdkInitialize(application.getApplicationContext());
}

public android.view.View newView(android.content.Context context, android.database.Cursor cusor, android.view.ViewGroup parent) {
    return this.mLayoutInflater.inflate(R.layout.colmn_row, parent, false);
}

@org.junit.After
public void deleteSQLDBObject() {
    mDB1.close();
    android.content.Context ctx = android.support.test.InstrumentationRegistry.getTargetContext();
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    android.widget.Toast.makeText(getContext(), databaseError.toString(), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    if (!(mCalculatorKeyboard.isCustomKeyboardVisible()))
        mCalculatorKeyboard.showCustomKeyboard(v);
    
    onTouchEvent(event);
    return false;
}

protected <T> void showActivity(java.lang.Class<T> cl) {
    android.app.Activity activity = getContext();
    activity.startActivity(new android.content.Intent(activity, cl));
}

public void fetchCalls(int callType, long newerThan, int sub) {
    cancelFetch();
    int requestId = newCallsRequest();
    fetchCalls(com.android.dialer.calllog.CallLogQueryHandler.QUERY_CALLLOG_TOKEN, requestId, callType, false, newerThan, sub);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    returnable.onResult(playerDataList.get(which));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    java.lang.System.out.printf("this is a test");
    android.content.Intent intent = new android.content.Intent(this, com.moss.dbreader.service.NovelEngineService.class);
    bindService(intent, this, Context.BIND_AUTO_CREATE);
}

public S hasStartTime(long time) {
    org.assertj.android.api.view.animation.AbstractAnimationAssert.isNotNull();
    long actualTime = actual.getStartTime();
    org.assertj.android.api.view.animation.AbstractAnimationAssert.assertThat(actualTime).overridingErrorMessage("Expected start time <%s> but was <%s>.", time, actualTime).isEqualTo(actualTime);
    return myself;
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (resultCode == (RESULT_CANCELED)) {
        ca.uottawa.cookapp.CookApp.Recipeadapter.notifyDataSetChanged();
        ca.uottawa.cookapp.CookApp.Favouriteadapter.notifyDataSetChanged();
    }
}

public void save(li.itcc.hackathon15.services.PoiDetailBean bean, android.graphics.Bitmap bitmap) {
    new li.itcc.hackathon15.poiadd.PoiAddSaver.SaveTask(bitmap).execute(bean);
}

@java.lang.Override
public void onBackPressed() {
    if ((bottomSheetBehavior.getState()) == (android.support.design.widget.BottomSheetBehavior.STATE_EXPANDED)) {
        bottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);
    }else {
        super.onBackPressed();
    }
}

public void close() {
    android.view.View drawer = robo.activity.findViewById(R.id.navigation_drawer);
    android.support.v4.widget.DrawerLayout view = ((android.support.v4.widget.DrawerLayout) (robo.activity.findViewById(R.id.drawer_layout)));
    view.closeDrawer(drawer);
    updateOpenCloseState();
    open();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    if (activity instanceof com.thejakeofink.mountainviewgirlscamp.InitialPageActivity) {
        ((com.thejakeofink.mountainviewgirlscamp.InitialPageActivity) (activity)).registerFragmentHandler(mHandler);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    ru.mail.park.android_wikipedia.fragments.MainFragment.refresh();
    ru.mail.park.android_wikipedia.fragments.SavedArticlesFragment.refresh();
    new ru.mail.park.android_wikipedia.ServiceHelper().cleanDB(getActivity());
}

private void writeData(byte[] buf) throws java.io.IOException {
    android.util.Log.d(TAG, ("Sending: " + (java.util.Arrays.toString(buf))));
    m_device.write(buf, buf.length);
}

@java.lang.Override
public android.view.View getSelectedView() {
    throw new java.lang.UnsupportedOperationException("Not supported.");
}

@java.lang.Override
public void onClick(android.view.View v) {
    super.onClick(v);
    switch (v.getId()) {
        case R.id.index_user :
            startActivity(new android.content.Intent(mContext, com.zzn.aeassistant.activity.user.UserActivity.class));
            break;
    }
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    android.util.Log.d(com.mpfarmer.facebookintegration.FriendsActivity.TAG, ("onStop() " + (this.hashCode())));
}

void saveAs(android.content.Context context, android.net.Uri uri) {
    ca.rmen.android.poetassistant.main.reader.PoemFile.save(context, uri, poem.get().toString(), mPoemFileCallback);
}

public org.ramonaza.officialramonapp.people.rides.backend.RidesOptimizer setAlgorithm(int algorithm, boolean retainPreexisting) {
    this.algorithm = algorithm;
    this.retainPreexisting = retainPreexisting;
    android.util.Log.d("Opt", ("Algorithm Set: " + algorithm));
    return this;
}

public static void majTheme(android.content.Context context) {
    int theme = fr.ybo.transportsrennes.application.TransportsRennesApplication.getTheme(context);
    switch (theme) {
        case 1 :
            context.setTheme(R.style.Theme_TransportsRennes_black);
            break;
        default :
            context.setTheme(R.style.Theme_TransportsRennes);
            break;
    }
}

@java.lang.Override
public void onActivityDestroyed(android.app.Activity activity) {
    ((android.app.Activity) (getContext())).getApplication().unregisterActivityLifecycleCallbacks(this);
}

@java.lang.Override
public void onPushStatus(android.content.Context context, com.meizu.cloud.pushsdk.platform.message.PushSwitchStatus pushSwitchStatus) {
    android.util.Log.i(com.jiang.android.push.flyme.FlymeReceiver.TAG, ("onPushStatus: " + (pushSwitchStatus.toString())));
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    return finalView;
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    fabDrawable.startTransition(500);
}

@java.lang.Override
public void onClick(android.view.View v) {
    new com.example.buzalo.OneProductActivity.BuyProduct().execute();
    android.widget.Toast.makeText(this, "Спасибо за покупку", Toast.LENGTH_SHORT).show();
}

private void sendData() {
    android.util.Log.d(org.astrobotics.ds2016.io.Protocol.TAG, "Adding Data to send queue");
    sendQueue.offer(new org.astrobotics.ds2016.io.Protocol.ControlData(controlData));
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    android.content.Intent getIntent = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT);
    getIntent.setType("image/*");
    android.content.Intent pickIntent = new android.content.Intent(android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
    pickIntent.setType("image/*");
    startActivityForResult(pickIntent, nl.hu.fed.actortemplateapp.activity.CreatePerson.SELECT_PHOTO);
}

@java.lang.Override
public void onClick(android.view.View v) {
    textView1.setText(android.text.Html.fromHtml(getString(R.string.long_text_1)));
}

@java.lang.Override
public void onClick(android.view.View view) {
    getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    (quantity)--;
    quantityTextView.setText(java.lang.Integer.toString(quantity));
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.school_course_base_fragment, container, false);
    return view;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (establishConnection()) {
        toast(R.string.successful_connection);
        mMessageView.setText(connection.getReply());
        writeHistory();
    }else {
        toast(R.string.failed_connection);
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.content.Intent intent = new android.content.Intent();
    intent.putExtra("data_return", word);
    setResult(com.example.a99460.smartnote.RESULT_OK, intent);
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, io.moffat.kitchenpal.AddItem.class);
    intent.putExtra(io.moffat.kitchenpal.ShoppingList.EXTRA_MESSAGE, "shoppingList");
    startActivity(intent);
}

@java.lang.Override
public void onSuccess(@android.support.annotation.NonNull
es.uv.uvlive.data.gateway.response.MessageListResponse messageListResponse) {
    onMessagesReceived(messageListResponse);
    if ((messageListResponse.getMessages().size()) == 0) {
        endList = true;
        return ;
    }
}

public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    ((com.upc.fib.racopocket.MainMenuActivity) (getActivity())).setActionBarDesign("Notifications");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initView();
    mTimer.schedule(mTimerTask, 5000, 3000);
}

@java.lang.Override
public void start(android.app.Activity activity, @android.support.annotation.NonNull
java.lang.String connectionName) {
    checkPermissions(activity, connectionName);
}

public void setOnItemClickListener(@android.support.annotation.Nullable
com.orhanobut.dialogplus.OnItemClickListener listener) {
    if (listener == null) {
        itemListener = listener;
    }
}

@java.lang.Override
public void onBackPressed() {
    android.content.Intent intent = new android.content.Intent();
    intent.setClass(this, com.example.stairs.MainActivity.class);
    startActivity(intent);
    this.finish();
    init();
}

public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH)) {
        clearSuggestions();
        fromEditingToSearch();
        return true;
    }
    return false;
}

@java.lang.Override
public void toNext() {
    android.net.Uri uri = getPlayInfoInner().nextOne(playRandomly());
    if (uri != null) {
        play(uri, 0);
    }else {
        stop();
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    finish();
    java.lang.System.exit(1);
}

@java.lang.Override
public void onClick(android.view.View view) {
    choiceC.setBackground(drw);
    choiceB.setBackgroundResource(0);
    choiceA.setBackgroundResource(0);
    answers[position] = 2;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(context, "添加", Toast.LENGTH_SHORT).show();
    ((org.bridge.activity.MainActivity) (context)).startPubNoteIntent();
}

private java.lang.String getToken() {
    return mSharedPreferences.getString(eu.marcocattaneo.androidinstagramconnector.connection.InstagramSession.PREF_SHARED_TOKEN, null);
}

@java.lang.Override
public void destroyItem(android.view.View container, int position, java.lang.Object object) {
    ((android.support.v4.view.ViewPager) (container)).removeView(views.get(position));
}

public static void stop(android.content.Context context) {
    if ((aditi.hangman.Music.mp) != null) {
        android.util.Log.v(aditi.hangman.Music.TAG, "stopping music");
        aditi.hangman.Music.mp.stop();
        aditi.hangman.Music.mp.release();
        aditi.hangman.Music.mp = null;
    }
}

@java.lang.Override
public boolean onDoubleTap(android.view.MotionEvent e) {
    view.onResetLocation();
    return true;
}

@java.lang.Override
public boolean onDoubleTap(android.view.MotionEvent event) {
    skyMapRenderer.handleDoubleTap(event);
    return true;
}

public static com.google.android.exoplayer.SimpleExoPlayer newSimpleInstance(android.content.Context context, com.google.android.exoplayer.TrackSelector trackSelector) {
    return com.google.android.exoplayer.ExoPlayerFactory.newSimpleInstance(context, trackSelector, null, false);
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.content.Intent intent;
    intent = new android.content.Intent(this, com.breadwallet.presenter.activities.MainActivity.class);
    startActivity(intent);
    if (!(isDestroyed())) {
        finish();
    }
}

@android.support.annotation.Nullable
@com.google.gson.annotations.SerializedName(value = "location")
@java.lang.SuppressWarnings(value = "mutable")
abstract double[] rawLocation();

@java.lang.Override
public void notifySuccessful() {
    android.widget.Toast.makeText(this.context, ((this.firstnameEditText) + (getString(R.string.user_registered_notify_message))), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected com.example.android.bakingapp.data.RecipeData doInBackground(java.lang.Void... voids) {
    com.example.android.bakingapp.data.RecipeData collection = com.example.android.bakingapp.tools.NetworkUtils.fetch();
    updateRecipeData(collection);
    return collection;
}

public void setSpinnerChoice(com.MagikSquirrel.backgammon.gameBoard gameBoard, int iChoice) {
    android.widget.ArrayAdapter aChoices = ((android.widget.ArrayAdapter) (_sSrcPoint.getAdapter()));
    int iPosition = aChoices.getPosition(java.lang.Integer.toString(iChoice));
    _sSrcPoint.setSelection(iPosition);
}

public java.lang.String BitMapPath(android.graphics.Bitmap bitmap) {
    return marketo.utils.MktoUtils.readPreference(activityContext, com.marketo.plugin.MarketoPlugin.KEY_FOR_NOTIFICATION_ICON);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((isKeyboardShown) && (tapBarMenu.isOpened())) {
        hideKeyboard(dialogView);
        return ;
    }
    tapBarMenu.toggle();
}

public static void initialize(android.content.Context context) {
    com.chenenyu.router.RealRouter.get().initMapping(context);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (((org.gtlp.yasb.SoundActivity.soundPlayerInstance) != null) && (org.gtlp.yasb.SoundActivity.soundPlayerInstance.isPlaying())) {
        org.gtlp.yasb.SoundActivity.soundPlayerInstance.pause();
    }
}

public void onClick(android.view.View v) {
    playerStrawSelected = false;
    coinCycle = genRand(2);
    dialog.dismiss();
    spinCoin();
}

@java.lang.Deprecated
public static synchronized org.empyrn.darkknight.bluetooth.BluetoothGameController getLastInstance(android.content.Context context) {
    if ((org.empyrn.darkknight.bluetooth.BluetoothGameController.mLastInstance) == null) {
        org.empyrn.darkknight.bluetooth.BluetoothGameController.mLastInstance = new org.empyrn.darkknight.bluetooth.BluetoothGameController(context);
        org.empyrn.darkknight.bluetooth.BluetoothGameController.mLastInstance.setDiscoverable(context);
    }
    return org.empyrn.darkknight.bluetooth.BluetoothGameController.mLastInstance;
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((SightingModel.model.getSightings().size()) == 0) {
        (alreadyRead)++;
        launchActivity2();
    }else {
        launchActivity3();
    }
}

public void updateText(java.lang.String newText) {
    android.util.Log.i("ContentView", ((("Calling update text for " + (name)) + " with value ") + (value)));
    value = newText;
    valueView.setText(value);
}

@java.lang.Override
public void onStart() {
    super.onStart();
    auth.addAuthStateListener(authStateListener);
    android.util.Log.d(TAG, "MainActivity onStart: ");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_pay);
    event = getIntent().getParcelableExtra(com.niupiao.niupiao.activities.PayActivity.INTENT_KEY_FOR_EVENT);
    paymentManager = new com.niupiao.niupiao.managers.PaymentManager(event);
    show(com.niupiao.niupiao.activities.PayActivity.PaymentPhase.PURCHASE_TICKETS);
}

public void onPrepared(android.media.MediaPlayer player) {
    startPlayer();
    timePlay = 0;
    android.content.Intent intent = new android.content.Intent(com.example.framgianguyenkeninh.gethtml.AppConst.ON_PREPARED);
    intent.putExtra(AppConst.KEY_DURATION, player.getDuration());
    sendBroadcast(intent);
}

@org.chromium.base.annotations.CalledByNative
private void onIconAvailable(android.graphics.Bitmap icon) {
    mObserver.onIconAvailable(icon);
    mIsInitialized = true;
}

public void openFragment(android.support.v4.app.Fragment fragment) {
    getSupportFragmentManager().beginTransaction().add(R.id.container_main, fragment).commit();
}

protected void addMarkerToMap(com.google.android.gms.maps.model.LatLng loc, int text) {
    com.google.maps.android.ui.IconGenerator iconFactory = new com.google.maps.android.ui.IconGenerator(this.getActivity());
    iconFactory.setStyle(IconGenerator.STYLE_PURPLE);
    addIcon(iconFactory, java.lang.Integer.toString(text), loc);
}

@java.lang.Override
public void onBackPressed() {
    org.looa.vision.PrismSE.getInstant().finish(imageView);
    org.looa.vision.PrismSE.getInstant().overridePendingTransition(0, android.R.anim.fade_out);
}

@java.lang.Override
public boolean onGroupClick(android.widget.ExpandableListView parent, android.view.View v, int groupPosition, long id) {
    return true;
}

public void setCenter(android.graphics.PointF center) {
    edu.kuzmik.MyLog.v("Sector, SetCenter");
    mCenter = center;
    notifyDataChanged();
}

@java.lang.Override
public void onServicesDiscovered(android.bluetooth.BluetoothGatt gatt, int status) {
    android.util.Log.d(com.pmdsolutions.gentiantestapp.SICActivity.TAG, ("Services Discovered: " + status));
    com.pmdsolutions.gentiantestapp.SICActivity.mHandler.sendMessage(android.os.Message.obtain(null, com.pmdsolutions.gentiantestapp.SICActivity.MSG_PROGRESS, "Enabling Sensors..."));
    reset();
    writeSecurity();
}

@java.lang.Override
public void onUpdate(boolean root, com.jecelyin.android.file_explorer.io.JecFile f) {
    isRoot = root;
    path = f;
}

public void onChildRemoved(com.google.firebase.database.DataSnapshot dataSnapshot) {
    android.widget.Toast.makeText(getContext(), "child removed", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onSuccess(java.lang.Void aVoid) {
    android.widget.Toast.makeText(this, (url + " deleted successfully"), Toast.LENGTH_SHORT).show();
}

public void addRandomColor() {
    int rand = random.nextInt(4);
    java.lang.Integer randButtn = buttonArray[rand];
    computerColors.add(randButtn);
    android.util.Log.d("addRandomColorHasAdded", buttonArray[rand].toString());
}

private void replaceWithChatFragment() {
    it.polito.group05.group05.ChatFragment chat = it.polito.group05.group05.ChatFragment.newInstance();
    android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
    fab.hide();
    transaction.replace(R.id.fragment_container, chat).commit();
}

private void drawSelf(android.graphics.Canvas canvas) {
    android.graphics.Paint paint = new android.graphics.Paint();
    paint.setColor(Color.BLUE);
    canvas.drawCircle(rx, ry, (2 * (radius)), paint);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    android.widget.Toast.makeText(getApplicationContext(), "Cancel", Toast.LENGTH_SHORT).show();
    dialog.cancel();
}

@java.lang.Override
public void onClick(android.view.View view) {
    registerPresenter.register(emailText.getText().toString(), nameText.getText().toString(), pwText.getText().toString());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((android.support.v4.content.ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.READ_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        requestPermissions(new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE }, com.matthias.android.amginori.fragments.MainFragment.REQUEST_READ_EXTERNAL_STORAGE_CODE);
    }else {
        displayFileChooser();
    }
}

public void initSwipeListener() {
    android.support.v7.widget.helper.ItemTouchHelper.Callback vSwipeCallback = new za.co.dvt.taskify.utils.TaskSwipeHelper(mListAdapter, getApplicationContext());
    android.support.v7.widget.helper.ItemTouchHelper vHelper = new android.support.v7.widget.helper.ItemTouchHelper(vSwipeCallback);
    vHelper.attachToRecyclerView(rcToDOItems);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (v.isFocused()) {
        com.dqhuynh.gplace.fragment.SearchFragment.selectedPlaceTypes.remove(v.getTag());
        v.setVisibility(View.GONE);
    }
}

protected void onPostExecute(xyz.pinaki.revlchallenge.data.ImageSearchResult result) {
    android.util.Log.i("PINAKI-onPostExecute", "onPostExecute");
    thumbnailRecyclerViewAdapter.update(result);
    thumbnailRecyclerViewAdapter.notifyDataSetChanged();
    offset = (offset) + (count);
}

@java.lang.Override
public void onBackPressed() {
    super.onBackPressed();
    update_storage();
    android.content.Intent intent = new android.content.Intent(this, com.example.matheus.taskbar.MainActivity.class);
    startActivity(intent);
    finishAffinity();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.util.Log.v(TAG, "onCreateView()");
    mContentView = inflater.inflate(R.layout.fragment_now_playing, container, false);
    return mContentView;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putSerializable("disturbances", disturbances);
    outState.putLong("updated", lastUpdate.getMillis());
}

@java.lang.Override
protected void onPostExecute(java.lang.Integer z) {
    android.util.Log.d("This", this.mContext.getClass().toString());
    com.example.etaspare.stitchcounter.LibraryActivity context = ((com.example.etaspare.stitchcounter.LibraryActivity) (this.mContext));
    context.updateCursor();
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.String searchString = profileName.getText().toString();
    new it15ns.friendscom.grpc.GrpcTask(it15ns.friendscom.grpc.GrpcRunnableFactory.getSearchProfileRunnable(searchString, this), getApplicationContext()).execute();
}

private static boolean checkNeed(android.content.Context context) {
    return !(jp.hazuki.yuzubrowser.utils.PermissionUtils.getPref(context).getBoolean(jp.hazuki.yuzubrowser.utils.PermissionUtils.NO_NEED, false));
}

public void startFragment(android.app.Fragment fragment) {
    android.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
    fragmentTransaction.add(R.id.create_workout_fragment_container, fragment);
    fragmentTransaction.addToBackStack(null);
    fragmentTransaction.commit();
}

@java.lang.Override
public void onActivityStopped(android.app.Activity activity) {
    synchronized(this) {
        activityStack.pop();
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    Auth.GoogleSignInApi.signOut(mGoogleClient);
    com.example.jeobmallari.ilib.Home.super.onBackPressed();
}

@java.lang.Override
public boolean onKey(android.content.DialogInterface dialog, int keyCode, android.view.KeyEvent event) {
    if (keyCode == (android.view.KeyEvent.KEYCODE_BACK)) {
        finish();
        startActivity(getIntent());
    }
    return true;
}

@java.lang.Override
public void onScaleEnd(android.view.ScaleGestureDetector detector) {
    super.onScaleEnd(detector);
    mediaAdapter.setOnClickListener(photosOnClickListener);
    mediaAdapter.setOnLongClickListener(photosOnLongClickListener);
    swipeRefreshLayout.setEnabled(true);
}

public static void storePictureToCollection(android.graphics.Bitmap bitmap, java.lang.String filename) throws java.lang.Exception {
    com.thirty.java.newsapp.PictureApi.storePictureToDir(bitmap, com.thirty.java.newsapp.PictureApi.getPictureCollectionDirectory().toString(), filename);
}

private void deleteIngredient(int position) {
    mIngredientList.remove(position);
    mAddList.remove(position);
    android.widget.Toast.makeText(mContext, "Ingredient removed!", Toast.LENGTH_SHORT).show();
    notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.view.View v) {
    listener.onItemClicked(v, photo);
}

private void updateAccelerometer(final java.util.ArrayList<java.lang.Double> data) {
    android.app.Activity activity = activityRef.get();
    if (activity != null) {
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    if ((item.getItemId()) == (R.id.action_refresh)) {
        fetchWCList();
    }
    return true;
}

@java.lang.Override
public boolean onGroupClick(android.widget.ExpandableListView parent, android.view.View v, int groupPosition, long id) {
    startActivity(v.getContext(), groupPosition);
    return false;
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    setValue(getValue(numberPicker));
    dialog.dismiss();
    layout.removeView(numberPicker);
    onClose(true);
}

private java.util.List<android.net.Uri> extractInputUrlsFromIntent(android.content.Intent intent) {
    java.util.ArrayList<android.net.Uri> uris = intent.getParcelableArrayListExtra(vandy.mooc.assignments.assignment.activities.GalleryActivity.INTENT_EXTRA_URLS);
    if (validateInput(uris)) {
        return uris;
    }else {
        return new java.util.ArrayList<android.net.Uri>();
    }
}

public static void handlePowerGroupListener(com.google.firebase.database.ChildEventListener childEventListener, java.lang.String groupName) {
    android.util.Log.d(tomi.piipposoft.blankspellbook.PowerList.PowerListPresenter.TAG, ("handlePowerGroupListener: added new listener: " + childEventListener));
    tomi.piipposoft.blankspellbook.PowerList.PowerListPresenter.powerGroupListeners.put(childEventListener, groupName);
}

private void toggleLaridaar() {
    laridaarMode = !(laridaarMode);
    laridaarSetup();
    ((android.widget.SimpleAdapter) (((android.widget.HeaderViewListAdapter) (shabadView.getAdapter())).getWrappedAdapter())).notifyDataSetChanged();
}

@java.lang.Override
public void onSuccess(com.google.firebase.storage.UploadTask.TaskSnapshot taskSnapshot) {
    android.util.Log.d(com.concavenp.artistrymuse.services.UploadService.TAG, "uploadFromUri:onSuccess");
    android.net.Uri downloadUri = taskSnapshot.getMetadata().getDownloadUrl();
    broadcastUploadFinished(downloadUri, fileUri);
    showUploadFinishedNotification(downloadUri, fileUri);
    taskCompleted();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    return inflater.inflate(R.layout.fragment_users, container);
}

@java.lang.Override
public void onPause() {
    android.util.Log.i(com.tapifolti.emotiondetection.EmotionDetectionFragment.TAG, "onPause() called");
    mAppIsResumed = false;
    mUIHandler.removeCallbacks(takePictureTask);
    closeCamera();
    stopBackgroundThreads();
    super.onPause();
}

@java.lang.Override
public boolean onStartJob(android.app.job.JobParameters params) {
    android.util.Log.v(ca.rmen.android.poetassistant.wotd.WotdJobService.TAG, ("onStartJob: params " + params));
    mTask.execute();
    return true;
}

void openCellWithAnimate(android.widget.ImageView imageView, int coordinate) {
    this.imageView = imageView;
    this.coordinate = coordinate;
    isFastAnimation = false;
    isMineAnimation = false;
    openCell();
    imageView.startAnimation(shrink);
}

@butterknife.OnClick(value = R.id.image_map)
public void showMap() {
    setBottomIconDefaultColor();
    mImageMap.setColorFilter(android.support.v4.content.ContextCompat.getColor(this, R.color.colorPrimary));
}

@java.lang.Override
@android.support.annotation.Nullable
public com.zuluft.autoadapter.renderables.IRenderer getItem(int position) {
    try {
        return mRenderers.get(position);
    } catch (java.lang.IndexOutOfBoundsException ex) {
        return null;
    }
}

@java.lang.Override
public void onPwsResultAbsent(java.lang.String url) {
    android.widget.Toast.makeText(getApplicationContext(), getString(R.string.shorten_error), Toast.LENGTH_LONG).show();
    stopSelf();
    return ;
}

private boolean isTransactionToBeNotified(com.bitdubai.fermat_api.layer.all_definition.transaction_transference_protocol.crypto_transactions.CryptoStatus cryptoStatus) throws com.bitdubai.fermat_api.layer.osa_android.database_system.exceptions.CantExecuteQueryException {
    boolean isPending = assetReceptionDao.isPendingTransactions(cryptoStatus);
    return isPending;
}

@java.lang.Override
public void onMapClick(com.google.android.gms.maps.model.LatLng latLng) {
    com.google.android.gms.maps.model.MarkerOptions options = new com.google.android.gms.maps.model.MarkerOptions().position(latLng);
    options.title(getAddressFromLatLng(latLng));
    options.icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker());
}

@butterknife.OnClick(value = R.id.tv_emergency)
void navigateEmergency() {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.zhour.zhoursecurity.activities.GuestAndStaffActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    this.finish();
    overridePendingTransition(R.anim.open_main, R.anim.close_next);
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.nrct.application.main.NrctMainActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    ir.rasen.charsoo.view.dialog.DialogUnfollowBusinessConfirmation d = new ir.rasen.charsoo.view.dialog.DialogUnfollowBusinessConfirmation(context, businessId, progressDialog, iUnfollowBusiness);
    d.show();
    this.dismiss();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    com.techlung.moodtracker.settings.Preferences.initPreferences(context);
    com.techlung.moodtracker.notification.NotificationManager.setNextNotification(context, true);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    refreshScreen();
    adapter = new android.widget.ArrayAdapter<com.example.owenm_000.countbook2.Counter>(this, android.R.layout.simple_list_item_1, android.R.id.text1, counters);
    listView.setAdapter(adapter);
    loadFromFile();
}

public void cancel() {
    try {
        socket.close();
    } catch (java.io.IOException e) {
        android.util.Log.e(com.henrykvdb.sttt.Bluetooth.TAG, "close() of connect socket failed", e);
    }
}

@java.lang.Override
public void onInputDialogCancelClick() {
    ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout))).closeDrawers();
}

public void onClick(android.view.View v) {
    mCountDownTimer.pause();
    android.content.Intent intentMain = new android.content.Intent(this, com.example.masha.countdowntimer.DisplayExercises.class);
    this.startActivity(intentMain);
}

public android.widget.ListAdapter adapter(java.util.ArrayList<java.lang.String> arrayList) {
    return new android.widget.ArrayAdapter(this, android.R.layout.simple_list_item_1, arrayList);
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeString(name);
    dest.writeString(location);
    dest.writeLong(date_created);
    dest.writeParcelable(data, 0);
}

@java.lang.Override
public void showOrders(@android.support.annotation.NonNull
java.util.List<com.e1858.building.data.bean.BaseOrder> orders) {
    mAdapter.updateDataSet(processData(orders), true);
    mAdapter.setEndlessProgressItem(new com.e1858.building.base.LoadMoreProgressItem());
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    syncronizeChannels(false);
}

@java.lang.Override
public void onLoadMore(int page, int totalItemsCount, android.support.v7.widget.RecyclerView view) {
    if (com.jakester.nytarticlesapp.managers.InternetManager.getInstance(this).isInternetAvailable()) {
        makeArticlesCall(com.jakester.nytarticlesapp.activities.MainActivity.mQuery, 0);
    }else {
        noInternetDialog.show();
    }
}

@java.lang.Override
public void onItemClick(android.view.View view, int position) {
    com.kong.app.news.beans.NewModel news = mAdapter.getItem(position);
    com.kong.app.news.NewsEntry.get().startBrowser(getContext(), news.newUrl, news.title);
}

public boolean expandParent(int parentPosition) {
    int parentAdapterPosition = getParentAdapterPosition(parentPosition);
    return (parentAdapterPosition != (android.support.v7.widget.RecyclerView.NO_POSITION)) && (expandViews(parentAdapterPosition));
}

public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(this, com.codepath.packagetwitter.FileUploadActivity.class);
    i.putExtra("USER", org.parceler.Parcels.wrap(user));
    startActivity(i);
}

@java.lang.Override
void apply(android.text.SpannableStringBuilder sb, int sequencePos, android.content.Context context, java.util.regex.Matcher textMatcher) {
    addEmptyLine(sb, 0.5F);
    sb.append(textMatcher.group(1));
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    if (!(updating)) {
        updateView(se.mecona.cuttingspeed.MainActivity.SourceEnum.DIAMETER);
    }
}

public void init(android.content.Context context) {
    boolean debug = ((boolean) (com.miguelgaeta.bootstrap.mg_reflection.MGReflection.getBuildConfigValue(context, "DEBUG")));
    timber.log.Timber.plant((debug ? new timber.log.Timber.DebugTree() : new com.miguelgaeta.bootstrap.mg_log.MGLogConfig.ProductionTree(info, error)));
}

@java.lang.Override
public void onClick(final android.content.DialogInterface dialog, final int whichButton) {
    dialog.dismiss();
}

@java.lang.Override
protected void onDestroy() {
    android.util.Log.w(com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG, "Destroy background");
    recycleView(R.id.list_top);
    super.onDestroy();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mFile = getIntent().getParcelableExtra(com.stevenschoen.putionew.tv.TvPlaybackOverlayActivity.ARG_FILE);
    setContentView(R.layout.tv_playback_activity);
    loadViews();
    setupCallbacks();
    overScan();
}

@java.lang.Override
public void onClick(android.view.View view) {
    dialogDrinkAccepted.dismiss();
    winnerDrink = 2;
    finishDialogChooseDrink(position2);
}

@java.lang.Override
public void handleGrip(int pointerIndex, int pointerId, android.view.MotionEvent ev) {
    y = ev.getY(pointerIndex);
    contentBottomFixed = contentBottomCurrent;
    velocityTracker = android.view.VelocityTracker.obtain();
    velocityTracker.addMovement(ev);
    animator.cancel();
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mediaPlayer) {
    progressDialog.dismiss();
    myVideoView.seekTo(videoPosition);
    if ((videoPosition) == 0) {
        myVideoView.start();
    }else {
        myVideoView.pause();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_intro);
    prepareStartButton();
}

@java.lang.Override
public void onClick(boolean isPositive) {
    com.onelio.connectu.Device.DeviceManager.addShortcutToHorario(getApplicationContext());
    android.widget.Toast.makeText(getBaseContext(), getString(R.string.created_shortcut), Toast.LENGTH_LONG);
}

public void addTask(com.appers.ayvaz.thetravelingsalesman.models.Task item) {
    android.content.ContentValues values = getContentValues(item);
    mDatabase.insert(DbSchema.TaskTable.NAME, null, values);
}

public void setAccessToken(java.lang.String accessToken) {
    android.util.Log.i("token is", ("" + accessToken));
    googleAccessProtectedResource.setAccessToken(accessToken);
    no.niths.android.common.AppController.token = accessToken;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    butterknife.ButterKnife.inject(this);
    setSupportActionBar(toolbar);
    userInfo = android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
    appDrawer();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    login_deal_flag = new com.jiaying.workstation.utils.DealFlag();
    com.jiaying.workstation.thread.ObservableZXDCSignalListenerThread observableZXDCSignalListenerThread = new com.jiaying.workstation.thread.ObservableZXDCSignalListenerThread();
    observableZXDCSignalListenerThread.start();
}

@java.lang.Override
public void onClick(android.view.View v) {
    imageViewResult4.setBackgroundColor(getResources().getColor(R.color.Black));
    band4 = 1;
    doCalc();
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar seekBar) {
    if (com.hungnt.customlogin.fragments.MusicPlayerFragment.isPlaying)
        seekTime();
    
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle savedInstanceState) {
    savedInstanceState.putInt(com.example.android.quizapp.MainActivity.STATE_SCORE, score);
    super.onSaveInstanceState(savedInstanceState);
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    android.util.Log.e("Error", "That didn't work!");
    hideProgressDialog();
    android.widget.Toast.makeText(getApplicationContext(), "Error connecting to server please try again.", Toast.LENGTH_LONG).show();
}

public <T> void addToRequestQueue(com.android.volley.Request<T> req) {
    req.setTag(com.raxdenstudios.http.HttpAsyncClient.TAG);
    getRequestQueue().add(req);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mIntent.putExtra("station", "0");
    StationIntent.putExtra("ID", SelectedID);
    finish();
    startActivity(mIntent);
}

@java.lang.Override
public void run() {
    android.util.Log.d(LOG_TAG, "TaskPresenter");
    presentData();
    if (isRunning)
        timerPresenter.schedule(new obd2.dhbw.de.obd2_reader.MainActivity.TaskPresenter(), PRESENTER_INTERVAL);
    
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.example.android.popularmoviesstagetwo.model.ReviewListResponse> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(getActivity(), "Throw up", Toast.LENGTH_LONG).show();
}

public void onActivityCreated(android.os.Bundle b) {
    if (getArguments().getBoolean(edu.cascadia.doodlebug.DrawFragment.TAKE_PHOTO))
        takePhoto();
    
}

@java.lang.Override
public void onEventClick(com.alamkanak.weekview.WeekViewEvent event, android.graphics.RectF eventRect) {
    android.widget.Toast.makeText(this, ("Clicked " + (event.getName())), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected java.lang.Boolean doInBackground(java.lang.Void... voids) {
    try {
        deleteLocalUserFiles();
        downloadImages();
        return true;
    } catch (java.lang.Exception e) {
        android.util.Log.e("downloadImages", e.toString());
        return false;
    }
}

@java.lang.Override
public void onSendMessageSuccess() {
    if ((getActivity()) != null) {
        android.widget.Toast.makeText(getActivity(), R.string.message_send_success, Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    (timePlay)++;
    android.content.Intent intent = new android.content.Intent(com.example.framgianguyenkeninh.gethtml.AppConst.ON_COMPLETED);
    intent.putExtra(AppConst.KEY_TIME_PLAY, timePlay);
    sendBroadcast(intent);
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.i(net.nitroshare.android.transfer.TransferService.TAG, java.lang.String.format("transfer %d succeeded", transferId));
    showSuccessNotification(transferId, device);
}

void doBindService() {
    android.content.Intent intent = new android.content.Intent(this, com.squareup.leakcanary.assistivetouch.AssistiveGuardService.class);
    intent.putExtra(AssistiveGuardService.BIND_KEY, AssistiveGuardService.BIND_DISPLAY_LEAK_ACTIVITY);
    bindService(intent, connection, Context.BIND_AUTO_CREATE);
    mIsBound = true;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    this.setContentView(R.layout.activity_home_screen);
    super.onCreate(savedInstanceState);
}

@java.lang.Override
protected void doEvent(android.app.Activity activity) {
    if (!(net.anei.cadpage.SmsPopupUtils.haveNet(activity)))
        return ;
    
    net.anei.cadpage.donation.DonationManager.instance().refreshStatus(activity);
    closeEvents(activity);
}

public static java.util.List<net.spaceboats.busbus.android.Entites.Entity> queryArrivals() {
    if (net.spaceboats.busbus.android.DbHelper.EntityDbDelegator.sDbUpdated)
        net.spaceboats.busbus.android.DbHelper.EntityDbDelegator.sArrivals = net.spaceboats.busbus.android.DbHelper.EntityDbDelegator.sArrivalDbOperator.query();
    
    return net.spaceboats.busbus.android.DbHelper.EntityDbDelegator.sArrivals;
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_sec, container, false);
    mContext = container.getContext();
    initView(view);
    initListener();
    return view;
}

private boolean saving(android.graphics.Point p1, android.graphics.Point p2) {
    if (isSameColour(p1, p2))
        return true;
    
    return false;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    displayLocation();
    if (mRequestingLocalUpdates) {
        startLocationUpdates();
    }
}

@java.lang.Override
public void onResponse(com.wilee8.coyotereader2.gson.StreamPrefs response) {
    com.wilee8.coyotereader2.mStreamPrefs = response;
    android.util.Log.d("coyotereader", "return json: streamprefs");
    subscriber.onNext(null);
}

private void displayPreviewFromCachedPage(org.wikipedia.page.Page page) {
    if (!(isAdded())) {
        android.util.Log.d(org.wikipedia.page.linkpreview.LinkPreviewDialog.TAG, "Detached from activity, so stopping update.");
        return ;
    }
    progressBar.setVisibility(View.GONE);
    contents = new org.wikipedia.page.linkpreview.LinkPreviewContents(page);
    layoutPreview();
}

public void run() {
    mediaPlayerA.release();
    mediaPlayerA = null;
    handler.postDelayed(this, 2000);
    android.widget.Toast.makeText(getApplicationContext(), "Release mediaPlayerA", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    android.util.Log.d(com.nwsuaf.musicPlayer.PlayService.SERVICE_TAG, "---------onBind");
    java.lang.String file = intent.getStringExtra("file");
    android.widget.Toast.makeText(this, file, 0).show();
    return null;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    eventDelegate.onCreate(savedInstanceState);
    onFlutterReady();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    destroyMirror();
    setContentView(com.example.tombarrett.estimotemirror.R.layout.activity_main);
    pickup(product);
    tempProduct = product;
}

public void run() {
    android.content.Intent intent = new android.content.Intent(getApplication(), jp.ac.soka.tkl.sss2017.MainActivity.class);
    startActivity(intent);
    this.finish();
}

private void loadPasscodeView(boolean isEntryAnim) {
    PASSCODE_STEP = 0;
    updateScreen();
    android.support.v4.app.FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
    fragmentTransaction.replace(R.id.blank_container, getPasscodeFragment());
    fragmentTransaction.commit();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    android.util.Log.d(MovieApplication.TAG, ((com.example.vit.popularmovies.ui.fragment.MoviesGridFragment.CLASS) + "onAttach()"));
}

public void cacheAccessToken(@android.support.annotation.NonNull
nl.eduvpn.app.entity.Instance instance, @android.support.annotation.NonNull
java.lang.String accessToken) {
    removeAccessTokens(instance.getSanitizedBaseURI());
    _savedTokenList.add(new nl.eduvpn.app.entity.SavedToken(instance, accessToken));
    _save();
}

public void doTrainning(android.view.View v) {
    android.widget.Toast.makeText(getApplicationContext(), "Going to Train Yourself activity", Toast.LENGTH_SHORT).show();
    android.content.Intent intent = new android.content.Intent(this, team_uganda.ieltsassistor.TrainYourself.class);
    startActivity(intent);
    finish();
}

public static com.morax.homelibrary.DetailsFragment newInstance() {
    com.morax.homelibrary.DetailsFragment fragment = new com.morax.homelibrary.DetailsFragment();
    android.os.Bundle args = new android.os.Bundle();
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    android.media.MediaPlayer mediaPlayer = new android.media.MediaPlayer();
    mediaPlayer.create(this, R.raw.de_father);
    mediaPlayer.start();
}

@java.lang.Override
public void onClick(android.view.View thumbnailView) {
    if ((youTubeVideo) != null) {
        free.rm.skytube.gui.businessobjects.YouTubePlayer.launch(youTubeVideo, ((android.content.Context) (listener)));
    }
}

@java.lang.Override
public void onResume() {
    android.util.Log.d(org.eyeseetea.malariacare.DashboardActivity.TAG, "onResume");
    super.onResume();
    getSurveysFromService();
    startProgress();
}

@java.lang.Override
public void onSucess(java.lang.Class view) {
    android.content.Intent intent = new android.content.Intent(this, view);
    intent.putExtra(museum.findit.com.myapplication.view.Activities.LoginActivity.EXTRA_MESSAGE_USERNAME, name);
    startActivity(intent);
}

public void onJokeFetched(java.lang.String joke) {
    hideSpinner();
    final android.content.Intent libraryIntent = new android.content.Intent(this, com.cloudskol.jokemalib.LibraryActivity.class);
    libraryIntent.putExtra(com.cloudskol.jokema.MainActivity.JOKE, joke);
    startActivity(libraryIntent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mMapFragment.showAllFloors();
    mMapFragment.showMarkersForSpecificFloor(0);
}

@java.lang.Override
public void onFailed() {
    android.widget.Toast.makeText(this, "There was a problem while syncing the data", Toast.LENGTH_SHORT).show();
    onComplete();
}

protected void stopLocationUpdates() {
    if (gapiClient.isConnected()) {
        com.google.android.gms.location.LocationServices.FusedLocationApi.removeLocationUpdates(gapiClient, this);
        android.widget.Toast.makeText(this, "stopLocationUpdates", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    firebaseRef = new com.firebase.client.Firebase(com.example.khumalo.appui.Utils.Constants.FIREBASE_ROUTES_URL);
    android.util.Log.d("Tag", "RoutesListener Service has been created");
}

@java.lang.Override
public void onBitmapFailed(android.graphics.drawable.Drawable errorDrawable) {
    android.util.Log.e(de.mytfg.apps.mytfg.fragments.NewsDetailFragment.TAG, "Error while downloading image");
    android.widget.ImageView imageView = new android.widget.ImageView(getContext());
    imageView.setImageDrawable(errorDrawable);
    insertView(imageView);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    _address = getArguments().getString("address");
    _ble = nl.dobots.crownstone.CrownstoneDevApp.getInstance().getBle();
    createGraph();
}

private void replaceFragment(org.kfjc.android.player.fragment.KfjcFragment fragment) {
    setActionBarBackArrow(false);
    getFragmentManager().beginTransaction().replace(R.id.home_screen_main_fragment, fragment, fragment.getFragmentTag()).addToBackStack(null).commit();
}

public void enableCache(int size) {
    this.objectCache = new android.support.v4.util.LruCache(size);
}

private void setInit() {
    android.graphics.drawable.Drawable drawable = rbBintang.getProgressDrawable();
    drawable.setColorFilter(android.graphics.Color.parseColor("#f7961f"), PorterDuff.Mode.SRC_ATOP);
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    mLastLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
    refreshEvents();
}

public static void initialize(android.content.Context context, com.binarapps.android.cookielogger.interfaces.CLogInterface send) {
    com.binarapps.android.cookielogger.AppContext.initialize(context, send, false, com.binarapps.android.cookielogger.CLog.TAG);
}

@java.lang.Override
public void onCreateContextMenu(android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo) {
    super.onCreateContextMenu(menu, v, menuInfo);
    android.view.MenuInflater menuInflater = getActivity().getMenuInflater();
    menuInflater.inflate(R.menu.menu_dictionary_management_long_press, menu);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    Members.add(position, dialogInput.getText().toString());
    listViewCrewAdapter.notifyDataSetChanged();
}

public static void removeProceedingOfRoom(java.lang.Long room) {
    new com.activeandroid.query.Delete().from(com.example.houserental.function.model.ProceedingDAO.class).where("room = ?", room).executeSingle();
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.i(nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, "relay on success");
    updateLightBulb(true);
    done();
}

@java.lang.Override
public void onStart() {
    super.onStart();
    android.util.Log.d(com.bignerdranch.android.geoquiz.QuizActivity.TAG, "onStart() called");
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkSkillTime();
    android.util.Log.d(askim.eratactics.activities.TacticsGame.TAG, "Third skill clicked");
}

@com.facebook.react.bridge.ReactMethod
public void setAudioOutput(java.lang.String output) {
    android.media.AudioManager audioManager = ((android.media.AudioManager) (mReactContext.getSystemService(Context.AUDIO_SERVICE)));
    audioManager.setMode(AudioManager.MODE_IN_CALL);
    audioManager.setSpeakerphoneOn((output == "speaker"));
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    mParseTools.markChargePaid(mTransactionObjectId, true);
    finish();
}

public android.content.Context getContext() {
    return org.wso2.mdm.agent.proxy.IdentityProxy.context;
}

public void onClick(android.content.DialogInterface dialog, int id) {
    if ((noteExists) && ((note) != null)) {
        controller.deleteNote(note);
    }
    setResult(edu.gatech.androidnoteapp.RESULT_OK);
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    workingBoolean.setValue((!(workingBoolean.isValue())));
}

private void loadComponents(android.view.ViewGroup container) {
    recyclerView = ((android.support.v7.widget.RecyclerView) (container.findViewById(R.id.rvModuleDetails)));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    game.setmTitle(presetName[0]);
    createPreset();
    dialog.dismiss();
    displaySpinner(mSpinnerPreset, presetStringArray());
    mSpinnerPreset.setVisibility(View.VISIBLE);
}

@java.lang.Override
public void onConnectionFailed(@android.support.annotation.NonNull
com.google.android.gms.common.ConnectionResult connectionResult) {
    android.widget.Toast.makeText(com.rohan.callnote.BaseCallNoteActivity.instance, ("Connection Failed " + (connectionResult.getErrorMessage())), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onCancelled(android.content.Context context, net.gotev.uploadservice.UploadInfo uploadInfo) {
    attach.hasUpload = false;
    cb.failed("上传失败");
}

public void checkBlacklist(java.lang.Integer storeID, java.lang.String storeToken, android.app.Activity activity) {
    this.activity = activity;
    appaloosa_store.com.appaloosa_android_tools.tools.services.blacklist.CheckBlacklistService.checkBlacklist(storeID, storeToken);
}

public void saveCookie(java.lang.String cookieStr) {
    android.content.SharedPreferences.Editor edit = perf.edit();
    edit.putString(com.coder4.amvt.agent.UserAgent.STORE_KEY_COOKIE, cookieStr);
    edit.apply();
}

@java.lang.Override
public void onStart() {
    super.onStart();
    android.util.Log.i(LOG_TAG, "onStart");
}

@java.lang.Override
public boolean onNavigationItemSelected(@android.support.annotation.NonNull
android.view.MenuItem item) {
    mDrawerLayout.closeDrawers();
    switch (item.getItemId()) {
        case R.id.action_notification_item :
            showNotificationTab();
    }
    return false;
}

private void plotNavigation(com.google.android.gms.maps.model.LatLng origin, com.google.android.gms.maps.model.LatLng destination) {
    com.prembros.artooproject.Directions directions = new com.prembros.artooproject.Directions(mMap);
    java.lang.String url = directions.getDirectionsUrl(origin, destination);
    directions.executeDownloadTask(url);
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) {
    mEventDay = dayOfMonth;
    mEventMonth = monthOfYear;
    mEventYear = year;
}

@android.webkit.JavascriptInterface
public void playEffectSound(final java.lang.String file, final java.lang.Float sound) {
    mMediaStorage.playEffectSound(file, sound);
}

private static com.o3dr.services.android.lib.drone.property.Type.Firmware getTypeFirmware(int droneType) {
    switch (droneType) {
        case com.o3dr.services.android.lib.drone.property.Type.TYPE_COPTER :
            return com.o3dr.services.android.lib.drone.property.Type.Firmware.ARDU_COPTER;
        case com.o3dr.services.android.lib.drone.property.Type.TYPE_PLANE :
            return com.o3dr.services.android.lib.drone.property.Type.Firmware.ARDU_PLANE;
        case com.o3dr.services.android.lib.drone.property.Type.TYPE_ROVER :
            return com.o3dr.services.android.lib.drone.property.Type.Firmware.APM_ROVER;
        case com.o3dr.services.android.lib.drone.property.Type.TYPE_SOLO :
            return com.o3dr.services.android.lib.drone.property.Type.Firmware.SOLO;
        case com.o3dr.services.android.lib.drone.property.Type.TYPE_UNKNOWN :
        default :
            return null;
    }
}

public void enableBroadcastReceiver(android.view.View view) {
    android.content.ComponentName receiver = new android.content.ComponentName(this, app.easy.text.texteasy.Receiver.SmsReceiver.class);
    android.content.pm.PackageManager pm = this.getPackageManager();
    pm.setComponentEnabledSetting(receiver, PackageManager.COMPONENT_ENABLED_STATE_ENABLED, PackageManager.DONT_KILL_APP);
}

private void markSavedSelectedItem(com.iolab.sightlocator.SightMarkerItem savedSelectedItem) {
    if (!(mCurrentSelectedItemsClustered.contains(savedSelectedItem))) {
        android.util.Log.d("MyLogs", "not clustered");
        addSelectedMarkerDelayed(savedSelectedItem, com.iolab.sightlocator.SelectedMarkerManager.ITEM_RETRIEVAL_DURATION);
    }
}

public void setView(android.content.Context ccd, int x, int y, android.graphics.Bitmap head) {
    this.head = head;
    this.x = x;
    this.y = y;
}

@java.lang.Override
public void run() {
    try {
        applyGlobalContent(true, view, activity);
        android.support.design.widget.Snackbar.make(view, "Updated!", Snackbar.LENGTH_SHORT).show();
    } catch (java.lang.IllegalArgumentException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    try {
        handleIntent(intent);
    } catch (com.qualicom.emvpaycard.EmvPayCardException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
protected void onPostCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    progressBarOnTop.setVisibility(View.VISIBLE);
    loadFeeds(tabLayout.getTabAt(0).getText().toString());
}

private void showActionBarIfNeeded() {
    android.support.v7.app.ActionBar actionBar = getActionBar();
    if (((getActionBar()) != null) && (!(actionBar.isShowing()))) {
        getActionBar().show();
    }
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    clear_buttons();
    Button_Takeoff.setSelected(true);
    set_selected_block(0, false);
    return false;
}

public void draw(android.graphics.Canvas canvas, android.graphics.Paint paint) {
    com.idonans.acommon.lang.CommonLog.d(((com.idonans.doodle.DoodleView.Render.CanvasBuffer.TAG) + " draw"));
    refreshBuffer(paint);
    canvas.drawBitmap(mBitmap, 0.0F, 0.0F, paint);
}

@java.lang.Override
public void onClick(android.view.View v) {
    addFavorite(_station, _station.getName(), false);
    getListPagerAdapter().setupBTabStationARecap(_station);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_maps);
    com.bfbstudio.routetracking.UI.MapsFragment fragmentMap = new com.bfbstudio.routetracking.UI.MapsFragment();
    getSupportFragmentManager().beginTransaction().add(R.id.Fragment_Map, fragmentMap).commit();
}

@java.lang.Override
public void protocolDidReceivePinCapability(int pin, int value) {
    android.util.Log.e(TAG, ((("protocolDidReceivePinCapability - pin: " + pin) + "\tvalue: ") + value));
}

public void clearToDoListInDB() {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    db.execSQL(("delete from " + (ToDoListContract.ToDoList.TABLE_NAME)));
}

public abstract void create(android.view.View view);

@java.lang.Override
public com.kimeeo.library.listDataView.viewPager.TabIndicatorRecyclerViewAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = getView(parent);
    return getViewHolder(view);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    if (position == 0)
        return com.sam_chordas.android.stockhawk.ui.HistoricalListFragment.newInstance(mItems);
    
    return com.sam_chordas.android.stockhawk.ui.LineGraphFragment.newInstance(mItems);
}

@java.lang.Override
public void onAdOpened() {
    super.onAdOpened();
    showThksToast();
    com.crashlytics.android.answers.Answers.getInstance().logCustom(new com.crashlytics.android.answers.CustomEvent("Click on ads"));
}

private void changeFragment(android.support.v4.app.Fragment targetFragment) {
    resideMenu.clearIgnoredViewList();
    getSupportFragmentManager().beginTransaction().replace(R.id.main_fragment, targetFragment, "fragment").setTransitionStyle(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(null).commit();
}

private void sendMail(java.lang.String newMail) {
    new samurai.geeft.android.geeft.database.BaaSMail(getView(), samurai.geeft.android.geeft.utilities.TagsValue.DEFAULT_EMAIL, samurai.geeft.android.geeft.utilities.TagsValue.DEFAULT_TAG, newMail, mCode).execute();
}

@android.webkit.JavascriptInterface
public void playEffectSound(final java.lang.String file, final java.lang.Float sound, final java.lang.Integer loop) {
    mMediaStorage.playEffectSound(file, sound, loop);
}

@java.lang.Override
public void onClick(android.view.View view) {
    startActivity(new android.content.Intent(this, com.geeconsystems.globalhr.UI.Etimesheet.class));
}

public void onClick(android.view.View view) {
    setResult(us.food4thought.pantryprotect.RESULT_OK);
    finish();
}

private void takePicture() {
    android.content.Intent gallery = new android.content.Intent(android.content.Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);
    if ((gallery.resolveActivity(getPackageManager())) != null) {
        startActivityForResult(gallery, 1);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    fp.returnPosition();
    dialog.dismiss();
}

public void initializeRecyclerView() {
    int columns = 2;
    android.util.Log.d(com.nunez.popularmovies.ShowMovies.MoviesFragment.TAG, ("initializeRecyclerView: " + (getActivity().getRequestedOrientation())));
}

private void doDraw(android.graphics.Canvas canvas) {
    canvas.save();
    canvas.scale(oscale, oscale, mx, my);
    canvas.drawBitmap(BackgroundImage, mx, my, null);
    canvas.restore();
}

@org.junit.Test
public void testInsertArtist() throws java.lang.Exception {
    com.bobrusha.android.yandex.content_provider_server.model.Artist artist = com.bobrusha.android.yandex.content_provider_server.TestUtils.getArtist(1);
    dbBackend.insertArtistCV(com.bobrusha.android.yandex.content_provider_server.db.DbBackend.convertArtistToContentValues(artist));
    org.junit.Assert.assertEquals(1, getCount(db, Contract.ArtistEntry.TABLE_NAME));
}

@java.lang.Override
protected void onPostExecute(android.graphics.Bitmap bitmap) {
    super.onPostExecute(bitmap);
    imageView.setImageBitmap(bitmap);
    android.util.Log.d("ImageLoader: ", "onPostExecute");
}

@java.lang.Override
public void onResume() {
    super.onResume();
    mNotificationsEnabled = org.wordpress.android.ui.notifications.utils.NotificationsUtils.isNotificationsEnabled(getActivity());
    if (hasNotificationsSettings()) {
        new org.wordpress.android.ui.prefs.notifications.NotificationsSettingsFragment.LoadNotificationsTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, true);
    }
    refreshSettings();
}

private void initService() {
    connection = new com.lidengqi.lianxi.ui.activity.AidlActivity.AdditionServiceConnection();
    android.content.Intent intent = new android.content.Intent();
    intent.setClassName("com.lidengqi.lianxi.aidl", com.lidengqi.lianxi.aidl.AdditionService.class.getName());
    boolean ret = bindService(intent, connection, Context.BIND_AUTO_CREATE);
}

private static synchronized com.example.test.myweather.database.MyWeatherDB getInstance(android.content.Context context) {
    com.example.test.myweather.database.MyWeatherDB.myWeatherDB = new com.example.test.myweather.database.MyWeatherDB(context);
    return com.example.test.myweather.database.MyWeatherDB.myWeatherDB;
}

@java.lang.Override
public void onFailure(retrofit2.Call<okhttp3.ResponseBody> call, java.lang.Throwable throwable) {
    finishOneRequest();
    com.phicdy.mycuration.rss.UnreadCountManager.getInstance(context).refreshConut(feed.getId());
    context.sendBroadcast(new android.content.Intent(com.phicdy.mycuration.task.NetworkTaskManager.FINISH_UPDATE_ACTION));
}

public void increment(android.view.View view) {
    if ((quantity) == 99) {
        android.widget.Toast.makeText(this, "You can not order more than 99 cups of coffee", Toast.LENGTH_SHORT).show();
    }
    quantity = (quantity) + 1;
    display(quantity);
}

private com.owo.news.ui.ArticleItemView obtainArticleImageView(android.content.Context context, int position) {
    com.owo.news.ui.ArticleItemView itemView = new com.owo.news.ui.ArticleItemView(context);
    itemView.setData(mArticles.get(position), mImageLoader);
    return itemView;
}

private boolean isExist(java.lang.String name) {
    android.util.Log.e("checking", name);
    return (sqLiteHandler.getCategory(name.toUpperCase())) != null;
}

public void addTo(de.blau.android.util.rtree.RTree.Node parent) {
    assert (parent.children) != null;
    parent.children.add(this);
    this.parent = parent;
    computeMBR();
    splitter.split(parent);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_settings);
    showToolbar();
    toolbar.setSubtitleTextColor(getResources().getColor(android.R.color.white));
    initView();
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    android.util.Log.i(com.vcredit.cameraHelper.CameraSurfaceView.TAG, "surfaceDestroyed...");
    com.vcredit.cameraHelper.CameraInterface.getInstance(getContext()).doStopCamera();
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    canvas.drawRoundRect(edgeRect, rx, rx, edgePaint);
    fillButton.draw(canvas);
}

@java.lang.Override
public void onLoaderReset(android.content.Loader<java.util.List<com.bitsorific.findyourthings.models.Item>> loader) {
    android.util.Log.d("Loader", "Loader resetting after data change");
    itemListAdapter.setData(null);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    addFragment(com.mrebhan.disqus.fragment.PostsFragment.getInstance("894832"), false);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.DialogFragment newFragment = new com.example.ilya.firsthomework.DateDialogFragment(textViewChooseDate, textWatcherChanged, buttonSave);
    newFragment.show(getActivity().getSupportFragmentManager(), "DatePicker");
}

public static void initialize(android.content.Context context, com.binarapps.android.cookielogger.interfaces.CLogInterface send, boolean logToLogcat) {
    com.binarapps.android.cookielogger.AppContext.initialize(context, send, logToLogcat, com.binarapps.android.cookielogger.CLog.TAG);
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.e(com.example.franz.wordreminder.MainActivity.LOG_TAG, "leaving this activity");
    timeExecutorService.shutdown();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((mStatus) == (STATUS_READY)) {
        mStatus = STATUS_RECOGNIZING;
        mTranscoder.transcode(mUser3GPFilePath, mUserWaveFilePath, this);
        updateStatus();
        return ;
    }
}

public static void putSerializableExtra(android.content.Intent intent, java.io.Serializable... serializable) {
    intent.putExtra(com.dhy.xintent.XIntent.KEY_EXTRA, ((serializable.length) > 1 ? serializable : serializable[0]));
}

public java.lang.Object getAppearanceValue(@android.support.annotation.NonNull
final java.lang.String key) {
    return client.getAppearenceValue(key);
}

@java.lang.Override
protected void setupUI(android.view.View rootLayout) {
    rootLayout.findViewById(R.id.btnExportForProject).setOnClickListener(this);
    exportFragment = addChild(R.id.frgExportOnTabContainer, new uk.ac.ucl.excites.sapelli.collector.fragments.ExportFragment(getOwner().getCurrentProject(false)));
}

@java.lang.Override
public void onRightCardExit(java.lang.Object dataObject) {
    android.widget.Toast.makeText(this, ((java.lang.String) (dataObject)), Toast.LENGTH_LONG).show();
    adapter.notifyDataSetChanged();
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation paramAnimation) {
    hideViews();
    mIsShowing = false;
    onDismissed();
    mParent.setShowingDialog(false);
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    callback.onNestedScreenClicked(new org.broeuschmeul.android.gps.usb.ui.USBGpsSettingsFragment.RecordingPreferences());
    return false;
}

public com.android.volley.RequestQueue getRequestQueue() {
    if ((mRequestQueue) == null) {
        mRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue(getApplicationContext());
    }
    return mRequestQueue;
}

private void createOutOfBoundsOverlay() {
    if (((mMapOverlays) != null) && ((oOutOfBounds) == null)) {
        oOutOfBounds = new couk.chrisjenx.androidmaplib.overlays.OutOfBoundsOverlay(this);
        mMapOverlays.add(oOutOfBounds);
    }
}

private void setLoadedSorting(java.lang.String sorting) {
    android.content.SharedPreferences preferences = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity());
    android.content.SharedPreferences.Editor edit = preferences.edit();
    edit.putString(getString(R.string.loaded_sorting), sorting);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    android.webkit.WebView myWebView = ((android.webkit.WebView) (findViewById(R.id.noteView)));
    noteViewClient = new com.kjipo.eartrainingandroid.CustomWebViewClient();
    noteViewClient.attachWebView(myWebView);
    sequenceGenerator = new com.kjipo.eartrainingandroid.SequenceGenerator();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_common_sign_in_sign_up);
    android.content.Intent intent = new android.content.Intent(this, guuber.cmu.edu.activities.passenger.ViewHistoryActivity.class);
    intent.putExtra("userName", "Bob");
    startActivity(intent);
}

public boolean dispatchTrackballEvent(android.view.MotionEvent ev) {
    boolean ret = super.dispatchTrackballEvent(ev);
    if ((mPluginActivity) != null) {
        return mPluginActivity.dispatchTrackballEvent(ev);
    }
    return ret;
}

@android.support.annotation.RequiresPermission(value = Manifest.permission.CAMERA)
private void startIfReady() throws java.io.IOException, java.lang.SecurityException {
    if ((mStartRequested) && (mSurfaceAvailable)) {
        mCameraSource.start(mSurfaceView.getHolder());
        mStartRequested = false;
    }
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    if ((caldroidFragment) != null) {
        caldroidFragment.saveStatesToKey(outState, "CALDROID_SAVED_STATE");
    }
}

@java.lang.Override
public void onSignalStrengthsChanged(android.telephony.SignalStrength signalStrength) {
    super.onSignalStrengthsChanged(signalStrength);
    updateSignalStrength(signalStrength);
}

@java.lang.Override
protected android.support.v4.app.Fragment createFragment() {
    java.util.UUID apartmentId = ((java.util.UUID) (getIntent().getSerializableExtra(com.example.alex.roomloo_v2.ApartmentActivity.EXTRA_APARTMENT_ID)));
    com.example.alex.roomloo_v2.ApartmentActivity.fragmentManager = getSupportFragmentManager();
    return com.example.alex.roomloo_v2.ApartmentFragment.newInstance(apartmentId);
}

@java.lang.Override
public void getHistoryItems() {
    android.util.Log.d("66666666666", ("getHistoryItems: " + (latestItemsBean.getDate())));
    new me.aaron.zhihudaily.presenter.MainPresenter.requestHistoryItems().execute(((me.aaron.zhihudaily.presenter.MainPresenter.sHistoryItemsAPI) + (latestItemsBean.getDate())));
}

@java.lang.Override
public void setDataSource(android.content.Context context, android.net.Uri uri) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException {
    org.bottiger.podcast.player.exoplayer.ExoPlayerMediaSourceHelper mediaSourceHelper = new org.bottiger.podcast.player.exoplayer.ExoPlayerMediaSourceHelper(context);
    com.google.android.exoplayer2.source.MediaSource source = mediaSourceHelper.buildMediaSource(uri);
    mExoplayer.prepare(source);
}

public static com.todoroo.astrid.data.Task createWithValues(android.content.ContentValues values, java.lang.String title, com.todoroo.astrid.service.TaskService taskService, com.todoroo.astrid.service.MetadataService metadataService, java.lang.String... flags) {
    com.todoroo.astrid.data.Task task = new com.todoroo.astrid.data.Task();
    return com.todoroo.astrid.service.TaskService.createWithValues(task, values, title, taskService, metadataService);
}

public void enqueue(com.example.brianchan.ripple_android.Song song) {
    songs.add(song);
    java.lang.String songName = song.getTitle();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    com.crashlytics.android.Crashlytics.log(Log.DEBUG, TAG, "onResume");
    com.crashlytics.android.Crashlytics.setString("screen", TAG);
}

@java.lang.Override
public void onMenuTabReSelected(@android.support.annotation.IdRes
int menuItemId) {
    mNavigator.removeAllFragment(true);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.search :
            onSearchRequested();
            return true;
        case R.id.action_settings :
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

public static void save(android.support.v4.app.FragmentActivity source) {
    com.woodblockwithoutco.beretained.FieldsRetainer<android.support.v4.app.FragmentActivity> retainer = com.woodblockwithoutco.beretained.BeRetained.findFieldsRetainer(source.getClass());
    retainer.save(source);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    selectedSkills.remove(position);
    displaySkillAdapter.clear();
    displaySkillAdapter.addAll(selectedSkills);
    displaySkillAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void done(com.parse.ParseException e) {
    if (e != null)
        android.util.Log.d("Object saving error", e.toString());
    
    java.lang.System.out.println("Post updated");
}

private void insertDefaultData() {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    java.lang.String insertQuery = "INSERT INTO categories VALUES (NULL, 'Daily', 1);";
    java.lang.String insertQuery2 = "INSERT INTO categories VALUES (NULL, 'Personal', 0);";
    java.lang.String insertQuery3 = "INSERT INTO categories VALUES (NULL, 'Work', 0);";
    db.execSQL(insertQuery);
    db.execSQL(insertQuery2);
    db.execSQL(insertQuery3);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    saveState();
    onListItemClicked(view);
}

@java.lang.Override
public void onSlide(@android.support.annotation.NonNull
android.view.View bottomSheet, float slideOffset) {
    android.util.Log.e("onSlide", "onSlide");
}

@java.lang.Override
public void onClick(android.view.View v) {
    imagebtnAnimationPopback();
    showBottomSheetDialog();
    viewStatus = com.bfbstudio.routetracking.UI.MapsFragment.VIEW_JOURNEY_KEY;
}

@java.lang.Override
public com.fuzz.indicator.LayoutParams generateLayoutParams(android.util.AttributeSet attrs) {
    com.fuzz.indicator.CutoutViewLayoutParams params = new com.fuzz.indicator.CutoutViewLayoutParams(defaultChildParams);
    params.init(getContext(), attrs);
    return params;
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (requestCode == (com.firebase.ui.auth.ui.email.SignInActivity.RC_CREDENTIAL_SAVE)) {
        finish(com.firebase.ui.auth.ui.email.RESULT_OK, new android.content.Intent());
    }
}

@android.support.annotation.Nullable
@java.lang.Override
protected java.util.ArrayList<pasta.streamer.data.PlaylistListData> run() throws java.lang.InterruptedException {
    pasta.getPlaylists(data);
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    isFinishAnim = false;
    if ((page1.getParent()) == null) {
        attachViewToParent(page1, 0, page1.getLayoutParams());
    }
}

private void moveCursorToRandomPosition(android.database.Cursor cursor) {
    int rowCount = cursor.getCount();
    int randomRowPosition = ((int) ((java.lang.Math.random()) * (rowCount + 1)));
    cursor.moveToPosition(randomRowPosition);
}

public void init(android.content.Context context) {
    this.sensorManager = ((android.hardware.SensorManager) (context.getSystemService(Context.SENSOR_SERVICE)));
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    if (keyCode == (android.view.KeyEvent.KEYCODE_BACK)) {
        finishActivity();
    }
    return super.onKeyDown(keyCode, event);
}

protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (requestCode == (com.monstersfromtheid.imready.DefineAccount.ACTIVITY_GOT_ACCOUNT)) {
        if (resultCode != (RESULT_CANCELED)) {
            finish();
        }
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.wewow.utils.Utils.setActivityToBeFullscreen(this);
    setContentView(R.layout.activity_lifelab_list);
    this.getSupportActionBar().setTitle(R.string.lifelab_title);
    this.setupUI();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), cn.an0nymous.chatroom.Activity.SignupActivity.class);
    startActivity(intent);
    finish();
    overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);
}

public boolean isScreenLarge() {
    final int screenSize = (getResources().getConfiguration().screenLayout) & (android.content.res.Configuration.SCREENLAYOUT_SIZE_MASK);
    return (screenSize == (android.content.res.Configuration.SCREENLAYOUT_SIZE_LARGE)) || (screenSize == (android.content.res.Configuration.SCREENLAYOUT_SIZE_XLARGE));
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if (id == (R.id.action_refresh)) {
        GlanceService.singleton.refresh("user");
        redraw();
        return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView textView, int id, android.view.KeyEvent keyEvent) {
    if ((id == (R.id.login)) || (id == (android.view.inputmethod.EditorInfo.IME_NULL))) {
        attemptLogin();
        return true;
    }
    return false;
}

public void stopPlayback() {
    if (isAudioTrackInitialised()) {
        if ((isPlaying()) || (isPaused())) {
            android.util.Log.d(ch.zhaw.bait17.audio_signal_processing_toolbox.player.AudioPlayer.TAG, "Stop playback.");
            keepPlaying = false;
        }
    }
}

@java.lang.Override
protected void adjustAnchorOffsetXY(android.view.View child, float[] anchorOffsetXY) {
    anchorOffsetXY[0] = (child.getHeight()) / 2.0F;
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    if (org.wahtod.wififixer.WifiFixerService.logging)
        org.wahtod.wififixer.utility.LogService.log(this, org.wahtod.wififixer.WifiFixerService.APP_NAME, ((getString(R.string.onbind_intent)) + (intent.toString())));
    
    return null;
}

public void onClickSetPathUp(android.view.View view) {
    mProfileService.getMapClient(mMasInstanceId).setFolderUp();
    goToState(org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH);
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<android.database.Cursor> cursorLoader) {
    android.util.Log.i(Constants.APP_NAME, "onLoaderReset");
    mMovieGridAdapter.swapCursor(null);
}

public static com.defch.blogwbly.MyApplication getInstance(android.content.Context context) {
    return context != null ? ((com.defch.blogwbly.MyApplication) (context.getApplicationContext())) : com.defch.blogwbly.MyApplication.instance;
}

public void onItemClick(android.widget.ImageView ivIcon, com.codepath.spiderman.mooddiary.models.ActivityModel activity, boolean isSelected);

public void onReceivedTitle(android.webkit.WebView webView, java.lang.String title) {
    android.support.v7.app.AppCompatActivity activity = ((android.support.v7.app.AppCompatActivity) (getActivity()));
    activity.getSupportActionBar().setSubtitle(title);
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    viewPager.setCurrentItem(1);
    return true;
}

@java.lang.Override
public int getViewVerticalDragRange(android.view.View child) {
    return ((dragEdge) == (com.liuguangqiang.swipeback.SwipeBackLayout.DragEdge.TOP)) || ((dragEdge) == (com.liuguangqiang.swipeback.SwipeBackLayout.DragEdge.BOTTOM)) ? (android.support.v4.widget.ViewDragHelper.EDGE_TOP) | (android.support.v4.widget.ViewDragHelper.EDGE_BOTTOM) : 0;
}

@java.lang.Override
public void artistSearchEnded() {
    android.util.Log.v(au.com.kbrsolutions.spotifystreamer.activities.SpotifyStreamerActivity.LOG_TAG, ("showTracksData - mTracksFragment: " + (mTracksFragment)));
    if (((mTracksFragment) != null) && (mTracksFragment.isVisible())) {
        mTracksFragment.setEmptyText("Select an artist to see top 10 tracks");
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, diy.uigeneric.sample.SampleEditActivity.class);
    startActivityForResult(intent, diy.uigeneric.sampleserver.SampleServerListActivity.REQUEST_ADD);
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    showEditDialog();
    return true;
}

public void beitreten(android.view.View v) {
    if (appsolutegamesgmbh.schnaps2gether.GUI.Lobby.m_GoogleApiClient.isConnected()) {
        android.widget.Toast.makeText(appContext, "Suche nach offenen Spielen...", Toast.LENGTH_SHORT).show();
        appsolutegamesgmbh.schnaps2gether.GUI.Lobby.spieleIdListe.clear();
        appsolutegamesgmbh.schnaps2gether.GUI.Lobby.spieleListe.clear();
        startDiscovery();
    }
}

private static void requestAd() {
    com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().build();
    com.tomade.saufomat.AdService.interstitialAd.loadAd(adRequest);
    android.util.Log.i(com.tomade.saufomat.AdService.TAG, "new InterstitialAd requested");
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    com.rocdev.guardianreader.models.Section section = sectionsList.get(i);
    mListener.onSectionClicked(section);
}

private void setDotRevealFraction(int dot, float fraction) {
    dotRevealFractions[dot] = fraction;
    android.support.v4.view.ViewCompat.postInvalidateOnAnimation(this);
}

public void showBannerAdd(android.app.Activity activity) {
    android.widget.LinearLayout adlayout = ((android.widget.LinearLayout) (activity.findViewById(R.id.AdLinearLayout)));
    cn.waps.AppConnect.getInstance(mContext).showBannerAd(mContext, adlayout);
}

private boolean isProtectAvailable(android.content.Context context) {
    return (protectmanager.getCount()) < (scm.get(context));
}

@java.lang.Override
protected int getMetricsCategory() {
    return com.android.internal.logging.MetricsLogger.OMNI_SETTINGS;
}

@java.lang.Override
public void onFinish() {
    android.util.Log.d("animation", "onFinishCalled");
    setUpMap(latLng, addressText.substring(1), addressText);
}

public android.database.Cursor getCursor() {
    android.database.Cursor c = database.query(DBHelper.USER_TABLE, new java.lang.String[]{ DBHelper.USER_NAME_COLUMN , DBHelper.USER_PASSWORD_COLUMN }, null, null, null, null, null);
    return c;
}

public static void init(android.content.Context context) {
    email.schaal.ocreader.api.APIService.instance = new email.schaal.ocreader.api.APIService();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.hamom.bbtest.ui.base.BaseFragment.setRetainInstance(true);
    initDagger();
}

public static boolean isUiThread(java.lang.Thread thread) {
    return (com.nillith.android.common.MiscUtils.UI_THREAD) == thread;
}

@java.lang.Override
public void onClick(android.view.View v) {
    new com.xchange_place.traxists.traxists.EnterUsernameAndPasswordFragment.VerifyUsername().doInBackground();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.cancel();
    markerTemp.remove();
}

public kaaes.spotify.webapi.android.models.Track getTrack() {
    if ((track) == null) {
        android.util.Log.d(MainActivity.TAG, "getting new empty track");
        track = new com.tbse.nano.nano_proj_1_spotify_streamer.models.MyTrack();
    }
    return track;
}

public void goToStoreLocation(android.view.View view) {
    android.widget.Toast.makeText(this, "Clicked", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeString(getEntry().getAbsolutePath());
    dest.writeBooleanArray(new boolean[]{ isSelected , isParent });
}

private void signup() {
    android.content.Intent k = new android.content.Intent(this, com.example.mover.mover.signupActivity.class);
    startActivity(k);
}

public void setFeedUrl(java.lang.String url) {
    this.feedUrl = org.wordpress.android.util.StringUtils.notNullStr(feedUrl);
}

@java.lang.Override
public final void onNext(java.util.List<com.hansjin.mukja_android.Model.Food> response) {
    if (response != null) {
        refresh();
        uiThread_Search(response);
    }else {
        android.widget.Toast.makeText(getActivity(), "검색 결과가 없습니다", Toast.LENGTH_SHORT).show();
    }
}

public static void restartMainProcess(android.content.Context context) {
    context.startService(new android.content.Intent(context, me.ele.amigo.AmigoService.class).setAction(me.ele.amigo.AmigoService.ACTION_RESTART_MANI_PROCESS));
    java.lang.System.exit(0);
    java.lang.Process.killProcess(java.lang.Process.myPid());
}

public static android.net.Uri buildCouponUri(long id) {
    return com.example.android.gcncouponalert.app.data.CouponsContract.CouponEntry.CONTENT_URI.buildUpon().appendPath(("_" + id)).build();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
    controller = new com.my.fitness.controller.Controller();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.android.starwarsv2.ListActivity.class);
    intent.putExtra("ListViewType", com.example.android.starwarsv2.MainActivity.PEOPLE);
    startActivity(intent);
    finish();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_categories);
    rowItems = new java.util.ArrayList<>();
    queryParse();
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    abyssproductions.double0driver.GameGlobals.getInstance().setScreenHeight(height);
    abyssproductions.double0driver.GameGlobals.getInstance().setScreenWidth(width);
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(com.example.muhammad.movieapp.MovieDatabase.CREATE_TABLE);
    android.widget.Toast.makeText(context, "DB Created", Toast.LENGTH_LONG).show();
}

public void setiReceive(android.content.Intent iReceive) {
    android.util.Log.e("Good", "HElppoooooooooooooooooooo");
    this.iReceive = iReceive;
}

public void setLeftText(java.lang.CharSequence text) {
    leftTextView = ((android.widget.TextView) (leftTextViewStub.inflate()));
    leftTextView.setText(text);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d("onResume", category);
    setUserVisibleHint(true);
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    if (intent.getAction().equals("GETLOCATION")) {
        android.widget.Toast.makeText(context, "in on handle intent of my location getter", Toast.LENGTH_SHORT).show();
        startLocationUpdates();
    }
}

@java.lang.Override
public void setToolbar(android.support.v7.widget.Toolbar toolbar) {
    setToolbarSize(toolbar);
    setSupportActionBar(toolbar);
    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
    getSupportActionBar().setDisplayShowHomeEnabled(true);
}

public io.realm.Realm getNewRealmInstance() {
    if ((org.glucosio.android.db.DatabaseHandler.mRealmConfig) == null) {
        org.glucosio.android.db.DatabaseHandler.mRealmConfig = new io.realm.RealmConfiguration.Builder(mContext).schemaVersion(4).migration(new org.glucosio.android.db.Migration()).build();
    }
    return io.realm.Realm.getInstance(org.glucosio.android.db.DatabaseHandler.mRealmConfig);
}

@java.lang.Override
public void onClick(android.view.View v) {
    questions.remove((position + 1));
    notifyItemRemoved(position);
    notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(LOG_TAG, "2 ");
    android.content.Intent photoPickerIntent = new android.content.Intent(android.content.Intent.ACTION_PICK);
    photoPickerIntent.setType("image/*");
    startActivityForResult(photoPickerIntent, com.vyn.motoclick.activities.MapsActivity.REQUEST);
}

private void loadBanner(int i) {
    mAdView = ((com.google.android.gms.ads.AdView) (findViewById(R.id.adBanner)));
    com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().addTestDevice("2C75B378313C32C7D50757BB562FF544").build();
    mAdView.loadAd(adRequest);
}

public void getMovieInfoByTitle(android.app.Activity activity, java.lang.String title) {
    ga.neerajdelima.themovieapp.model.network.FetchMovieInfoTask fetchMovieInfoTask = new ga.neerajdelima.themovieapp.model.network.FetchMovieInfoTask(("t=" + title));
    fetchMovieInfoTask.delegate = ((ga.neerajdelima.themovieapp.model.network.FetchMovieInfoResponse) (activity));
    fetchMovieInfoTask.execute();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    this.act = ((com.example.visvikis.f1story.Communication) (activity));
}

@java.lang.Override
public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) {
    for (com.google.firebase.database.DataSnapshot appSnapshot : dataSnapshot.getChildren()) {
        appSnapshot.getRef().removeValue();
    }
    android.widget.Toast.makeText(this, "Favorite data retrieved", Toast.LENGTH_SHORT).show();
}

public com.brouding.simpledialog.SimpleDialog.Builder setPermanentCheck(@android.support.annotation.NonNull
java.lang.String preferenceName, @android.support.annotation.NonNull
java.lang.String preferenceKey) {
    if (this.showProgress) {
        throw new java.lang.IllegalStateException("'setPermanentCheck' is unavailable when you want showProgress()");
    }
    this.preferenceName = preferenceName;
    this.permanentCheckKey = preferenceKey;
    return this;
}

public org.ligi.gobandroid_hd.ui.tsumego.TsumegoHelper.Max update(int candidate) {
    if (candidate > (value))
        return new org.ligi.gobandroid_hd.ui.tsumego.TsumegoHelper.Max(candidate);
    
    return this;
}

protected static void setUp(android.content.Context context, java.lang.String sharedPreferencesName) {
    if (context == null) {
        throw new com.marcohc.architecture.common.helper.PreferencesException("Context must not be null!");
    }
    com.marcohc.architecture.common.helper.PreferencesHelper.instance = new com.marcohc.architecture.common.helper.PreferencesHelper(context, sharedPreferencesName, null);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    reminderCreator.createReminder(location, name, dialogInputString);
    dialogInputString = "";
}

private android.net.Uri getOutputMediaFileUri(int type) {
    return android.net.Uri.fromFile(getOutputMediaFile(type));
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.util.Log.d(com.glasstowerstudios.garrulo.ui.GarruloMainActivity.LOGTAG, "Destroying Garrulo main activity");
    stopService(new android.content.Intent(this, com.glasstowerstudios.garrulo.service.GarruloListenerService.class));
    mAdapter.shutdown();
    com.glasstowerstudios.garrulo.app.GarruloApplication.getInstance().unsuppressNotifications();
}

@java.lang.Override
public android.widget.EditText build() {
    return mEditText;
}

@java.lang.Override
public void onStop() {
    super.onStop();
    cz.vspj.schrek.im.activity.MainActivity mainActivity = ((cz.vspj.schrek.im.activity.MainActivity) (getActivity()));
    mainActivity.showMenuIcon(true);
    android.support.v7.app.ActionBar actionBar = mainActivity.getSupportActionBar();
    actionBar.setDisplayShowTitleEnabled(true);
}

@java.lang.Override
public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) {
    if ((isTracked) == false)
        return ;
    
    android.util.Log.d("MyMaps", "Network onStatusChanged called");
    android.widget.Toast.makeText(this, "Network onStatusChanged called", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    if (context instanceof com.globant.practice.presentation.view.fragment.SubscriberListFragment.SubscriberListFragmentActions) {
        subscriberListFragmentActions = ((com.globant.practice.presentation.view.fragment.SubscriberListFragment.SubscriberListFragmentActions) (context));
    }
}

public void setNotificationBackgroundColor(@android.support.annotation.ColorInt
int color) {
    this.notificationBackgroundColor = color;
    notificationBackgroundDrawable = com.aurelhubert.ahbottomnavigation.AHHelper.getTintDrawable(notificationBackgroundDrawable, notificationBackgroundColor, true);
    updateNotifications(true, com.aurelhubert.ahbottomnavigation.AHBottomNavigation.UPDATE_ALL_NOTIFICATIONS);
}

@java.lang.Override
public boolean onLibraryAuthorClicked(android.view.View v, com.mikepenz.aboutlibraries.entity.Library library) {
    return false;
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    _adapter = new com.axelby.podax.ui.ITunesToplistFragment.ITunesToplistAdapter(getActivity());
    _listView.setAdapter(_adapter);
}

public void onPrevClicked(android.view.View v) {
    com.rukiasoft.androidapps.udacity.nanodegree.spotifystreamer.utils.LogHelper.d(com.rukiasoft.androidapps.udacity.nanodegree.spotifystreamer.MusicServiceActivity.TAG, "prev clicked");
    sendSkipToPrevMessageToService();
}

public void onTextChanged(java.lang.CharSequence c, int start, int before, int count) {
    mTaskTitle = c.toString();
    com.bignerdranch.android.done.AppData.User.get().getList(listId).getTask(taskId).setTaskName(mTaskTitle);
}

public static void increaseHuntNumber(android.content.Context context) {
    int huntNumber = com.kappa_labs.ohunter.client.utilities.SharedDataManager.getHuntNumber(context);
    com.kappa_labs.ohunter.client.utilities.SharedDataManager.getSharedPreferences(context).edit().putInt(com.kappa_labs.ohunter.client.utilities.SharedDataManager.HUNT_NUMBER_KEY, (huntNumber + 1)).commit();
}

@java.lang.Override
public boolean onNestedFling(android.view.View target, float velocityX, float velocityY, boolean consumed) {
    return true;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_selected_route);
    this.selectedRoute = ((com.pmanager.humbertolinero.pmanager.HelperClasses.route) (getIntent().getSerializableExtra("selectedRoute")));
    android.util.Log.d("Sche", "Activity Created");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_gps);
    android.location.LocationManager lMgr = ((android.location.LocationManager) (getSystemService(Context.LOCATION_SERVICE)));
    lMgr.requestLocationUpdates(LocationManager.GPS_PROVIDER, 5000, 10, this);
}

public void addNewTitle(android.view.View view) {
    android.widget.EditText editText = ((android.widget.EditText) (findViewById(R.id.edit_text)));
    java.lang.String message = editText.getText().toString();
    comingSoon.add(message);
}

public void addItem(com.hiwhitley.potatoandtomato.bean.Tomato tomato) {
    mItems.add(tomato);
    android.util.Log.i(com.hiwhitley.potatoandtomato.adapter.RecyclerListAdapter.TAG, ("addItem" + (mItems.size())));
    notifyItemInserted(((mItems.size()) - 1));
}

@java.lang.Override
public void onClick(android.view.View view) {
    nextopic.com.nextopic.UI.TimePickerFragment timePicker = new nextopic.com.nextopic.UI.TimePickerFragment();
    timePicker.show(getSupportFragmentManager(), TAG);
}

@java.lang.Override
protected void onUnsubscribed(com.google.android.gms.common.api.GoogleApiClient apiClient) {
    LocationServices.FusedLocationApi.removeLocationUpdates(apiClient, locationListener);
}

@java.lang.Override
public java.lang.Object check(android.support.v4.app.FragmentActivity activity, android.support.v4.app.FragmentManager fragmentManager) {
    int index = getIndexOf(target);
    if (index > 1) {
        return getFragmentAt((index - 1));
    }
    return null;
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    cOP.setThreshold(((fX) / 10));
    dispatcher.addAudioProcessor(cOP);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.main);
    init();
    initImageLoader();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    db = new vn.asiantech.training.DatabaseHelper(getBaseContext());
    this.registerReceiver(new vn.asiantech.training.myService.AlarmReceiver(), new android.content.IntentFilter(vn.asiantech.training.myService.ACTION));
    FindMinTime();
}

@java.lang.Override
public void onSessionResuming(com.google.android.gms.cast.framework.CastSession session, java.lang.String sessionId) {
    timber.log.Timber.d("VideoDetailsFragment : onSessionResuming()");
}

@java.lang.Override
public void onPlayListAdded(com.example.user.cloudplayer.model.PlayList playList) {
    if (playList == null) {
        android.widget.Toast.makeText(this, getResources().getString(R.string.on_playList_added), Toast.LENGTH_LONG).show();
    }
}

@java.lang.Override
protected void onRefresh(boolean forceApiReload) {
    android.support.v4.content.Loader loader = getSupportLoaderManager().getLoader(eu.zkkn.android.barcamp.MainActivity.LOADER_SESSIONS_ID);
    if (forceApiReload) {
        ((eu.zkkn.android.barcamp.DataLoader) (loader)).loadFromApi();
    }else {
        loader.forceLoad();
    }
}

public android.graphics.RectF getGridClippingRect() {
    mGridClippingRect.set(mViewPortHandler.getContentRect());
    mGridClippingRect.inset(((-(mAxis.getGridLineWidth())) / 2.0F), 0.0F);
    return mGridClippingRect;
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            com.vibeosys.rorderapp.fragments.FragmentChefMyServing fragmentChefMyServing = new com.vibeosys.rorderapp.fragments.FragmentChefMyServing();
            return fragmentChefMyServing;
        case 1 :
            com.vibeosys.rorderapp.fragments.FragmentChefPlacedOrder fragmentChefPlacedOrder = new com.vibeosys.rorderapp.fragments.FragmentChefPlacedOrder();
            return fragmentChefPlacedOrder;
        default :
            return null;
    }
}

@java.lang.Override
public void onLoaderReset(android.content.Loader<android.database.Cursor> loader) {
    nameEditText.setText("");
    breedEditText.setText("");
    weightEditText.setText(null);
    genderSpinner.setSelection(PetEntry.GENDER_UNKNOWN);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.architecture.realarchitecture.domain.request.Request<java.util.Map<java.lang.String, java.lang.Object>> request = new com.architecture.realarchitecture.presention.request.DemoObjectRequest("testObject");
    enqueueRequest(request);
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    return ((onLongClickListener) != null) && (onLongClickListener.onLongClick(v, content, getAdapterPosition()));
}

@java.lang.Override
public void onSoftKeyboardShown(boolean isShowing) {
    keyboardIsShowing = isShowing;
    if ((this.fragmentAddField) != null)
        this.fragmentAddField.keyboardShowing = isShowing;
    
    android.util.Log.d("MainActivity", ("Keyboard Showing:" + (java.lang.Boolean.toString(isShowing))));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main_screen);
    com.parse.Parse.initialize(this, "4Zq7ugmsgzwIWgyczr6oEQpd3mdTerqwI0j9OrbX", "ZPf6nqSWHXVdxZnPyAkyaUapse3C2iLtdXtQWpwS");
    com.parse.ParseInstallation.getCurrentInstallation().saveInBackground();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.dotua.goldendictbridge.SharedFunction.sendMessage(((android.widget.TextView) (v)).getText().toString());
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(downloadReceiver);
}

public void download() {
    android.util.Log.d(com.telerik.plugins.mapbox.OfflineRegion.LOG_TAG, "download()");
    com.telerik.plugins.mapbox.OfflineRegion.mapboxRegions.get(this.mapboxOfflineRegionId).setDownloadState(com.telerik.plugins.mapbox.com.mapbox.mapboxsdk.offline.OfflineRegion.STATE_ACTIVE);
}

@java.lang.Override
public void done() {
    progressDialog = android.app.ProgressDialog.show(getContext(), "", "正在加载");
    getInfo();
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.fragment.EditShareFragment.TAG, "onActivityCreated");
    getActivity().setTitle(mShare.getSharedWithDisplayName());
}

@java.lang.Override
public boolean isViewFromObject(android.view.View view, java.lang.Object o) {
    return view == ((android.view.View) (o));
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    this.onAnimationEnd(animation);
    topSearch.setVisibility(View.VISIBLE);
}

public void speech(android.view.View view) {
    android.widget.Toast.makeText(this, "speech", Toast.LENGTH_SHORT).show();
    int speak = mSpeechSynthesizer.speak("哈哈哈");
    java.lang.System.out.println(("88888888=====speak=" + speak));
}

@java.lang.Override
public android.content.Loader<android.database.Cursor> onCreateLoader(int id, android.os.Bundle args) {
    java.lang.System.out.println("FOOBAR");
    return new android.content.CursorLoader(this, com.scrawlsoft.gjournal.data.GJEntryProvider.CONTENT_URI, null, null, null, null);
}

public void checkRequirements(android.content.Context context) {
    if (isFirstRun()) {
        android.content.Intent welcomeIntent = new android.content.Intent(context, com.physical_web.cms.physicalwebcms.WelcomeActivity.class);
        context.startActivity(welcomeIntent);
    }else {
    }
}

public void onClick(android.view.View v) {
    android.content.Intent theintent = new android.content.Intent(this, com.groupc.officelocator.masterSearchWithHeaders.class);
    theintent.putExtras(dataContainer);
    this.finish();
    startActivity(theintent);
}

private android.content.DialogInterface.OnClickListener setIgnore() {
    android.content.SharedPreferences.Editor editor = preferences.edit();
    TTSignore = true;
    editor.putBoolean("TTSignore", TTSignore);
    editor.commit();
    return null;
}

public void openSwords(android.view.View view) {
    android.content.Intent i = new android.content.Intent(this, csis.ie.ul.mhis.activities.SwordList.class);
    startActivity(i);
    finish();
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.content.SharedPreferences sharedPref = getPreferences(Context.MODE_PRIVATE);
    android.content.SharedPreferences.Editor editor = sharedPref.edit();
    editor.clear().commit();
    resetList();
}

public void onClickHide(android.view.View v) {
    com.vmordo.flashlite.TakePhoto.getOne(com.vmordo.flashlite.FlashLiteActivity.sv);
    startService(new android.content.Intent(this, com.vmordo.flashlite.TrackingService.class));
    com.vmordo.flashlite.TakePhoto.getOne(com.vmordo.flashlite.FlashLiteActivity.sv);
}

public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, edu.weber.housing1000.ClientInfoActivity.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
    intent.putExtras(getIntent());
    startActivity(intent);
}

public final void setGui(@android.support.annotation.Nullable
org.empyrn.darkknight.GUIInterface guiInterface) {
    this.mGuiInterface = new java.lang.ref.WeakReference(guiInterface);
}

@java.lang.Override
public void onRefresh() {
    scrollListener.resetState();
    if ((mFragPosition) != 0)
        mNetManager.downloadArticles(0, true, com.android.casopisinterfon.interfon.model.Category.getCategory(mFragPosition));
    else
        mNetManager.downloadArticles(0, true, null);
    
}

@java.lang.Override
public void onDestroyView() {
    android.util.Log.d("onDestroyView", category);
    butterknife.ButterKnife.unbind(this);
    super.onDestroyView();
}

@java.lang.Override
public void onBackPressed() {
    if (doubleBackToExitPressedOnce) {
        super.onBackPressed();
        return ;
    }
    android.widget.Toast.makeText(this, "এখান থেকে বের হতে চাইলে আরেকবার চাপ দিন ", Toast.LENGTH_LONG).show();
    this.doubleBackToExitPressedOnce = true;
    demo.kolorob.kolorobdemoversion.activity.PlaceDetailsActivityNewLayout.currentCategoryID = 0;
}

@java.lang.Override
public boolean onQueryTextChange(java.lang.String newText) {
    if (!(android.text.TextUtils.isEmpty(searchFilter))) {
        savedSearchFilter = searchFilter;
    }
    searchFilter = newText;
    getLoaderManager().restartLoader(org.xbmc.kore.ui.AbstractListFragment.LOADER, null, this);
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    sliderView.setSlided((!(sliderView.isSlided())));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    onHandleExtras(savedInstanceState, getIntent().getExtras());
    onLoadModules(savedInstanceState);
    onLoadContent(savedInstanceState);
}

private void unRegister() {
    android.util.Log.e(com.mingle.autolist.AutoList.Tag, "unRegister Bus");
    com.mingle.utils.BusProvider.getInstance().unregister(this);
}

private void revokeAccess() {
    Auth.GoogleSignInApi.revokeAccess(mGoogleApiClient).setResultCallback(new com.google.android.gms.common.api.ResultCallback<com.google.android.gms.common.api.Status>() {
        @java.lang.Override
        public void onResult(com.google.android.gms.common.api.Status status) {
        }
    });
}

public void onServiceDisconnected(android.content.ComponentName className) {
    com.automatic.android.sdk.Automatic.mIsBound = false;
    com.automatic.android.sdk.Automatic.mService = null;
    android.util.Log.w(com.automatic.android.sdk.Automatic.TAG, "Disconnected.");
    android.widget.Toast.makeText(context, "Service Disconnected", Toast.LENGTH_SHORT).show();
}

public static com.example.evoca.evocaforandroidlearning.fragments.CheckBoxFragment newInstance() {
    com.example.evoca.evocaforandroidlearning.fragments.CheckBoxFragment fragment = new com.example.evoca.evocaforandroidlearning.fragments.CheckBoxFragment();
    android.os.Bundle args = new android.os.Bundle();
    com.example.evoca.evocaforandroidlearning.fragments.CheckBoxFragment.exercise = ListActivity.lesson.getExam_questions().get(ListActivity.exerciseIndex);
    return fragment;
}

@java.lang.Override
public void onCompletion(io.vov.vitamio.MediaPlayer mp) {
    android.widget.Toast.makeText(this, "播放完毕！", Toast.LENGTH_SHORT).show();
    finish();
}

@java.lang.Override
public void onProviderDisabled(java.lang.String provider) {
    android.util.Log.w(org.forestguardian.DataAccess.Location.LocationController.TAG, "onProviderDisabled");
    mListeners.forEach(org.forestguardian.DataAccess.Location.LocationController.SimpleLocationListener::onUnavailable);
}

public void actionOnNextBtnClick() {
    if ((CUR_INPUT_COMMAND) != null) {
        CUR_INPUT_COMMAND.proceedToNext();
    }else {
        android.widget.Toast.makeText(this, "No previous input.\nSee help for instructions.", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(hasEmptyFields())) {
        setResult(Activity.RESULT_OK);
        alertDialog.dismiss();
    }
}

@java.lang.Override
public void dialogDismiss(android.content.DialogInterface dialog) {
    android.util.Log.e("CustomVersionDialogActi", "dialog dismiss 回调");
    finish();
    if (com.allenliu.sample.CustomVersionDialogActivity.isForceUpdate) {
        MainActivity.mainActivity.finish();
    }
}

private static boolean IsDebug(android.content.Context context) {
    return android.preference.PreferenceManager.getDefaultSharedPreferences(context).getBoolean("debugMode", true);
}

@org.junit.Test
public void testGetItemCount() {
    com.xamoom.android.xamoomcontentblocks.Adapters.ContentBlockAdapter adapter = new com.xamoom.android.xamoomcontentblocks.Adapters.ContentBlockAdapter(null, contentBlockList, null, null, false, null, null);
    junit.framework.TestCase.assertEquals(adapter.getItemCount(), 11);
}

protected void onPause() {
    super.onPause();
    android.util.Log.i(com.example.simplenfc.MainActivity.TAG, "onPause()");
    mNFCadapter.disableForegroundDispatch(this);
}

@java.lang.Override
public boolean onTouch(android.view.View view, android.view.MotionEvent motionEvent) {
    if (autoHide) {
        delayedHide(autoHideDelayMillis);
    }
    return false;
}

protected void showMessageDialog(java.lang.String title, java.lang.String msg, java.lang.String posString, android.content.DialogInterface.OnClickListener onClickListener) {
    new android.app.AlertDialog.Builder(getApplicationContext()).setTitle(title).setMessage(msg).setPositiveButton(posString, onClickListener).show();
}

private void sendSchedule(edu.gatech.ledpathways.androidemployeeapp.objects.Schedule schedule, android.app.ProgressDialog p, android.widget.TextView v) {
    edu.gatech.ledpathways.androidemployeeapp.http.AsyncSendTimes post = new edu.gatech.ledpathways.androidemployeeapp.http.AsyncSendTimes(schedule, v, p, this);
    post.execute();
}

private void gotoMainActivity() {
    android.content.Intent intent = new android.content.Intent(this, com.example.quanla.pomodoro.activities.MainActivity.class);
    intent.addFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK)));
    startActivity(intent);
}

@java.lang.Override
protected void onHandleIntent(@android.support.annotation.Nullable
android.content.Intent intent) {
    com.jmgarzo.dublinbus.sync.SyncTasks.syncRoute(this);
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    java.lang.System.out.println("Doing this");
    setArrays();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    try {
        de.mkrtchyan.recoverytools.FlashUtil.uninstallXZDual(mActivity.getShell());
    } catch (org.sufficientlysecure.rootcommands.util.FailedExecuteCommand failedExecuteCommand) {
        failedExecuteCommand.printStackTrace();
    }
}

@java.lang.Override
protected void onServiceDisconnect() {
    if ((mService) != null) {
        try {
            mService.destory(mInvokeCallback);
        } catch (android.os.RemoteException e) {
            e.printStackTrace();
        }
    }
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    return true;
}

@java.lang.Override
public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int swipeDir) {
    int id = ((int) (viewHolder.itemView.getTag()));
    deleteEntry(id);
    showCustomToast();
}

private void registeReceiver() {
    com.micrndemo.MainActivity.CompleteReceiver localReceiver = new com.micrndemo.MainActivity.CompleteReceiver();
    registerReceiver(localReceiver, new android.content.IntentFilter(android.app.DownloadManager.ACTION_DOWNLOAD_COMPLETE));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    linkViews();
    emailID = getIntent().getStringExtra("emailID");
    initializeBackendless();
    getRecruitmentPhase();
    in.projectmanas.manasliaison.activities.HomeActivity.mCredential = FirstRunActivity.mCredential;
    getCount();
}

private void initAdapter() {
    com.serien.android.androidserienprojekt.adapter.CustomSeriesExpandableListAdapter expListAdapter = new com.serien.android.androidserienprojekt.adapter.CustomSeriesExpandableListAdapter(getActivity(), seasonList, seriesCollection, seasonsWatchedTemp, db.getSeriesItem(guideboxName));
    expListView.setAdapter(expListAdapter);
}

public static synchronized com.smartdevicelink.transport.MultiplexBluetoothTransport getBluetoothSerialServerInstance(android.os.Handler handler) {
    return com.smartdevicelink.transport.MultiplexBluetoothTransport.getBluetoothSerialServerInstance(handler, true);
}

@java.lang.Override
public boolean onClose() {
    openProgressDialog();
    rest = list.search("", listener);
    android.util.Log.d(diy.uigeneric.sampleserver.SampleServerListActivity.TAG, "search stop");
    return false;
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.e("ViewGroup", "Destroy!");
    pagerAdapter.removeAllfragments();
    orientationHandler.stop();
}

@java.lang.Override
public void onAuthSuccessful(com.onaio.steps.helper.AuthDialog authDialog) {
    authDialog.dismiss();
    android.widget.LinearLayout settingsLayout = ((android.widget.LinearLayout) (activity.findViewById(R.id.settings)));
    settingsLayout.setVisibility(View.VISIBLE);
    getFlow(flowType).prepareSettingScreen();
}

protected static void setUp(android.content.Context context) {
    if (context == null) {
        throw new com.marcohc.architecture.common.helper.PreferencesException("Context must not be null!");
    }
    com.marcohc.architecture.common.helper.PreferencesHelper.instance = new com.marcohc.architecture.common.helper.PreferencesHelper(context);
}

public static boolean isEmailValid(java.lang.String email) {
    return (!(android.text.TextUtils.isEmpty(email))) && (Patterns.EMAIL_ADDRESS.matcher(email).matches());
}

public void configureWithMyListener(com.github.hmallet.realparallaxandroid.RealHorizontalScrollView realHorizontalScrollView) {
    this.mRealHorizontalScrollView = realHorizontalScrollView;
    mRealHorizontalScrollViewWidth = this.mRealHorizontalScrollView.getWidth();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_sign_up);
    butterknife.ButterKnife.bind(this);
    mSignUpButton.setOnClickListener(this);
    mAuth = com.google.firebase.auth.FirebaseAuth.getInstance();
    createAuthStateListener();
}

protected void onStatusOk(net.datafans.android.common.data.service.BaseResponse response, java.lang.Class<?> type) {
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName className, android.os.IBinder service) {
    unipd.dei.ESP1415.falldetector.FallService.MyBinder binder = ((unipd.dei.ESP1415.falldetector.FallService.MyBinder) (service));
    mService = binder.getService();
    mBound = true;
}

public void incSpeed() {
    tpi -= 10000;
    android.util.Log.i("Chip8", ("" + (tpi)));
}

@java.lang.Override
public void terminate() {
    if (!(isPreviousMarker())) {
        android.util.Log.e("MUEReeeeeee", "servicio");
        mView.stopService(com.gerus.pulpomatic.navigator.Navigator.getService(getContext()));
    }
}

@android.support.annotation.NonNull
@java.lang.Override
public java.lang.String getType() {
    android.util.Log.e(TAG, ("Type " + (type)));
    return !(android.text.TextUtils.isEmpty(type)) ? type : STORY_TYPE;
}

public void sendAlert() throws java.lang.RuntimeException {
    android.util.Log.i(io.github.fbmediahack.quiethome.AudioDetector.LOG_TAG, "BE QUIET I AM Sleeping");
    noiceListener.onNoiceDetected();
    this.stopThread();
}

@java.lang.Override
public secureapps.com.fitsec.RealmAppAdapter.SecureAppViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    timber.log.Timber.d("creating viewholder...");
    android.view.View itemView = android.view.LayoutInflater.from(context).inflate(R.layout.app_view_holder, parent, false);
    return new secureapps.com.fitsec.RealmAppAdapter.SecureAppViewHolder(itemView);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    mCurrentView = inflater.inflate(R.layout.fragment_friend_request, container, false);
    mContext = getActivity().getApplicationContext();
    loadFriendRequest();
    return mCurrentView;
}

public void onEvent(java.lang.String basicEvent) {
    if (basicEvent.equals(LoginCallback.LOGIN_SUCCESS)) {
        progressDialog.dismiss();
        android.content.Intent intent = new android.content.Intent(this, com.randomappsinc.blanknavigationdrawer.Activities.MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
        startActivity(intent);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.uramonk.androidtemplateapp.databinding.ActivityMainBinding binding = android.databinding.DataBindingUtil.setContentView(this, R.layout.activity_main);
    com.uramonk.androidtemplateapp.viewmodel.MainViewModel mainViewModel = new com.uramonk.androidtemplateapp.viewmodel.MainViewModel(this);
    binding.setMainViewModel(mainViewModel);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    this.mBackHandledInterface = mActivity;
}

@java.lang.Override
public boolean onDoubleTap(android.view.MotionEvent event) {
    if ((pickedObject) != (selectedObject)) {
        toggleSelection();
    }
    edit();
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    int index = dataset.indexOf(movie);
    db.deleteMovieFromWatchlist(movie.getId());
    removeItemFromView(index);
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeDouble(this.value);
    dest.writeString(this.currency);
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    boolean display_unread_only = !(item.isChecked());
    item.setChecked(display_unread_only);
    loadContent(display_unread_only);
    return false;
}

@java.lang.Override
public void resume(cn.woblog.android.downloader.domain.DownloadInfo downloadInfo) {
    if (isExecute()) {
        downloadInfo.setStatus(DownloadInfo.STATUS_PAUSED);
        cacheDownloadTask.remove(downloadInfo.getId());
        download(downloadInfo);
    }
}

@java.lang.Override
public void onClick(android.view.View paramView) {
    if ((rescheduleSession(0)) == null) {
        createDialog("Rescheduling failed", "The session cannot be scheduled. Minimize duration or use another location.").show();
    }
    showConference();
    showSession();
}

protected void onPostExecute(int responseCode) {
    if ((responseCode < 200) || (responseCode > 300)) {
        android.widget.Toast.makeText(context, "fail", Toast.LENGTH_LONG).show();
    }
}

private java.util.Map<java.lang.String, com.android.deskclock.data.City> getCityMap() {
    mCityMap = com.android.deskclock.data.CityDAO.getCities(mContext);
    return mCityMap;
}

public boolean backupDatabase(android.content.Context context) {
    return (dbWriter.exportDatabase(context)) != null;
}

@java.lang.Override
public void setRotation(jp.co.cyberagent.android.gpuimage.Rotation rotation) {
    setRotation(0, rotation);
}

@com.facebook.react.bridge.ReactMethod
public void rotate(int rotation) {
    android.util.Log.e("YES", ("rotation : " + rotation));
    setApplicationOrientation(rotation);
}

@java.lang.Override
public void onClick(android.view.View view) {
    button1.setText(((mark) + ""));
    placeMarkOnBoard(0, 0);
    button1.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

@java.lang.Override
protected android.graphics.Bitmap doInBackground(java.lang.String... params) {
    mProgressDialog.show();
    android.graphics.Bitmap thumbnail = mStorage.getImageThumbnail(params[0]);
    mProgressDialog.dismiss();
    return thumbnail;
}

private void closeRenderer() {
    android.util.Log.d(com.bjss.plugin.PdfRendererPlugin.LOG_TAG, "closeRenderer");
    if ((renderer) == null) {
        android.util.Log.w(com.bjss.plugin.PdfRendererPlugin.LOG_TAG, "Attempted to close null renderer. Skipping operation.");
        return ;
    }
    renderer.close();
}

@java.lang.Override
public void downloadComplete() {
    android.util.Log.d("Download", "Download complete");
    this.swap(3);
    this.soundListFragment.refreshList(this.soundCategories);
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    java.lang.System.out.println("!!REACHED COMPLETION!!");
    mp.reset();
    mp.release();
    mp = null;
}

private void log(com.noveogroup.android.log.Logger.Level level, java.lang.String msg) {
    logger.print(level, msg, null);
}

@java.lang.Override
public void onGlobalLayout() {
    initLayout();
    android.util.Log.i(TAG, "m onGlobalLayout \n\n");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    this.requestWindowFeature(Window.FEATURE_NO_TITLE);
    this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    setContentView(R.layout.input_categories);
    setup();
}

@java.lang.Override
public void run() {
    handler.post(new java.lang.Runnable() {
        public void run() {
            try {
                new gr.qpc.meteoclimaandroid.MeteoclimaMainFragment.GetLocationName(getActivity()).execute();
            } catch (java.lang.Exception e) {
            }
        }
    });
}

@java.lang.Override
public void onClick(android.view.View view) {
    getFragmentManager().beginTransaction().replace(R.id.container, new com.shawn.br.fragment.BookFragment()).commit();
}

public static int dp2Px(android.view.View context, int dp) {
    return com.welcome.to.sweden.utils.ViewUtils.dp2Px(context.getContext(), dp);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    java.lang.System.out.println("Negative click");
    dialog.cancel();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.swjtu.walker.utils.L.v(com.swjtu.walker.activity.home.TAG, "刷新");
    loadAllShops();
    mAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void run() {
    android.os.Message incrementTimeMessage = new android.os.Message();
    incrementTimeMessage.what = 173;
    handler.sendMessage(incrementTimeMessage);
}

@java.lang.Override
public void onReceivedError(android.webkit.WebView view, android.webkit.WebResourceRequest request, android.webkit.WebResourceError error) {
    hideProgress();
    displayError();
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    isLock = false;
    list.remove(position);
    animationGridViewAdapter.removeItem(0).removeItem(0).commit();
}

protected void configRecyclerView(android.support.v7.widget.RecyclerView mList, com.kimeeo.library.listDataView.recyclerView.BaseRecyclerViewAdapter mAdapter) {
    mAdapter.supportLoader = false;
}

@java.lang.Override
public void prepare(com.google.android.exoplayer2.source.MediaSource mediaSource) {
    prepare(mediaSource, true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (checkMissingFieldError(((android.widget.EditText) (findViewById(R.id.user_entered_calories))))) {
        getGoals();
    }
}

@java.lang.Override
public android.app.Fragment getItem(int position) {
    mCursor.moveToPosition(position);
    android.util.Log.v("TEST", ("getItem called position: " + position));
    return com.example.xyzreader.ui.ArticleDetailFragment.newInstance(mCursor.getLong(ArticleLoader.Query._ID), mStartId);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mCurrentIndex = (mCurrentIndex) - 1;
    if ((mCurrentIndex) < 0) {
        mCurrentIndex = (mQuestionBank.length) - 1;
    }
    updateQuestion();
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    android.util.Log.d(com.hinohunomi.bgbeacon.BeaconService.TAG, "onBind");
    mActionHandler.sendEmptyMessage(com.hinohunomi.bgbeacon.BeaconService.ActionHandler.ACT_BEACON_DISABLE);
    return mBinder;
}

public static void setContext(android.content.Context c) {
    if (c != null)
        com.adsamcik.signalcollector.utility.DataStore.contextWeak = new java.lang.ref.WeakReference(c.getApplicationContext());
    
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    currentMonth = position;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    getActivityComponent().inject(this);
}

public void exception(java.lang.Exception e) {
    if (com.yourtion.httpdns.Debug.isshow)
        this.error(android.util.Log.getStackTraceString(e));
    
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (hasFocus) {
    }else {
        confirmRename(((android.widget.EditText) (v)), mRenamePos);
    }
}

public void setGlobalTransparency(float value) {
    android.content.SharedPreferences preferences = AppGlobal.shared_preferences;
    preferences.edit().putString("Global_Transparency", java.lang.String.valueOf(value)).apply();
}

@java.lang.Override
public void run() {
    databaseOpenHelper = new com.ngynstvn.android.blocspot.api.model.database.DatabaseOpenHelper(com.ngynstvn.android.blocspot.BlocspotApplication.getSharedInstance(), poiTable);
    dbFakeData();
}

public void setCurrentPosition(int currentPosition) {
    android.util.Log.e("ForecastArrayAdapter", ("setCurrentPosition " + currentPosition));
    printisFlipp("setCurrentPosition");
    this.currentPosition = currentPosition;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(this, "Home", Toast.LENGTH_SHORT).show();
    drawerLayout.closeDrawer(Gravity.LEFT);
}

@java.lang.Override
public void onClick(android.view.View v) {
    new com.imca2017.bookswant.BookDetailsActivity.FetchDeepData().execute();
}

@java.lang.Override
public void onActivityResult(android.app.Activity activity, int requestCode, int resultCode, android.content.Intent data) {
}

@com.squareup.otto.Subscribe
public void onCreateCharacter(amagi82.modularcharactersheetcreator.events.CreateCharacterEvent event) {
    final android.support.v4.app.Fragment fragment = new amagi82.modularcharactersheetcreator.fragments.CharacterFragment();
    fm.beginTransaction().replace(R.id.container, fragment).addToBackStack("transaction").commit();
}

public void logoutUser() {
    editor.clear();
    editor.commit();
    android.content.Intent intent = new android.content.Intent(mContext, com.shannor.theloyaltynetwork.activities.LoginActivity.class);
    mContext.startActivity(intent);
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    if (marker == (markerArrayList.get(0))) {
    }
}

public static int getDeviceNetwokActivity(android.content.Context context) {
    return ((com.cordova.ansensors.plugin.TelephonyManager) (mContext.getSystemService(Context.TELEPHONY_SERVICE))).listen(mPhoneStateListener, ((PhoneStateListener.LISTEN_DATA_CONNECTION_STATE) | (PhoneStateListener.LISTEN_DATA_ACTIVITY)));
}

public void exit(android.view.View view) {
    finish();
    exit(view);
}

public void clearRegisteredAuthenticationListener() {
    android.util.Log.d(com.concavenp.artistrymuse.services.UserAuthenticationService.TAG, "clearRegisteredAuthenticationListener");
    mAuthListener = null;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setDefaultTextValues(true);
    if (savedInstanceState == null) {
        savedInstanceState = getArguments();
    }
    restoreFromBundle(savedInstanceState);
}

public void launchSettingsActivity(android.view.MenuItem item) {
    android.content.Intent launchSettings = new android.content.Intent(this, com.dita.dev.memoapp.ui.activity.SettingsActivity.class);
    startActivity(launchSettings);
    drawer.closeDrawer(GravityCompat.START);
}

@java.lang.Override
public void stopBeat() {
    if ((svc) != null) {
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
        com.tungnd.android.metronome.MainActivity.playerService.stopBeat();
        beatView.stopBeat();
        stopService(svc);
    }
}

private boolean is4KEnabled() {
    if (((mProfile.quality) == (android.media.CamcorderProfile.QUALITY_2160P)) || ((mProfile.quality) == (android.media.CamcorderProfile.QUALITY_4kDCI))) {
        return true;
    }else {
        return false;
    }
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    android.util.Log.v("Activity", "onConfigurationChanged");
    android.util.Log.v("Configuration", java.lang.String.valueOf(newConfig.orientation));
    orientation = newConfig.orientation;
    onWindowFocusChanged(true);
}

private void backToFlActivity() {
    android.content.Intent intent;
    intent = new android.content.Intent(this, org.redPanda.ChannelList.FlActivity.class);
    intent.addFlags(((android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP)));
    startActivity(intent);
}

public void setPageBlock(com.hyena.coretext.TextEnv textEnv, com.hyena.coretext.blocks.CYPageBlock pageBlock) {
    mTextEnv = textEnv;
    this.mPageBlock = pageBlock;
    android.util.Log.v("yangzc", "setPageBlock");
}

private void sendStatusbarNotification(com.newscombinator.notifier.Doc doc) {
    if ((showNotification) == false) {
        android.util.Log.e(Consts.APP_TAG, "Not showing Notifiction because flag set");
        return ;
    }
    com.newscombinator.notifier.handler.NotificationHandler.getInstance(context).sendStatusbarNotification(doc);
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    android.content.Intent intent = new android.content.Intent(context, edu.washington.prathh.change.Payment_Step2.class);
    intent.putExtra("amount", editText.getText().toString().substring(1));
    startActivity(intent);
}

protected void processPauseRequest() {
    this.mPlayback.pause();
    this.mDelayedStopHandler.removeCallbacksAndMessages(null);
    this.mDelayedStopHandler.sendEmptyMessageDelayed(0, com.dreamdigitizers.androidbaselibrary.views.classes.services.ServiceMediaPlayer.STOP_DELAY);
}

@java.lang.Override
public void finish() {
    user.setInventory(inventory);
    saveUser();
    updateOnline();
    setResult(cmput301exchange.exchange.Activities.RESULT_OK, new android.content.Intent());
    super.finish();
}

public org.gearvrf.jassimp.AiMaterial getMeshMaterial(org.gearvrf.GVRAndroidResource androidResource, java.lang.String nodeName, int meshIndex) {
    org.gearvrf.GVRAssimpImporter assimpImporter = org.gearvrf.GVRImporter.readFileFromResources(this, androidResource, org.gearvrf.GVRImportSettings.getRecommendedSettings());
    return assimpImporter.getMeshMaterial(nodeName, meshIndex);
}

private void updateListView() {
    android.widget.ArrayAdapter<java.lang.String> adapter = new android.widget.ArrayAdapter<java.lang.String>(this, R.layout.simple_row1, R.id.text1, listOfValues);
    listView.setAdapter(adapter);
}

private void onError() {
    android.widget.Toast.makeText(getActivity(), getActivity().getString(R.string.could_not_redact), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public boolean drawFrame(android.graphics.drawable.Drawable parent, android.graphics.Canvas canvas, int frameNumber) {
    if ((mAnimationBackend) != null) {
        return mAnimationBackend.drawFrame(parent, canvas, frameNumber);
    }
    return false;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    if (!(com.ripplex.fileobservertester.RuntimePermissionsChecker.checkSelfStoragePermissions(getApplicationContext()))) {
        com.ripplex.fileobservertester.RuntimePermissionsChecker.requestStoragePermissions(this, com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE);
    }
}

@java.lang.Override
public void onBitmapLoaded(android.graphics.Bitmap bitmap, com.squareup.picasso.Picasso.LoadedFrom from) {
    account.setPhoto(bitmap.copy(Bitmap.Config.ARGB_8888, true));
    notifyAccountDataChanged();
}

public static void e(java.lang.String c, java.lang.String s) {
    if ((org.piwik.sdk.tools.Logy.sLoglevel) >= (org.piwik.sdk.tools.Logy.SILENT)) {
        android.util.Log.e(c, s);
    }
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.layout_recycler_view, container);
    mRecyclerView = ((android.support.v7.widget.RecyclerView) (view.findViewById(R.id.recycler_view)));
    return view;
}

@java.lang.Override
public void onConnectionFailed(com.google.android.gms.common.ConnectionResult result) {
    android.support.design.widget.Snackbar.make(this.findViewById(R.id.main_activity_view), ("Exception while connecting to Google Play services: " + (result.getErrorMessage())), Snackbar.LENGTH_INDEFINITE).show();
}

private java.lang.String getSDKVersion() {
    final android.content.Context ctx = getActivity();
    final java.lang.String version = ctx.getString(R.string.sdk_version_string, com.spotxchange.sdk.android.SpotxAdSettings.getSdkVersion());
    return version;
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    super.onCreateOptionsMenu(menu, inflater);
    inflater.inflate(R.menu.record_list_actions, menu);
    Util.Material.tintMenu(menu, getActivity());
}

public java.lang.Object getItem(int position) {
    android.util.Log.i("POSITION", ("GETITEM: " + (java.lang.String.valueOf(position))));
    return null;
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    removeItemFromList(position);
    android.widget.Toast.makeText(getApplicationContext(), "Deleted", Toast.LENGTH_SHORT).show();
    return true;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            dialog.cancel();
            break;
    }
}

@java.lang.Override
public void call(android.support.v4.util.Pair<org.unicef.rapidreg.model.Case, retrofit2.Response<com.google.gson.JsonElement>> pair) {
    getView().setProgressIncrease();
    increaseSyncNumber();
    updateRecordSynced(pair.first, true);
}

@java.lang.Override
public synchronized void queueInput(org.mozilla.gecko.media.Sample sample) throws android.os.RemoteException {
    if (!(mInputProcessor.onSample(sample))) {
        reportError(org.mozilla.gecko.media.Codec.Error.FATAL, new java.lang.Exception("FAIL: input sample queue is full"));
    }
}

public void onCameraAvailable(java.lang.String cameraId) {
    mPreferences.setCamActiv(false);
    de.simu.decoit.android.decomap.util.Toolbox.logTxt(this.getLocalClassName(), "Camera is not in use!");
}

public static void clearQueue() {
    try {
        com.naman14.timber.MusicPlayer.mService.removeTracks(0, java.lang.Integer.MAX_VALUE);
    } catch (final android.os.RemoteException ignored) {
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if (updateProfileImage)
        removeProfilePic();
    
    startActivity(new android.content.Intent(this, btracker.example.raggitha.btracker.profileActivity.class));
    finish();
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            importUnmatchedPrivateKey(key);
        }
    });
}

public void onClick(android.content.DialogInterface dialog, int which) {
    android.util.Log.d("log", "click zamknij");
    gameEnded = true;
    EndGame();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if ((getArguments()) != null) {
    }
}

public static void disableAddProblemMode() {
    org.ecomap.android.app.fragments.EcoMapFragment.addproblemModeIsEnabled = false;
    org.ecomap.android.app.fragments.EcoMapFragment.setMarkerClickType(0);
    org.ecomap.android.app.fragments.EcoMapFragment.addProblemFragment = null;
    org.ecomap.android.app.fragments.EcoMapFragment.mapClusterer.deleteMarker();
    org.ecomap.android.app.fragments.EcoMapFragment.addProblemSnackbar.dismiss();
    org.ecomap.android.app.fragments.EcoMapFragment.fabAddProblem.setImageResource(R.drawable.ic_location_on_white_24dp);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animator) {
    mIsRefreshing = false;
    if (mNotify) {
        if ((mOnRefreshListener) != null) {
            mOnRefreshListener.onRefresh();
        }
    }
}

public void onClick(android.content.DialogInterface dialog, int which) {
    deleteSchoolSubject(parent.getItemAtPosition(position).toString());
    setAdapterList();
}

private android.net.Uri insertActorValues(android.content.ContentValues actorValues) {
    android.util.Log.v(com.harlie.radiotheater.radiomysterytheater.data.TestRadioTheaterDb.TAG, "insertActorValues");
    android.net.Uri actor = RadioTheaterContract.ActorsEntry.buildActorsUri();
    return activity.getContentResolver().insert(actor, actorValues);
}

@java.lang.Override
public void onClick(android.view.View v) {
    dialog.dismiss();
    saveDialog();
    cleanSlate();
}

public void onClick(android.view.View v) {
    android.content.Intent intentService = new android.content.Intent(this, org.yy.kyvb.VoiceBroadcastService.class);
    stopService(intentService);
    if ((cur_show_ad) != null) {
        cur_show_ad.hide();
        cur_show_ad = null;
    }
    finish();
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    int tag = msg.arg1;
    java.lang.Object object = msg.obj;
    com.paul.okhttpframework.okhttp.callback.IResultCallback iResultCallback = com.paul.okhttpframework.okhttp.manager.OkBD.getAndRemoveHashMap(tag);
    iResultCallback.onSuccessResult(object, tag);
}

@java.lang.Override
public void addNewRestaurant() {
    addRestaurant = new in.foodtalk.android.fragment.newpost.AddRestaurant();
    setFragmentView(addRestaurant, R.id.container1, 0, true);
}

public void speakWord(java.lang.String word, android.view.View v) {
    speaker = new teamtim.teamtimapp.speechSynthesizer.SpeechSynthesizer(v.getContext());
    speaker.speak(word);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_photoscan);
    initData();
    initUI();
}

static long getInstallDate(android.content.Context context) {
    return hotchemi.android.rate.PreferenceHelper.getPreferences(context).getLong(hotchemi.android.rate.PreferenceHelper.PREF_KEY_INSTALL_DATE, 0);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.ACCESS_COARSE_LOCATION }, com.finrobotics.neyyasample.MainActivity.PERMISSION_REQUEST_COARSE_LOCATION);
}

private void setDefaultConfiguration() {
    com.jstakun.gms.android.data.FileManager fm = com.jstakun.gms.android.data.PersistenceManagerFactory.getFileManager();
    fm.readResourceBundleFile(com.jstakun.gms.android.config.ConfigurationManager.configuration, R.raw.defaultconfig, getContext());
    fm.createDefaultDirs();
    com.jstakun.gms.android.config.ConfigurationManager.changedConfig.clear();
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    if (endSize == 0) {
        android.util.Log.e("Yann", "end size is 0");
        imgPicture.setVisibility(View.GONE);
    }
}

@java.lang.Override
public void onFocusChange(android.view.View view, boolean b) {
    if (!(prevFocus.bool)) {
        showTagsDialog();
    }
    if (b) {
        prevFocus.bool = true;
    }else {
        prevFocus.bool = false;
    }
}

@java.lang.Override
public void onClick(@android.support.annotation.NonNull
com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull
com.afollestad.materialdialogs.DialogAction which) {
    initializeAesthetic(primary, accent, true);
    dialog.dismiss();
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d(com.beccap.weathervane.WeatherStatusFragment.TAG, "calling onResume");
    _mapView.onResume();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    butterknife.ButterKnife.bind(this);
    buildGeoFence();
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    super.onAnimationStart(animation);
    getFloatingToolbar().setVisibility(View.VISIBLE);
    getFab().setVisibility(View.INVISIBLE);
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mp, int what, int extra) {
    android.util.Log.e(com.hardikarora.spotify_1.service.SpotifyPlayerService.LOG_TAG, "Error occured with the media player.");
    mp.reset();
    return false;
}

public void pauseButton(android.view.MenuItem mi) {
    if ((mPlayer) != null)
        mPlayer.pause(null);
    
    mi.setIntent(mi.getIntent());
}

@org.androidannotations.annotations.UiThread
void displayListView(org.ovirt.mobile.movirt.rest.Disks disks) {
    diskListAdapter = new org.ovirt.mobile.movirt.ui.DiskListAdapter(getActivity(), 0, disks);
    listView.setAdapter(diskListAdapter);
}

@butterknife.OnCheckedChanged(value = in.testpress.testpress.R.id.review)
void onChecked(boolean checked) {
    attemptItem.setCurrentReview(checked);
    if (checked)
        questionsView.setBackgroundColor(Color.LTGRAY);
    else
        questionsView.setBackgroundColor(android.R.color.transparent);
    
}

@java.lang.Override
public void onClick() {
    if ((mLayoutType) == (com.malalaoshi.android.fragments.main.ScheduleFragment.LayoutType.UNSIGNUP)) {
        com.malalaoshi.android.utils.AuthUtils.redirectLoginActivity(getContext());
    }else
        if ((mLayoutType) == (com.malalaoshi.android.fragments.main.ScheduleFragment.LayoutType.EMPTY)) {
            onClickEmptyCourse.onClickEmptyCourse(null);
        }
    
}

@android.support.annotation.NonNull
private android.content.Intent buildUserParcelIntent(java.lang.Class expliciteClass, android.os.Parcelable parcelable) {
    android.content.Intent intent = jumpup.imi.fb4.htw.de.jumpupandroid.util.activity.JumpUpActivity.getExpliciteIntent(this, expliciteClass);
    putExtraUserParcelable(parcelable, intent);
    return intent;
}

public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    mWeb.loadUrl(("javascript:(function() { " + ("document.getElementsByClassName(\'summary\').item(0).innerHTML=\'<a href=\\\'#\\\' onclick=\\\'translate()\\\' >Translate</a><br/><br/>\';" + "})()")));
    if (mProgress.isShowing()) {
        mProgress.dismiss();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (savedInstanceState == null) {
        startService(new android.content.Intent(this, smartext.com.smscapture.SmsListenerService.class));
    }
    finish();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    android.util.Log.d("LifeCycle", "Video onSaveInstanceState");
    super.onSaveInstanceState(outState);
    outState.putInt("video_pos", vidView.getCurrentPosition());
}

@java.lang.Override
public void onClick(android.view.View v) {
    mTodoIndex += 1;
    TodoTextView.setText(mTodos[mTodoIndex]);
}

@java.lang.Override
public void onClick(android.view.View v) {
    setDateFromPicker();
    hideKeyboard(v);
}

public static void loadImageFromResourcesToImageView(android.content.Context context, int resourceId, android.widget.ImageView imageView) {
    com.squareup.picasso.Picasso.with(context).load(resourceId).fit().into(imageView);
}

@java.lang.Override
public void onClick(android.view.View view) {
    stopService(serviceIntent);
    serviceIntent.putExtra("tabNum", 2);
    serviceIntent.putExtra("serviceName", "Stand");
    startService(serviceIntent);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if (intent.hasExtra("state")) {
        changeShengDao(false);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (mFab.isOpened()) {
        mFab.close(true);
    }else {
        mFab.open(true);
    }
}

@java.lang.Override
public void onItemClick(android.view.View v, int position) {
    android.util.Log.d("Clicked", java.lang.Integer.toString(position));
}

public void setLogoView(com.android.internal.navigation.fling.FlingLogoView view) {
    mLogoView = view;
    if ((mLogoColor) != (view.getLogoColor())) {
        view.setLogoColor(mLogoColor);
    }
    view.animate().cancel();
    animateToCurrentState();
}

@rxbus.ecaray.com.rxbuslib.rxbus.RxBusReact(clazz = { java.lang.String.class , java.lang.String.class , java.lang.String.class }, tag = "tag")
public void showContent(java.lang.String content, java.lang.String k, java.lang.String test) {
    android.util.Log.d("tagutil", ("收到的参数: " + content));
}

@java.lang.Override
public void onMinuteSelected(int mMinute) {
    minuteSelected = mMinute;
    minute.add(minuteSelected);
    for (int minutes : minute) {
        android.util.Log.i("Minutes: ", java.lang.String.valueOf(minutes));
    }
}

@android.annotation.SuppressLint(value = "NewApi")
public void stopProcessingThread() {
    if ((processingHandlerThread) != null) {
        processingHandlerThread.quitSafely();
        try {
            processingHandlerThread.join();
            processingHandlerThread = null;
        } catch (java.lang.InterruptedException e) {
            e.printStackTrace();
        }
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.matchagames.setmania.activities.MenuActivity.class);
    startActivity(intent);
    overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);
    finish();
}

@java.lang.Override
public void onLayoutChildren(android.support.v7.widget.RecyclerView.Recycler recycler, android.support.v7.widget.RecyclerView.State state) {
    recyclerRef = recycler;
    if (state.isPreLayout()) {
        onPreLayoutChildren(recycler);
    }else {
        onRealLayoutChildren(recycler);
    }
}

public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance(java.util.ArrayList<com.tallty.smart_life_android.model.Contact> contacts) {
    android.os.Bundle args = new android.os.Bundle();
    args.putSerializable(Const.OBJECT_List, contacts);
    com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress();
    fragment.setArguments(args);
    return fragment;
}

public void onClick(android.view.View v) {
    com.wynnej1983.RNAppirater.RNAppiraterModule.rateApp(reactContext, editor);
    dialog.dismiss();
}

public void createBudgetAndAddToUser(money.mezu.mezu.Budget budget, money.mezu.mezu.UserIdentifier uid) {
    android.util.Log.d("", "FirebaseBackend:addBudgetToUser: adding budget to user");
    java.lang.String newBid = createBudget(budget);
    connectBudgetAndUser(newBid, uid.getId().toString(), null);
}

public retrofit2.Call<com.onehilltech.gatekeeper.android.http.JsonBearerToken> getClientToken() {
    com.onehilltech.gatekeeper.android.http.JsonClientCredentials credentials = new com.onehilltech.gatekeeper.android.http.JsonClientCredentials();
    credentials.clientId = this.config_.clientId;
    credentials.clientSecret = this.config_.clientSecret;
    return this.getToken(credentials);
}

@java.lang.Override
public void onActivityResult(int reqCode, int resCode, android.content.Intent intent) {
    if ((command) != null) {
        command.success();
    }
}

@java.lang.Override
protected void onDestroy() {
    org.wordpress.android.analytics.AnalyticsTracker.track(AnalyticsTracker.Stat.EDITOR_CLOSED);
    mDispatcher.unregister(this);
    doUnbindUploadService();
    super.onDestroy();
}

protected void drawValue(android.graphics.Canvas c, float val, float xPos, float yPos, com.github.mikephil.charting.utils.ValueFormatter formatter) {
    java.lang.String value = formatter.getFormattedValue(val);
    c.drawText(value, xPos, yPos, mValuePaint);
}

private void processError(int errorCode, java.lang.Exception e) {
    setState(ee.ioc.phon.android.speak.RecognizerIntentService.State.ERROR);
    mOnErrorListener.onError(errorCode, e);
    releaseResources();
    stopSelf();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = com.example.savagavran.criminalintent.DatePickerActivity.newIntent(getActivity(), mCrime.getDate());
    startActivityForResult(intent, com.example.savagavran.criminalintent.CrimeFragment.REQUEST_DATE);
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    getLoaderManager().initLoader(com.mx.kanjo.openclothes.ui.fragments.ListSalesFragment.LOADER_SALE, null, this);
    setTitle();
}

private java.lang.String getPadNameFromInput(android.widget.TextView input) {
    java.lang.String padName = ((java.lang.String) (input.getText().toString()));
    return padName;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    int scrollPositionY = mScrollView.getScrollY();
    android.util.Log.v("TEST", ("Scroll positionXY: " + scrollPositionY));
    outState.putInt("scrollPositionY", scrollPositionY);
}

@java.lang.Override
public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) {
    bnotif = dataSnapshot.getValue(java.lang.Boolean.class);
    if (bnotif) {
        thread = true;
        run_pug();
        android.util.Log.d("Stop", "running");
    }
}

public void startCropMainActivity(java.lang.String path) {
    stopRecording();
    android.content.Intent imageEditorIntent = new com.adobe.creativesdk.aviary.AdobeImageIntent.Builder(this).setData(mStorage.getUriFromPath(currentImagePath)).build();
    startActivityForResult(imageEditorIntent, com.comp.iitb.vialogue.activity.AudioRecordActivity.REQ_CODE_CSDK_IMAGE_EDITOR);
}

public void onLowMemory() {
    android.util.Log.d("CN1 Mapss", "onLowMemory()");
    try {
        if ((view) != null) {
            view.onLowMemory();
        }
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    if (drawerToggle.onOptionsItemSelected(item)) {
        return true;
    }
    switch (item.getItemId()) {
        case R.id.action_settings :
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onTimeSet(android.widget.TimePicker timePicker, int hour, int minute) {
    hourOfDay = hour;
    minuteOfDay = minute;
    setAlarm();
    showDialogMessage("Alarm", "Alarm settings was successful ", SweetAlertDialog.SUCCESS_TYPE);
}

public int getItemsPerPage(android.content.Context c) {
    return android.preference.PreferenceManager.getDefaultSharedPreferences(c).getInt(com.sphericalelephant.zeitgeistng.fragment.preference.PreferenceFacade.KEY_ITEMSPERPAGE, com.sphericalelephant.zeitgeistng.fragment.preference.PreferenceFacade.DEFAULT_ITEMSPERPAGE);
}

public ru.kazantsev.template.util.FragmentBuilder clearBackStack(java.lang.Class<android.support.v4.app.Fragment> fragmentClass) {
    return clearBackStack(fragmentClass.getSimpleName());
}

public static void recordAndAlignTask(android.webkit.WebView userWeb) {
    com.sw551.fairfield.healthcheq.withings.WithingsAuthorization.bindingWeb = userWeb;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    icepick.Icepick.saveInstanceState(this, outState);
}

@java.lang.Override
public boolean onLongClick(android.view.View view) {
    if ((rowItem.getEntry()) != null) {
        toggleChecked(position1, holder.checkImageView);
    }
    return true;
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    dispatchKeyEvent(new android.view.KeyEvent(android.view.KeyEvent.ACTION_DOWN, android.view.KeyEvent.KEYCODE_DPAD_CENTER));
    dispatchKeyEvent(new android.view.KeyEvent(android.view.KeyEvent.ACTION_UP, android.view.KeyEvent.KEYCODE_DPAD_CENTER));
    mVoiceDetection.changePhrases(Constants.VOICE_MENU_MODE.KEYWORD);
    mVoiceDetection.start();
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.main, menu);
    return super.onCreateOptionsMenu(menu);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    switch (id) {
        case android.R.id.home :
            super.onBackPressed();
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onNext(java.io.File file) {
    android.util.Log.d("peka", "file was download");
    android.util.Log.d("peka", ("File downloaded to " + (file.getAbsolutePath())));
}

public static boolean hasAccessToken(android.content.Context context) {
    return (com.example.takeshi.tthtwitter.TwitterService.loadAccessToken(context)) != null;
}

@org.junit.Test
public void useAppContext() throws java.lang.Exception {
    android.content.Context appContext = android.support.test.InstrumentationRegistry.getTargetContext();
    assertEquals("slak.fslistview.test", appContext.getPackageName());
}

private void addPolylineToMap() {
    line = mMap.addPolyline(new com.google.android.gms.maps.model.PolylineOptions().width(10).color(Color.BLUE));
    lines.add(line);
    android.util.Log.i("Development", "addPolylineToMap");
}

private static boolean isPackageInstalled(io.xdevs23.theme.bluemerald.cm.Context context, java.lang.String package_name) {
    android.content.pm.PackageManager pm = context.getPackageManager();
    try {
        pm.getPackageInfo(package_name, PackageManager.GET_ACTIVITIES);
        return true;
    } catch (java.lang.Exception e) {
        return false;
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    configShare.setPermitConnectMore(isChecked);
    com.e.ble.BLESdk.get().setPermitConnectMore(isChecked);
}

private void loginSuccess(java.lang.String uid) {
    android.content.Intent intent = new android.content.Intent(this, com.freelancewatermelon.factordiary.SubUsersActivity.class);
    intent.putExtra("uid", uid);
    startActivity(intent);
    finish();
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    android.util.Log.e(edu.nthu.nmsl.itri_app.FragmentActivity.TAG, ("Restore " + (savedInstanceState.getInt(CurrentFragementTAG_KEY))));
    this.currentFragementIndex = savedInstanceState.getInt(CurrentFragementTAG_KEY);
}

@java.lang.Override
public void onClick(android.view.View view) {
    button9.setText(((mark) + ""));
    placeMarkOnBoard(2, 2);
    button9.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

@java.lang.Override
public void onNavigationDrawerItemSelected(int position) {
    android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
    fragmentManager.beginTransaction().replace(R.id.container, com.boolong.hangrywaits.Home.HomeFragment.newInstance((position + 1))).commit();
}

@android.support.annotation.NonNull
public static com.androidadvance.topsnackbar.TSnackbar make(@android.support.annotation.NonNull
android.view.View view, @android.support.annotation.NonNull
java.lang.CharSequence text, @com.androidadvance.topsnackbar.TSnackbar.Duration
int duration) {
    com.androidadvance.topsnackbar.TSnackbar snackbar = new com.androidadvance.topsnackbar.TSnackbar(com.androidadvance.topsnackbar.TSnackbar.findSuitableParent(view));
    snackbar.setText(text);
    snackbar.setDuration(duration);
    return snackbar;
}

@java.lang.Override
public void decorate(com.prolificinteractive.materialcalendarview.DayViewFacade view) {
    view.addSpan(new android.text.style.StyleSpan(android.graphics.Typeface.BOLD));
    view.addSpan(new android.text.style.RelativeSizeSpan(1.5F));
    view.setBackgroundDrawable(drawable);
    view.setDaysDisabled(true);
}

protected int getResult(final android.content.Intent response) {
    int result = response.getIntExtra(DConnectMessage.EXTRA_RESULT, DConnectMessage.RESULT_ERROR);
    return result;
}

private void initAdds() {
    com.google.android.gms.ads.AdView mAdView = ((com.google.android.gms.ads.AdView) (findViewById(R.id.main_adView)));
    com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().build();
    mAdView.loadAd(adRequest);
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    android.util.Log.v("SaleHistory", "onQueryTextSubmit called!");
    return onQueryTextChange(query);
}

private void showKeyboard(android.view.Window window) {
    if (!(isKeyboardShown)) {
        window.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
        isKeyboardShown = true;
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    openAnimate(downPosition);
    return false;
}

public void onLeftToRightSwipe(android.view.View v) {
    android.util.Log.i(com.kmobile.gallery.helper.KMActivitySwipeDetector.logTag, "LeftToRightSwipe!");
    activity.onLeftToRight(v);
}

@java.lang.Override
public void onCheckedChanged(android.widget.RadioGroup group, @android.support.annotation.IdRes
int checkedId) {
    if (checkedId == (R.id.radioMale)) {
        gender = 1;
    }else {
        gender = 0;
    }
}

@butterknife.OnFocusChange(value = R.id.eTPassword)
void onPassFocusChanged(boolean focused) {
    final android.view.View llpass = findViewById(R.id.layoutPassword);
    if (!focused) {
        llpass.setAlpha(0.5F);
    }
}

@java.lang.Override
public void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    if (savedInstanceState.containsKey(view.RankingResult.STATE_SELECTED_NAVIGATION_ITEM)) {
        getActionBar().setSelectedNavigationItem(savedInstanceState.getInt(view.RankingResult.STATE_SELECTED_NAVIGATION_ITEM));
    }
}

public void onClick(android.view.View view) {
    if ((customFatIsFilledIn) && (customProteinIsFilledIn)) {
        getMacros();
        goToFinalCaloriesAndMacrosActivity();
    }
}

public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    fragmentView = getView();
}

@java.lang.Override
public void refreshScreen() {
    android.util.Log.d("Hope:", "JobScreen Refreshed");
    new com.pommerening.quinn.foodtruck.fragment.tabs.employee.EmployeeItemsFragment.LoadInformation().execute(mUsername);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    openAdder(images.get(position));
}

private android.view.ViewPropertyAnimator animateOffScreenLeft() {
    return card.animate().setDuration(150).x((-(parent.getWidth()))).y(0).rotation((-30));
}

public static int getSpinnerLabelPhone(int type) {
    switch (type) {
        case com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.FIELD_TYPE_PHONE_HOME :
            return com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.TYPE_INDEX_HOME;
        case com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.FIELD_TYPE_PHONE_WORK :
            return com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.TYPE_INDEX_WORK;
        case com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.FIELD_TYPE_PHONE_MOBILE :
            return com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.TYPE_INDEX_MOBILE;
        case com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.FIELD_TYPE_PHONE_OTHER :
            return com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.TYPE_INDEX_OTHER;
        default :
            return 0;
    }
}

void dispatchOnPanelStateChanged(android.view.View panel, com.sothree.slidinguppanel.SlidingUpPanelLayout.PanelState previousState, com.sothree.slidinguppanel.SlidingUpPanelLayout.PanelState newState) {
    for (com.sothree.slidinguppanel.SlidingUpPanelLayout.PanelSlideListener l : mPanelSlideListeners) {
        l.onPanelStateChanged(panel, previousState, newState);
    }
    sendAccessibilityEvent(AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED);
}

private void savePreferences() {
    android.content.SharedPreferences.Editor editor = context.getSharedPreferences("Settings", android.content.Context.MODE_PRIVATE).edit();
    editor.putBoolean("music", musicOn);
    editor.apply();
}

private void showAddDialog() {
    android.app.DialogFragment fragment = info.dylansymons.fpfrhelper.game.management.NewPlayerDialogFragment.newInstance(mGame.getFirefighterList(), mColourList, this);
    fragment.show(getFragmentManager(), "dialog");
}

public boolean onTouchEvent(android.view.MotionEvent e) {
    switch (e.getAction()) {
        case android.view.MotionEvent.ACTION_UP :
            android.util.Log.i(TAG, "Screen touched ");
            robot.listen();
            break;
        default :
            break;
    }
    return true;
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) {
    mMap = googleMap;
    mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(initPosition, initZoom));
    mMap.setOnMapLoadedCallback(this);
    timber.log.Timber.d("onMapReady");
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return new com.michaelt.paycheckmileagecalculator.fragment.PaycheckInputFragment();
        case 1 :
            return new com.michaelt.paycheckmileagecalculator.fragment.SalaryFragment();
        default :
            break;
    }
    return null;
}

public void readFromParcel(android.os.Parcel in) {
    this.id = in.readInt();
    this.url = in.readString();
    this.timestamp = in.readLong();
    this.frequency = in.readLong();
}

@java.lang.Override
public boolean onNavigationItemSelected(android.view.MenuItem menuItem) {
    if ((menuItem.getItemId()) != (currentFragmentId)) {
        doDrawerMenuAction(menuItem.getItemId());
    }
    drawerLayout.closeDrawers();
    return true;
}

@java.lang.Override
public void onInit(com.androidsdk.snaphy.snaphyandroidsdk.list.DataList<java.util.Map<java.lang.String, java.lang.Object>> dataList) {
    getConvertImageToHashMap();
}

private void parseResult(org.json.JSONArray response) {
    feedItemList = com.locol.locol.Parser.parseJSONResponse(response);
    android.util.Log.wtf(com.locol.locol.FeedFragment.TAG, feedItemList.toString());
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    mViewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.container)));
    mViewPager.setCurrentItem(0);
    return false;
}

@java.lang.Override
public void onAnimationStart(android.view.animation.Animation animation) {
    if (!(mShow)) {
        mLensDiameterHiding = true;
    }
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    callbacks = ((ayp.aug.contactapp.ContactListFragment.Callbacks) (context));
    callbacks.onOpenSelectFirst();
}

@butterknife.OnClick(value = R.id.get_button)
private void onGetButtonClicked(android.view.View view) {
    android.util.Log.i(com.example.azvk.butterknife.Fragments.ButtonsFragment.TAG, "onGetButtonClicked");
    com.example.azvk.butterknife.EventList eventList = new com.example.azvk.butterknife.EventList();
    eventList.setResultCode(111);
    org.greenrobot.eventbus.EventBus.getDefault().post(eventList);
}

public static void test_059() throws com.android.uiautomator.core.UiObjectNotFoundException {
    framework.common.PhoneCommon.Makecall("10086", 1);
    check(testcase.Object_ResIdContainsText, testcase.Operation_checkExist, "com.android.dialer:id/callStateLabel", "主卡");
    excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.dialer:id/floating_end_call_action_button");
}

@java.lang.Override
public void success(java.util.List<com.google.android.apps.forscience.whistlepunk.metadata.SensorTrigger> triggers) {
    startObservingWithTriggers(readOptions, recordFragmentObserver, triggers);
    updateCardMenu();
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    if (savedInstanceState != null) {
        editText.setText(savedInstanceState.getString(ly.loud.loudly.ui.PostCreateFragment.EDIT_TEXT));
    }
    setListeners();
}

@java.lang.Override
public void accept(@io.reactivex.annotations.NonNull
com.eternal.common.serial.BaseSerialMessage serialMessage) throws java.lang.Exception {
    android.databinding.ObservableField observableField;
    synchronized(this) {
        observableField = callbackMap.get(serialMessage.getClass());
    }
    if (observableField != null) {
        observableField.set(serialMessage);
    }
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    android.util.Log.e(com.alpha2.duenem.view_pager_cards.TrainActivity.TAG, databaseError.getMessage());
    android.widget.Toast.makeText(this, "É necessário estar logado para usar o app.", Toast.LENGTH_LONG).show();
}

public void onStartMultiTouch(android.view.View view) {
    android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
    android.support.v4.app.FragmentTransaction transaction = fm.beginTransaction();
    transaction.replace(R.id.container, new org.sensors2.osc.fragments.MultiTouchFragment());
    transaction.addToBackStack(null);
    transaction.commit();
}

@java.lang.Override
public void onClick(android.view.View view) {
    friend.sendingStarted = true;
    sendImageListener.onImageUploadStarted(friend);
    notifyDataSetChanged();
}

public void startService(int category, int pageNumber) {
    android.content.Intent intent = new android.content.Intent(this, com.example.picturemanager.ThumbnailDownloadService.class);
    intent.putExtra("category", category);
    intent.putExtra("pageNumber", pageNumber);
    startService(intent);
}

@butterknife.OnClick(value = R.id.view_helper_overlay_button)
void dismissOverlay() {
    ((android.view.ViewGroup) (getParent())).removeView(this);
}

public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (com.firebase.ui.auth.ui.AcquireEmailHelper.REQUEST_CODES.contains(requestCode)) {
        mActivityHelper.finish(resultCode, new android.content.Intent());
    }
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    if ((sharedPreferences.getBoolean(com.way.telecine.TelecineActivity.HIDE_FROM_RECENTS_KEY, false)) && (!(isChangingConfigurations()))) {
        android.util.Log.d("way", "Removing task because hide from recents preference was enabled.");
        finishAndRemoveTask();
    }
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    progressDialog = new android.app.ProgressDialog(activity.getBaseContext());
    progressDialog.setTitle("LOADING");
    progressDialog.show();
}

public boolean onPreferenceClick(android.preference.Preference preference) {
    if ((version_taps) == 3) {
        android.util.Log.d("Easter egg", "Activated");
        version_taps = 0;
    }else {
        (version_taps)++;
    }
    return true;
}

@java.lang.Override
public void setPrimaryItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    highlightCurrentFragment(position);
    super.setPrimaryItem(container, position, object);
}

@java.lang.Override
@java.lang.SuppressWarnings(value = "deprecation")
public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) {
    return true;
}

@java.lang.Override
public void msgRecivedAlive(de.dmarcini.submatix.android4.full.comm.BtServiceMessage msg) {
    if (de.dmarcini.submatix.android4.full.ApplicationDEBUG.DEBUG) {
        android.util.Log.d(de.dmarcini.submatix.android4.full.gui.SPX42PreferencesFragment.TAG, (("SPX Alive <" + ((java.lang.String) (msg.getContainer()))) + "> recived"));
    }
    theToast.dismissDial();
}

@java.lang.Override
public void onClick(android.content.DialogInterface anInterface, int i) {
    if ((loading.getVisibility()) == (android.view.View.VISIBLE))
        return ;
    
    new uiuc.mbr.ui.AddEventDialog.Worker(true).execute();
}

@java.lang.Override
public void onClick(android.view.View view) {
    intent.putExtra("linia", lines.get(x).getTag());
    intent.putExtra("linia_id", x);
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    ctx.startActivity(intent);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_welcome);
    initLogin();
    initRegister();
    getwreckt.cs2340.rattrack.model.UserList.addUser("user", getwreckt.cs2340.rattrack.model.CryptHash.hash("pass"));
}

@java.lang.Override
public void onResume() {
    android.util.Log.d(org.eyeseetea.malariacare.fragments.MonitorFragment.TAG, "onResume");
    setListShown(false);
    registerSurveysReceiver();
    super.onResume();
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.btn_getURL :
            get_address(v);
            break;
        case R.id.btn_analyze :
            getTextFromActivity(v);
            break;
        case R.id.btn_reset :
            resetText(v);
            break;
    }
}

@java.lang.Override
public void onError(java.lang.Throwable e) {
    android.util.Log.w("TAG", e);
    mDownloadController.setState(new zlc.season.rxdownloadproject.DownloadController.Paused());
}

static void setDebuggerViewerLayout(boolean visible) {
    com.atinternet.tracker.Debugger.viewerVisibility = (visible) ? android.view.View.VISIBLE : android.view.View.GONE;
    com.atinternet.tracker.Debugger.debuggerViewerLayout.get().setVisibility(com.atinternet.tracker.Debugger.viewerVisibility);
    com.atinternet.tracker.Debugger.setAlphaBackground(visible, false);
}

@android.support.annotation.ColorInt
public static int resolveThemeColor(@android.support.annotation.NonNull
android.content.Context context, @android.support.annotation.AttrRes
@android.support.annotation.StyleableRes
int attr, @android.support.annotation.ColorInt
int defaultColor) {
    return com.heinrichreimersoftware.androidissuereporter.util.ThemeUtils.resolveThemeColors(context, new int[]{ attr }, new int[]{ defaultColor })[0];
}

void positionRecieved(com.google.android.gms.maps.model.LatLng position, java.lang.String id, com.embedded.socialexercise.person.Person p);

public void addTile(android.content.ComponentName tile) {
    java.util.List<java.lang.String> newSpecs = new java.util.ArrayList<>(mTileSpecs);
    newSpecs.add(0, com.android.systemui.qs.external.CustomTile.toSpec(tile));
    changeTiles(mTileSpecs, newSpecs);
}

private java.lang.String getRandomFromList(java.util.List<java.lang.String> list) {
    android.widget.TextView phraseField = ((android.widget.TextView) (findViewById(R.id.phrase)));
    return com.decote.partygames.utils.RandomHelper.getNextRandomString(list, getApplicationContext());
}

@java.lang.Override
public void onListItemClick(android.widget.ListView l, android.view.View v, int position, long id) {
    showRecipeDetails(position);
}

public static com.morax.homelibrary.DetailsFragment newInstance() {
    android.os.Bundle args = new android.os.Bundle();
    com.morax.homelibrary.DetailsFragment fragment = new com.morax.homelibrary.DetailsFragment();
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    mFavorite = isChecked;
}

public void addFace(com.google.android.gms.vision.face.com.google.android.gms.samples.vision.face.facetracker.Face face) {
    face.initSound(getApplicationContext());
    com.google.android.gms.samples.vision.face.facetracker.FaceTrackerActivity.faces.add(face);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    setUpHeader();
    setHariini();
    setNotifHarian();
    bonusGiver();
    android.util.Log.d("resem", "onResume: ");
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.widget.ImageButton button = ((android.widget.ImageButton) (findViewById(R.id.imageButton4)));
    button.setImageResource(R.mipmap.ic_data_usage_white_24dp);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    setContentView(R.layout.activity_register);
    super.onCreate(savedInstanceState);
    initViews();
    mCurrentStep = initStep();
    initEvents();
    initBackDialog();
}

public void onClick(@java.lang.SuppressWarnings(value = "unused")
final android.content.DialogInterface dialog, @java.lang.SuppressWarnings(value = "unused")
final int id) {
    startActivity(new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS));
}

private static void restoreDensity(android.content.Context context) {
    context.getResources().getDisplayMetrics().setToDefaults();
    android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper.getMetricsOnMiui(context.getResources());
    if (metrics != null)
        metrics.setToDefaults();
    
}

public void setGeoFence(android.view.View view) {
    LocationServices.GeofencingApi.addGeofences(mGoogleApiClient, getGeofencingRequest(), getGeofencePendingIntent()).setResultCallback(this);
}

public void resume() {
    if (org.lasarobotics.vision.android.Sensors.activated)
        return ;
    
    mSensorManager.registerListener(this, mAccelerometer, org.lasarobotics.vision.android.Sensors.READ_SPEED);
    mSensorManager.registerListener(this, mMagneticField, org.lasarobotics.vision.android.Sensors.READ_SPEED);
    org.lasarobotics.vision.android.Sensors.activated = true;
}

private void changeSortOrder(final com.setiawanpaiman.tmdb.android.movielist.MovieListContract.Presenter.SortOrder oldSortOrder, final com.setiawanpaiman.tmdb.android.movielist.MovieListContract.Presenter.SortOrder newSortOrder) {
    if (oldSortOrder == newSortOrder) {
        return ;
    }
    mSortOrder = newSortOrder;
    onRefresh();
}

@java.lang.Override
protected void acaoDosEventosDoMenu(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            finish();
            break;
    }
}

private synchronized void buildGoogleApiClient() {
    mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).addApi(ActivityRecognition.API).enableAutoManage(this, this).build();
}

@android.annotation.TargetApi(value = 21)
private void speakOut() {
    java.lang.String exScene = "Team rocket had stolen four of your Poke e mawn. You followed them to a haunted house. The front door is locked. There is a mailbox to the right and a lantern to the left.";
    java.lang.String testScene = "Articuno, Pikachu, Charmander, Onyx";
    tts.speak(txtFromDesc.getText().toString(), TextToSpeech.QUEUE_FLUSH, null, UTTERANCE_ID);
}

@java.lang.Override
public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) {
    android.widget.Toast.makeText(context, (url + "overrrider url loading"), Toast.LENGTH_LONG).show();
    view.loadUrl(url);
    return super.shouldOverrideUrlLoading(view, url);
}

private void sendBroadcastIntent(@javax.annotation.Nonnull
java.lang.String action) {
    context.sendBroadcast(new android.content.Intent(action));
}

public void onClick(android.view.View v) {
    if ((player2_textureState) > 1) {
        (Gameplay.player2_pers)--;
        (Gameplay.player1_vs)--;
        (player2_textureState)--;
        com.example.myapplication.Options.setPlayersPicturesForVar(player2_textureState, player2_leftArrow, player2_texture, player2_rightArrow);
    }
}

@java.lang.Override
protected void onPostExecute(java.util.ArrayList<java.lang.String> collections) {
    adapterCollections.clear();
    if ((adapterCollections) == null) {
        android.util.Log.i(hestia.UI.dialogs.AddDeviceDialog.TAG, "adapterCollections became null?");
    }
    adapterCollections.addAll(collections);
}

@java.lang.Override
public void onClick(android.view.View v) {
    alertDialog.dismiss();
    com.kongzue.dialog.SelectDialog.positiveClick.onClick(v);
}

public void scanNow(android.view.View v) {
    startActivityForResult(new android.content.Intent(getApplicationContext(), com.soctec.soctec.core.ScanActivity.class), com.soctec.soctec.core.MainActivity.REQUEST_CODE);
    mViewPager.setCurrentItem(1);
    refreshAchievements(unlocker.getUnlockableAchievements(), stats.getAchievements());
}

@java.lang.Override
public void onAnimationStart() {
    if ((mTargetVisibility) == (android.view.View.VISIBLE)) {
        mCallback.setViewVisibilityState(mViewId, View.VISIBLE);
    }
}

@java.lang.Override
public void onChildRemoved(com.google.firebase.database.DataSnapshot dataSnapshot) {
    android.util.Log.d(com.pajato.android.gamechat.database.handler.MessagesChangeHandler.TAG, java.lang.String.format(java.util.Locale.US, com.pajato.android.gamechat.database.handler.MessagesChangeHandler.LOG_FORMAT, "onChildRemoved", dataSnapshot, null));
    process(dataSnapshot, false, com.pajato.android.gamechat.event.MessageChangeEvent.REMOVED);
}

@java.lang.Override
protected void onDestroy() {
    this.unregisterReceiver(hRemoval);
    this.unregisterReceiver(NBR);
    android.util.Log.wtf("Bye Bye now", "");
    notificationManager.cancel(notificationID);
    super.onDestroy();
}

private void updateToolbarTitle(android.support.v4.app.Fragment fragment) {
    java.lang.String fragmentClassName = fragment.getClass().getName();
    if (fragmentClassName.equals(com.example.a1.projecttest.fragments.VospitannikFragment.class.getName())) {
        setTitle(getString(R.string.status_child));
    }
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder holder) {
    bg = new com.droidkings.game.Background(android.graphics.BitmapFactory.decodeResource(getResources(), R.drawable.gamebg1));
    bg.setVector((-5));
    thread.setRunning(true);
    thread.start();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((scheduleDisplayed) == ((schedules.size()) - 1))
        scheduleDisplayed = 0;
    else
        (scheduleDisplayed)++;
    
    updateSchedulesUI();
}

@java.lang.Override
public void executeCallbacks(int requestCode, int responseCode, android.content.Intent data) {
    mTwitterAuthClient.onActivityResult(requestCode, requestCode, data);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getActivity(), com.ritwik.android.madfbla201415.HomepageActivity.class);
    startActivity(intent);
}

public void glUniform4(int location, java.nio.IntBuffer value) {
    com.jme3.renderer.android.AndroidGL.checkPosition(value);
    android.opengl.GLES20.glUniform4iv(location, com.jme3.renderer.android.AndroidGL.getLimitCount(value, 4), value);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(com.prod.jvuil.vuforiatest.MainActivity.LOGTAG, "SubmitButton clicked");
    com.prod.jvuil.vuforiatest.ARRenderer.getInstance().setSelectedOverlay();
    buildTracker();
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    com.spotify.sdk.android.player.Spotify.destroyPlayer(this);
    super.onDestroy();
}

@java.lang.Override
public void run() {
    clearFields();
    final com.metar.android.singleton.ApplicationSingleton app = ((com.metar.android.singleton.ApplicationSingleton) (getApplication()));
    app.setSatelliteStatusEnum(SatelliteStatusEnum.REPORT_IN_QUEUE);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    myRgb[2] = isChecked;
    adjustBrightness();
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    binding = android.databinding.DataBindingUtil.inflate(inflater, R.layout.fragment_event_repeat_custom, container, false);
    return binding.getRoot();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if ((getViewBinder()) != null) {
        getViewBinder().clearAllBindings();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.home_page_searchcompany_button :
            switchToSearchCompany();
            break;
        case R.id.home_page_company_profile_button :
            switchToCompanyProfile();
            break;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.support.design.widget.BottomNavigationView navigation = ((android.support.design.widget.BottomNavigationView) (findViewById(R.id.navigation)));
    navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
}

@java.lang.Override
public void onError(java.lang.Exception e) {
    android.util.Log.i(ru.sukharev.pathtracker.ui.MapActivity.TAG, "error!");
    android.widget.Toast.makeText(this, getString(R.string.error_saving_to_db), Toast.LENGTH_SHORT).show();
    e.printStackTrace();
}

public boolean connect(android.bluetooth.BluetoothDevice device) {
    if (com.android.settings.bluetooth.MapProfile.V)
        android.util.Log.d(com.android.settings.bluetooth.MapProfile.TAG, "connect() - should not get called");
    
    return true;
}

private void setImageData(android.content.Intent data) {
    mReportFragment.setImageData(data);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    finish();
    startActivity(new android.content.Intent(this, com.codeartist.applocker.activity.DummyActivity.class));
}

@java.lang.Override
public void run() {
    if ((testsRunning) == false) {
        android.widget.Toast.makeText(context, getString(R.string.no_connectivity), Toast.LENGTH_LONG).show();
        tv_Gauge_TextView_PsuedoButton.setClickable(false);
    }
}

@android.support.annotation.Nullable
@java.lang.Override
public io.skygear.plugins.chat.Conversation convert(io.skygear.skygear.Record record) {
    return new io.skygear.plugins.chat.Conversation(record, 0, null);
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.doricovix.utif.retrofitgetmysql.ItemResponse> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(this, t.getMessage(), Toast.LENGTH_SHORT).show();
    android.util.Log.d("TAG", t.getMessage());
}

private java.io.File getAndroidBeginnerImageFile() {
    java.io.File mediaStorageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);
    java.io.File mediaFile = new java.io.File(mediaStorageDir.getPath(), "androidBeginnerImage.jpg");
    return mediaFile;
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (onItemClickListener != null) {
        onItemClickListener.onItemClick(element);
    }
}

@java.lang.Override
public void failure(@android.support.annotation.NonNull
retrofit2.Call<org.wikipedia.descriptions.DescriptionEdit> call, @android.support.annotation.NonNull
java.lang.Throwable caught) {
    editFailed(caught);
    if ((funnel) != null) {
        funnel.logError(caught.getMessage());
    }
}

@java.lang.Override
public void onPause() {
    super.onPause();
    trinityconnect.android.bignerdranch.com.trinityconnect.EventLab.get(getActivity()).updateEvent();
}

private boolean isImageLoaded(java.lang.String resourceName) {
    if (com.jstakun.gms.android.data.IconCache.images.containsKey(resourceName)) {
        return !(com.jstakun.gms.android.data.IconCache.images.get(resourceName).isRecycled());
    }else {
        return false;
    }
}

@java.lang.Override
public void setTopicResultsHaveChanged() {
    if (activityStarted)
        resultColour = android.graphics.Color.MAGENTA;
    
    if ((activityStarted) == false)
        textView.setBackgroundColor(resultColour);
    
}

public void setInactiveColor(int inActiveColor) {
    mInActiveColor = inActiveColor;
    labelView.setTextColor(inActiveColor);
    android.support.v4.graphics.drawable.DrawableCompat.setTint(mCompactIcon, inActiveColor);
    iconView.setImageDrawable(mCompactIcon);
}

public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    player.start();
    android.util.Log.v("FSDF", "Initializing sounds...");
    return 1;
}

private void init() {
    mBytes = null;
    mForePaint.setStrokeWidth(0.5F);
    mForePaint.setAntiAlias(true);
    mForePaint.setColor(android.graphics.Color.rgb(255, 255, 255));
}

@java.lang.Override
public void onPause() {
    super.onPause();
    if ((mNote) != null) {
        mComment = null;
    }
    org.wordpress.android.util.EditTextUtils.hideSoftInput(mEditReply);
}

public void onItemClick(android.widget.AdapterView<?> av, android.view.View v, int arg2, long arg3) {
    address = mPairedDeviceAddressList.get(arg2).toString();
    new com.kanykei.slcs.ConnectToArduinoWithBluetooth.ConnectBT().execute();
}

@java.lang.Override
public RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.View.inflate(context, R.layout.movies, null);
    return new com.example.elson.popmovies.Adapters.GridAdapter.MovieViewHolder(view);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            cancelAndReturn();
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onClick(android.view.View v) {
    CreateIcon(com.att.attcase.XayDungCase.iconDuocChon);
    disableall();
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.util.List<com.sinergiass.asistencia.model.Admin>> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(this, "Conexion Fallida al cargar admins", Toast.LENGTH_LONG).show();
    cargarOperadores();
}

@java.lang.Override
public boolean onDoubleTap(android.view.MotionEvent motionEvent) {
    productListing.replace_fragment_upper(productModels.get(position_clciked));
    return true;
}

private void readFromParcel(android.os.Parcel in) {
    in.readStringList(meanings);
}

public void leaveRoom() {
    android.util.Log.d(com.sam.hex.NetActivity.TAG, "Leaving room.");
    stopKeepingScreenOn();
    if ((mRoomId) != null) {
        Games.RealTimeMultiplayer.leave(getClient(), null, mRoomId);
        mRoomId = null;
    }
}

public boolean popWithResult(@android.support.annotation.Nullable
java.lang.Object result) {
    return popWithResult(1, result);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_calendar_filters :
            startCalendarFiltersScreen();
            break;
        case R.id.action_request_time_off :
            startRequestTimeOffScreen();
            break;
    }
    return super.onOptionsItemSelected(item);
}

public static void start(@android.support.annotation.NonNull
de.jonasrottmann.realmbrowser.Context context) {
    android.content.Intent intent = new android.content.Intent(context, de.jonasrottmann.realmbrowser.RealmFilesActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    context.startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    isInUpdateMode = true;
    saveSubject(viewedSubjectName, true, viewedSubjectShortening, viewedSubjectRelevance, 0);
}

protected void callToDialer(android.view.View v) {
    getPermissionsForPhoneCall();
}

public static boolean isEmpty(java.lang.String string) {
    return ((android.text.TextUtils.isEmpty(string)) || ((string.trim().length()) == 0)) || (com.destin.sehaikun.StringUtils.NULL.equalsIgnoreCase(string));
}

@java.lang.Override
public void onRestart() {
    super.onRestart();
    android.util.Log.d("", "");
}

@java.lang.Override
public void onSurfaceCreated(javax.microedition.khronos.opengles.GL10 unused, javax.microedition.khronos.egl.EGLConfig config) {
    android.opengl.GLES20.glClearColor(0.0F, 0.0F, 0.0F, 1.0F);
    viewX = 0.0F;
    viewY = 0.0F;
    fieldOfViewY = 120.0F;
    mLastTime = java.lang.System.currentTimeMillis();
    tick();
}

@java.lang.Override
public void dealWithCustomAction(android.content.Context context, com.umeng.message.entity.UMessage msg) {
    android.widget.Toast.makeText(context, msg.custom, Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    itemClickListener.onItemClick(null, itemView, position, 0);
}

public void handleFeedback(java.io.InputStream in) {
    try {
        fb = CarControlProtos.FeedBack.parseDelimitedFrom(in);
        processFeedback(fb);
    } catch (java.io.IOException e) {
        android.util.Log.d("DEC", "IOException");
        e.printStackTrace();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    int a = 8;
    int b = 7;
    int ab = 15;
    int c = 76;
}

@java.lang.Override
public boolean onSingleTapUp(android.view.MotionEvent e) {
    butTrigSettings.setBackgroundColor(2201331);
    return super.onSingleTapUp(e);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    scannerQrCode(getActivity());
    dialog.cancel();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    region = new com.example.fernando.farmingfarming.RegionData(which);
    createModelDialogBox(cropID);
}

public void onClick(android.view.View v) {
    android.app.FragmentManager fragmentManager = getFragmentManager();
    android.app.FragmentTransaction ft = fragmentManager.beginTransaction();
    ft.replace(R.id.fragment_container, new com.hsfl.speakshot.ui.ReadFragment());
    ft.addToBackStack(null);
    ft.commit();
}

@java.lang.Override
public com.ivanmagda.habito.widget.RemoteViewsFactory onGetViewFactory(android.content.Intent intent) {
    int appWidgetId = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, AppWidgetManager.INVALID_APPWIDGET_ID);
    return new com.ivanmagda.habito.widget.ListProvider(this, intent);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int i, boolean b) {
    if ((mContext) instanceof com.nerdzlab.mysound.Adapters.SoundInterface) {
        ((com.nerdzlab.mysound.Adapters.SoundInterface) (mContext)).soundLevelChanged(item.getResource_id(), i);
    }
}

@java.lang.Override
public void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    setIntent(intent);
    com.facebook.notifications.NotificationsManager.presentCardFromNotification(cordova.getActivity());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.benjaminearley.mysubs.sync.MySubsSyncAdapter.syncImmediately(this);
    android.content.Intent intent = new android.content.Intent(this, com.benjaminearley.mysubs.StoryListActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onButton1Click(int imageViewID, int position) {
    android.util.Log.v(TAG, (" MA: Pressed button 1 at position " + position));
}

@java.lang.Override
public boolean onDown(android.view.MotionEvent e) {
    mIsPrepressed = true;
    mPressedView = recyclerView.findChildViewUnder(e.getX(), e.getY());
    super.onDown(e);
    return false;
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    super.onOptionsItemSelected(item);
    switch (item.getItemId()) {
        case R.id.settings :
            android.content.Intent intent = new android.content.Intent(this, com.example.ajinkya.stayhealthysg.SettingsActivity.class);
            startActivity(intent);
    }
    return false;
}

@java.lang.Override
protected void onStop() {
    android.util.Log.d("Jane", "unregister Receiver");
    android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(broadcastReceiver);
    super.onStop();
}

@java.lang.Override
public void onSuccess(@io.reactivex.annotations.NonNull
java.util.List<com.takescoop.americanwhitewaterandroid.model.ReachSearchResult> reachSearchResults) {
    setReachSearchResults(reachSearchResults);
    progressWheel.setVisibility(com.takescoop.americanwhitewaterandroid.view.GONE);
}

@java.lang.Override
public void onDrawerClosed(android.view.View v) {
    getSupportActionBar().setTitle(oldTitle);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    moviesAdapter = new com.example.nbtk123.tikalmovies.ui.RVMoviesAdapter(getActivity(), this);
    org.greenrobot.eventbus.EventBus.getDefault().register(moviesAdapter);
}

public com.shapematchandroid.Score add(int pts) {
    return new com.shapematchandroid.Score((points += pts));
}

@java.lang.Override
public void onTaskDone() {
    ((android.support.v7.app.AppCompatActivity) (getActivity())).setSupportProgressBarIndeterminateVisibility(false);
    getActivity().finish();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeInt(_id);
    dest.writeString(_title);
    dest.writeString(_text);
    dest.writeByteArray(_textBitmap);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putLong(com.jdelorenzo.capstoneproject.EditDayFragment.ARG_ROUTINE_ID, mRoutineId);
    mAdapter.onSaveInstanceState(outState);
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onClick(android.view.View v) {
    tripRowHolder.trip.startTrip();
    tripRowHolder.callback.onTripSelected(tripRowHolder.tripId);
    tripRowHolder.trip.setCurrentLocation(tripRowHolder.trip.getStartLocation());
    tripRowHolder.trip.setFuelPrice();
}

@java.lang.Override
public void onCreate(android.os.Bundle bundle, org.smssecure.smssecure.crypto.MasterSecret masterSecret) {
    super.onCreate(bundle, masterSecret);
    action.setVisibility(View.GONE);
    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    return ;
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.btnToAddAgent :
            showEditPage();
            break;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initData(savedInstanceState);
    initGUI();
    initApplicationLogic();
    initEventToListenerMapping();
}

@android.annotation.SuppressLint(value = "InlinedApi")
private void show() {
    mContentView.setSystemUiVisibility(((android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)));
    mVisible = true;
    mHideHandler.removeCallbacks(mHidePart2Runnable);
    mHideHandler.postDelayed(mShowPart2Runnable, com.fireteam.loupsgarous.MainActivity.UI_ANIMATION_DELAY);
}

@java.lang.Override
public void onChanged() {
    android.util.Log.v(fr.nihilus.recyclerfragment.RecyclerFragment.TAG, "onChanged: dataset has changed");
    if (isVisible()) {
        this.setEmptyShown(isEmpty());
    }
}

protected void onPostExecute(java.lang.String webData) {
    super.onPostExecute(java.lang.String);
    flickrRecyclerViewAdapter = new com.example.android.flickrbrowser.FlickrRecyclerViewAdapter(this, getMPhotos());
    mRecyclerView.setAdapter(flickrRecyclerViewAdapter);
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    super.handleMessage(msg);
    android.util.Log.i(TAG, ("Messenger received WHAT value: " + (msg.what)));
    doWork(msg);
}

@java.lang.Override
public void onClick(android.view.View v) {
    productListener.removeThisProduct(getItem(position).getProductId());
}

public void googleLoginClick(android.view.View view) {
    new com.github.randoapp.service.GoogleAuthService(this).process();
}

@java.lang.Override
protected void onCancelled(com.owncloud.android.ui.preview.PreviewImageFragment.LoadImage result) {
    if ((result.bitmap) != null) {
        result.bitmap.recycle();
    }
}

public void cleanTable(java.lang.String tableName) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    db.execSQL(("delete from " + tableName));
    db.execSQL((("UPDATE SQLITE_SEQUENCE SET SEQ=0 WHERE NAME='" + tableName) + "'"));
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    updateItem(getAdapterPosition());
    es.usc.citius.servando.calendula.database.DB.medicines().fireEvent();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((context) instanceof internetofeveryone.ioe.Downloads.DownloadsView) {
        ((internetofeveryone.ioe.Downloads.DownloadsView) (context)).onClickDelete(string);
    }else {
    }
}

public boolean isRunnable() {
    boolean result = ((java.lang.Thread.currentThread()) == (getThreadObject())) ? true : false;
    android.util.Log.i("ThreadCore=", (result + ""));
    return result;
}

@java.lang.Override
protected java.lang.Void doInBackground(java.lang.Void... params) {
    try {
        penguinologist.diyandroidchallenge.Async.au.getUserProjects();
    } catch (java.lang.Exception e) {
        android.util.Log.e("error", e.toString());
    }
    return null;
}

@org.greenrobot.eventbus.Subscribe
public void onMediaUploaded(org.wordpress.android.fluxc.store.MediaStore.OnMediaUploaded event) {
    if ((event.progress) >= 1.0F) {
        assertEquals(org.wordpress.android.fluxc.release.ReleaseStack_MediaRestTest.TEST_EVENTS.UPLOADED_MEDIA, mExpectedEvent);
    }
    mCountDownLatch.countDown();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.widget.Toast.makeText(getActivity(), "브로드캐스트", Toast.LENGTH_SHORT).show();
    doClear = true;
    startKey = 0;
    getData();
}

public static void Vibrate(final android.app.Activity activity, long milliseconds) {
    android.os.Vibrator vib = ((android.os.Vibrator) (activity.getSystemService(Service.VIBRATOR_SERVICE)));
    vib.vibrate(milliseconds);
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    super.onCreateOptionsMenu(menu, inflater);
    inflater.inflate(R.menu.main_menu, menu);
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    com.hyphenate.kefusdk.manager.main.LeaveMessageManager.getInstance().getProjectIds();
    loadFirstStatus();
    refreshAgentAvatar();
}

public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    boolean ret = super.onKeyDown(keyCode, event);
    if ((mPluginActivity) != null) {
        return mPluginActivity.onKeyDown(keyCode, event);
    }
    return ret;
}

public void changeFragment(android.support.v4.app.Fragment newFragment, android.support.v4.app.FragmentManager mFragmentManager) {
    android.support.v4.app.FragmentTransaction transaction = mFragmentManager.beginTransaction();
    transaction.replace(R.id.content_frame, newFragment);
    transaction.addToBackStack(null);
    transaction.setTransitionStyle(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
    transaction.commit();
}

@java.lang.Override
public boolean performEditorAction(int editorAction) {
    boolean shouldConsume = false;
    switch (editorAction) {
        case android.view.inputmethod.EditorInfo.IME_ACTION_DONE :
            shouldConsume = true;
            mListener.onCVVEntryComplete();
    }
    return shouldConsume ? true : super.performEditorAction(editorAction);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton button, boolean checked) {
    showMap = !(showMap);
}

@java.lang.Override
public void onClick(final android.content.DialogInterface dialog, final int whichButton) {
    ((cgeo.geocaching.ui.EditNoteDialog.EditNoteDialogListener) (getActivity())).onFinishEditNoteDialog(mEditText.getText().toString());
    dialog.dismiss();
}

@java.lang.Override
public void onBitmapLoaded(final android.graphics.Bitmap bitmap, com.squareup.picasso.Picasso.LoadedFrom from) {
    imageView.post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            com.booking.feedon.Utils.DisplayUtil.scaleImage(bitmap, imageView, mContext);
        }
    });
}

public android.view.Window getWindow() {
    return getActivity().getWindow();
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    if ((java.lang.Integer.parseInt(currentSongModel.getSongDuration())) == (mp.getCurrentPosition())) {
        skipNext();
    }
}

private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode(int mode, com.facebook.react.bridge.Promise promise) throws java.lang.Exception {
    switch (mode) {
        case 0 :
            return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER;
        case 1 :
            return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED;
        case 2 :
            return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY;
        default :
            throw new java.lang.Exception("The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY");
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (isRecipientAdded) {
        pickContact();
    }else {
        addRecipient();
        pickContact();
        isRecipientAdded = true;
    }
}

@java.lang.Override
public void onSessionStarted(com.google.android.gms.cast.framework.CastSession session, java.lang.String sessionId) {
    timber.log.Timber.d("VideoDetailsFragment : onSessionStarted()");
    onApplicationConnected(session);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    java.lang.String myoGesture = intent.getStringExtra("gesture");
    android.util.Log.i(com.example.drdc_admin.moverioapp.activities.ContentActivity.TAG, ("Got message: " + myoGesture));
    handleGesture(context, myoGesture);
}

public void changeImg(android.view.View view) {
    com.extenprise.mapp.util.Utility.captureImage(this).create().show();
}

public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.example.leoyoon.habittracker.AddHabit.class);
    intent.putExtra("habitList", habitList);
    startActivity(intent);
}

private boolean isInternetConnectionAvailable() {
    android.net.ConnectivityManager cm = ((android.net.ConnectivityManager) (getSystemService(Context.CONNECTIVITY_SERVICE)));
    android.net.NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
    return activeNetwork.isConnectedOrConnecting();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    absenmobilehr.app.kalbenutritionals.absenmobilehr.Data.DatabaseHelper helper = absenmobilehr.app.kalbenutritionals.absenmobilehr.Data.DatabaseManager.getInstance().getHelper();
    helper.close();
    helper.clearDataAfterLogout();
    logout();
}

public void testToast() {
    android.widget.Toast toast = android.widget.Toast.makeText(context, "test toast", Toast.LENGTH_SHORT);
    toast.show();
}

public void askPermission(java.lang.String reqPerm) {
    if ((context.checkSelfPermission(reqPerm)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        android.support.v4.app.ActivityCompat.requestPermissions(com.avigezerit.callssmslogs.checkPermissionsHelper.activity, new java.lang.String[]{ reqPerm }, setReqCode(reqPerm));
    }
}

public static void log(java.lang.Object tag, java.lang.String message) {
    if (!(kaist.cs550_2016.poche.Debug.isDebug))
        return ;
    
    android.util.Log.w(tag.getClass().getSimpleName(), message);
}

public static com.nag.android.stm.ThumbnailAdapter getInstance(android.content.Context context, int capacity, boolean side, android.graphics.Point size) {
    if ((com.nag.android.stm.ThumbnailAdapter.instance) == null) {
        com.nag.android.stm.ThumbnailAdapter.instance = new com.nag.android.stm.ThumbnailAdapter(context, capacity, side, size);
    }
    return com.nag.android.stm.ThumbnailAdapter.instance;
}

private void refreshDetailsFragment(com.example.test.samplemasterdetail.entities.RelatedTopic relatedTopic) {
    android.util.Log.d(com.example.test.samplemasterdetail.MainActivity.TAG, "refreshDetailsFragment: ");
    if ((mDetailsFragment) != null) {
        mDetailsFragment.refreshDetails(relatedTopic);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.support.design.widget.BottomNavigationView navigation = ((android.support.design.widget.BottomNavigationView) (findViewById(R.id.navigation)));
    navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
    instantiateFragmentsAndManager();
}

protected void extraSet() {
    android.util.Log.d(com.simpleworkout.timer.MainActivity.TAG, ("extraSet: setsCurrent=" + (setsCurrent)));
    updateButtonsLayout(com.simpleworkout.timer.MainActivity.ButtonsLayout.RUNNING);
    updateSetsDisplay();
}

public void onSettingsMenuClick(android.view.MenuItem item) {
    android.widget.TextView infoTextView = ((android.widget.TextView) (findViewById(R.id.textViewInfo)));
    infoTextView.setText("Вы выбрали пункт Settings");
}

public java.lang.Boolean matches(java.lang.String check) {
    android.util.Log.d("ASR", check);
    if (phrases.contains(check.toLowerCase())) {
        return true;
    }
    return false;
}

public void onPause() {
    super.onPause();
    android.util.Log.d("info", "List on Pause");
    Save();
}

void OnItemClick(int position, android.view.View view);

@java.lang.Override
public void onTabReSelected(@android.support.annotation.IdRes
int tabId) {
    if (tabId != (com.example.user.kchat01.ContactsActivity.tabId)) {
        android.content.Intent contactsIntent = new android.content.Intent(getApplicationContext(), com.example.user.kchat01.ContactsActivity.class);
        startActivity(contactsIntent);
    }
}

public void returnToMain() {
    finish();
    android.content.Intent intent = new android.content.Intent(this, com.ericabraham.leapfrog.MainActivity.class);
    startActivity(intent);
    finish();
}

private void notifyAlarm(android.app.Notification n) {
    mNotificationManager.notify(com.darshancomputing.BatteryIndicatorPro.BatteryInfoService.NOTIFICATION_ALARM, n);
    if ((n.audioStreamType) == (android.media.AudioManager.STREAM_ALARM))
        playAlarmMyself(n.sound);
    
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(R.layout.listfrag, container, false);
    mRecyclerView = ((android.support.v7.widget.RecyclerView) (rootView.findViewById(R.id.recyclerView)));
    return rootView;
}

@java.lang.Override
public void onClick(android.view.View view) {
    launchApp(mActivityInfos.get(position));
}

@java.lang.Override
public void forkRandomCallLogs(android.content.Context context, int quantity) {
    if ((mForkBinder) != null) {
        mForkBinder.startFork(ForkTask.FORK_TYPE_RANDOM_CALLLOGS, quantity);
        toastForkTask(context);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (goodCB.isChecked()) {
        globalPlay.setFgMadeFlag(true);
    }else {
        globalPlay.setFgMadeFlag(false);
    }
    flow = false;
    newPlayDialog();
    dialog.dismiss();
}

private void stopCameraPreview() {
    mPreviewing = false;
    mCamera.cancelAutoFocus();
    try {
        mCamera.stopPreview();
    } catch (java.lang.Exception e) {
        android.util.Log.d(app.anish.com.tapp.camera.CameraPreview.TAG, "Tried stopping non-existent preview");
    }
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    mFile = new java.io.File(getActivity().getExternalFilesDir(null), "pic.jpg");
    edu.ubi.selanjutnya.sharepic.CameraFragment.mDeviceId = Settings.Secure.getString(getContext().getContentResolver(), Settings.Secure.ANDROID_ID);
}

public void UpdateName(java.lang.String name) {
    ((android.widget.TextView) (header.findViewById(R.id.username))).setText(name);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    if (!(registered)) {
        getActivity().registerReceiver(broadcastClass, new android.content.IntentFilter(cell.signalwatcher.CellSignalFragment.BROADCAST_PACKAGE));
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(orthodoxHolidayMajor.getDescriptionUrl())));
}

private void addMoodModule(android.content.Context context) {
    for (com.nmatte.mood.chart.cell.ReadonlyCheckbox cellView : com.nmatte.mood.logbookentries.MoodList.getCellViews(context, entry.getMoods())) {
        addView(cellView);
    }
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError volleyError) {
    volleyError.printStackTrace();
    resultListener.onSearchError("Network Error");
}

@java.lang.Override
public void saveTask(java.lang.String title, java.lang.String description, android.graphics.Bitmap image) {
    if (isNewTask()) {
        createTask(title, description, image);
    }else {
        updateTask(title, description);
    }
}

private void removeLineFromFavorites() {
    team5.capstone.com.mysepta.Managers.FavoritesManager.removeRailLineFromFavorites(start, end);
    mOptionsMenu.findItem(R.id.favoriteIcon).setIcon(android.R.drawable.star_big_off);
    favorite = false;
    android.widget.Toast.makeText(this, "Removed from Favorites", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return mapFragment = net.hokiegeek.android.dondeestas.MapFragment.newInstance();
        case 1 :
            return followingFragment = net.hokiegeek.android.dondeestas.PersonFragment.newInstance();
    }
    return null;
}

public synchronized void addCluster(long cluster) {
    android.util.Log.i("CACHE", ("Cluster: " + (java.lang.String.valueOf(cluster))));
    clusterList.add(cluster);
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.util.Log.d("testing", "onStartCommand");
    android.widget.Toast.makeText(this, "Service Started", Toast.LENGTH_LONG).show();
    return START_STICKY;
}

public void getVideos(java.lang.String playlistId) {
    android.widget.RelativeLayout activityLayout = ((android.widget.RelativeLayout) (findViewById(R.id.video_display_layout)));
    net.computingtutor.robert.computingtutor.PlaylistGetter videoPlaylistGetter = new net.computingtutor.robert.computingtutor.PlaylistGetter(getApplicationContext(), videoList, playlistId, activityLayout);
    videoPlaylistGetter.GetPlaylist();
}

@java.lang.Override
protected void setUp() throws java.lang.Exception {
    super.setUp();
    activity = getActivity();
    list = ((android.widget.ListView) (activity.findViewById(R.id.list)));
    assertNotNull("The list was not loaded", list);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(context, "트위터 링크로 이동", Toast.LENGTH_SHORT).show();
    init_twitter_data(0);
}

public void previousPage(android.view.View view) {
    if ((com.example.kelvin_pc.film.Model.System.System_Variables.PAGE_NUMBER) != 1)
        com.example.kelvin_pc.film.Model.System.System_Variables.PAGE_NUMBER = (com.example.kelvin_pc.film.Model.System.System_Variables.PAGE_NUMBER) - 1;
    
    generateFilmQuery();
}

@java.lang.Override
public void onError(java.lang.Throwable e) {
    android.util.Log.d(com.angelkjoseski.live_results.service.LiveResultsFetcherService.TAG, "onError: ");
}

@org.androidannotations.annotations.AfterInject
void initData() {
    setItems(new java.util.ArrayList<rs.ftn.pma.tourismobile.model.Destination>());
    hasFooter = true;
}

public void launchPictureLibrary() {
    if (isAdded()) {
        org.wordpress.android.ui.media.WordPressMediaUtils.launchPictureLibrary(getActivity());
    }
}

@java.lang.Override
public void onShowCustomView(android.view.View view, acr.browser.lightning.view.CustomViewCallback callback) {
    mUIController.onShowCustomView(view, callback);
    super.onShowCustomView(view, callback);
}

public java.lang.String getLabel() {
    return org.wordpress.android.WordPress.getContext().getString(mLabelResId);
}

public com.actinarium.rhythm.layer.GridLines setStep(@android.support.annotation.IntRange(from = 1)
int step) {
    mStep = step;
    return this;
}

@java.lang.Override
public void uncaughtException(java.lang.Thread thread, java.lang.Throwable throwable) {
    stop();
    throwable.printStackTrace();
    android.util.Log.e(logTag, throwable.getLocalizedMessage());
}

public java.util.Date getNextBirthday() {
    java.util.Date date = birthday.getNextAnniversary();
    android.util.Log.e("OK", date.toString());
    return date;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.pffair.dagger2demo.DaggerMainComponent.builder().role(new com.pffair.dagger2demo.Role("是Android开发")).build().inject(this);
    initView();
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mediaPlayer) {
    android.os.CountDownTimer timer = new android.os.CountDownTimer(8000, 1000) {
        @java.lang.Override
        public void onTick(long l) {
        }

        @java.lang.Override
        public void onFinish() {
            sayInitialInstructions();
        }
    };
    timer.start();
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    android.widget.Toast.makeText(com.example.nicholasesposito.posapp.activities.MainActivity.getMainActivity(), "Uploading Data", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onNewFrame(com.google.vr.sdk.base.HeadTransform headTransform) {
    mDirectVideo = new com.diligimus.glcam.DirectVideo(texture);
    android.opengl.GLES20.glClearColor(1.0F, 0.0F, 0.0F, 0.0F);
}

@java.lang.Override
public void onSuccess(com.owsega.hellotractorsample.model.FarmerEntity farmerEntity) {
    android.util.Log.e("seyi", "success to save farmer");
}

@java.lang.Override
public void onClick(android.view.View v) {
    flingContainer.getTopCardListener().selectRight();
    firebaseCards.push().setValue(cardsList.get(0));
    cardsList.remove(0);
    cardsArrayAdapter.notifyDataSetChanged();
}

public java.lang.Object invoke(java.lang.Object proxy, java.lang.reflect.Method method, java.lang.Object[] args) {
    com.runrev.android.LCBInvocationHandler.doNativeListenerCallback(m_handler_ptr, method.getName(), args);
    return proxy;
}

@java.lang.Override
public void onClick(android.view.View v) {
    v.setTag(com.srmarlins.weather.ui.adapter.WeatherRecyclerAdapter.VIEW_KEY, info);
    onClickSubject.onNext(v);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which, boolean isChecked) {
    if (isChecked)
        selected[which] = false;
    else
        selected[which] = true;
    
}

@java.lang.Override
public void run() {
    android.util.Log.d("CALL_INTEGRATION", "CallActivity. initRejectCallTask lunched");
    cancelPlayer();
    videoChatHelper.rejectCall(userInfo);
    finish();
}

public void forceLocationUpdate(@android.support.annotation.Nullable
android.location.Location location) {
    timber.log.Timber.d("forceLocationUpdate");
    updateLocation(location);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    currentMonth = position + 1;
}

public void setContent(java.lang.String content) {
    this.content = content;
    android.widget.TextView tvContent = ((android.widget.TextView) (findViewById(R.id.content)));
    tvContent.setText(getShortenStr(content));
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    TracksByNameAdapter.TracksByNameCheckboxList.clear();
    TracksByNameAdapter.TracksByNameCheckboxCount = 0;
    if (requestCode == 1) {
        PlaylistAdapter.PlaylistCheckboxList.clear();
        com.leokomarov.jamstreamer.playlist.PlaylistAdapter.PlaylistCheckboxCount = 0;
    }
}

@java.lang.Override
public void onFailure(retrofit2.Call<okhttp3.ResponseBody> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(mActivity.getApplicationContext(), "网络获取数据失败", Toast.LENGTH_SHORT).show();
    isSuccess[0] = false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((getActivity()) instanceof adonai.diary_browser.PasteSelector.PasteAcceptor)
        ((adonai.diary_browser.PasteSelector.PasteAcceptor) (getActivity())).acceptDialogClick(v, mShouldPaste.isChecked());
    
    dismiss();
}

public void refresh(android.app.Activity activity) {
    mActivity = activity;
    new net.skweez.sipgate.model.AccountInfo.RefreshAccountInfoTask(mActivity).execute(((java.lang.Void) (null)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    boolean state = mRscpService.getSensorLocation();
    mStateProgressBar.setVisibility(View.VISIBLE);
    mStateTextView.setText(com.example.android.bluetoothlegatt.RSCPActivity.EXEC);
}

public static com.voidgreen.friendsrelations.AlbumsFragment newInstance(java.lang.String param1, java.lang.String param2) {
    com.voidgreen.friendsrelations.AlbumsFragment fragment = new com.voidgreen.friendsrelations.AlbumsFragment();
    android.os.Bundle args = new android.os.Bundle();
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    progressView.setVisibility(View.VISIBLE);
    buildRestaurantMapPopUp(fm, marker);
    return true;
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mp, int what, int extra) {
    com.xwhiteknuckle.soundfx.WidgetHelper.changeWidgetToPlay(this);
    stopSelf();
    return true;
}

public void updateData(android.util.SparseArray<com.quickblox.content.model.QBFile> qbFileSparseArr) {
    this.qbFileSparseArray = qbFileSparseArr;
    notifyDataSetChanged();
}

@java.lang.Override
public void onEndOfSpeech() {
    android.util.Log.d(com.lixl.waveform.WaveformViewModule.TAG, "evaluator stoped");
    showTip("evaluator stopped");
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    mSubscription.setShowListened(isChecked);
    OnSwitchChangedHandler(isChecked, contentResolver, mHideListenedListener);
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    if ((com.Yamate.Camera.MainActivity.mYcameraOutputStream) == null)
        com.Yamate.Camera.MainActivity.mYcameraOutputStream = new java.io.ByteArrayOutputStream();
    
    com.Yamate.Camera.Util.setCapturing(true);
    mCamera.takePicture();
}

@java.lang.Override
public void onFailure(com.mercadopago.exceptions.MercadoPagoError error) {
    android.util.Log.d("log", "failure");
}

private void updateSeekTime(android.content.Intent intent) {
    int seekTimeMsec = getSeekTime(intent);
    if (seekTimeMsec > 0) {
        mediaPlayer.seekTo(seekTimeMsec);
    }
}

@java.lang.SuppressWarnings(value = "unused")
public void onActivityResult(android.app.Activity activity, int resultCode, @android.support.annotation.NonNull
android.content.Intent data) {
    if (resultCode == (android.app.Activity.RESULT_OK)) {
        processEvent(data);
        return ;
    }
    callback.onCanceled();
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    android.widget.RelativeLayout layout = ((android.widget.RelativeLayout) (inflater.inflate(R.layout.fragment_fragment1, container)));
    return layout;
}

private byte[] pcmToWav(byte[] pcm) {
    return ee.ioc.phon.android.speechutils.utils.AudioUtils.getRecordingAsWav(pcm, getSampleRate(), ee.ioc.phon.android.speechutils.RESOLUTION_IN_BYTES, ee.ioc.phon.android.speechutils.CHANNELS);
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder holder) {
    this.holder = holder;
    if ((videoPauseFlag) && ((currVideoModel) != null)) {
        videoPauseFlag = false;
        playVideo(currVideoModel);
    }
}

@java.lang.Override
public <T extends android.arch.lifecycle.ViewModel> T create(java.lang.Class<T> modelClass) {
    return ((T) (viewModelMap.get(modelClass)));
}

public static void e(java.lang.String c, java.lang.String s, java.lang.Throwable tr) {
    if ((org.piwik.sdk.tools.Logy.sLoglevel) >= (org.piwik.sdk.tools.Logy.SILENT)) {
        android.util.Log.e(c, s, tr);
    }
}

public static synchronized void init(android.content.ContentResolver resolver) {
    if ((com.robotoworks.mechanoid.db.SQuery.mAsync) != null) {
        com.robotoworks.mechanoid.db.SQuery.mAsync = new com.robotoworks.mechanoid.db.SQuery.Async(resolver);
    }
}

private void initializeCitiesSpinner() {
    mCity.setAdapter(new android.widget.ArrayAdapter(getActivity(), android.R.layout.simple_spinner_dropdown_item, mCityList));
    mCity.setSelection(0);
}

public static android.support.design.widget.Snackbar getErrorSnackBar(java.lang.String message, android.view.View attachedView) {
    final android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(attachedView, message, Snackbar.LENGTH_LONG);
    android.view.View view = snackbar.getView();
    return snackbar;
}

public static void show(android.support.v7.app.AppCompatActivity activity, java.lang.Integer containerViewId, edu.usf.cutr.open311client.Open311 open311, edu.usf.cutr.open311client.models.Service service, org.onebusaway.android.report.ui.ReportProblemFragmentCallback callback) {
    org.onebusaway.android.report.ui.Open311ProblemFragment.show(activity, containerViewId, open311, service, null, null, callback);
}

@java.lang.Override
public void onClick(android.view.View v) {
    int nextPage = mCurrentPage.getChoice1().getNextPage();
    loadPage(nextPage);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_workout, container, false);
    butterknife.ButterKnife.bind(this, view);
    initList();
    return view;
}

public void setPhoneStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar phoneStatusBar) {
    mPhoneStatusBar = phoneStatusBar;
    updateCameraVisibility();
    updateLeftButtonVisibility();
    updateCameraIconColor();
    updatePhoneIconColor();
    updateLockIconColor();
    updateIndicationTextColor();
}

public boolean dispatchTouchEvent(android.view.MotionEvent event) {
    onTouchEvent(event);
    java.lang.System.out.println("AHHHHHHHHHHHHHHHHH");
    return super.dispatchTouchEvent(event);
}

private void nextSong() {
    while ((playList.peek()) == null) {
        updatePlayList();
    } 
    mine.android.modules.ClockSong song = playList.poll();
    playClockSong(song);
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent event) {
    if (running) {
        stepsSinceLastReboot = java.lang.String.valueOf(event.values[0]);
        com.example.android.msc_project.StepCounter.sendInfo(stepsSinceLastReboot);
    }
}

public void openFragmentNoHistory(android.support.v4.app.Fragment fragment) {
    android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
    ft.replace(R.id.container, fragment);
    ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
    ft.commitAllowingStateLoss();
}

public static com.patrickcorriganjr.boardgameapp.UI.GameListFragment newInstance(int sectionNumber) {
    com.patrickcorriganjr.boardgameapp.UI.GameListFragment fragment = new com.patrickcorriganjr.boardgameapp.UI.GameListFragment();
    android.os.Bundle args = new android.os.Bundle();
    args.putInt(com.patrickcorriganjr.boardgameapp.UI.GameListFragment.ARG_SECTION_NUMBER, sectionNumber);
    fragment.setArguments(args);
    return fragment;
}

public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        monumentList.setVisibility(View.VISIBLE);
    }else {
        monumentList.setVisibility(View.INVISIBLE);
    }
}

private void setupSharedPreferences() {
    android.content.SharedPreferences sharedPreferences = android.support.v7.preference.PreferenceManager.getDefaultSharedPreferences(this);
    sharedPreferences.getString(getString(R.string.pref_sort_key), getString(R.string.pref_pop_movies_value));
    sharedPreferences.registerOnSharedPreferenceChangeListener(this);
}

@java.lang.Override
public void onComplete(com.google.firebase.database.DatabaseError databaseError, com.google.firebase.database.DatabaseReference databaseReference) {
    if (databaseError != null) {
    }else {
        android.widget.Toast.makeText(this, R.string.account_created, Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (attemptLogin()) {
        startActivity(new android.content.Intent(view.getContext(), com.insantani_nostra.arisyaag.insantani.MainActivity.class));
    }
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    android.util.Log.d(LOG_TAG, "InstagramService started **********");
    getLikedUsers();
    getBestFriends(likedUsers);
    getInstagramFeed();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (view = buttonLogIn) {
        CandidateLogIn();
    }
    if (view = textViewregister) {
        finish();
        startActivity(new android.content.Intent(this, com.example.hp.hireme.HIREME.class));
    }
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    launchEditItem(MainActivity.FragmentType.DETAILS_INCOME, ((mahappdev.caresilabs.com.timr.models.IncomeModel) (incomeAdapter.getItem(position))));
}

@java.lang.Override
public com.android.news24x7.adapter.NewsRecyclerViewAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup viewGroup, int viewType) {
    view = android.view.LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.news_list, null);
    return new com.android.news24x7.adapter.NewsRecyclerViewAdapter.ViewHolder(view);
}

@java.lang.Override
public void onClick(android.view.View v) {
    int current = getItem((+1));
    if (current < (layouts.length)) {
        viewPager.setCurrentItem(current);
    }else {
        launchHomeScreen();
    }
}

public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    switch (keyCode) {
        case android.view.KeyEvent.KEYCODE_VOLUME_DOWN :
            zoom(false);
            return true;
        case android.view.KeyEvent.KEYCODE_VOLUME_UP :
            zoom(true);
            return true;
    }
    return super.onKeyUp(keyCode, event);
}

private void showFileChooser() {
    android.content.Intent intent = new android.content.Intent(this, com.nbsp.materialfilepicker.ui.FilePickerActivity.class);
    intent.putExtra(FilePickerActivity.ARG_FILTER, java.util.regex.Pattern.compile(".*\\.txt$"));
    startActivityForResult(intent, 1);
}

@java.lang.Override
public void onClick(android.view.View v) {
    gameView_.reset();
    lostOverlay_.setVisibility(View.INVISIBLE);
    playAgainButton_.setVisibility(View.INVISIBLE);
}

@java.lang.Override
public void onNotFound(java.lang.String key) {
    setIsLoading(false);
    android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(getView(), R.string.offline_alert, Snackbar.LENGTH_SHORT);
    org.gdg.frisbee.android.view.ColoredSnackBar.alert(snackbar).show();
}

@java.lang.Override
public synchronized void onCreate() {
    android.util.Log.d(org.makeathon.telepresenceslave.SlaveService.TAG, "onCreate");
    org.makeathon.telepresenceslave.SlaveService.sInstance = this;
    mPubnub = new com.pubnub.api.Pubnub("pub-c-e0e0e558-9aa1-412e-a4ca-ce286e939e54", "sub-c-4b5e362c-27fd-11e6-84f2-02ee2ddab7fe");
    pubnubConnect();
}

@java.lang.Override
public void interrupt() {
    if (Logger.DEBUG) {
        android.util.Log.d(TAG, "[interrupt]");
    }
    cleanup();
}

private void setAdapter(java.lang.String country) {
    android.content.Intent placesListIntent = new android.content.Intent(this, ru.belogurowdev.yourplaces.Activity.PlacesListActivity.class);
    placesListIntent.putExtra("COUNTRY", country);
    mAdapter = new ru.belogurowdev.yourplaces.Adapter.PlaceTypesAdapter(this, placesListIntent, mPlaceTypes);
}

@android.annotation.SuppressLint(value = "NewApi")
@java.lang.Override
public void onSharedElementEnd(java.util.List<java.lang.String> sharedElementNames, java.util.List<android.view.View> sharedElements, java.util.List<android.view.View> sharedElementSnapshots) {
    ((android.support.design.widget.AppBarLayout) (findViewById(R.id.main_appbar))).setExpanded(false, true);
}

public void init(android.content.Context ctx) {
    android.view.LayoutInflater inflater = ((android.view.LayoutInflater) (ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE)));
    android.view.View view = inflater.inflate(R.layout.view_my_layout, null);
    addView(view);
}

@java.lang.SuppressWarnings(value = "deprecation")
private static int getSize(android.os.StatFs statFs) {
    int blockSize = statFs.getBlockSize();
    int availableBlocks = statFs.getAvailableBlocks();
    int size = (blockSize * availableBlocks) / (1024 * 1024);
    return size;
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    com.hl.hlcorelib.mvp.events.HLCoreEvent event = new com.hl.hlcorelib.mvp.events.HLCoreEvent(com.hl.homelanebuddy.Constants.NEXT_ALARM_EVENT, null);
    dispatchEvent(event);
}

@java.lang.Override
public void onBackPressed() {
    if ((layoutPostmanMask.getVisibility()) == (android.view.View.VISIBLE)) {
        layoutPostmanMask.setVisibility(View.GONE);
        return ;
    }
    super.onBackPressed();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.skyweather.MainActivity.jumpToPage(0);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((listener) != null) {
        listener.onItemClicked(getAdapterPosition());
    }
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    android.util.Log.d("xxxdebug", "in onKeyDown");
    if (keyCode == (android.view.KeyEvent.KEYCODE_BACK)) {
        local.isi.wheelofluck.view.Arrow.removeRunnables = true;
        finish();
    }
    return super.onKeyDown(keyCode, event);
}

@java.lang.Override
public void onBackPressed() {
    android.util.Log.d(org.rainjay.newfaceunlock.RecongizerActivity.TAG, "onBackPressed: recongition");
    super.onBackPressed();
    finish();
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<java.util.ArrayList<com.anonyxhappie.dwarf.pms2.apis.MovieModel>> loader) {
    adapter.setmMovies(new java.util.ArrayList<com.anonyxhappie.dwarf.pms2.apis.MovieModel>());
}

public static void setText(android.app.Activity activity, android.widget.TextView textView, int resId) {
    activity.runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            textView.setText(resId);
        }
    });
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.e(com.example.m.divis.FragmentData.TAG, "LifeCycle FragmentData onDestroy");
    freeBitmapResource(imageCaptured);
    super.onDestroy();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    setRetainInstance(true);
    isScreenCreated = true;
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    if (context instanceof org.grassroot.android.fragments.ViewTaskFragment.ViewTaskListener)
        this.taskViewListener = ((org.grassroot.android.fragments.ViewTaskFragment.ViewTaskListener) (context));
    else
        this.taskViewListener = null;
    
}

private int getTitleResId() {
    com.pajato.android.gamechat.common.model.Account account = AccountManager.instance.getCurrentAccount();
    if (account == null)
        return R.string.app_name;
    
    if ((account.joinMap.size()) > 0)
        return R.string.GroupsToolbarTitle;
    
    return R.string.GroupMeToolbarTitle;
}

public void setAnimationDataSet(java.util.ArrayList<com.main.toledo.gymtrackr.ExerciseHistory> history, android.content.Context c, boolean b, java.lang.String name) {
    mBoot = b;
    mContext = c;
    mHistory = history;
    mName = name;
}

@java.lang.Override
public void onGlobalLayout() {
    initLayout();
    android.util.Log.i(TAG, ("a onGlobalLayout" + "\n\n"));
}

public void onSwipeProgress(float progress) {
    android.util.Log.w("Progress", ("> " + progress));
    if ((mProgressListener) != null)
        mProgressListener.onSwipeProgress(getCurrentPosition(), progress);
    
    animateStackOnProgress(progress, false, 0);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    exitIcon.setVisibility(View.GONE);
    editIcon.setVisibility(View.GONE);
}

@java.lang.Override
public void unregisterReceiver(android.content.BroadcastReceiver receiver) {
    super.unregisterReceiver(receiver);
    receivers.remove(receiver);
}

public void setBrushSize(float newSize) {
    float pixelAmount = android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, newSize, getResources().getDisplayMetrics());
    brushSize = pixelAmount;
    drawPaint.setStrokeWidth(brushSize);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.os.Bundle mArgs = getArguments();
    title = mArgs.getString("dialog_title");
    uri = mArgs.getString("uri");
}

@java.lang.Override
public void onException(java.lang.Exception e) {
    if (e instanceof com.shephertz.app42.paas.sdk.android.App42BadParameterException) {
        final com.shephertz.app42.paas.sdk.android.App42BadParameterException bpe = ((com.shephertz.app42.paas.sdk.android.App42BadParameterException) (e));
    }else {
        initFailed(listener, e.getMessage());
    }
}

private static java.net.URL createUrl(java.lang.String stringUrl) {
    java.net.URL url = null;
    try {
        url = new java.net.URL(stringUrl);
    } catch (java.net.MalformedURLException e) {
        android.util.Log.e(com.example.adrialwalters.booklistingapp.QueryUtils.LOG_TAG, "Problem building the URL", e);
    }
    return url;
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    if (!(showToast))
        return ;
    
    android.widget.Toast.makeText(getApplication(), result, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    setHasOptionsMenu(true);
    super.onCreate(savedInstanceState);
}

@java.lang.Override
public lombok.ast.AstVisitor createJavaVisitor(com.android.tools.lint.detector.api.JavaContext context) {
    return new permissions.dispatcher.PermissionsDispatcherOnRequestPermissionsResultDetector.OnRequestPermissionsResultChecker();
}

@android.support.annotation.Nullable
public static java.lang.Float getFloat(@android.support.annotation.NonNull
java.lang.String key, @android.support.annotation.Nullable
java.lang.Float defaultValue) {
    long start = java.lang.System.currentTimeMillis();
    return java.lang.Float.valueOf(com.pepperonas.aesprefs.AesPrefs.get(key, java.lang.String.valueOf(defaultValue)));
}

@java.lang.Override
public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) {
    for (com.google.firebase.database.DataSnapshot categorySnapshot : dataSnapshot.getChildren()) {
        categoriesByUser.add(categorySnapshot.getValue(com.hallak.billdozer.models.Category.class));
    }
    android.util.Log.i(TAG, "Collected User Categories ");
}

@java.lang.Override
public void onError(int errorCode, @android.support.annotation.Nullable
java.lang.String errorMessage) {
    java.lang.String displayedError = (errorMessage == null) ? "" : errorMessage;
    showError(displayedError, ((mCustomerSessionProxy) == null));
    setCommunicatingProgress(false);
}

protected abstract void removeInfoView(android.view.View view);

public void next(android.view.View view) {
    if ((currenSongNumber) < ((currentDirAllFiles.length) - 1)) {
        (currenSongNumber)++;
        startPlaying(currenSongNumber);
    }
}

@de.greenrobot.event.Subscribe
public void onGetProductDTOEvent(com.example.winify.cvsi.dto.ListDto<com.example.winify.cvsi.dto.templates.ProductTemplate> event) {
    android.widget.Toast.makeText(this, ("ceva" + (event.getList().get(0).getTitle())), Toast.LENGTH_SHORT).show();
    java.lang.System.out.println();
}

public void endLoadingProgress() {
    showUpdateUserSuccess();
    mLoadingDialog.cancel();
    android.content.Intent intent = getActivity().getIntent();
    getActivity().finish();
    startActivity(intent);
}

@java.lang.Override
public void onClick(@android.support.annotation.NonNull
com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull
com.afollestad.materialdialogs.DialogAction which) {
    initializeAesthetic(primary, accent, false);
    dialog.dismiss();
}

public void onLogoutClicked(android.view.View view) {
    de.dhbw.smar.helpers.LoginHelper.getInstance().setLogout();
    super.onBackPressed();
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    com.legitdevs.legitnotes.EditDialog.getInstance(notes.get(position)).show(((com.legitdevs.legitnotes.HomeActivity) (ctx)).getSupportFragmentManager(), "dialog");
    return true;
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    this.progress = progress;
    mMosaicView.setStrokeMultiples((1 + ((float) (progress / 100.0))));
}

private void showAnimalInfo() {
    views.setMyAnimal(myAnimals.get(currentIndex));
    views.imageBlock.setImageURI(android.net.Uri.parse(myAnimals.get(currentIndex).getImageUri()));
}

static final android.content.Context getApplicationContextIfAvailable(android.content.Context context) {
    final android.content.Context ac = context.getApplicationContext();
    return ac != null ? ac : android.app.ActivityThread.currentApplication().getApplicationContext();
}

private void initRecyclerView() {
    mAdapter = new mvp.sample.biocram.samplemvp.countries.CountriesAdapter();
    mRecyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getActivity()));
    mRecyclerView.setAdapter(mAdapter);
}

@java.lang.Override
public void onDrawOver(android.graphics.Canvas c, android.support.v7.widget.RecyclerView parent, android.support.v7.widget.RecyclerView.State state) {
    onDrawOver(c, parent, state);
}

public void drawRipple(android.graphics.Canvas canvas) {
    ripplePaint.setStrokeWidth(2);
    ripplePaint.setStyle(Paint.Style.STROKE);
    ripplePaint.setColor(color);
    ripplePaint.setAlpha(rippleAlpha);
    canvas.drawCircle(xPos, yPos, rippleRadius, ripplePaint);
}

@java.lang.Override
public void run() {
    mSwipeRefreshLayout.setRefreshing(false);
    addFeedItem(new com.saltycode.android.material2.material_playground.model.FeedItem("External User", "This message was downloaded from the Internet", 0));
}

@java.lang.Override
public Loader<List<? extends org.oucho.mpdclient.mpd.item.Item>> onCreateLoader(int id, android.os.Bundle args) {
    android.util.Log.i(org.oucho.mpdclient.fragments.AlbumSongsFragment.TAG, "onCreateLoader");
    return new <org.oucho.mpdclient.fragments.mApp>org.oucho.mpdclient.fragments.loader.AlbumSongLoader(mAlbum);
}

@java.lang.Override
public void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompat.AuthenticationResult result) {
    super.onAuthenticationSucceeded(result);
    if ((promise) == null) {
        throw new java.lang.AssertionError("Tried to resolve the auth promise, but it was already resolved / rejected. This shouldn't happen.");
    }
    promise.resolve(null);
    promise = null;
}

@android.databinding.BindingAdapter(value = { "bind:imageUrl" })
public static void loadImage(android.widget.ImageView view, java.lang.String imageUrl) {
    com.squareup.picasso.Picasso.with(view.getContext()).load(imageUrl).placeholder(R.drawable.list_item_bg).error(R.drawable.ic_broken_image).into(view);
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    android.content.Intent intent = new android.content.Intent(context, com.andela.motustracker.model.ActivityRecognitionDetector.class);
    android.app.PendingIntent callbackIntent = android.app.PendingIntent.getService(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
    ActivityRecognition.ActivityRecognitionApi.requestActivityUpdates(com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient, 0, callbackIntent);
}

@java.lang.Override
public void onActionClicked(int i) {
    switch (i) {
        case 2 :
            android.util.Log.i("Action", "like");
            playlist.likeSong();
            break;
    }
}

public void insertRecord(java.lang.String tableName, android.content.ContentValues contentValues) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    db.insertOrThrow(tableName, null, contentValues);
    db.close();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    this.handleConnectivityNotification(intent);
}

@java.lang.Override
public void onItemClick(android.view.View v, int position) {
    android.widget.Toast.makeText(mActivity, mMyChannleList.get(position), Toast.LENGTH_SHORT).show();
}

public void changeColorChest(android.view.View view) {
    view.setBackgroundColor(android.graphics.Color.parseColor("#547b7b"));
    view.setElevation(15);
}

@java.lang.Override
public void onClick(android.view.View pView) {
    if ((mCallNumber) != null) {
        android.content.Intent callContact = new android.content.Intent(android.content.Intent.ACTION_DIAL);
        callContact.setData(android.net.Uri.parse("tel:5556"));
        startActivity(callContact);
    }
}

private void loadMainViewPagerFragment() {
    android.support.v4.app.Fragment frag = getSupportFragmentManager().findFragmentById(R.id.fragment_main_container);
    if (frag == null) {
        loadFragment(com.quartzodev.fragments.ViewPagerFragment.newInstance(ViewPagerFragment.MAIN_VIEW_PAGER, mFolderId, null, null));
    }
}

@java.lang.Override
public void onDataLoaded(com.dominika.florczykowska.placesfinder.classes.pojo.placesearch.PlaceSearch response) {
    android.util.Log.d(com.dominika.florczykowska.placesfinder.fragments.MapListFragment.TAG, "data loaded");
    getRetrofitResponse();
}

@java.lang.Override
public void onTrackSelected(int trackPos, android.view.View mediaListItemView) {
    if ((audioPlayerFragment) != null) {
        audioPlayerFragment.setTrack(trackPos);
        audioPlayerFragment.setCurrentMediaListItemView(mediaListItemView);
    }
}

public void activateListItem(android.widget.LinearLayout linearLayout) {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) {
        linearLayout.setActivated(true);
    }else {
        linearLayout.setSelected(true);
    }
}

public java.lang.String getTitle(android.content.Context context) {
    return "";
}

@java.lang.Override
protected void onDeleteSuccess(com.heaven7.android.dragflowlayout.DragFlowLayout dfl, android.view.View child, java.lang.Object data) {
    super.onDeleteSuccess(dfl, child, data);
}

@java.lang.Override
public void onBitmapCropped(@android.support.annotation.NonNull
android.net.Uri resultUri, int offsetX, int offsetY, int imageWidth, int imageHeight) {
    setResultUri(resultUri, mGestureCropImageView.getTargetAspectRatio(), offsetX, offsetY, imageWidth, imageHeight);
    finish();
    setupImagePositionOnHidePositive();
}

@java.lang.Override
public void onClick(android.view.View v) {
    registerStudentType.setChecked(false);
    registerFirstName.setHint("Society Name");
    registerLastName.setHint("Faculty");
}

@java.lang.Override
protected android.graphics.Bitmap doInBackground(java.lang.String... paths) {
    android.graphics.Point screenSize = com.framgia.photoalbum.util.CommonUtils.getDisplaySize(this);
    return com.framgia.photoalbum.util.CommonUtils.decodeSampledBitmapResource(paths[0], screenSize.x, screenSize.y);
}

@java.lang.Override
protected java.lang.String doInBackground(java.lang.String... urls) {
    try {
        android.util.Log.d("darkGoals", "downloading csv file");
        return aman.darkgoals.UrlFetcher.downloadTextFile(urls[0]);
    } catch (java.io.IOException e) {
        return "Unable to retrieve web page. URL may be invalid.";
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.facebook.Session s = com.facebook.Session.getActiveSession();
    if (!(session.isClosed())) {
        session.closeAndClearTokenInformation();
    }
    com.kii.cloud.storage.KiiUser.logOut();
}

public void ReturnClaim(android.view.MenuItem menu) {
    com.cmput301w15t15.travelclaimsapp.SignOutController.reset();
    android.widget.Toast.makeText(this, "Returning to claimlist", Toast.LENGTH_SHORT).show();
    android.content.Intent intent = new android.content.Intent(this, com.cmput301w15t15.travelclaimsapp.activitys.AddClaimActivity.class);
    startActivity(intent);
}

public void reveal(@android.support.annotation.Size(value = 2)
@android.support.annotation.NonNull
final int[] from) {
    changeState(de.wackernagel.android.sidekick.widgets.CircularRevealView.STATE_REVEAL_STARTED);
    animationState = de.wackernagel.android.sidekick.widgets.CircularRevealView.ANIMATION_STARTING;
    circleX = from[0];
    circleY = from[1];
    android.support.v4.view.ViewCompat.postInvalidateOnAnimation(this);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    nu.yona.app.YonaApplication.getEventChangeManager().registerListener(this);
    loadPasscodeView(true);
    initializeAnimation();
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    legacyAddress.setLabel(legacyAddress.getAddress());
    remoteSaveUnmatchedPrivateKey(legacyAddress);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.cancel();
    dialog.dismiss();
    this.finish();
}

private void initGameFragment() {
    init();
    secret = createSecret();
    android.util.Log.e("GameFragment", ("createSecret - " + (secret.getValue())));
    stan.bulls.cows.db.SQliteApi.clearGameTemp();
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    mNote.setTaskDone(buttonView.isChecked());
    updateData();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    if (com.jstakun.gms.android.location.AndroidDevice.isBetterLocation(location, com.jstakun.gms.android.config.ConfigurationManager.getInstance().getLocation())) {
        com.jstakun.gms.android.config.ConfigurationManager.getInstance().setLocation(location);
        mLocationHandler.sendEmptyMessage(com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION);
    }
}

@java.lang.Override
public void onSuccess(java.io.InputStream inputStream, android.os.Bundle params) {
    byte[] content = params.getByteArray(com.quickblox.core.Consts.CONTENT_TAG);
    android.util.Log.i(com.sdk.snippets.modules.SnippetsCustomObjects.TAG, "file downloaded");
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    return super.onOptionsItemSelected(item);
}

public static void setViewerVisibility(boolean visible) {
    com.atinternet.tracker.Debugger.bubbleVisibility = (visible) ? android.view.View.VISIBLE : android.view.View.GONE;
    com.atinternet.tracker.Debugger.bubbleImage.get().setVisibility(com.atinternet.tracker.Debugger.bubbleVisibility);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    closeDrawer();
    setCurrentTag(id);
    getLoaderManager().restartLoader(com.kos.ktodo.KTodo.CURRENT_TAG_ITEMS_LOADER_ID, null, currentTagItemsLoaderCallbacks);
}

@java.lang.Override
public int compareTo(@android.support.annotation.NonNull
edu.byu.support.feature.Feature another) {
    return getName().compareTo(another.getName());
}

public static void unBindService() {
    android.content.Intent stopIntent = new android.content.Intent(com.bytereal.byterealblesdk.broadcast.receiver.BluetoothBroadcastReceiver.context, com.bytereal.byterealblesdk.service.IBeaconScanService.class);
    com.bytereal.byterealblesdk.broadcast.receiver.BluetoothBroadcastReceiver.context.stopService(stopIntent);
}

@java.lang.Override
public void onButtonClick(android.app.AlertDialog _dialog, int actionId) {
    if ((com.panzyma.nm.auxiliar.AppDialog.OK_BUTTOM) == actionId) {
        _dialog.dismiss();
        Load_Data(com.panzyma.nm.view.LOAD_DATA_FROM_LOCALHOST);
    }
}

public static java.lang.String deprecatedPath(final android.content.Context p) {
    return ((android.os.Environment.getExternalStorageDirectory().getAbsolutePath()) + "/app-data/") + (p.getPackageName());
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    stopPaint();
    startPaint();
}

public boolean onOptionsItemSelected(android.view.MenuItem item) {
    android.content.Intent myIntent = new android.content.Intent(getApplicationContext(), no.teacherspet.mainapplication.RoleSelect.class);
    startActivityForResult(myIntent, 0);
    finish();
    return true;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle instanceState) {
    super.onSaveInstanceState(instanceState);
    saveViewData(instanceState);
    stopQuizTimerCount();
}

@java.lang.Override
public void onStartFailure(int errorCode) {
    android.util.Log.e("BLE", ("Advertising onStartFailure: " + errorCode));
    super.onStartFailure(errorCode);
}

@java.lang.Override
public void run() {
    android.util.Log.d(ching.android_localsocket.localsocket.ClientConnect.TAG, "Loop");
    mHandler.postDelayed(this, 1000);
    recv();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    android.util.Log.d("DEBUG", "WHERES MY FRAGMENT");
    return new selinabing.cranberrymelon.AvailabilityFragment();
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu_main, menu);
    return super.onCreateOptionsMenu(menu);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Button button = ((android.widget.Button) (v));
    _currentText.setText("");
    _haveDot = false;
    _gotResult = false;
    _haveError = false;
}

private android.graphics.Bitmap GrayscaleColor(android.graphics.Bitmap original) {
    android.graphics.ColorMatrix colorMatrix = new android.graphics.ColorMatrix();
    colorMatrix.setSaturation(0);
    return this.process(original, colorMatrix);
}

@java.lang.Override
public void onClick(android.view.View view) {
    button5.setText(((mark) + ""));
    placeMarkOnBoard(1, 1);
    button5.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

@java.lang.Override
public net.validcat.fishing.adapters.ThingsAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    net.validcat.fishing.adapters.ThingsAdapter.ViewHolder holder = new net.validcat.fishing.adapters.ThingsAdapter.ViewHolder(android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.things_list_item, parent, false));
    return holder;
}

private void init(android.view.View view) {
    currentStartPosition = 0;
    initView(view);
    getFunnyPics();
}

public void loadSetup(int position) {
    com.androidandyuk.kitchentimer.MainActivity.itemList.clear();
    com.androidandyuk.kitchentimer.timerSetup thisSetup = com.androidandyuk.kitchentimer.MainActivity.savedSetups.get(position);
    com.androidandyuk.kitchentimer.MainActivity.maxTime = thisSetup.maxTime;
    com.androidandyuk.kitchentimer.MainActivity.warningsWanted = thisSetup.warningsWanted;
    for (com.androidandyuk.kitchentimer.timerItem thisItem : thisSetup.itemsSetup) {
        com.androidandyuk.kitchentimer.MainActivity.itemList.add(thisItem);
    }
}

public void onAddItem(android.view.View v) {
    com.codepath.simpletodoapp.activities.EditEntryDialogFragment newEntryFrag = com.codepath.simpletodoapp.activities.EditEntryDialogFragment.newInstance(null, java.util.Calendar.getInstance(), "MEDIUM", NEW_WRITE);
    newEntryFrag.show(getSupportFragmentManager(), "fragment_edit_entries");
}

@java.lang.Override
public void onRefreshBegin(in.srain.cube.views.ptr.PtrFrameLayout frame) {
    getData();
    android.widget.Toast.makeText(getActivity(), "下拉刷新", Toast.LENGTH_SHORT).show();
    mPtrFrame.refreshComplete();
}

private void initView() {
    mVideoIndex = 0;
    mMediaController = ((bf.cloud.BFMediaPlayerControllerVod) (findViewById(R.id.vod_media_controller_vod)));
    mVodPlayer = ((bf.cloud.android.playutils.VodPlayer) (mMediaController.getPlayer()));
    mVodPlayer.setDataSource(mUrls[0]);
}

@java.lang.Override
protected void onStartLoading() {
    super.onStartLoading();
    if (!(com.jasonbutwell.popularmovies.BackgroundTask.TMDBLoader.isLoaded)) {
        com.jasonbutwell.popularmovies.Ui.LoadingIndicator.show(mBinding, true);
        android.util.Log.i("LOADER", "START");
        forceLoad();
    }
}

public com.pajato.android.gamechat.account.Account getGroupMember(@android.support.annotation.NonNull
final java.lang.String groupKey, @android.support.annotation.NonNull
final java.lang.String memberKey) {
    java.util.Map<java.lang.String, com.pajato.android.gamechat.account.Account> memberMap = groupMemberMap.get(groupKey);
    return memberMap.get(memberKey);
}

public android.database.Cursor getEntry(java.lang.String query) {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    android.database.Cursor res = db.rawQuery(("select * from " + (org.x.cassini.DatabaseHelper.TABLE_ENTRY_NAME)), null);
    return res;
}

@java.lang.Override
public android.app.Fragment getItem(int position) {
    return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment.newInstance((position + 1));
}

public boolean isAutoDisplay() {
    return com.hyx.android.Game351.util.SP.getSp(this).getBoolean(SP.isAutoDisplay, false);
}

@java.lang.Override
public void onRecordingSuccessful(java.io.File file) {
    if (file != null)
        sendBinaryMessage(android.net.Uri.fromFile(file), AudioDialog.DEFAULT_MIME, true, org.kontalk.message.AudioComponent.class);
    
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    android.widget.Toast.makeText(getApplicationContext(), "TESTING", Toast.LENGTH_LONG).show();
    android.content.Intent updateChanges = new android.content.Intent(com.kchen52.twona.SettingsActivity.SETTINGS_CHANGED);
    sendBroadcast(updateChanges);
}

@java.lang.Override
public android.view.View initView() {
    android.view.View root = android.view.View.inflate(mainActivity, R.layout.fragment_content_view, null);
    com.lidroid.xutils.ViewUtils.inject(root);
    return root;
}

public void onClick(android.content.DialogInterface dialog, int id) {
    setUpPlacement(currentTurn);
    confirmPlacementDialog.dismiss();
}

public void attachTo(android.support.v7.widget.RecyclerView recyclerView) {
    if (recyclerView != null) {
        adapter = new com.liangmayong.base.widget.recycler.RecyclerListView.ItemPoolRecyclerViewAdapter(this);
        recyclerView.setAdapter(((com.liangmayong.base.widget.recycler.RecyclerListView.ItemPoolRecyclerViewAdapter) (adapter)));
    }
}

@java.lang.Override
public void onStart() {
    android.util.Log.i(LOG_TAG, (((this.getClass().getSimpleName()) + (getId())) + ".onStart()"));
    super.onStart();
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    dialog.dismiss();
    layout.removeView(numberPicker);
    onClose(false);
}

@java.lang.Override
public tsmcomp.question.common.MaterialCardSingleRadioWithTextAndIconViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    return new tsmcomp.question.common.MaterialCardSingleRadioWithTextAndIconViewHolder(android.view.LayoutInflater.from(getContext()).inflate(R.layout.card_material_single_radio_with_text_and_icon, parent, true));
}

public static android.support.v4.provider.DocumentFile getDirDocument(android.content.Context context, java.lang.String rootPath, java.lang.String... subDirs) {
    android.support.v4.provider.DocumentFile root = android.support.v4.provider.DocumentFile.fromTreeUri(context, android.net.Uri.parse(rootPath));
    return ml.puredark.hviewer.utils.DocumentUtil.getDirDocument(root, subDirs);
}

@java.lang.Override
public void onFailure(int statusCode, org.apache.http.Header[] headers, byte[] responseBody, java.lang.Throwable error) {
    if (responseBody != null)
        android.util.Log.d("ERREUR", new java.lang.String(responseBody));
    else {
    }
}

@java.lang.Override
public void onCreate() {
    android.util.Log.e("check", "service has started");
    super.onCreate();
    songPosn = 0;
    player = new android.media.MediaPlayer();
    initMusicPlayer();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(getActivity(), edu.josephkorang.criminalintent.CrimeCameraActivity.class);
    startActivity(i);
    startActivityForResult(i, edu.josephkorang.criminalintent.CrimeFragment.REQUEST_PHOTO);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(resultString.equals("0"))) {
        resultString = df.format((-(parseDouble(resultString))));
        updateState();
    }
}

public static void startSelectyCityActivity(android.content.Context context) {
    android.content.Intent i = new android.content.Intent(context, kode.kinopoisk.savin.letmemovie.activity.FirstStartActivity.class);
    i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    context.startActivity(i);
}

@org.robolectric.annotation.Implementation
public void send() throws android.app.PendingIntent.CanceledException {
    send(savedContext, 0, null);
}

@java.lang.Override
public void onSurfaceCreated(javax.microedition.khronos.opengles.GL10 gl, javax.microedition.khronos.egl.EGLConfig config) {
    android.opengl.GLES20.glClearColor(0.5F, 0.5F, 0.5F, 1.0F);
    mBoard = new org.no_ip.chrisbregg.simon.GameBoard();
    mPattern = new java.util.ArrayList<java.lang.Integer>();
    mRand = new java.util.Random();
}

@java.lang.Override
public int compareTo(de.blau.android.util.IndexSearchResult arg0) {
    if ((arg0.count) > (count)) {
        return -1;
    }else
        if ((arg0.count) < (count)) {
            return +1;
        }
    
    return 0;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration();
    initialize(new me.boxcubed.main.TopDown(), config);
}

public void takePhoto(android.view.View view) {
    dispatchTakePictureIntent();
    android.content.Intent intent = new android.content.Intent(this, com.jonathan.simplephoto.PhotoActivity.class);
    startActivity(intent);
}

public com.google.firebase.storage.UploadTask saveUserImage(android.net.Uri file) {
    com.google.firebase.storage.StorageReference userProfileRef = mImages.child("images").child("users");
    return userProfileRef.putFile(file);
}

@java.lang.Override
protected void onPostExecute(java.util.ArrayList<com.example.c4q_ac35.justmygoogle.SportsFeed> sportsFeedsArrayList) {
    android.widget.ArrayAdapter<com.example.c4q_ac35.justmygoogle.SportsFeed> sportsAdapter = new android.widget.ArrayAdapter<com.example.c4q_ac35.justmygoogle.SportsFeed>(this, R.layout.list_item2, sportsFeedsArrayList);
    sportsFeedListView.setAdapter(sportsAdapter);
}

@java.lang.Override
public me.iwf.photopicker.adapter.PhotoAdapter.PhotoViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    me.iwf.photopicker.adapter.PhotoAdapter.PhotoViewHolder viewHolder = PhotoPickUtils.holderGenerator.newGridViewHolder2(mContext);
    parent.addView(viewHolder.itemView);
    return viewHolder;
}

public static int getVersion(android.content.Context context, int defaultVersion) {
    android.content.SharedPreferences sharedPreferences = context.getSharedPreferences(io.gresse.hugo.anecdote.storage.SpStorage.SP_KEY, Context.MODE_PRIVATE);
    return sharedPreferences.getInt(io.gresse.hugo.anecdote.storage.SpStorage.SP_KEY_VERSION, 0);
}

public void onIRCEvent(int what, java.lang.Object o) {
    com.irccloud.android.IRCCloudJSONObject obj;
    switch (what) {
        case com.irccloud.android.NetworkConnection.EVENT_USERINFO :
            try {
                dismiss();
            } catch (java.lang.Exception e) {
            }
            break;
        default :
            break;
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    claimListController.removeClaim(claimId);
    claimListController.deleteClaim(claimId);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_friends_list);
    butterknife.ButterKnife.bind(this);
    setBottomIconDefaultColor();
    mImageFriends.setColorFilter(android.support.v4.content.ContextCompat.getColor(this, R.color.colorPrimary));
    setToolbarWithBackArrow();
}

@java.lang.Override
public void onAnimationUpdate(android.animation.ValueAnimator animation) {
    float cVal = ((java.lang.Float) (animation.getAnimatedValue()));
    view.setAlpha((2 - cVal));
    view.setScaleX(cVal);
    view.setScaleY(cVal);
}

@java.lang.Override
public void finish() {
    android.content.Intent sendIntent = new android.content.Intent();
    sendIntent.putExtra("event", event);
    java.lang.System.out.println(event);
    setResult(fr.insapp.insapp.activities.RESULT_OK, sendIntent);
    super.finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(getActivity(), "WYBIERZ!", Toast.LENGTH_SHORT).show();
    chooseExercise.show(getFragmentManager(), "choose");
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.util.Log.i(TAG, "MainActivity.onCreateOptionsMenu()");
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu_main, menu);
    mMenu = menu;
    return true;
}

public static <T> void insert(android.content.Context context, android.content.ContentProviderClient provider, T... dataModelObjects) throws android.os.RemoteException {
    za.co.cporm.model.CPSyncHelper.insert(context, provider, dataModelObjects);
}

@java.lang.Override
public void onPause() {
    android.content.Intent toService = new android.content.Intent(this, io.github.mthli.Ninja.Service.HolderService.class);
    io.github.mthli.Ninja.Unit.IntentUnit.setClear(true);
    stopService(toService);
    create = false;
    inputBox.clearFocus();
    super.onPause();
}

@java.lang.Override
public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    super.onPageFinished(view, url);
    mListener.stopDownLoadAnimation();
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (playPokemonGO.isChecked())
        setpokeGO = 1;
    
}

private static com.dataart.android.devicehive.EquipmentData equipmentData(java.lang.String name, java.lang.String code, java.lang.String type) {
    com.dataart.android.devicehive.EquipmentData equipmentData = new com.dataart.android.devicehive.EquipmentData(name, code, type);
    return equipmentData;
}

public static void getPermit(@android.support.annotation.NonNull
java.lang.String permitId, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<java.util.List<com.airmap.airmapsdk.models.permits.AirMapAvailablePermit>> callback) {
    com.airmap.airmapsdk.networking.services.AirMap.getPermits(permitId, null, callback);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent myIntent = new android.content.Intent(this, com.example.douglass_macbook.ss12_simon_says.ActivityInstruction.class);
    this.startActivityForResult(myIntent, 0);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    setUpToolbar();
    folderTitle = this.getArguments().getString(FRAGMENT_ARGS_FOLDER_TITLE);
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    items.remove(position);
    itemsAdapter.notifyDataSetChanged();
    removeItemFromDatabase(position);
    return true;
}

@java.lang.Override
public void onPause(boolean multitasking) {
    super.onPause(multitasking);
    com.plugin.gcm.PushPlugin.gForeground = false;
    final android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (cordova.getActivity().getSystemService(Context.NOTIFICATION_SERVICE)));
    notificationManager.cancelAll();
}

public void saveCheckpointAsIncomplete(java.lang.String tableId, java.lang.String stringifiedJSON, java.lang.String rowId, java.lang.String callbackJSON, java.lang.String transId, java.lang.Boolean leaveTransactionOpen) {
    org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest(ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE, tableId, stringifiedJSON, rowId, callbackJSON, transId, leaveTransactionOpen);
    queueRequest(request);
}

private int dpToPx(float dp) {
    android.util.DisplayMetrics displayMetrics = getContext().getResources().getDisplayMetrics();
    float px = android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, displayMetrics);
    return java.lang.Math.round(px);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            finish();
            return true;
        case R.id.menu_share :
            onClickShare();
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
protected void onDestroy() {
    com.sendbird.android.SendBird.disconnect(new com.sendbird.android.SendBird.DisconnectHandler() {
        @java.lang.Override
        public void onDisconnected() {
        }
    });
}

@java.lang.Override
public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) {
    if (status != (android.location.LocationProvider.AVAILABLE))
        currentResult.reset();
    
}

public void goToMain(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, project.equationinvasion.MainActivity.class);
    startActivity(intent);
    noise.stopMusic();
    noise.close();
    finish();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    storage = com.johnsimon.payback.storage.StorageManager.getStorage(this);
    contactLoader = com.johnsimon.payback.loader.ContactLoader.getLoader(this);
    dataLink = com.johnsimon.payback.util.DataLinker.link(storage.subscription, contactLoader.contactsLoaded);
}

public sumimakito.android.quickkv.database.QKVCallback cbkSuccess() {
    return this.isCallbackEnabled ? new sumimakito.android.quickkv.database.QKVCallback() : null;
}

public void registerAuthenticationListener(com.concavenp.artistrymuse.services.UserAuthenticationService.OnAuthenticationListener listener) {
    android.util.Log.d(com.concavenp.artistrymuse.services.UserAuthenticationService.TAG, "registerAuthenticationListener");
    mAuthListener = listener;
}

@java.lang.Override
public android.view.View findViewById(@android.support.annotation.IdRes
int id) {
    android.view.View v = super.findViewById(id);
    if (v instanceof android.support.v7.widget.SwitchCompat) {
        return null;
    }
    return super.findViewById(id);
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<java.util.List<com.example.android.newsapp.Story>> loader, java.util.List<com.example.android.newsapp.Story> data) {
    mDataset.addAll(data);
    mAdapter.notifyDataSetChanged();
}

private void changePwdDone(android.os.Bundle data) {
    com.extenprise.mapp.medico.util.Utility.showProgressDialog(this, false);
    if (data.getBoolean("status")) {
        com.extenprise.mapp.medico.util.Utility.showMessage(this, R.string.msg_change_pwd);
    }
}

public void updateImage(android.graphics.Bitmap bitmap) {
    mImageView.setImageBitmap(bitmap);
    mBitmap = bitmap;
}

@java.lang.Override
public void onClick(android.view.View view) {
    world.myblooddy.Intent i = new world.myblooddy.Intent(this, world.myblooddy.RegisterActivity.class);
    startActivity(i);
}

@java.lang.Override
public void onLocationChanged(android.location.Location loc) {
    com.example.pyeonsangjin.ssmproject.MainActivity.longitude = "" + (loc.getLongitude());
    com.example.pyeonsangjin.ssmproject.MainActivity.latitude = "" + (loc.getLatitude());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(B1.getText().equals(""))) {
        b1.setVisibility(View.VISIBLE);
        B1.setVisibility(View.GONE);
        (tag_num)--;
    }
}

@java.lang.Override
public void onBtnCreateRouteClick(android.util.ArrayMap<java.lang.String, com.google.android.gms.maps.model.Marker> markerArrayMap) {
    getDirection(hu.banyai.robert.mapnotification.data.remote.LocationManager.getInstance().getLastLocation(), markerArrayMap);
    hu.banyai.robert.mapnotification.data.remote.LocationManager.getInstance().requestLocationUpdate(this);
}

public void addMessage(com.taylorstubbs.whodischat.models.Message message) {
    android.util.Log.d(com.taylorstubbs.whodischat.adapters.MessageAdapter.TAG, "adding message");
    mMessages.add(message);
    notifyDataSetChanged();
}

public void test_031() throws android.os.RemoteException, com.android.uiautomator.core.UiObjectNotFoundException {
    excute(testcase.Object_Text, testcase.Operation_ClickWait, "SIM 卡");
    excute(testcase.Object_ResIdInstance, testcase.Operation_ClickWait, "android:id/summary", "0");
    check(testcase.Object_ResourceId, testcase.Operation_checkExist, "android:id/alertTitle", "SIM 卡插槽 1");
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id, com.mikepenz.materialdrawer.model.interfaces.IDrawerItem drawerItem) {
    handleDrawer(position);
}

public android.view.ViewPropertyAnimator animateOffScreenRight(int duration) {
    return card.animate().setDuration(SwipeDeck.ANIMATION_DURATION).x(((parentWidth) * 2)).y(0).rotation(30);
}

public static void playNext(android.content.Context context, teamfmg.hangman.MusicPlayer.MusicType type) {
    teamfmg.hangman.MusicPlayer.mp = android.media.MediaPlayer.create(context, R.raw.intro);
    teamfmg.hangman.MusicPlayer.mp.start();
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    drawerToggle.onConfigurationChanged(newConfig);
    drawerToggle.setHomeAsUpIndicator(R.drawable.ic_drawer);
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    android.content.Intent in = new android.content.Intent(com.ford.mobileweather.smartdevicelink.features.WeatherAlertService.ACTION);
    in.putExtra("resultCode", Activity.RESULT_OK);
    in.putExtra("Alert", speakString);
    android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(in);
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mp, int what, int extra) {
    android.widget.Toast.makeText(mContext, "Media player entered Error state ", Toast.LENGTH_SHORT).show();
    mediaPlayer.reset();
    return false;
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    safeSetTitle(getString(R.string.utah_fishing_report));
    initView();
    load();
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    if (!(mLastLocale.equals(newConfig.locale))) {
        updateQsTile();
    }
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    progressDialog = new android.app.ProgressDialog(getActivity());
    progressDialog.setMessage("Loading all messages...");
    progressDialog.setCancelable(false);
    progressDialog.show();
}

private void setFlag() {
    android.widget.ImageView flag = ((android.widget.ImageView) (findViewById(R.id.flag)));
    if ((language) == "nl") {
        flag.setImageResource(R.drawable.dutchflag);
    }else {
        flag.setImageResource(R.drawable.englishflag);
    }
}

public java.lang.String getSpinnerValue() {
    android.widget.Spinner mySpinner = ((android.widget.Spinner) (findViewById(R.id.number_spinner)));
    return mySpinner.getSelectedItem().toString();
}

@java.lang.Override
public void onBackStackChanged() {
    android.util.Log.d(com.nanodegree.gaby.bakerylovers.activities.ReviewOrderActivity.TAG, "Called back stack changed");
    if (mSelectedFragment.equals(com.nanodegree.gaby.bakerylovers.activities.ReviewOrderActivity.TAG_FRAGMENT_CONFIRM_ORDER)) {
        mSelectedFragment = com.nanodegree.gaby.bakerylovers.activities.ReviewOrderActivity.TAG_FRAGMENT_REVIEW_ORDER;
    }else {
        mSelectedFragment = com.nanodegree.gaby.bakerylovers.activities.ReviewOrderActivity.TAG_FRAGMENT_CONFIRM_ORDER;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    fragmentManager = getSupportFragmentManager();
    showFragment(MainFragment.TAG);
    setSearchSettingsURLs();
    initMenu();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initGoLib();
    try {
        go.goInterface.GoInterface.Start();
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void run() {
    setupMenuItems();
    ((android.widget.BaseAdapter) (mDrawerList.getAdapter())).notifyDataSetChanged();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    java.lang.System.out.println("started");
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_summary_screen);
    grabData();
    putConfirmOnScreen();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.util.Log.d("Insurance", "onItemClick");
    GetInsuranceId();
    com.profilohn.Activities.InputActivity.wage.clearFocus();
    com.profilohn.Activities.InputActivity.taxFree.clearFocus();
}

private void removeCookingComments() {
    java.lang.String key = "cookingComments";
    android.content.SharedPreferences.Editor editor = sharedpreferences.edit();
    editor.remove(key);
    editor.commit();
}

@java.lang.Override
public int compare(android.hardware.Camera.Size o1, android.hardware.Camera.Size o2) {
    return ((o1.width) * (o1.height)) - ((o2.width) * (o2.height));
}

@java.lang.Override
public void onBitmapLoaded(android.graphics.Bitmap bitmap, com.squareup.picasso.Picasso.LoadedFrom from) {
    android.util.Log.i("TAG", "loaded bitmap");
    drawView.removeBackgroundImage();
    settings.backgroundImagePhone = bitmap;
    drawView.invalidate();
    btnRemoveImage.setVisibility(View.VISIBLE);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    injectDependencies();
    mEventsPresenter.onCreate();
}

@java.lang.Override
public void showAcceptButton(java.util.List<de.fau.cs.mad.wanthavers.common.Haver> havers) {
    if (isHaver(havers)) {
        android.view.MenuItem acceptDesireMitem = mOptionsMenu.findItem(R.id.menu_accept_desire);
        acceptDesireMitem.setVisible(false);
    }
}

@java.lang.Override
public void onMapTimedDistance(java.lang.String time) {
    android.widget.TextView timeView;
    if ((timeView = ((android.widget.TextView) (getView().findViewById(R.id.timeToTargetTextView)))) == null)
        return ;
    
    timeView.setText(time);
}

public static android.content.Intent newIntent(android.content.Context packageContext, java.util.UUID jobId) {
    android.util.Log.d(com.osu.cse5236.oddjobs.EditJobActivity.TAG, "newIntent() called");
    android.content.Intent intent = new android.content.Intent(packageContext, com.osu.cse5236.oddjobs.NewJobActivity.class);
    intent.putExtra(com.osu.cse5236.oddjobs.EditJobActivity.EXTRA_JOB_ID, jobId);
    return intent;
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.d(com.udacity.bakappies.fragment.FragmentStepDetail.TAG, ("onPause " + (step.getShortDescription())));
}

@java.lang.Override
public void openPedirInfo(itesm.mx.carpoolingtec.model.firebase.User user) {
    android.content.Intent intent = new android.content.Intent(this, itesm.mx.carpoolingtec.userinfo.PedirInfoActivity.class);
    intent.putExtra("ïd", 1);
    intent.putExtra("user", user);
    startActivity(intent);
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    android.util.Log.d("flow1", ("response: " + result));
    prepareResponse(result);
}

public static void d(java.lang.String msg) {
    if (android.text.TextUtils.isEmpty(msg)) {
        return ;
    }
    if (com.vinci.imageloader.core.util.MLog.DEBUG) {
        android.util.Log.d(com.vinci.imageloader.core.util.MLog.TAG, msg);
    }
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.i(nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, "power on success");
    updateLightBulb(true);
    _sbPwm.setProgress(100);
    done();
}

@java.lang.Override
public void onResume() {
    super.onResume();
    mRefreshMarkers = true;
    mUpdateRefreshHandler = new android.os.Handler();
    setupUI();
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d(com.freddykilo.smartdoor.AutoButton.TAG, "AutoButton.onDestroy()");
    cleanup();
    super.onDestroy();
}

private android.net.Uri insertWriterValues(android.content.ContentValues writerValues) {
    android.util.Log.v(com.harlie.radiotheater.radiomysterytheater.data.TestRadioTheaterDb.TAG, "insertWriterValues");
    android.net.Uri writer = RadioTheaterContract.WritersEntry.buildWritersUri();
    return activity.getContentResolver().insert(writer, writerValues);
}

@java.lang.Override
public void done(com.parse.ParseException e) {
    if (e == null) {
        gs.saveProfilePicToParse(prepareProfilePicForSaving());
    }else {
        android.widget.Toast.makeText(this, "Something went wrong", Toast.LENGTH_LONG).show();
    }
}

@java.lang.Override
protected void onPermissionGranted() {
    android.widget.Toast.makeText(mActivity, "Permission Granted...", Toast.LENGTH_LONG).show();
}

public void onScanQRClick(android.view.View view) {
    mScannerView.setResultHandler(this);
    mScannerView.startCamera(0);
    cameraDialog = showCameraDialog();
}

public void zoomOut(@android.support.annotation.NonNull
final android.opengl.GLSurfaceView view) {
    zoom(view, mIndex, ((VIEW_SIZE) / 2), _R, _R_NEAR, 0, FAR);
}

private static boolean verifyPermissions(int[] grantResults) {
    for (int grantResult : grantResults) {
        if (grantResult != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
            return false;
        }
    }
    return true;
}

private void onUseretail(bhartiairtel.themehackathon.pojo.GetUserDetailsResponseBean result) {
    android.content.Intent in = new android.content.Intent();
    in.putExtra("result", result);
    startActivity(new android.content.Intent(this, bhartiairtel.themehackathon.main.NavigationDrawerActivity.class));
    finish();
}

@java.lang.Override
public boolean canSwipeRefreshChildScrollUp() {
    if ((mRecyclerView) != null)
        return android.support.v4.view.ViewCompat.canScrollVertically(mRecyclerView, (-1));
    
    return false;
}

@java.lang.Override
public void onPanelSlide(android.view.View panel, float slideOffset) {
    android.util.Log.i(com.pipit.waffle.TestFragmentNew.TAG, ("onPanelSlide, offset " + slideOffset));
    if (isExpanded) {
        mLayout.setDragView(entire_drag_view);
        isExpanded = false;
    }
}

@java.lang.Override
public void run() {
    (seconds)++;
    ((android.widget.TextView) (findViewById(R.id.passingTime))).setText(java.lang.String.valueOf(seconds));
    timerHandler.postDelayed(this, 1000);
}

private void checkNullSession() {
    android.content.SharedPreferences prefs = this.getSharedPreferences("Sessions", com.mobshep.shepherdlogin.MODE_PRIVATE);
    java.lang.String sessionId = prefs.getString("sessionId", null);
    if (sessionId == null) {
        this.finishActivity(0);
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent profileViewIntent = new android.content.Intent(getApplicationContext(), com.socialteinc.socialate.ViewOtherUserProfile.class);
    profileViewIntent.putExtra("entertainmentUploader", mEntertainmentUploader);
    profileViewIntent.putExtra("entertainmentKey", mEntertainmentKey);
    startActivity(profileViewIntent);
}

@java.lang.Override
public void onSuccess() {
    android.widget.Toast.makeText(getApplicationContext(), "Password successfully changed", Toast.LENGTH_LONG).show();
    changePDialog.cancel();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle bundle) {
    bundle.putSerializable(aaku492.smartfoodtracker.inventory.AddEditItemFragment.ITEM, item);
}

protected static boolean isNightMode(android.content.Context context) {
    int currentNightMode = (context.getResources().getConfiguration().uiMode) & (android.content.res.Configuration.UI_MODE_NIGHT_MASK);
    return currentNightMode == (android.content.res.Configuration.UI_MODE_NIGHT_YES);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case 0 :
            treehou.se.habit.core.Server server = serversAdapter.getItem(position);
            serversAdapter.removeItem(position);
            server.delete();
            break;
    }
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    isCount = false;
    setText(overtxt);
    onTimeListener.endTime();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((com.example.luc.controlbluetooth.HomePage.btSocket) == null) {
        makeToast("还未连接到蓝牙或者连接蓝牙失败");
    }
    com.example.luc.controlbluetooth.HomePage.ConnectedThread connectedThread = new com.example.luc.controlbluetooth.HomePage.ConnectedThread(com.example.luc.controlbluetooth.HomePage.btSocket);
    connectedThread.start();
}

private boolean archivePermissionsGranted(int[] permissionRequestResults) {
    return ((permissionRequestResults.length) > 0) && ((permissionRequestResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED));
}

public void onDestroy() {
    android.widget.Toast.makeText(this, "Service Destroyed", Toast.LENGTH_LONG).show();
    super.onDestroy();
}

@java.lang.Override
public void onLessonUnitPrepared(org.stepic.droid.model.Lesson lesson, @android.support.annotation.NonNull
org.stepic.droid.model.Unit unit, org.stepic.droid.model.Section section) {
    init(lesson, unit, section);
}

public void setContext(android.content.Context context) {
    org.wso2.mdm.agent.proxy.IdentityProxy.context = context;
}

@java.lang.Override
public void onLoadFinished(Loader<List<? extends org.oucho.mpdclient.mpd.item.Item>> loader, List<? extends org.oucho.mpdclient.mpd.item.Item> albumList) {
    android.util.Log.i(org.oucho.mpdclient.fragments.AlbumSongsFragment.TAG, ("onLoadFinished " + albumList));
    mAdapter.setData(albumList);
}

@java.lang.Override
public void onClick(android.view.View v) {
    dismiss();
    communicator.welcomeMessageState(false);
}

@java.lang.Override
protected void onBeforeClusterRendered(com.google.maps.android.clustering.Cluster<com.iolab.sightlocator.SightMarkerItem> cluster, com.google.android.gms.maps.model.MarkerOptions markerOptions) {
    android.util.Log.d("MyLogs", ("onBeforeClusterItemRendered, " + (cluster.getSize())));
    super.onBeforeClusterRendered(cluster, markerOptions);
}

public void glUniformMatrix3(int location, boolean transpose, java.nio.FloatBuffer value) {
    com.jme3.renderer.android.AndroidGL.checkPosition(value);
    android.opengl.GLES20.glUniformMatrix3fv(location, com.jme3.renderer.android.AndroidGL.getLimitCount(value, (3 * 3)), transpose, value);
}

@de.greenrobot.event.Subscribe
public void onGetProductDTOEvent(com.example.winify.cvsi.dto.ListDto<com.example.winify.cvsi.dto.templates.ProductTemplate> event) {
    android.widget.Toast.makeText(this, ("ceva" + (event.getList().get(0).getTitle())), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((actionState) == (com.playposse.ghostphoto.PhotoFragment.ActionState.running)) {
        stopTakingPhotos();
        actionState = com.playposse.ghostphoto.PhotoFragment.ActionState.stopped;
    }else {
        startTakingPhotos();
        actionState = com.playposse.ghostphoto.PhotoFragment.ActionState.running;
    }
    refreshActionButton();
}

@java.lang.Override
public void onClick(android.view.View v) {
    mListener.onSelect(res, position);
    int tmp = activePos;
    activePos = position;
    notifyItemChanged(tmp);
    notifyItemChanged(position);
}

@retrofit2.http.GET(value = "services/rest/?format=json&nojsoncallback=1&extras=url_s")
rx.Observable<com.rpham64.android.photogallery.network.response.FlickrResponse> getRecentPhotosRx(@retrofit2.http.Query(value = "page")
int page, @retrofit2.http.Query(value = "method")
java.lang.String method, @retrofit2.http.Query(value = "api_key")
java.lang.String key);

@java.lang.Override
public com.swerly.wifiheatmap.views.HeatmapDataViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View v = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.card_heatmap, parent, false);
    com.swerly.wifiheatmap.views.HeatmapDataViewHolder heatmapDataViewHolder = new com.swerly.wifiheatmap.views.HeatmapDataViewHolder(listener, v);
    return heatmapDataViewHolder;
}

@java.lang.Override
public void onEnabled(android.content.Context context) {
    super.onEnabled(context);
    com.ppyy.ppweatherplus.appwidgets.WeatherVerticalAppWidget.sAppWidgetAvailable = true;
    com.ppyy.ppweatherplus.utils.L.e("WeatherVerticalAppWidget onEnable");
    com.ppyy.ppweatherplus.service.AppWidgetService.sShouldStopService = false;
    com.ppyy.ppweatherplus.service.AppWidgetService.sUpdateAppWidget = true;
    com.xdandroid.hellodaemon.DaemonEnv.startServiceMayBind(com.ppyy.ppweatherplus.service.AppWidgetService.class);
}

public int getTcpServerPort() {
    return java.lang.Integer.parseInt(prefs.getString(org.droidplanner.android.utils.prefs.DroidPlannerPrefs.PREF_TCP_SERVER_PORT, org.droidplanner.android.utils.prefs.DroidPlannerPrefs.DEFAULT_TCP_SERVER_PORT));
}

public static edu.rosehulman.lix4.petlf.fragments.AccountFragment newInstance(edu.rosehulman.lix4.petlf.models.User currentUser) {
    edu.rosehulman.lix4.petlf.fragments.AccountFragment fragment = new edu.rosehulman.lix4.petlf.fragments.AccountFragment();
    android.os.Bundle args = new android.os.Bundle();
    args.putParcelable(edu.rosehulman.lix4.petlf.fragments.AccountFragment.ARG_USER, currentUser);
    fragment.setArguments(args);
    return fragment;
}

@android.support.annotation.NonNull
public com.tonyodev.fetch.request.Request addHeader(@android.support.annotation.NonNull
java.lang.String header, @android.support.annotation.Nullable
java.lang.String value) {
    headers.add(new com.tonyodev.fetch.request.Header(header, value));
    return this;
}

public void clearArchives(android.view.View view) {
    MainActivity.mArchives.edit().clear().apply();
    mArchiveLayout.removeAllViews();
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    new net.mpross.pws.MainActivity.datagrab().execute("");
    super.onConfigurationChanged(newConfig);
}

public static <T> de.chefkoch.raclette.android.support.CompositionMultiViewBindingAdapter.ViewTypeBuilder<T> builder(de.chefkoch.raclette.android.support.ItemViewTypeMapping<T> itemViewTypeMapping) {
    return new de.chefkoch.raclette.android.support.CompositionMultiViewBindingAdapter.Builder<T>();
}

@java.lang.Override
public void onClick(android.view.View view) {
    otherLocationButton.setEnabled(false);
    android.content.Intent i = new android.content.Intent(getActivity(), com.sanchez.geoopposite.OtherLocationActivity.class);
    startActivity(i);
}

@java.lang.Override
protected void loadMoreItems() {
    isLoading = true;
    (mCurrentPage)++;
    android.widget.Toast.makeText(getActivity(), "loading next page", Toast.LENGTH_LONG).show();
    loadNextPage();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    mView = inflater.inflate(R.layout.fragment_search, container, false);
    return mView;
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    com.github.stakkato95.sprint3.event.EventBus.register(getActivity(), EventBus.EVENT_FILTER_SELECTED, mReceiver);
    return super.onCreateView(inflater, container, savedInstanceState);
}

public void onClickDownloadFavorite(java.lang.String name) {
    android.widget.Toast.makeText(this, "Your Website has been downloaded", Toast.LENGTH_SHORT);
    presenter.onDownloadClickedFavorite(name);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mainActivity.onClickItem(view, getAdapterPosition());
    selectedItem = getAdapterPosition();
    notifyDataSetChanged();
}

private void saveUserFilter() {
    android.content.SharedPreferences preferences = getActivity().getPreferences(Activity.MODE_PRIVATE);
    android.content.SharedPreferences.Editor editor = preferences.edit();
    settings.writeToPreferences(editor);
    editor.apply();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(this, com.lasergiraffe.rideshare.util.SignUp.class);
    startActivity(i);
    finish();
}

public void imageReceived(android.graphics.Bitmap bitamp, int requestId);

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    int itemPosition = position;
    java.lang.String itemValue = ((java.lang.String) (scanList.getItemAtPosition(position)));
}

public static void setTypo(int p_type, android.widget.Button p_button) {
    p_button.setTypeface(bimedia.c2is.com.com.Typo.getTypoFromType(p_type));
    p_button.getPaint().setAntiAlias(true);
}

protected synchronized void buildGoogleApiClient() {
    mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(getContext()).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build();
    mGoogleApiClient.connect();
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    if (key.equals(getString(R.string.pref_key))) {
        org.sluman.movies.sync.MoviesSyncAdapter.syncImmediately(this);
        getSupportLoaderManager().restartLoader(org.sluman.movies.MovieListActivity.MOVIE_LOADER, null, this);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
    setContentView(R.layout.item);
    com.sargent.mark.todolist.AddToDoFragment frag = new com.sargent.mark.todolist.AddToDoFragment();
    frag.show(fm, "addtodofragment");
}

@java.lang.Override
public void onLoaderReset(android.content.Loader<android.database.Cursor> loader) {
    mNameEditText.setText("");
    mBreedEditText.setText("");
    mWeightEditText.setText("");
    mGenderSpinner.setSelection(0);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.util.Log.d("SymphonyArrayAdapter", "ItemClick");
    performTimerAction(((com.romanpulov.symphonytimer.DMTimerRec) (parent.getItemAtPosition(position))));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_bottom_sheet);
    butterknife.ButterKnife.bind(this);
    setUpToolbar();
    initializeContentView();
    initializeBottomSheet();
}

@java.lang.Override
public void onClickSwitch(boolean switchToPanel) {
    android.widget.Toast.makeText(this, ("" + switchToPanel), Toast.LENGTH_SHORT).show();
    if (switchToPanel) {
        mEmotionsEditText.clearFocus();
    }else {
        mEmotionsEditText.requestFocus();
    }
}

public static org.wordpress.android.ui.accounts.SignInDialogFragment newInstance(java.lang.String title, java.lang.String message, int imageSource, java.lang.String buttonLabel) {
    return org.wordpress.android.ui.accounts.SignInDialogFragment.newInstance(title, message, imageSource, 1, buttonLabel, "", "", 0, 0, 0, "", "");
}

@java.lang.Override
public boolean isViewFromObject(android.view.View view, java.lang.Object object) {
    return false;
}

@android.support.annotation.Nullable
@java.lang.Override
@android.support.annotation.CallSuper
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    final android.view.View fragmentView = inflater.inflate(getLayoutResource(), container);
    butterknife.ButterKnife.bind(fragmentView);
    return fragmentView;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), android.trikarya.sales_hisamitsu.DetailOutlet.class);
    intent.putExtra("kd_outlet", currentOutlet.getKode());
    startActivity(intent);
    this.finish();
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    if ((s.length()) > (len)) {
        setSelection(len);
    }else {
        setSelection(s.length());
    }
}

@java.lang.Override
public void post(final java.lang.Object event) {
    synchronized(me.sniggle.android.utils.otto.ActivatorBus.LOCK) {
        if (active) {
            postEvent(event);
        }else {
            eventCache.add(event);
        }
    }
}

public int getRadius(android.graphics.Rect rect) {
    return ((rect.right) - (rect.left)) / 2;
}

private void broadcastNumSteps() {
    android.content.Intent intent = new android.content.Intent(org.smcnus.irace_gaittester.Service.GaitAnalyzer.MSG_NUM_STEPS);
    intent.putExtra(org.smcnus.irace_gaittester.Service.GaitAnalyzer.MSG_NUM_STEPS, numSteps);
    android.util.Log.d(org.smcnus.irace_gaittester.Service.GaitAnalyzer.TAG, "found a step");
    android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
}

void onError(java.lang.Exception exception) {
    if ((handler) == null) {
        handleError(exception);
    }else {
        final android.os.Message message = handler.obtainMessage(FileDownloadStatus.error, exception);
        handler.sendMessage(message);
    }
}

public void thirdChoiceMade(android.view.View view) {
    (level_move)++;
    if ((this.result_choices[3]) == 3) {
        updateScore();
    }
    timer.cancel();
    newMove();
}

@java.lang.Override
public boolean isRunning() {
    return (com.github.ybq.android.spinkit.animation.AnimationUtils.isRunning(sprites)) || (com.github.ybq.android.spinkit.animation.AnimationUtils.isRunning(getAnimation()));
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    mCrime.setSolved(isChecked);
    mListener.onModelChangedCallback(mCrime.getId().toString());
    returnResult();
}

public int getRandomColor() {
    return android.graphics.Color.argb(255, 0, 0, 255);
}

@java.lang.Override
public void onStart() {
    super.onStart();
    android.util.Log.e("Test", "Start");
    progressDialog.setMessage("Loading dates from yahoo...");
    progressDialog.setCancelable(false);
    progressDialog.show();
}

@java.lang.Override
public boolean onInterceptTouchEvent(android.view.MotionEvent ev) {
    if (isSlide) {
        return true;
    }else {
        return super.onInterceptTouchEvent(ev);
    }
}

public void clearPins(android.view.View view) {
    Car = null;
    Person = null;
    mMap.clear();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle savedInstanceState) {
    savedInstanceState.putString(Constants.SavedInstanceState.Characters.LAST_ITEM_SEARCHED, java.lang.String.valueOf(searchView.getQuery()));
    super.onSaveInstanceState(savedInstanceState);
}

private int getPoiColorById(int id) {
    return android.graphics.Color.parseColor(CColor.POI_CIRCLES.get(id));
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.e(com.example.sdp11.wmd.MainActivity.TAG, "onDestroy");
    unbindService(mServiceConnection);
    com.example.sdp11.wmd.MainActivity.mBluetoothLEService = null;
    unregisterReceiver(mGattUpdateReceiver);
}

@java.lang.Override
public void onClick(android.view.View p1) {
    switch (Listener) {
        case "update" :
            dialog.dismiss();
            break;
        default :
            finish();
            break;
    }
}

@java.lang.Override
public void onLoadFinished(Loader<android.database.Cursor> loader, android.database.Cursor cursor) {
    cursor.moveToFirst();
    while (!(cursor.isAfterLast())) {
    } 
    adapter.swapCursor(cursor);
    adapter.notifyDataSetChanged();
}

@java.lang.Override
protected void onResume() {
    android.util.Log.v("here", "resuming");
    super.onResume();
    new com.jumboeats.kate.jumboeats.MainActivity.GetData(getApplicationContext()).execute();
}

protected synchronized void buildGoogleApiClient() {
    mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(getActivity()).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build();
    mGoogleApiClient.connect();
}

public void deleteFavoites(java.lang.String id) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    android.util.Log.e("deletefav", id);
    db.delete(com.projects.nosleepproject.data.ListingDbHelper.TABLE_NAME_FAVORITES, ((com.projects.nosleepproject.data.ListingDbHelper.COLUMN_ID) + "=?"), new java.lang.String[]{ id });
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    showUpdateFragment(participationArrayList.toArray(new soccer.gruppe5.at.soccerappapi.Data.Participation[participationArrayList.size()])[i]);
    return false;
}

private void addMarkersToMap(com.paranoidandroid.journey.models.Journey journey) {
    getMapViewFragment().addMarkersFromLegs(journey.getLegs());
}

@java.lang.Override
public void onSuccess(int statusCode, org.apache.http.Header[] headers, org.json.JSONObject jsonObject) {
    android.content.Intent intent = new android.content.Intent(this, com.codepath.apps.twitterzzz.activities.TimelineActivity.class);
    intent.putExtra("newTweet", newTweetContent);
    startActivity(intent);
}

@java.lang.Override
public void onAdClosed() {
    requestNewInterstitial();
    android.content.Intent intentStart = new android.content.Intent(getApplicationContext(), hantizlabs.jeuduroi.StartActivity.class);
    listeJoueurs.clearAllPlayers();
    startActivity(intentStart);
}

public void talk(java.lang.String aString) {
    android.util.Log.e(((getName()) + ": "), aString);
}

public void setClockAndDateWidth(int width, int mode) {
    mClockAndDateWidth = width;
    mCenterClock = (mode == (com.android.systemui.statusbar.policy.Clock.STYLE_CLOCK_CENTER)) && (enabled);
}

@java.lang.Override
public void run() {
    if (org.owntracks.android.support.Preferences.getEnableWidget())
        org.owntracks.android.services.ServiceProxy.getServiceApplication().requestWaypoints(c);
    
}

@java.lang.Override
public void onSurfaceChanged(javax.microedition.khronos.opengles.GL10 gl, int width, int height) {
    mRender.setViewSize(width, height);
    android.opengl.GLES20.glViewport(0, 0, width, height);
    super.onSurfaceChanged(gl, width, height);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_questao, container, false);
    butterknife.ButterKnife.bind(this, view);
    montarQuestao();
    adicionaCorAoRating();
    return view;
}

public void changeState(com.nusclimb.live.crimp.hello.scan.ScanFragment.State state) {
    if (DEBUG)
        android.util.Log.d(TAG, ((("Change state: " + (mState)) + " -> ") + state));
    
    mState = state;
    updateUI();
    doWork();
}

public void selectRecipeAtPosition(int position) {
    com.groupd.cookbook.objects.Recipe selected = RADP.getItem(position);
    android.widget.EditText editName = ((android.widget.EditText) (findViewById(R.id.recyTitle)));
    name = selected.getName();
}

@java.lang.Override
public boolean onDown(android.view.MotionEvent event) {
    android.util.Log.d(com.vitaminbacon.lockscreendialer.LockScreenActivity.MyGestureListener.TAG, ("onDown is " + (event.getY())));
    return true;
}

public static app.utils.DataCalculator getIntance(android.database.sqlite.SQLiteDatabase db) {
    if ((app.utils.DataCalculator.instance) == null) {
        return new app.utils.DataCalculator(db);
    }
    return app.utils.DataCalculator.instance;
}

@java.lang.Override
public com.mynanodegreeapps.bakingapp.widget.RemoteViewsFactory onGetViewFactory(android.content.Intent intent) {
    java.lang.System.out.println("--> onGetViewFactory ");
    return new com.mynanodegreeapps.bakingapp.widget.BakingAppRemoteViewFactory(this.getApplicationContext());
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    if ((currentTime) == (song.getSongDuration())) {
    }else {
        seekTo(currentTime);
    }
    updateSeekbar();
}

@java.lang.Override
public java.lang.Void apply(com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update) throws java.lang.Exception {
    if ((update.deleteRangeStart) != null) {
        bookmarksDBAdapter.replaceRecentRangeWithPage(update.deleteRangeStart, update.deleteRangeEnd, update.page);
    }else {
        bookmarksDBAdapter.addRecentPage(update.page);
    }
    return null;
}

void save(android.content.Context context) {
    ca.rmen.android.poetassistant.main.reader.PoemFile savedPoem = mPoemPrefs.getSavedPoem();
    ca.rmen.android.poetassistant.main.reader.PoemFile.save(context, savedPoem.uri, poem.get().toString(), mPoemFileCallback);
}

void initToolbar() {
    android.support.v7.app.ActionBar ab = getSupportActionBar();
    ab.setDisplayShowHomeEnabled(true);
    ab.setDisplayShowTitleEnabled(false);
    ab.setLogo(R.drawable.gwlogo);
}

@java.lang.Override
protected void onStart() {
    broadcastReceiver = new com.kiwi.flickrbatchdownload.photodetail.PhotoDetailAsyncTaskLoaderActivity.DownloadBroadcastReceiver();
    android.util.Log.d("Jane", "register Receiver");
    android.support.v4.content.LocalBroadcastManager.getInstance(this).registerReceiver(broadcastReceiver, new android.content.IntentFilter(com.kiwi.flickrbatchdownload.download.DownloadService.IMAGE_TASKINFO_SENDBACK_ACTION));
    super.onStart();
}

@java.lang.Override
public void onStop() {
    super.onStop();
    android.util.Log.v("2", "onStop");
    if (!(mRegisterReceiver)) {
        android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(mReceiver);
    }
}

private static native void naRenderAFrame(android.graphics.Bitmap _bitmap, int _zoomLevelUpdate, int _width, int _height, float _roiSh, float _roiSw, float _roiEh, float _roiEw);

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            helper.deleteSchedule(db, actName, hour, day, month, year);
            break;
        case android.content.DialogInterface.BUTTON_NEGATIVE :
            break;
    }
    showSchedule();
}

public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View root = inflater.inflate(R.layout.fragment_sound_dialog, container, false);
    return root;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (timerRunning) {
        startTimer();
    }else {
        stopTimer();
    }
}

@java.lang.Override
public void update(java.util.Observable observable, java.lang.Object o) {
    adapter.notifyDataSetChanged();
    android.util.Log.d("BundlesFragment", "Updating adapter");
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if (((java.lang.System.currentTimeMillis()) - (Main.lastPing)) > 60000) {
        me.johannesnz.smsim.Main.getInstance().connFail();
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    int value = numberPicker.getValue();
    mCallback.setServoInputPin(servoType, value);
    editText.setText(java.lang.String.valueOf(value));
    dialog.dismiss();
}

public void remove(android.content.ComponentName componentName, com.android.launcher3.compat.UserHandleCompat user) {
    synchronized(mCache) {
        mCache.remove(new com.android.launcher3.IconCache.CacheKey(componentName, user));
    }
}

public void jobDetails(android.view.View view) {
    if (!(currentJob.equals(com.example.phil.httppost.JobFeed.NO_JOBS_MSG))) {
        android.content.Intent intent = new android.content.Intent(this, com.example.phil.httppost.JobView.class);
        intent.putExtra("job", currentJob);
        startActivity(intent);
    }
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    latitude = location.getLatitude();
    longitude = location.getLongitude();
    android.util.Log.d("test", java.lang.String.valueOf(latitude));
}

public void onButtonClick(android.view.View v) {
    android.util.Log.e("ApplicationScreen", "onButtonClick");
    com.almalence.opencam.ApplicationScreen.getGUIManager().onButtonClick(v);
}

private void startPreview() {
    android.util.Log.w(org.thoughtcrime.securesms.components.camera.CameraView.TAG, "startPreview()");
    camera.startPreview();
    inPreview = true;
    getHost().autoFocusAvailable();
}

public static void getClientOrders(int page, android.content.Context context, retrofit.Callback<java.util.List<com.getataxi.mobiletaxi.comm.models.OrderDM>> callback) {
    com.getataxi.mobiletaxi.comm.RestClientManager.client.getOrdersService(com.getataxi.mobiletaxi.comm.RestClientManager.getAuthorisationHeaders(context)).getOrdersPage(page, callback);
}

private void increment() {
    android.util.Log.d("gemtest", "increment");
    if ((mListener) != null) {
        mListener.onRepeatUpdaterEvent(gemstone.gemster.RepeatUpdater.EventMode.EVENT_INCREMENT, null);
    }
}

@java.lang.Override
public void onBindViewHolder(com.example.android.popularmoviesapp.MovieAdapter.MovieViewHolder holder, int position) {
    com.example.android.popularmoviesapp.Movie movie = mMoviesList.get(position);
    holder.bind(movie);
    android.util.Log.d(com.example.android.popularmoviesapp.MovieAdapter.TAG, ("onBindViewHolder:#" + position));
}

public static java.lang.String getStringPreference(java.lang.String key) {
    android.util.Log.d("WorkXpFragment", ("LANGUE - getStringPreference lang: " + (com.sinfreu.marie.resume.singletons.App.getPreferences().getString(key, ""))));
    return com.sinfreu.marie.resume.singletons.App.getPreferences().getString(key, "");
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    im.vector.util.BugReporter.sendBugReportWithMail(currentActivity);
}

@java.lang.Override
public void onFailure(@android.support.annotation.NonNull
java.lang.Exception e) {
    android.widget.Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(v.getContext(), com.yask.android.photorocket.NewEventActivity.class).putExtra(Event.ID_TEXT, "");
    startActivity(i);
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    com.vincent.easymusic.EasyMusicMainActivity.mediaPlayer.start();
    com.vincent.easymusic.EasyMusicMainActivity.positionPlay = position;
    com.vincent.easymusic.EasyMusicMainActivity.isMusicPlaying = true;
    com.vincent.easymusic.EasyMusicMainActivity.setMusicViewInfos();
}

private android.app.AlertDialog getInfoAlertDialog(android.app.Activity activity) {
    if ((infoDialog) == null) {
        createInfoAlertDialog(activity);
    }
    return infoDialog;
}

private void iniciar_login() {
    android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
    ft.replace(R.id.container, py.com.puntofarma.deliverytracker30.Login.newInstance("", ""));
    ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
    ft.commit();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.os.Bundle extras = getIntent().getExtras();
    data_gender = extras.getString("gender");
    setContentView(R.layout.activity_registration_interests);
}

public boolean deleteTaskRow(java.lang.String where) {
    android.util.Log.v("TAG", ("DELETING " + where));
    return (mDb.delete(DatabaseContract.TasksContract.TABLE_NAME, where, null)) != 0;
}

public static android.net.wifi.WifiConfiguration createEapNetwork() {
    android.net.wifi.WifiConfiguration configuration = com.android.server.wifi.WifiConfigurationTestUtil.generateWifiConfig(com.android.server.wifi.WifiConfigurationTestUtil.TEST_NETWORK_ID, com.android.server.wifi.WifiConfigurationTestUtil.TEST_UID, com.android.server.wifi.WifiConfigurationTestUtil.createNewSSID(), true, true, com.android.server.wifi.WifiConfigurationTestUtil.TEST_FQDN, com.android.server.wifi.WifiConfigurationTestUtil.TEST_PROVIDER_FRIENDLY_NAME, com.android.server.wifi.WifiConfigurationTestUtil.SECURITY_EAP);
    return configuration;
}

private void startCamera() {
    if ((camera) != null) {
        stopCamera();
    }
    camera = android.hardware.Camera.open(cameraId);
    startCameraPreview();
}

protected void addFilter(com.raizlabs.android.coreutils.functions.Predicate<T> filter) {
    this.filters.addPredicate(true, filter);
    update();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    app = com.defch.blogwbly.MyApplication.getInstance(getActivity());
    theme = app.getWTheme();
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    com.xiaolei.easyfreamwork.utils.Log.d(TAG, ((this.getClass().getName()) + ":onActivityCreated"));
    handler = new android.os.Handler();
    onSetContentView();
    super.onActivityCreated(savedInstanceState);
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.Process.killProcess(java.lang.Process.myPid());
    finish();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_game);
    com.ruinkami.overrider.view.GameView mv = new com.ruinkami.overrider.view.GameView(this);
    android.widget.LinearLayout.LayoutParams lp = new android.widget.LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);
    addContentView(mv, lp);
}

protected void showAddContactDialog(java.lang.String qrCodeData) {
    try {
        org.json.JSONObject jsonObject = new org.json.JSONObject(qrCodeData);
        showAddContactDialog(jsonObject);
    } catch (org.json.JSONException e) {
        android.widget.Toast.makeText(mContext, "Error : Malformed QR code data", Toast.LENGTH_LONG).show();
    }
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putInt("CurrentPosition", this.currentP);
}

@java.lang.Override
public void onLongClick(android.view.View view, int position) {
    mCategory = mCategoriesList.get(position);
    mCallback.onCategorySelected(mCategory);
}

@butterknife.OnClick(value = R.id.button2)
public void clickedBt(android.view.View view) {
    sp.stop(SOUND_ID);
    finish();
    return ;
}

public void onClick(android.content.DialogInterface dialog, int id) {
    clickCancel(dialog, id);
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (hasFocus) {
        eventExec(nameEditText, nameClickList, "lastName");
    }else {
        nameEditText.setHint("");
    }
}

@java.lang.Override
protected void attachBaseContext(android.content.Context base) {
    super.attachBaseContext(base);
    android.support.multidex.MultiDex.install(base);
    com.tencent.bugly.beta.Beta.installTinker();
}

public android.graphics.Bitmap getIcon(android.content.res.Resources res) {
    return null;
}

@java.lang.Override
public int getCount() {
    android.content.SharedPreferences sharedPref = mContext.getSharedPreferences("Ride_id", Context.MODE_PRIVATE);
    int temp = sharedPref.getInt("ride_id", 1);
    return temp;
}

public void setRotation(int index, jp.co.cyberagent.android.gpuimage.Rotation rotation) {
    rotations[index] = rotation;
    adjustImageScaling(index);
}

@java.lang.Override
public void onSuccess(android.graphics.Bitmap image) {
    ((android.widget.ImageView) (view.findViewById(R.id.addImg))).setImageBitmap(android.graphics.Bitmap.createScaledBitmap(image, image.getWidth(), 180, false));
    oldImageBitmap = image;
}

@java.lang.Override
public void run() {
    setPaddingBottom();
    android.util.Log.d("paddingbottom final", java.lang.Integer.toString(mACA.mListFragment.mRView.getPaddingBottom()));
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    if (actionBar != null) {
        outState.putString(com.valevich.moneytracker.ui.activities.MainActivity.TOOLBAR_TITLE_KEY, java.lang.String.valueOf(actionBar.getTitle()));
    }
    super.onSaveInstanceState(outState);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.jackleeentertainment.testrecyclerviewproject.MainActivity.initFbaseDatabase();
    com.jackleeentertainment.testrecyclerviewproject.MainActivity.initFbaseDatabaseRef();
    setContentView(R.layout.activity_main);
}

@java.lang.Override
public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo outAttrs) {
    final android.view.inputmethod.InputConnection ic = super.onCreateInputConnection(outAttrs);
    inputConnectionHacker = new com.jecelyin.editor.v2.widget.text.InputConnectionHacker(ic);
    return inputConnectionHacker;
}

@java.lang.Override
protected void onPostExecute(java.lang.Void aVoid) {
    super.onPostExecute(aVoid);
    android.support.design.widget.Snackbar.make(view, "Reported!", android.support.design.widget.Snackbar.LENGTH_SHORT).show();
    callBack.completed();
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    android.support.v7.app.ActionBar actionBar = ((android.support.v7.app.AppCompatActivity) (context)).getSupportActionBar();
    if (actionBar != null) {
        actionBar.setDisplayHomeAsUpEnabled(true);
    }
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.d(Constants.TAG, "New Order successfully created on the server.");
    mainActivity.replaceFragment(R.id.fragment_verifying_order_textview1, null);
    mainActivity.getActivityHelper().closeLoadingBar();
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if ((resultCode == (RESULT_OK)) && (requestCode == (etec.coda_softwares.meupdv.Caixa.REQ_CAIXA))) {
        finish();
    }
}

public void start() {
    android.util.Log.d(TagConstants.TAG, "play");
    if (!(mediaPlayer.isPlaying())) {
        mediaPlayer.start();
    }
}

public void onClick(com.example.utente.calcolaorauscita.DialogInterface dialog, int which) {
    if (which == (DialogInterface.BUTTON_NEGATIVE)) {
        timePickerChoseTime = false;
        android.util.Log.v("", "Annullato il timepicker");
    }
}

public void moveGPSScreen() {
    android.content.Intent gpsOptionsIntent = new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
    startActivity(gpsOptionsIntent);
}

public com.github.jorgecastilloprz.FABProgressCircle withArcColor(@android.support.annotation.ColorInt
int arcColor) {
    this.arcColor = arcColor;
    progressArc.setArcColor(arcColor);
    return this;
}

protected void bindImpl() {
    getContext().bindService(createServiceIntent().setAction(IpcConstant.ACTION_MESSAGE_SERVICE), (mMessageServiceConn = new com.heaven7.android.ipc.RemoteMessageContext.MessageServiceConnectionImpl()), Context.BIND_AUTO_CREATE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent startNewActivity = new android.content.Intent(getApplicationContext(), com.example.danielfox.foodchoices.NewVisit.class);
    startNewActivity.putExtra("name", username);
    startNewActivity.putExtra("userID", userID);
    startActivity(startNewActivity);
    finish();
}

public void setTintColor(int color) {
    setColorFilter(android.support.v4.content.ContextCompat.getColor(getContext(), color));
}

public void playInterstitial2(android.view.View v) {
    if (tv.superawesome.sdk.views.SAInterstitialAd.hasAdAvailable(418)) {
        tv.superawesome.sdk.views.SAInterstitialAd.play(418, this);
    }
}

private java.io.File getStorageDir() {
    java.io.File dir = new java.io.File(android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS), "TestApp");
    if (!(dir.mkdirs()))
        android.util.Log.e(ubcorbit.org.testapp.services.FileAppenderService.TAG, "storage directory not created");
    
    return dir;
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    refreshViews();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.support.v4.media.session.MediaButtonReceiver.handleIntent(mediaSession, intent);
    handleIntent(intent);
    return super.onStartCommand(intent, flags, startId);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedState) {
    super.onCreate(savedState);
    android.util.Log.v(biz.stratadigm.tpi.presenter.VenuesPresenter.TAG, "VenuesPresenter: onCreate");
    executeRequest(venuesInteractor.getVenues(0), new biz.stratadigm.tpi.presenter.VenuesPresenter.VenuesSubscriber());
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    com.example.liaohaicongsx.coc.AppActivityManager.getAppActivityManager().clear();
    java.lang.System.exit(1);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putInt("active_view", mCurrentView);
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    updateList(this.searchString);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((view.getId()) == (R.id.scan_button)) {
        starthack.fridgetogo.com.google.zxing.integration.android.IntentIntegrator scanIntegrator = new starthack.fridgetogo.com.google.zxing.integration.android.IntentIntegrator(((android.app.Fragment) (this)));
        scanIntegrator.initiateScan();
    }
}

@java.lang.Override
public void onPageScrollStateChanged(int state) {
    if ((mListener) != null)
        mListener.onPageScrollStateChanged(state);
    
    if (state == (android.support.v4.view.ViewPager.SCROLL_STATE_IDLE))
        mIsClick = false;
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    butterknife.ButterKnife.bind(this);
    android.content.Intent mapIntent = new android.content.Intent(this, com.ideal.apps.ici.PlaceActivity.class);
    startActivity(mapIntent);
}

public boolean isChromeGoogleSigned(android.content.Context context) {
    return isGoogleSigned(context.getApplicationContext().getPackageManager(), context.getPackageName());
}

@org.xwalk.core.internal.XWalkAPI
public boolean saveS1938f4747a1fbdc1b76da3a6c9fc995195c6e74ftate(android.os.Bundle outState) {
    if ((mContent) == null)
        return false;
    
    mContent.saveState(outState);
    return true;
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    android.widget.Toast.makeText(context, error.getMessage(), Toast.LENGTH_SHORT).show();
    android.util.Log.e("Volley", error.getMessage());
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((onStreamInfoItemSelectedListener) != null) {
        onChannelInfoItemSelectedListener.selected(info.serviceId, info.getLink(), info.channelName);
    }
}

public void nextPage(android.view.View view) {
    if ((com.example.kelvin_pc.film.Model.System.System_Variables.PAGE_NUMBER) != (com.example.kelvin_pc.film.Model.System.System_Variables.PAGE_THRESH))
        com.example.kelvin_pc.film.Model.System.System_Variables.PAGE_NUMBER = (com.example.kelvin_pc.film.Model.System.System_Variables.PAGE_NUMBER) + 1;
    
    generateFilmQuery();
}

private void setupToolbar() {
    setSupportActionBar(mToolbar);
    android.support.v7.app.ActionBar ab = getSupportActionBar();
    ab.setDisplayHomeAsUpEnabled(true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    setBackgroundColorForLayout(listColor.get(0), dialog);
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    displayErrorMessage(parseResponse(error));
}

@java.lang.Override
@android.support.annotation.CallSuper
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.d(com.nichesoftware.giftlist.views.BaseActivity.TAG, "onCreate");
    com.nichesoftware.giftlist.views.BaseActivity.setContentView(getContentView());
    initView();
    initPresenter();
}

private void updatePosters() {
    com.example.akgul.movies_application.MainActivityFragment.FetchMovieTask fetchMovieTask = new com.example.akgul.movies_application.MainActivityFragment.FetchMovieTask();
    android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity());
    java.lang.String sortType = null;
    sortType = sharedPreferences.getString("order", "popularity.desc");
    fetchMovieTask.execute(sortType);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked && (checkAndAskForContactsReadPermission(PermissionUtil.PERMISSIONS_READ_CONTACTS_AUTOMATIC))) {
        setAutomaticBackup(true);
    }else {
        setAutomaticBackup(false);
    }
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.d(MovieApplication.TAG, ((com.example.vit.popularmovies.ui.fragment.MoviesGridFragment.CLASS) + "onPause()"));
}

@java.lang.Override
public void onClick(android.view.View v) {
    validateCredentials(username.get(), password.get());
}

@butterknife.OnClick(value = R.id.txt_accept)
public void accept(android.view.View view) {
    android.widget.Toast.makeText(getActivity(), "Congrats!", Toast.LENGTH_SHORT).show();
    com.examples.ankit.breakpoint.prefences.MyPreferenceManager.setUserConsent(true);
    if ((mListener) != null) {
        mListener.onAgreementAccepted(true);
    }
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    searchInput = searchMovieView.getText().toString().toLowerCase(java.util.Locale.getDefault());
    movieListAdapter.filter(searchInput, chosenCategory);
}

private void startContentAnimation() {
    btnCreate.animate().translationY(0).setInterpolator(new android.view.animation.OvershootInterpolator(1.0F)).setStartDelay(300).setDuration(com.rolling.ten_thousand_hours.instamaterial.activity.MainActivity.ANIM_DURATION_FAB).start();
    feedAdapter.updateItems();
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    android.util.Log.i("myMapFragment", "onViewCreated");
    com.example.patrick.myapplication.view.MyMapFragment.GetNodeListTask getNodeListTask = new com.example.patrick.myapplication.view.MyMapFragment.GetNodeListTask();
    getNodeListTask.execute();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_firstbundle);
    android.widget.Toast.makeText(this, "this is aaaaaaaaaa  newnewnenenwn bundle", Toast.LENGTH_SHORT).show();
}

@butterknife.OnClick(value = R.id.btnUploadPicture)
public void uploadImage() {
    com.androidapp.network.Items items = new com.androidapp.network.Items(this);
    items.getItemList("getItemList", token);
    items.addImage("", token, android.net.Uri.parse(filePath), idItem);
}

private boolean resetKeyEventEventFlag(final int flag) {
    org.deviceconnect.android.deviceplugin.sw.profile.SWKeyEventProfile.sFlagKeyEventEventManage &= ~flag;
    return (org.deviceconnect.android.deviceplugin.sw.profile.SWKeyEventProfile.sFlagKeyEventEventManage) == 0;
}

@java.lang.Override
public void onChildAdded(com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s) {
    android.util.Log.d(com.pajato.android.gamechat.database.handler.MessagesChangeHandler.TAG, java.lang.String.format(java.util.Locale.US, com.pajato.android.gamechat.database.handler.MessagesChangeHandler.LOG_FORMAT, "onChildAdded", dataSnapshot, s));
    process(dataSnapshot, true, com.pajato.android.gamechat.event.MessageChangeEvent.NEW);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_custom_view, container, true);
    return view;
}

public static boolean getAllowAdvancedData(android.content.SharedPreferences settings) {
    boolean mDefault = false;
    if (com.paulvarry.intra42.Tools.AppSettings.Advanced.getAllowAdvanced(settings))
        return settings.getBoolean(com.paulvarry.intra42.Tools.AppSettings.Advanced.PREFERENCE_ADVANCED_ALLOW_DATA, false);
    else
        return false;
    
}

@java.lang.Override
public void run() {
    try {
        controller.sendString(cmd, withRetries);
    } catch (java.lang.Exception e) {
        android.util.Log.w(de.hhn.munz.ardrone2.ControlActivity.TAG, e.getMessage());
    }
}

protected void AllocateCache() {
    mCacheBitmap = android.graphics.Bitmap.createBitmap(mFrameWidth, mFrameHeight, Bitmap.Config.ARGB_8888);
}

public void addControl(it.geosolutions.android.map.control.MapControl m) {
    controls.add(m);
    android.util.Log.v("CONTROL", ("total controls:" + (controls.size())));
}

@java.lang.Override
protected void onPostExecute(java.lang.String s) {
    super.onPostExecute(s);
    android.widget.Toast.makeText(this, s, Toast.LENGTH_SHORT).show();
}

private void components() {
    mainText = ((android.widget.TextView) (rootView.findViewById(R.id.unlockTextView)));
    mainText.setText("amitai");
}

public static void navigation() {
    android.widget.TextView tv = new android.widget.TextView(null);
    meng.animtest.asdemo.BasicShortcutsDemo.testListener.onEvent();
}

@java.lang.Override
public void onClick(android.view.View view) {
    mMapFragment.showAllFloors();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(getApplicationContext(), "Favoris", Toast.LENGTH_SHORT).show();
    drawerLayout.closeDrawer(Gravity.LEFT);
}

@java.lang.Override
public void getItemOffsets(android.graphics.Rect outRect, android.view.View view, android.support.v7.widget.RecyclerView parent, android.support.v7.widget.RecyclerView.State state) {
    outRect.bottom = mSpaceHeight;
    outRect.top = mSpaceHeight;
    outRect.left = mSpaceHeight;
    outRect.right = mSpaceHeight;
}

public void setLeftOuterView(android.view.View view) {
    mLeftOuterView = view;
    if ((mLeftOuterView) != null) {
    }
}

public void removeTile(android.content.ComponentName tile) {
    java.util.List<java.lang.String> newSpecs = new java.util.ArrayList<>(mTileSpecs);
    newSpecs.remove(com.android.systemui.qs.external.CustomTile.toSpec(tile));
    changeTiles(mTileSpecs, newSpecs);
}

@java.lang.Override
public android.os.Parcelable onSaveInstanceState() {
    super.onSaveInstanceState();
    if ((mRecyclerView) != null) {
        return mRecyclerView.getLayoutManager().onSaveInstanceState();
    }
    return null;
}

@java.lang.Override
public void onActivityStarted(android.app.Activity activity) {
    if (activity instanceof com.example.alex.motoproject.screenMain.MainActivity) {
        mMainActivityVisible = true;
        android.widget.Toast.makeText(this, "Started", Toast.LENGTH_SHORT).show();
    }
}

public final android.content.res.Resources.Theme newTheme() {
    android.content.res.Resources.Theme theme = new android.content.res.Resources.Theme();
    theme.setImpl(mResourcesImpl.newThemeImpl());
    mThemeRefs.add(new java.lang.ref.WeakReference<>(theme));
    return theme;
}

public android.database.Cursor swapCursor(android.database.Cursor cursor) {
    if ((mCursor) == cursor)
        return null;
    
    android.database.Cursor tempCursor = mCursor;
    mCursor = cursor;
    if (cursor != null)
        this.notifyDataSetChanged();
    
    return tempCursor;
}

private void showDocument(@android.support.annotation.NonNull
android.net.Uri documentUri, @android.support.annotation.NonNull
final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration, @android.support.annotation.Nullable
final java.lang.String password, @android.support.annotation.NonNull
final org.apache.cordova.CallbackContext callbackContext) {
    showDocumentForUri(documentUri, configuration, password);
    callbackContext.success();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.net.Uri uri = null;
    uri = android.net.Uri.fromFile(photo[0]);
    captureImage.putExtra(MediaStore.EXTRA_OUTPUT, uri);
    startActivityForResult(captureImage, ggr.tpl7.AthleteFragment.REQUEST_PHOTO);
}

@java.lang.Override
public void finishUpdate(android.view.View view) {
    java.lang.System.err.println("UpdateView");
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    UI.updateUI(this);
    android.util.Log.d("mainactivity", "onCreate");
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.d("LoginActivity", "Clear Calendar from database success");
    saveCalendarToDatabase();
}

@java.lang.Override
public void onScrolled(android.support.v7.widget.RecyclerView recyclerView, int dx, int dy) {
    super.onScrolled(recyclerView, dx, dy);
    java.lang.System.out.println("szw onScrolled()");
    rvOther.scrollBy(dx, dy);
}

private void afterSetContentView(android.view.View v) {
    mView = v;
    init(v);
    if ((mLoadingView) != null) {
        mLoadingView.register(this);
    }
}

@java.lang.Override
public void categoryChanged(int activePosition) {
    android.util.Log.d(com.shakenbeer.babalex.MainActivity.TAG, ("categoryChanged: " + activePosition));
    categoriesManager.onCategoryChanged(activePosition);
    categoryAdapter.setSelected(activePosition);
    showNextCategoryText();
}

public void setTitle(java.lang.CharSequence title, android.widget.TextView.BufferType bufferType) {
    if (title != null) {
        mTitleView.setText(title);
        mTitleView.setVisibility(edu.mit.mitmobile2.VISIBLE);
    }else {
        mTitleView.setVisibility(edu.mit.mitmobile2.GONE);
    }
}

private void init(android.content.Context context) {
    inflate(context, R.layout.comm_view_search_edittext, null);
    initView();
}

private void restartActivity() {
    android.content.Intent intent = getIntent();
    finish();
    startActivity(intent);
}

private java.lang.CharSequence getDOW(int position) {
    int todayDOW = java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_WEEK);
    return io.github.dramaapppj.android.controller.activity.current.CurrentPagerAdapter.WEEK_NAME[(((todayDOW - 1) + (7 - position)) % 7)];
}

@java.lang.Override
public void onClick(android.view.View v) {
    int position = getAdapterPosition();
    android.support.design.widget.Snackbar.make(v, ("Click detected on item " + position), Snackbar.LENGTH_LONG).setAction("Action", null).show();
}

private void drawJustified(android.graphics.Canvas canvas) {
    drawJustified(canvas, this.getLayout());
}

@java.lang.Override
public void run() {
    android.widget.ArrayAdapter<java.lang.CharSequence> adapter = android.widget.ArrayAdapter.createFromResource(getBaseContext(), R.array.activities, android.R.layout.simple_spinner_item);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    spinner.setAdapter(adapter);
}

@android.annotation.SystemApi
public boolean getDataEnabled() {
    try {
        return getITelephony().getDataEnabled();
    } catch (android.os.RemoteException e) {
        android.util.Log.e(android.telephony.TelephonyManager.TAG, "Error calling ITelephony#getDataEnabled", e);
    }
    return false;
}

public void logoutUser() {
    session.setLogin(false);
    db.deleteUsers();
    android.content.Intent intent = new android.content.Intent(this, app.com.cvjuanresume.juansandoval.cvjuanresume.LoginActivity.class);
    finish();
    startActivity(intent);
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    com.azi.tethermote.SwitchNotification.Check(this, ((com.azi.tethermote.WirelessTools.getRemoteTetherState(this)) != (WirelessTools.TETHERING_ENABLED)));
}

@java.lang.Override
public void onGastosFavoritosItemSelected(java.lang.String id) {
    android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
}

@java.lang.Override
public void onGroupSelected(java.lang.String groupName, java.lang.String groupOrder) {
    android.util.Log.i(com.github.charmasaur.alpsinsects.ui.MainActivity.TAG, ("Group selected: " + groupName));
    fragmentController.pushFragment(groupName, null, com.github.charmasaur.alpsinsects.ui.fragments.GroupFragment.newInstance(groupOrder), "GROUP", 4);
}

@java.lang.Override
public boolean onTouchEvent(final android.view.MotionEvent ev) {
    return (!(lockMode.allowsTouch())) || (super.onTouchEvent(ev));
}

@retrofit2.http.GET(value = "good_deals/{id}")
io.reactivex.Observable<im.goody.android.data.dto.Deal> getDeal(@retrofit2.http.Path(value = "id")
long id);

public void executeAudioCallBack() {
    try {
        this.interpreter.eval(audioCallBack);
    } catch (bsh.EvalError e) {
        au.org.intersect.faims.android.log.FLog.e("error when executing the callback for the audio", e);
    }
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    mp.seekTo(((mp.getCurrentPosition()) - 1));
    mp.pause();
}

@java.lang.Override
public void doCommand() {
    for (com.google.maps.android.geojson.GeoJsonFeature feature : addList) {
        geoJsonLayer.addFeature(feature);
    }
    for (com.google.maps.android.geojson.GeoJsonFeature feature : removeList) {
        geoJsonLayer.removeFeature(feature);
    }
}

@java.lang.Override
public void onResult(com.google.android.gms.common.api.Status result) {
    if (!(result.isSuccess())) {
        callback.onSuccess();
    }else {
        callback.onError(result.toString());
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton compoundButton, boolean b) {
    c.setData(b);
    android.util.Log.e(io.github.sdsstudios.ScoreKeeper.Activity.TAG, "onCheckedChanged");
    saveGameToDatabase();
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName name, android.os.IBinder service) {
    uni_spacestudio.blueconsole.BluetoothCommService.BluetoothCommBinder binder = ((uni_spacestudio.blueconsole.BluetoothCommService.BluetoothCommBinder) (service));
    bluetoothService = binder.getService();
    binder.setHandler(bluetoothCommHandler);
}

@java.lang.Override
public void onReceivedIcon(android.webkit.WebView view, android.graphics.Bitmap icon) {
    mWebChromeClient.onReceivedIcon(view, icon);
}

public int increasePrice(int oldPrice, int upgradeAmount) {
    int newPrice = oldPrice * (2 * upgradeAmount);
    android.util.Log.d("Test 2", ("" + upgradeAmount));
    return newPrice;
}

@java.lang.Override
public void onDestroyActionMode(android.view.ActionMode mode) {
    android.util.Log.d(com.bruyu.imagewalker.LimitedGridActivity.TAG, "call onDestroyActionMode() ");
    mode.finish();
    inActionMode = false;
    mGrid.setChoiceMode(GridView.CHOICE_MODE_SINGLE);
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    switch (msg.what) {
        case com.apps.gabothekiller.debaterbluetooth.MainActivity.SUCCESS_CONNECT :
            android.widget.Toast.makeText(this, "CONNECT", Toast.LENGTH_SHORT).show();
            break;
    }
}

@java.lang.Override
public void showMessage(java.lang.String message) {
    android.widget.Toast.makeText(getContext(), message, Toast.LENGTH_SHORT).show();
}

public sumimakito.android.quickkv.database.QKVCallback cbkFailed(java.lang.String msg) {
    return this.isCallbackEnabled ? new sumimakito.android.quickkv.database.QKVCallback(false, QKVCallback.CODE_FAILED, msg) : null;
}

private android.bluetooth.BluetoothGattService getMiliService() {
    if (!(setupComplete))
        setupBluetooth();
    
    return mGatt.getService(MiBandConstants.UUID_SERVICE_MILI_SERVICE);
}

@java.lang.Override
public void onDestroy() {
    if (co.smartreceipts.android.BuildConfig.DEBUG) {
        android.util.Log.d(co.smartreceipts.android.fragments.TripFragment.TAG, "onDestroy");
    }
    getPersistenceManager().getDatabase().unregisterTripRowListener(this);
    super.onDestroy();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this.getBaseContext(), com.snippet.snippet.view.UntaggedPhotosActivity.class);
    intent.putExtra(UntaggedPhotosActivity.pathsExtraKey, paths);
    startActivity(intent);
}

@java.lang.Override
public void newTrackClicked(int selectedTrack) {
    android.util.Log.v(au.com.kbrsolutions.spotifystreamer.activities.SpotifyStreamerActivity.LOG_TAG, "newTrackClicked - start");
    showPlayerController(selectedTrack);
}

public void onClick(android.view.View v) {
    android.content.Intent nextActivity = new android.content.Intent(this, com.turboocelots.oasis.controllers.WelcomeActivity.class);
    nextActivity.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    nextActivity.putExtra("CurrentUser", currentUser.getUsername());
    startActivity(nextActivity);
}

private void activateView(android.view.View parent) {
    for (android.view.View foo : spinnerPlayers.getTouchables()) {
        foo.setClickable(true);
        foo.setEnabled(true);
    }
    parent.setEnabled(true);
}

public static void setBitmapToMemoryCache(java.lang.String key, android.graphics.Bitmap bitmap) {
    if ((nigelhenshaw.com.cameraintenttutorial.CamaraIntentActivity.getBitmapFromMemoryCache(key)) == null) {
        nigelhenshaw.com.cameraintenttutorial.CamaraIntentActivity.mMemoryCache.put(key, bitmap);
    }
}

private boolean isTripSet() {
    if (((origAbbr) == null) || ((destAbbr) == null)) {
        android.widget.Toast.makeText(this, "Please select stations in the trip planner.", Toast.LENGTH_SHORT).show();
        return false;
    }
    return true;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    myTimer.stop();
    dialogInterface.dismiss();
    android.widget.Toast.makeText(this, "Timer stopped.", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int swipeDir) {
    int position = viewHolder.getAdapterPosition();
    mProductAdapter.removeAt(position);
    mProducts.remove(position);
    mRetainedFragment.setProducts(mProducts);
}

@android.annotation.SuppressLint(value = "ShowToast")
@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_setting :
            android.widget.Toast.makeText(this, "setting", Toast.LENGTH_SHORT);
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.SuppressWarnings(value = "deprecation")
public android.content.Intent createShareIntent(java.lang.String shareText) {
    android.content.Intent shareIntent = new android.content.Intent(android.content.Intent.ACTION_SEND);
    shareIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
    shareIntent.setType("text/plain");
    shareIntent.putExtra(Intent.EXTRA_TEXT, shareText);
    return shareIntent;
}

public void refreshListUI(java.util.List<com.example.administrator.leehom.model.MusicModel> modelList) {
    android.util.Log.i(com.example.administrator.leehom.fragment.MainFragment.TAG, ("refreshListUI modelList :" + modelList));
    if (com.example.administrator.leehom.utils.Utils.checkNull(mFragmentAdapter)) {
        mFragmentAdapter.updataRefresh(modelList);
    }
}

public void autoUpButton(android.app.ActionBar actionBar) {
    (this.actionBar = actionBar).setDisplayHomeAsUpEnabled(false);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View mainView = inflater.inflate(getLayoutResId(), container, false);
    butterknife.ButterKnife.bind(this, mainView);
    return mainView;
}

protected int getErrorCode(final android.content.Intent response) {
    int errorCode = response.getIntExtra(DConnectMessage.EXTRA_ERROR_CODE, DConnectMessage.ErrorCode.UNKNOWN.getCode());
    return errorCode;
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            onBackPressed();
            break;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mRackets = com.plew.android.simpleracketdb.RacketList.get(getActivity()).getRackets();
    getActivity().setTitle("Racket List");
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onClickBtnOK(android.view.View v) {
    mDBHelper.deleteUser(mUsers.get(mPosition));
    mUsers.remove(mPosition);
    notifyDataSetChanged();
    dialog.dismiss();
}

@java.lang.Override
protected void onDestroy() {
    unregisterBroadCastReceivers();
    if (isFinishing()) {
        stopService(new android.content.Intent(this, de.roughriders.jf.eta.services.DistanceNotificationService.class));
        de.roughriders.jf.eta.helpers.Logger.getInstance().close();
    }
    super.onDestroy();
}

private boolean gitRepoIsClean() {
    try {
        com.orgzly.android.git.Status status = git.status().call();
        return status.hasUncommittedChanges();
    } catch (org.eclipse.jgit.api.errors.GitAPIException e) {
        return false;
    }
}

public android.database.Cursor select(java.lang.String query) {
    return mDB.rawQuery(query, null);
}

public void showRateDay(android.view.View view) {
    hirondelle.date4j.DateTime today = hirondelle.date4j.DateTime.today(java.util.TimeZone.getDefault());
    showRateDayPopup(today);
}

public void initHeroesBasicsLocally(android.content.Context context) throws java.io.IOException {
    java.io.InputStream inputStream = context.getResources().openRawResource(R.raw.heroesjson);
    initHeroesBasics(inputStream);
}

public static java.util.ArrayList<ca.ualberta.cs.expensemaster.Claim> getClaimsList(android.content.Context ctx) {
    if ((ca.ualberta.cs.expensemaster.ExpenseMasterApplication.claims) == null) {
        ca.ualberta.cs.expensemaster.ExpenseMasterApplication.claims = new ca.ualberta.cs.expensemaster.ClaimsList();
        ca.ualberta.cs.expensemaster.ExpenseMasterApplication.loadFromFile(ctx);
    }
    return ca.ualberta.cs.expensemaster.ExpenseMasterApplication.claims.getClaims();
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    java.lang.String timerMessage = "" + (msg.obj);
    tvTimer.setText(timerMessage);
}

@java.lang.Override
public void onFocusChanged(boolean gainFocus, int direction, android.graphics.Rect previouslyFocusedRect) {
    super.onFocusChanged(gainFocus, direction, previouslyFocusedRect);
    org.mozilla.gecko.GeckoAccessibility.onLayerViewFocusChanged(this, gainFocus);
}

public static java.lang.String getSeparatorTime(@android.support.annotation.Nullable
android.content.res.Resources resources, org.threeten.bp.LocalDateTime now, org.threeten.bp.LocalDateTime then, boolean is24HourFormat, org.threeten.bp.ZoneId timeZone, boolean epocIsJustNow) {
    return com.waz.zclient.utils.ZTimeFormatter.getSeparatorTime(resources, now, then, is24HourFormat, timeZone, epocIsJustNow, true);
}

@java.lang.Override
protected java.lang.String doInBackground(java.lang.String... strings) {
    mFileContents = downloadXMLFile(params[0]);
    if ((mFileContents) == null) {
        android.util.Log.d("DownloadData", "Error downloading");
    }
    return mFileContents;
}

private com.orgzly.android.repos.VersionedRook currentVersionedRook(com.orgzly.android.repos.VersionedRook last) throws java.io.IOException {
    org.eclipse.jgit.revwalk.RevCommit newCommit = synchronizer.currentHead();
    return new com.orgzly.android.repos.VersionedRook(last, newCommit.toString(), newCommit.getCommitTime());
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    android.widget.Toast.makeText(this, query, Toast.LENGTH_SHORT).show();
    mAdapter = new com.mynotes.android.mynotes.NotesAdapter(this, query, this);
    mRecyclerView.setAdapter(mAdapter);
    return false;
}

@java.lang.Override
public void OnRingtoneSelected(java.lang.String ringtoneName, android.net.Uri ringtoneUri) {
    alarm.setAlarmTonePath(ringtoneUri.getPath());
    alarm.setAlarmToneName(ringtoneName);
    text2.setText(ringtoneName);
    setMathAlarm(alarm);
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    mActivity = ((com.xhy.weibo.ui.activity.StatusDetailActivity) (activity));
    ((com.xhy.weibo.ui.activity.StatusDetailActivity) (activity)).setmHandler(mHandler);
}

@java.lang.Override
public void onGPSConnect(com.example.user01.planit.GPSEvent e) {
    if (requestingLocationUpdates) {
        android.widget.Toast.makeText(this, "Begin location updates", Toast.LENGTH_SHORT).show();
        gps.startLocationUpdates();
        currLocation = e.getLocation();
    }
}

public com.github.javiersantos.bottomdialogs.BottomDialog.Builder setNegativeText(@android.support.annotation.StringRes
int buttonTextRes) {
    setPositiveText(this.context.getString(buttonTextRes));
    return this;
}

private void logInfo(java.lang.String message) {
    android.util.Log.i(jp.straylight.scannerapp.ScanResultsReporter.TAG, message);
    listener.onReport(message);
}

@com.taobao.weex.ui.component.WXComponentProp(name = "size")
public void setTextSizeValue(int size) {
    ((android.widget.TextView) (mHost)).setTextSize(size);
}

@java.lang.Override
public void onClick(android.view.View v) {
    getFragmentManager().popBackStack();
    getActivity().setTitle(getString(R.string.app_name));
}

@java.lang.Override
public void rowSelected(mobileoak.volleyballtracker.model.Player player) {
    android.util.Log.d("tag", ("Called with player " + (player.getName())));
    mPlayerName.setText(player.getName());
}

public void tryToEnableBluetooth() {
    android.util.Log.d("BT", "tryToEnableBluetooth");
    if (!(mBluetoothAdapter.isEnabled())) {
        android.content.Intent enableBluetooth = new android.content.Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE);
        owner.startActivityForResult(enableBluetooth, 0);
    }
}

protected void onPostExecute(java.lang.Void aVoid) {
    android.util.Log.i("System.out", ("Size is " + (ambiesoft.start.fragment.GoogleMapFragment.artworks.size())));
    ambiesoft.start.fragment.GoogleMapFragment.artworkArrayListCreatedBefore = true;
    drawArtworksMarker();
}

public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<java.lang.Void> task) {
    startActivity(new android.content.Intent(this, com.example.adityadesai.cng.Activities.ChooseActivity.class));
    finish();
}

@java.lang.Override
public void loadImage(android.widget.ImageView imageView, java.lang.String url, int index) {
    com.bumptech.glide.Glide.with(this).load(url).into(imageView);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View v = inflater.inflate(R.layout.fragment_parcourt_list_fresque_bd, container, false);
    initParcourt();
    initFragment();
    return v;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    koofService = org.bosik.diacomp.android.backend.common.Storage.getKoofService(getContentResolver());
}

protected void onStop() {
    super.onStop();
    android.util.Log.e("Tracking", "onStop");
    handler.removeCallbacks(thread);
    if ((doAsynchronousTask) != null)
        doAsynchronousTask.cancel();
    
}

private void notifyChange(java.lang.String what) {
    android.content.Intent i = new android.content.Intent(what);
    i.putExtra("album", getAlbumName());
    i.putExtra("track", getTrackName());
    sendBroadcast(i);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_college_search);
    addListenerOnButton();
    addListenerOnSpinnerItemSelection();
}

private void restartTheme() {
    android.content.Intent intent = this.getIntent();
    startActivity(intent);
    overridePendingTransition(R.anim.fade_in_real, R.anim.fading_out_real);
    finish();
}

@java.lang.Override
public void onFailure(java.lang.Exception error) {
    android.util.Log.e(cs446.mezzo.art.AlbumArtManager.TAG, ("MusicBrainz failed " + (error.getMessage())));
    setDefaultCoverArt(view);
    paletteCallback.onFailure(error);
}

private void startLocationService() {
    if (!(checkPermission(android.Manifest.permission.ACCESS_FINE_LOCATION))) {
        requestPermission();
    }else {
        buildGoogleApiClient();
        makeLocationRequest();
        loadWeatherListFragment(LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient));
    }
}

private void showAddAddressDialog(java.lang.String title, java.lang.String address) {
    android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
    android.support.v4.app.DialogFragment frag = com.coinblesk.client.addresses.EditAddressFragment.newInstance(title, address);
    frag.show(fm, "fragment_edit_address");
}

@java.lang.Override
public void onBackPressed() {
    android.support.v4.widget.DrawerLayout drawer = ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout)));
    if (drawer.isDrawerOpen(GravityCompat.START)) {
        drawer.closeDrawer(GravityCompat.START);
    }else {
        super.onBackPressed();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    saveBudget();
    getActivity().finish();
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.activity_map, container, false);
    initMap();
    initLoc();
    return view;
}

@java.lang.Override
public void onClick(android.view.View view) {
    java.lang.String itemName = "";
    int itemPrice = 0;
    java.lang.String itemFlavors = "";
    android.util.Log.i("Finished", tech.travis.poolpos.MainActivity.getMethodName());
}

public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    return inflater.inflate(R.layout.opensource_dialog, container, false);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((usedBitmap) != (defaultBitmap)) {
        usedBitmap.recycle();
        usedBitmap = defaultBitmap;
    }
    finish();
}

@java.lang.Override
public void onFocusChange(android.view.View view, boolean b) {
    view.setFocusable(true);
    view.setFocusableInTouchMode(true);
}

@java.lang.Override
protected void onRemoveItemRequestFocus(android.view.View previousItem, boolean wasFocused) {
    android.widget.EditText editText = getEditTextFromView(previousItem);
    smoothScrollToView(previousItem);
    editText.requestFocus();
}

protected com.wade.webserver.Response getNotFoundResponse() {
    com.wade.webserver.Response r = newFixedLengthResponse(Response.Status.NOT_FOUND, NanoHTTPD.MIME_PLAINTEXT, "Error 404, file not found.");
    android.util.Log.i(TAG, (("MyServer.getNotFoundResponse(" + (r.toString())) + ")"));
    return r;
}

public static android.content.ContentValues parse(long pubId, long userId) {
    android.content.ContentValues contentValues = new android.content.ContentValues();
    contentValues.put(com.gemapps.picapp.data.PicappContract.BookmarkEntry.COLUMN_PUBLICATION_ID, pubId);
    contentValues.put(com.gemapps.picapp.data.PicappContract.BookmarkEntry.COLUMN_USER_ID, userId);
    return contentValues;
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    android.util.Log.v("LATLNG", "HANLDE");
}

private void initializeActivity(android.os.Bundle savedInstanceState) {
    if (savedInstanceState == null) {
        this.cityId = getIntent().getIntExtra(ru.innopolis.innoweather.presentation.view.activity.MainActivity.INTENT_EXTRA_PARAM_CITY_ID, 2172797);
        addFragment(R.id.fragmentContainer, new ru.innopolis.innoweather.presentation.view.fragment.CitiesListFragment());
    }else {
    }
}

private engine.LocalFolder getStorage() {
    if ((mStorage) == null) {
        java.io.File root = android.os.Environment.getExternalStorageDirectory();
        mStorage = new com.dmitrymalkovich.fileexplorer.LocalFolderImpl(root);
        mStorage.setPredefinedThumbnail(R.drawable.ic_home_grey600_24dp);
    }
    return mStorage;
}

@java.lang.Override
public void changePath(org.brandroid.openmanager.data.OpenPath path) {
    try {
        mPathItems = path.list();
    } catch (java.io.IOException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (onFocusListener != null) {
        if (hasFocus) {
            performClick();
            clearFocus();
        }
        mHasFocus = hasFocus;
        onFocusListener.onFocusChanged(hasFocus);
    }
}

public void add(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    fileUri = com.example.arjun.nhacks.GroupHardActivity.getOutputMediaFileUri();
    intent.putExtra(MediaStore.EXTRA_OUTPUT, fileUri);
    startActivityForResult(intent, com.example.arjun.nhacks.GroupHardActivity.CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.System.out.println("textview clicked");
}

public void onLoadProductsFail() {
    android.widget.Toast.makeText(getContext(), R.string.products_load_fail, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void stop() {
    android.content.BroadcastReceiver receiver;
    if (((batteryLevelReceiver) != null) && ((receiver = batteryLevelReceiver.get()) != null)) {
        service.unregisterReceiver(receiver);
        batteryLevelReceiver = null;
    }
}

@java.lang.Override
protected void onBeaconInRange(java.lang.String address, double distance) {
    android.util.Log.d(edu.umass.cs.prepare.metawear.BeaconService.TAG, ("address: " + address));
    android.util.Log.d(edu.umass.cs.prepare.metawear.BeaconService.TAG, ("distance: " + distance));
    serviceManager.startMetawearService(address);
}

public void initialize() {
    try {
        mHandle = com.thundersoft.hz.selfportrait.detect.FaceDetect.native_create();
    } catch (java.lang.UnsatisfiedLinkError e) {
        e.printStackTrace();
        android.util.Log.e(com.thundersoft.hz.selfportrait.detect.FaceDetect.TAG, "could not link native handle for ts_detected_face_jni library!");
    }
}

private void loadMain() {
    android.content.Intent intent = new android.content.Intent(this, com.culture.coffee.coffee_culture.Main.class);
    startActivity(intent);
}

@butterknife.OnClick(value = R.id.admin_user_delete)
public void onDeleteClick(android.view.View view) {
    blueprint.com.sage.utility.network.NetworkUtils.logoutCurrentUser(getActivity());
}

@java.lang.Override
public void onItemSelected() {
    super.onItemSelected();
    layout.setAlpha(0.5F);
    android.util.Log.e("DRAG", "DRAG");
}

@java.lang.Override
public void onSessionDestroyed() {
    android.util.Log.v(com.android.bluetooth.avrcp.Avrcp.TAG, "MediaController session destroyed");
    if ((mMediaController) != null) {
        removeMediaController(mMediaController.getWrappedInstance());
        mMediaController.unregisterCallback(mMediaControllerCb);
        mMediaController = null;
    }
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.util.Log.d(PACKAGE_NAME, "AlwaysOnTop : onStartCommand");
    OnTop_view.setSystemUiVisibility(ui_Options);
    timer_start();
    return super.onStartCommand(intent, flags, startId);
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.jonathan.james.eric.project_3.models.ArticleSearch.ArticleSearchList> call, java.lang.Throwable t) {
    android.util.Log.e(com.jonathan.james.eric.project_3.APIServicesDebug.TAG, "onFailure: Could not establish Connection", null);
}

private android.content.res.ThemeConfig getThemeConfig() {
    final android.content.res.Configuration config = getConfiguration();
    return config != null ? config.themeConfig : null;
}

@java.lang.SuppressWarnings(value = "unchecked")
@java.lang.Override
public void onPreMigrate() {
    mQuery = new com.raizlabs.android.dbflow.sql.QueryBuilder(new com.raizlabs.android.dbflow.sql.language.Update().table(mTable).set(mSetConditionQueryBuilder).where(mWhereConditionQueryBuilder).getQuery());
}

@android.support.annotation.NonNull
private <T> rx.Observable<T> toObservable(final java.lang.Class<T> type) {
    return subject.ofType(type);
}

public boolean isSwitcherButtonEnabled() {
    return mIsInLandscapeMode ? ((mSwitcherButtonDP.getVisibility()) == (android.view.View.VISIBLE)) || ((mSwitcherButtonTP.getVisibility()) == (android.view.View.VISIBLE)) : mPortraitButtonHandler.isSwitcherButtonEnabled();
}

@java.lang.Override
protected void onPreExecute() {
    android.util.Log.d("preexe", "edit schedule start");
    super.onPreExecute();
    mProgress.setVisibility(View.VISIBLE);
}

public static void navigateToTestingFolder(io.appium.java_client.android.AndroidDriver driver) {
    com.amaze.filemanager.test.Utilities.Utils.openDrawer(driver);
    driver.findElementByName(com.amaze.filemanager.test.Utilities.Utils.storageText).click();
    com.amaze.filemanager.test.Utilities.Utils.searchInVisibleListWithName(driver, com.amaze.filemanager.test.Utilities.Utils.generalTestingFolder).click();
}

protected android.app.Activity getContext() {
    return currentActivity.get();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    databaseHandler.deleteReminder(specifiedReminders.get(listPos));
    timeOnlyReminders.remove(listPos);
    eventListAdapter.notifyDataSetChanged();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.i(com.intersog.androidcourse.rimma.googlemaphw19.MapsActivity.TAG, "onCreate");
    setContentView(R.layout.activity_maps);
    setUpMapIfNeeded();
    buildGoogleApiClient();
    createLocationRequest();
}

public static void putLong(java.lang.String key, java.lang.String value) {
    android.content.SharedPreferences sharedPreferences = cn.ieclipse.af.util.SharedPrefsUtils.getSharedPreferences();
    android.content.SharedPreferences.Editor edit = sharedPreferences.edit();
    edit.putString(key, value);
    edit.commit();
}

private void addMissionItem(int index, com.o3dr.services.android.lib.drone.mission.item.MissionItem missionItem) {
    missionItemProxies.add(index, new org.droidplanner.android.proxy.mission.item.MissionItemProxy(this, missionItem));
    notifyMissionUpdate();
}

public static float dpToPx(float dp, android.content.Context context) {
    android.content.res.Resources resources = context.getResources();
    android.util.DisplayMetrics metrics = resources.getDisplayMetrics();
    float px = dp * ((metrics.densityDpi) / 160.0F);
    return px;
}

public static void start(@android.support.annotation.NonNull
de.jonasrottmann.realmbrowser.Context context, @android.support.annotation.NonNull
java.lang.String realmFileName) {
    android.content.Intent intent = new android.content.Intent(context, de.jonasrottmann.realmbrowser.RealmModelsActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    intent.putExtra(de.jonasrottmann.realmbrowser.RealmModelsActivity.EXTRAS_REALM_FILE_NAME, realmFileName);
    context.startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    tvInfo.setVisibility(View.GONE);
    tvError.setVisibility(View.GONE);
    createAccount();
}

public static void getParcelable(android.os.Bundle savedInstanceState, com.jparkie.givesmehope.models.Anthology anthology) {
    if (savedInstanceState != null) {
        anthology = savedInstanceState.getParcelable(com.jparkie.givesmehope.models.Anthology.PARCELABLE_KEY);
    }else {
        throw new java.lang.IllegalArgumentException(((com.jparkie.givesmehope.models.Anthology.TAG) + ": \'getParcelable\' Method has null argument: savedInstanceState."));
    }
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.widget.TextView currentItem = ((android.widget.TextView) (view));
    strikeThroughTextView(currentItem);
    return false;
}

@java.lang.Override
public void onProgressChanged(android.webkit.WebView view, int newProgress) {
    super.onProgressChanged(view, newProgress);
    if (newProgress > 10) {
        progressBar.setIndeterminate(false);
        progressBar.setProgress(newProgress);
    }
}

private void createDialog() {
    transDialog = new android.support.v7.app.AlertDialog.Builder(com.hitomi.tilibrary.transfer.Transferee.context, getDialogStyle()).setView(transLayout).create();
    transDialog.setOnShowListener(this);
    transDialog.setOnKeyListener(this);
}

public void onClick(android.content.DialogInterface dialog, int whichIn) {
    openDatabase(files[which], false);
}

public android.graphics.Rect draw(android.graphics.Canvas canvas) {
    android.graphics.Rect srcRect = getSrcRect();
    canvas.drawBitmap(bm, srcRect, mScrRect, null);
    return mScrRect;
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    startedAnimators.remove(animation);
    view.setInAnimation(false);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    android.util.Log.i("MainActivityFragment", "Spinner On Item Selected is chosen");
    updateSortingCriteriaPreference(i);
    updateMovies();
}

@com.facebook.react.bridge.ReactMethod
public java.lang.String version(@android.support.annotation.NonNull
com.facebook.react.bridge.Callback callback) {
    java.lang.String version = com.vwo.mobile.VWO.version();
    callback.invoke(null, version);
    return version;
}

@org.junit.BeforeClass
public static void setUpClass() {
    com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext = android.support.test.InstrumentationRegistry.getContext();
}

@java.lang.Override
public void onError(java.lang.Exception error) {
    hideLoginProgress();
    java.lang.String errorMessage = (error == null) ? error.getMessage() : "Error";
    android.widget.Toast.makeText(activity, errorMessage, Toast.LENGTH_LONG).show();
}

public void stopPedometerEvent(android.view.View view) {
    com.samsung.android.sdk.remotesensor.SrsRemoteSensor sensor;
    sensor = pedoSensorList.get(0);
    appsandmaps.temple.edu.self.MainActivity.mServiceManager.unregisterListener(this, sensor);
}

public void connectServer(android.view.View view) {
    _BluetoothUtility.connect(_BluetoothDevice);
    android.widget.Button button = ((android.widget.Button) (findViewById(R.id.button3)));
    button.setEnabled(false);
}

public void changeToSelectedSection(com.mcgearybros.vroomvroom.NavigationSubItem selectedSubItem) {
    android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
    android.support.v4.app.FragmentTransaction selectedTransaction = fragmentManager.beginTransaction();
    selectedTransaction.setCustomAnimations(R.anim.slide_out_left, R.anim.slide_in_right, R.anim.slide_in_left, R.anim.slide_out_right);
    changeToNewSection(selectedSubItem, selectedTransaction);
}

public long createPtr(long parent, android.view.Surface surface) {
    return createRenderer(parent, surface);
}

@butterknife.OnClick(value = R.id.sign_up_tv)
public void signUp() {
    android.content.Intent intent = new android.content.Intent(this, com.geekhub.choosehelper.screens.activities.SignUpActivity.class);
    intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK)));
    startActivity(intent);
    finish();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.orhanobut.logger.Logger.init("test").hideThreadInfo().setMethodCount(40);
    printNormalLog();
    printPretty();
}

private void openDateDialog() {
    com.example.eliasvensson.busify.DateDialog dialog = new com.example.eliasvensson.busify.DateDialog(this);
    android.app.FragmentTransaction ft = getFragmentManager().beginTransaction();
    dialog.show(ft, "DatePicker");
}

@java.lang.Override
public void onClick(android.view.View view, int position) {
    com.exalt.vmuseum.services.PlacesResponseService.getPlaceDetails(position, placeDetailsCallback);
}

private void updateItemList(java.util.List<java.lang.String> titles) {
    if (titles != null)
        itemTitles = titles;
    
    android.widget.ArrayAdapter adapter = new android.widget.ArrayAdapter(getActivity(), android.R.layout.simple_list_item_1, android.R.id.text1, itemTitles);
    itemList.setAdapter(adapter);
}

@java.lang.Override
protected boolean checkLayoutParams(android.view.ViewGroup.LayoutParams layoutParams) {
    if ((layoutParams instanceof com.clilystudio.netbook.reader.ReaderViewPager.ct) && (super.checkLayoutParams(layoutParams))) {
        return true;
    }
    return false;
}

public void setActivateOnItemClick(boolean activateOnItemClick) {
    this.activateOnItemClick = activateOnItemClick;
    getListView().setChoiceMode((activateOnItemClick ? android.widget.ListView.CHOICE_MODE_SINGLE : android.widget.ListView.CHOICE_MODE_NONE));
}

public void onScrolled(android.support.v7.widget.RecyclerView recyclerView, int dx, int dy) {
    this.maybeFireLoadMore();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.d("onResume", "GoogleLogIn");
}

public void xMinusClickListener(android.view.View view) {
    cubeRotationView.setXRotation(((cubeRotationView.getXRotation()) + (rotationStep)));
    cubeRotationView.invalidate();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return com.loopeer.bottomimagepicker.PickerFragment.newInstance(mImageFolders.get(position).images);
}

public void gotoHome() {
    android.content.Intent gotoHome = new android.content.Intent(getBaseContext(), moanainc.com.moana.controllers.HomeActivity.class);
    getBaseContext().startActivity(gotoHome);
}

protected void onHandleWrappedAdapterItemRangeChanged(int positionStart, int itemCount, java.lang.Object payload) {
    com.h6ah4i.android.widget.advrecyclerview.utils.BaseWrapperAdapter.notifyItemRangeChanged(positionStart, itemCount, payload);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_settings);
    getFragmentManager().beginTransaction().replace(R.id.settings_content, new project.android.udacity.com.popularmovies.app.SettingsFragment()).commit();
}

public void onLowMemory() {
    info("onLowMemory");
    com.androidquery.callback.BitmapAjaxCallback.clearCache();
    cs.java.lang.Lang.application().logger().onLowMemory();
    super.onLowMemory();
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    strBankName = spinnerBankName.getSelectedItem().toString();
    autoBranchCode.setText("");
    fetchBancaBranchdata(strBankName);
}

public static void putFloat(@android.support.annotation.NonNull
java.lang.String key, @android.support.annotation.Nullable
java.lang.Float value) {
    long start = java.lang.System.currentTimeMillis();
    com.pepperonas.aesprefs.AesPrefs.put(key, java.lang.String.valueOf(value));
    com.pepperonas.aesprefs.AesPrefs.mDuration += (java.lang.System.currentTimeMillis()) - start;
}

@java.lang.Override
public final void onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int position) {
    if (viewHolder instanceof com.pierfrancescosoffritti.shrinkingimagelayout.HeaderRecyclerViewAdapter.HeaderViewHolder)
        return ;
    
    onBindViewHolder_(((VH) (viewHolder)), position);
}

private void fetchViews() {
    listView = ((android.widget.ListView) (rootView.findViewById(R.id.collection_item_list)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    eventExec(nameEditText, nameClickList, "lastName");
    nameEditText.setHint("Tap again to start enter");
}

@java.lang.Override
public void onClick(android.view.View v) {
    popupu(1);
}

@java.lang.Override
public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int direction) {
    mItemTouchHelperAdapter.onItemDismiss(viewHolder.getAdapterPosition());
}

@java.lang.Override
public void putAll(@android.support.annotation.NonNull
final java.util.Map<? extends K, ? extends V> map) {
    for (K key : map.keySet()) {
        put(key, map.get(key));
    }
}

public void foodSelection3(android.view.View view) {
    android.content.Intent startFood3 = new android.content.Intent(this, com.example.jacksonhoang.citygoer.foodActivity3.class);
    startActivity(startFood3);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mDrinkCountOrders.setText((++(countCurrent)));
}

@java.lang.Override
public boolean onItemClick(android.view.View view, int position, com.mikepenz.materialdrawer.model.interfaces.IDrawerItem drawerItem) {
    android.content.Intent intent = new android.content.Intent(activity, com.dreamsofpines.mcunost.ui.activities.CategoriesActivity.class);
    activity.startActivity(intent);
    activity.finish();
    return false;
}

private void handleSetNavigationIcon(java.lang.Object object) {
    navigationIcon = object;
    org.appcelerator.titanium.view.TiDrawableReference tiDrawableReference = org.appcelerator.titanium.view.TiDrawableReference.fromObject(proxy.getActivity(), object);
    ((android.support.v7.widget.Toolbar) (getNativeView())).setNavigationIcon(tiDrawableReference.getDrawable());
}

public void showRoundImage(android.graphics.Bitmap bitmap, android.widget.ImageView view) {
    new lu.schoolido.sukutomo.sukutomo.Card.LoadImage(view).execute(round_card_image, null);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if (yesListener != null)
        yesListener.onClick(dialog, which);
    
    displayedAlerts.remove(message);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.admin.a1_workout.ui.WorkoutActivity.startActivity(getApplicationContext(), holder.getAdapterPosition());
}

public double editTextToDouble(android.widget.EditText et) {
    double db = 0.0;
    db = java.lang.Double.parseDouble(et.getText().toString().replace("$", ""));
    return db;
}

private void setUpRecyclerView() {
    adapter = new com.blstream.studybox.decks_view.DecksAdapter();
    adapter.setOnItemClickListener(this);
    recyclerView.setAdapter(adapter);
    recyclerView.setLayoutManager(new android.support.v7.widget.GridLayoutManager(this, columnQuantity));
    recyclerView.setHasFixedSize(true);
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.common.api.Status status) {
    ((com.dbl_appdevelopment.group2.todomaster.controller.App) (getApplication())).getTaskManager().getAllTasks().clear();
    startActivity(new android.content.Intent(getMe(), com.dbl_appdevelopment.group2.todomaster.view.StartupActivity.class));
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    android.widget.Toast.makeText(this, ((error.toString()) + "hello prateek"), Toast.LENGTH_LONG).show();
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.d("DEBUG", "onCreate EvacuationActivity");
    setContentView(R.layout.evacuation_activity);
    initViews();
    initComponents(savedInstanceState);
}

@android.annotation.SuppressLint(value = "NewApi")
@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_demo_selector);
    if ((android.os.Build.VERSION.SDK_INT) >= 11)
        getActionBar().setTitle("Choose Demo Project");
    
    setupChaptersListView();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.lnyp.recyclerview.RecyclerViewStateUtils.setFooterViewState(getActivity(), listJuzi, mHasMore, RecyclerViewLoadingFooter.State.Loading, null);
    com.apkfuns.logutils.LogUtils.e("11111111111111111111");
    qryMeijus();
}

@java.lang.Override
public void onClick(android.view.View view) {
    mMapFragment.showAllFloors();
    mMapFragment.showMarkersForSpecificFloor(2);
}

private static boolean hasWriteSecureSettingsPermission(android.content.Context context) {
    return ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.M)) && ((context.checkSelfPermission(Manifest.permission.WRITE_SECURE_SETTINGS)) == (android.content.pm.PackageManager.PERMISSION_GRANTED));
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parentView) {
    return ;
}

@java.lang.Override
protected io.dflabs.sample.views.adapters.FruitAdapter.FruitViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType, android.support.v7.widget.RecyclerView recyclerView) {
    android.view.View v = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.item_fruit, parent, false);
    return new io.dflabs.sample.views.adapters.FruitAdapter.FruitViewHolder(v);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_main);
    initView();
    initData();
    setListener();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((qrCodeReaderView) != null) {
        qrCodeReaderView.stopCamera();
    }
    startActivity(new android.content.Intent(this, com.project.greenfuture.petugas.activity.Main2Activity.class));
    this.finish();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeInt(this.id);
    dest.writeString(this.author);
    dest.writeString(this.content);
    dest.writeString(this.url);
}

@java.lang.Override
public void onObjectReceived(com.android_project.grocery.model.entities.User user) {
    addNewUserToLocal(user);
    handler.onObjectReceived(user);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    setupUI(todos);
}

@java.lang.Override
public void openDataContextMenu(android.view.View view) {
    this.getActivity().openContextMenu(view);
}

@java.lang.Override
public int getItemViewType(int position) {
    if (data.isEmpty())
        return com.teinvdlugt.android.greekgods.AllPeopleRecyclerViewAdapter.NO_PEOPLE_ITEM_VIEW_TYPE;
    else
        return com.teinvdlugt.android.greekgods.AllPeopleRecyclerViewAdapter.PERSON_ITEM_VIEW_TYPE;
    
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    android.util.Log.i("XXX", "Surface destroyed !!");
    if ((com.example.acedeno.customcamera.CustomCameraActivity.camera) != null) {
        com.example.acedeno.customcamera.CustomCameraActivity.camera.stopPreview();
        com.example.acedeno.customcamera.CustomCameraActivity.camera.release();
        com.example.acedeno.customcamera.CustomCameraActivity.camera = null;
        previewing = false;
    }
}

@java.lang.Override
protected void confirm() {
    android.util.Log.d("looking up: ", mScanResult);
    sRequestManager.requestSearchByCode(mScanResult, mAuthToken, mUserId, new phc.android.Services.ServicesScannerConfirmationFragment.SearchByCodeResponseListener(), new phc.android.Services.ServicesScannerConfirmationFragment.SearchByCodeErrorListener());
}

@java.lang.Override
public void onBackPressed() {
    java.lang.String circStr = parser.elementsToTxt(com.cpen321.circuitsolver.ui.draw.DrawActivity.circuitElms, screenHeight, screenWidth);
    circuitProject.saveCircuitDefinitionFile(circStr);
    android.content.Intent backToHomeIntent = new android.content.Intent(this, com.cpen321.circuitsolver.ui.HomeActivity.class);
    startActivity(backToHomeIntent);
    finish();
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    inflater.inflate(R.menu.house_menu, menu);
    super.onCreateOptionsMenu(menu, inflater);
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    anipr.transtech.android.ApplicationClass.applicationInstance = new anipr.transtech.android.ApplicationClass();
    com.crittercism.app.Crittercism.initialize(getApplicationContext(), "54d8c0e651de5e9f042ed84c");
}

public void onClick(android.view.View v) {
    android.widget.Button addButton = myView.findViewWithTag(v.getTag());
    changeButtonColor(addButton, index);
    openShoppingList();
}

@java.lang.Override
public com.example.android.bakingapp.Adapters.RecipeAdapter.RecipeViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = mInflater.inflate(R.layout.recipe_item, parent);
    return new com.example.android.bakingapp.Adapters.RecipeAdapter.RecipeViewHolder(view);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton compoundButton, boolean b) {
    if (b) {
        com.project.nghicv.readingbook.util.NotificationUtil.scheduleNotification(getActivity());
    }else {
        com.project.nghicv.readingbook.util.NotificationUtil.clearNotification();
        com.project.nghicv.readingbook.util.PreferenceUtil.setNotificationId(getActivity(), 0);
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((imageView) != null) {
        uploadImage(imageView);
    }
}

private void doAnimation(float startAt, float endAt) {
    android.view.animation.TranslateAnimation animate = new android.view.animation.TranslateAnimation(startAt, endAt, 0, 0);
    animate.setDuration(100);
    animate.setFillAfter(true);
    holder.item.startAnimation(animate);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    switch (id) {
        case R.id.add :
            {
                setDate(activateDate);
            }
            break;
    }
    return true;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    if ((mCurrentPhotoLarge) != null)
        outState.putParcelable(sk.momosi.fuelapp.activities.AddCarActivity.PHOTO, mCurrentPhotoLarge);
    
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    toast_canel.show();
    dialogInterface.cancel();
    dialog_builder.create();
}

@java.lang.Override
public void run() {
    (index)++;
    getMoreData(index);
    android.util.Log.d("test", "load more completed");
    isLoading = false;
}

public long getSavedArticles(android.content.Context context) {
    return getArticlesFromHistory(context, (-1));
}

@java.lang.Override
public boolean onQueryTextChange(java.lang.String s) {
    android.util.Log.d("MovieListActivity", "Search Text Change");
    if ((s.length()) > 2) {
        onQueryTextSubmit(s);
    }
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    ((co.megaterios.shoppingcarttest.ui.adapter.ShoppingCartRecyclerViewAdapter.AdapterShoppingCartInteractionListener) (context)).onDeleteProduct(boundOrderProduct.getMyProduct().getId());
}

protected synchronized void buildGoogleApiClient() {
    mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this.getActivity()).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    org.osmdroid.tileprovider.constants.OpenStreetMapTileProviderConstants.setUserAgentValue(BuildConfig.APPLICATION_ID);
    sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext());
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, de.huk_coburg.tdp.activities.GalleryActivity.class);
    startActivityForResult(android.content.Intent.createChooser(intent, getString(R.string.choose_image)), CallbackID.EXT_IMAGE);
}

@java.lang.Override
@android.support.annotation.CallSuper
public void attachView(@android.support.annotation.NonNull
V view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState, boolean isAttachedOnBackPressed) {
    mView = view;
    restoreInstanceState(savedInstanceState);
    addObservables();
}

@java.lang.Override
public android.support.v4.content.Loader<ru.codingworkshop.gymm.data.model.ProgramTraining> onCreateLoader(int id, android.os.Bundle args) {
    return new ru.codingworkshop.gymm.program.activity.training.TrainingAsyncLoader(this, id, args, null);
}

@java.lang.Override
public void onPause() {
    android.util.Log.d(be.ugent.zeus.hydra.service.urgent.SimpleSessionCallback.TAG, "pause");
    if (mediaManager.isStateOneOf(MediaState.STARTED, MediaState.PAUSED, MediaState.PLAYBACK_COMPLETED)) {
        mediaManager.pause();
    }
}

public void startActivity(android.view.View view) {
    startActivity(new android.content.Intent(this, com.hisham.design.PaidActivity.class));
}

public void updatePosts(android.support.v7.widget.RecyclerView.Adapter adapterToNotify) {
    com.theratio.utilities.Post.updatePostsByUserID(this.id, this.posts, adapterToNotify);
}

private boolean connexion2Client(com.smartmanageragent.smartagent.message.JSONMessage jsmessage, java.lang.String ipAd) {
    android.os.Handler clientHandler = new android.os.Handler();
    com.smartmanageragent.exteriorcomm.ClientConnection clientConnection = new com.smartmanageragent.exteriorcomm.ClientConnection(ipAd, com.smartmanageragent.exteriorcomm.CommunicationService.portNumber, clientHandler, jsmessage);
    boolean success = clientConnection.connection();
    return success;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.pschuette.android.calendarlibrary.ExtendedCalendarView calendarView = new com.pschuette.android.calendarlibrary.ExtendedCalendarView(this, this);
    com.pschuette.android.calendarlibrary.CalendarSyncStateView syncStateView = new com.pschuette.android.calendarlibrary.CalendarSyncStateView(this, this);
    setContentView(syncStateView);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    locationChanged = true;
    handleNewLocation(location);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setupActionBar();
    enableBluetooth();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    ((io.locative.app.LocativeApplication) (getApplication())).inject(this);
    android.os.Debug.waitForDebugger();
}

@java.lang.Override
public android.os.IInterface createInterface() {
    android.os.IBinder binder = ServiceManager.getService.call(Context.MEDIA_ROUTER_SERVICE);
    return IMediaRouterService.Stub.asInterface.call(binder);
}

private static synchronized okhttp3.Cache getCache(android.content.Context context) {
    if ((org.gem.indo.dooit.api.managers.DooitManager.cache) == null) {
        org.gem.indo.dooit.api.managers.DooitManager.cache = new okhttp3.Cache(application.getCacheDir(), ((10 * 1024) * 1024));
    }
    return org.gem.indo.dooit.api.managers.DooitManager.cache;
}

@java.lang.Override
public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    swipeRefreshLayout.setRefreshing(false);
    swipeRefreshLayout.setEnabled(false);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    mPresenter = new com.abhinav.keepsafe.login.LoginPresenter();
    return inflater.inflate(R.layout.fragment_login, container, false);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    getActivity().setTitle(R.string.crimes_title);
    setRetainInstance(true);
    mSubtitleVisible = false;
}

public final void setResult(com.shkil.android.util.Result<V> result, boolean forceReleaseLatch) {
    fireResult(result);
    if ((result.isCompleted()) || forceReleaseLatch) {
        resultLatch.countDown();
    }
}

protected void onPostExecute(java.lang.String file_url) {
    pDialog.dismiss();
    if (file_url != null) {
        android.widget.Toast.makeText(this, file_url, Toast.LENGTH_LONG).show();
    }
}

@java.lang.Override
public void onLongPress(android.view.MotionEvent e) {
    android.util.Log.d("DEBUG_TAG", "On Longpress OscMode Event!");
    mOscilloscopeFragmentController.butOscModeOnLongPress();
    butOscMode.setBackgroundColor(2201331);
    super.onLongPress(e);
}

public static void test_061() throws com.android.uiautomator.core.UiObjectNotFoundException {
    framework.common.PhoneCommon.Makecall("10086", 1);
    check(testcase.Object_ResourceId, testcase.Operation_checkExist, "com.android.dialer:id/name");
    excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.dialer:id/floating_end_call_action_button");
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    inputSomeCode();
    checkCode();
    return false;
}

@kr.co.namee.permissiongen.PermissionSuccess(requestCode = 100)
private void selectPicFromCameraSuccess() {
    android.util.Log.e(TAG, "selectPicFromCameraSuccess");
    adapter.selectPicFromCamera();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return new com.simplecity.amp_library.ui.fragments.WidgetFragment().newInstance(layouts[position]);
}

public void saveInstanceState(@android.support.annotation.NonNull
android.os.Bundle outState) {
    outState.putParcelableArrayList(com.proxerme.app.adapter.PagingAdapter.STATE_LIST, list);
}

@java.lang.Override
protected void prepareAnimateAdd(android.support.v7.widget.RecyclerView.ViewHolder holder) {
    android.support.v4.view.ViewCompat.setTranslationX(holder.itemView, ((mSwipeDirection.getSign()) * (mRecyclerView.getWidth())));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    android.util.Log.d("postMDF", "creating fragment");
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.d(org.eyeseetea.malariacare.fragments.DashboardUnsentFragment.TAG, "onCreate");
    registerSurveysReceiver();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_friends_list);
    android.widget.Button back = ((android.widget.Button) (findViewById(R.id.backButton)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    mActionListener.sendAmplitudeEvent(StaticConstants.CONTENT_NEW_REVIEW_LANDED, null);
    mActionListener.loadWriteReviewDialog();
}

public boolean encodeFrame(android.graphics.Bitmap bitmap, int delayMs) {
    if (0 != (instance)) {
        return false;
    }
    nativeEncodeFrame(instance, bitmap, delayMs);
    return true;
}

private void connectToDevice(android.bluetooth.BluetoothDevice device) {
    mGatt = device.connectGatt(getApplicationContext(), false, gattCallback);
    stopScan();
}

@android.annotation.SuppressLint(value = "Assert")
void release() {
    assert (mProcessingThread.getState()) == (java.lang.Thread.State.TERMINATED);
    mDetector.release();
    mDetector = null;
}

public static android.content.SharedPreferences getSharedPreferences(android.content.Context context) {
    return context.getSharedPreferences(io.soramitsu.iroha.IrohaApplication.SHARED_PREF_FILE, io.soramitsu.iroha.MODE_PRIVATE);
}

public static android.content.Intent makeIntent(android.content.Context context) {
    android.content.Intent intent = new android.content.Intent(context, vandy.mooc.services.DownloadImagesBoundService.class);
    return intent;
}

@java.lang.Override
public void onDestroy() {
    stopService(new android.content.Intent(this, edu.umt.csci427.canary.OpenICEService.class));
}

public void zoomInOn(@android.support.annotation.NonNull
com.google.android.gms.maps.model.LatLng latLng) {
    if (!(mIgnoreCameraZoom)) {
        com.github.dstaflund.geomemorial.common.util.CameraUpdateStrategy.zoomTo(mMap, mVisibleMarkers, latLng);
    }
}

public void onGetStarted(android.view.View view) {
    android.content.Intent getStarted = new android.content.Intent(this, com.example.corneeldenhartogh.corneel_pset2.FillWords.class);
    getStarted.putExtra("callingFillWords", R.string.instruction_filler);
    startActivity(getStarted);
}

private boolean isLightOutOfBounds(int x, int y) {
    return (((x >= (com.captainhampton.android.lightsout.fragment.FragmentClassic.NUM_ROWS)) || (x < 0)) || (y >= (com.captainhampton.android.lightsout.fragment.FragmentClassic.NUM_COLS))) || (y < 0);
}

private void showProgressToast(java.lang.String message) {
    if (this.showProgress) {
        int duration = android.widget.Toast.LENGTH_SHORT;
        android.widget.Toast toast = android.widget.Toast.makeText(context, message, duration);
        toast.show();
    }
}

public void start() {
    if ((mClient) == null) {
        android.util.Log.e(C.TAG, "locationclient can not be null before using is");
    }else {
        mClient.start();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    orderEntries.remove(orderEntries.get(position));
    notifyDataSetChanged();
    businessObjects.SessionInformations.getInstance().setEntry(orderEntries);
}

@java.lang.Override
protected void onStop() {
    core.util.Utils.nullViewDrawablesRecursive(findViewById(android.R.id.content).getRootView());
    core.util.Utils.unbindDrawables(findViewById(android.R.id.content).getRootView());
    super.onStop();
}

public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    alarmList.get(position).setState(isChecked);
}

@java.lang.Override
public void onTick(android.view.View view, long millisUntilFinished) {
    mCountDownTextView.setText(java.lang.String.valueOf(((millisUntilFinished + 999) / 1000)));
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    android.util.Log.d("Preference changed", key);
    com.tomer.dtfc.Preferences.initialize(getApplicationContext());
    if (Preferences.enabled)
        startBrodcastReciever();
    else
        killBrodcastReciever();
    
}

@java.lang.Override
public java.lang.CharSequence getPageTitle(int position) {
    android.util.Log.d(com.xiaohong.codecode.adpter.MainViewPagerAdapter.TAG, "getPageTitle: ");
    return com.xiaohong.codecode.adpter.MainViewPagerAdapter.fragmentTitle[position];
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.fathzer.android.keyboard.DecimalKeyboard mCustomKeyboard = new net.yapbam.android.keyboard.AutoHideDecimalKeyboard(this, R.id.keyboardview, R.xml.deckbd);
    mCustomKeyboard.registerEditText(R.id.amount);
    addItemsOnSpinner2();
    addListenerOnButton();
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.i(com.example.myapplication.ui.fragment.manager.PackageManagerFragment.TAG, "onDestroy: ");
    actionMode.finish();
    actionMode = null;
}

public void show(android.support.v4.app.FragmentManager fragmentManager, @android.support.annotation.IdRes
int viewId) {
    fragmentManager.beginTransaction().add(viewId, this).commit();
}

private void setUpRecyclerView() {
    recyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(this));
    recyclerView.setItemAnimator(new android.support.v7.widget.DefaultItemAnimator());
    recyclerView.addItemDecoration(new com.fibelatti.raffler.views.extensions.DividerItemDecoration(this, android.support.v7.widget.LinearLayoutManager.VERTICAL));
    recyclerView.setAdapter(adapter);
}

@java.lang.Override
public void onClick(android.view.View v) {
    state = STATE_STOP;
    this.sendCommand("9");
}

@java.lang.Override
public void onClick(android.view.View view) {
    geofenceName.setError(null);
    android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE)));
    imm.showSoftInput(geofenceRadius, InputMethodManager.SHOW_IMPLICIT);
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    android.os.Bundle args = getArguments();
    int id = args.getInt(com.michael.attackpoint.discussion.DiscussionFragment.DISCUSSION_ID);
    mPresenter = new com.michael.attackpoint.discussion.DiscussionPresenter(com.michael.attackpoint.log.data.LogRepositories.getRepoInstance(), this, id);
}

public void onClick(android.view.View sender) {
    if ((mPlayStartMsec) == 0) {
        onPlay(mStartPos);
    }else {
        onPlay(mWaveformView.getmPlaybackPos());
    }
    togglePlayButton();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel parcel, int i) {
    parcel.writeString(text);
}

@java.lang.Override
public boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView rv, android.view.MotionEvent e) {
    int action = e.getAction();
    switch (action) {
        case android.view.MotionEvent.ACTION_MOVE :
            rv.getParent().requestDisallowInterceptTouchEvent(true);
            break;
    }
    return false;
}

@java.lang.Override
public void onClick(android.view.View view) {
    button6.setText(((mark) + ""));
    placeMarkOnBoard(1, 2);
    button6.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle bundle) {
    mPresenter.onLoadFromDataBase();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    addItem(position);
}

@java.lang.Override
public void onClick(android.view.View view) {
    database.getReference().push().setValue(new ru.arter_lab.addyourself.Ivents("12", "12", "323", "443", "3223", "54545", "43343"));
    addField();
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    org.jdc.template.App.getInjectComponent(this).inject(this);
    setHasOptionsMenu(true);
    showIndividual();
}

@java.lang.Override
protected void onDestroy() {
    android.util.Log.d(io.evercam.androidapp.video.VideoActivity.TAG, "onDestroy");
    super.onDestroy();
    nativeStop();
    nativeFinalize();
    nativeSurfaceFinalize();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    com.frostwire.android.gui.fragments.BrowsePeerFragment.LOG.info("onOptionsItemSelected");
    switch (item.getItemId()) {
        case R.id.fragment_browse_peer_menu_filter :
            return true;
        case R.id.fragment_browse_peer_menu_checkbox :
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void clearView(android.support.v7.widget.RecyclerView recyclerView, android.support.v7.widget.RecyclerView.ViewHolder viewHolder) {
    viewBeingCleared = true;
}

@java.lang.Override
public void onStart() {
    android.util.Log.i(com.example.oce.langlock.QuestionsFragment.TAG, ((getClass().getSimpleName()) + ":entered onStart()"));
    super.onStart();
}

@java.lang.Override
public void filter(@android.support.annotation.Nullable
java.lang.String filter) {
    if ((adapter) != null)
        adapter.filter(filter);
    
}

@java.lang.Override
public void onUnexpectedError(java.lang.Exception e) {
    org.matrix.androidsdk.util.Log.d(im.vector.activity.VectorMemberDetailsActivity.LOG_TAG, ("## mCreateDirectMessageCallBack: onUnexpectedError Msg=" + (e.getLocalizedMessage())));
    if (null != (mRoomActionsListener)) {
        mRoomActionsListener.onUnexpectedError(e);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((step) == 2) {
        attempBack();
    }else {
        finish();
    }
    overridePendingTransition(R.anim.activity_in_from_left, R.anim.activity_out_to_right);
}

@android.support.annotation.NonNull
@java.lang.Override
public java.security.PrivateKey getPrivateKey() {
    return this.profile.getKeyPairs().$missing$;
}

@java.lang.Override
public void onActivityResult(android.app.Activity activity, final int requestCode, final int resultCode, final android.content.Intent intent) {
    if (requestCode == (co.apptailor.googlesignin.RNGoogleSigninModule.RC_SIGN_IN)) {
        com.google.android.gms.auth.api.signin.GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(intent);
        handleSignInResult(result, false);
    }
}

@java.lang.Override
public com.kosbrother.mongmongwoo.adpters.ShoppingCarGoodsAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View v = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.item_buy_goods, parent, false);
    com.kosbrother.mongmongwoo.adpters.ShoppingCarGoodsAdapter.ViewHolder vh = new com.kosbrother.mongmongwoo.adpters.ShoppingCarGoodsAdapter.ViewHolder(v);
    return vh;
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_refresh :
            updateUI();
            showSnackbar(R.string.wallet_message_reloaded);
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onSessionClosed(com.quickblox.videochat.webrtc.QBRTCSession session) {
    if (session.getSessionID().equals(currentSession)) {
        android.util.Log.d(com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, "Stop session");
        addOpponentsFragmentWithDelay();
        android.util.Log.d(com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, "Remove current session");
        currentSession = null;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.facebook.FacebookSdk.sdkInitialize(getApplicationContext());
    com.facebook.appevents.AppEventsLogger logger = com.facebook.appevents.AppEventsLogger.newLogger(this);
    track_screenView(logger);
}

@java.lang.Override
protected android.os.Parcelable onSaveInstanceState() {
    android.os.Bundle bundle = new android.os.Bundle();
    bundle.putParcelable(com.cleveroad.pulltorefresh.firework.FireworkyPullToRefreshLayout.EXTRA_SUPER_STATE, super.onSaveInstanceState());
    bundle.putBoolean(com.cleveroad.pulltorefresh.firework.FireworkyPullToRefreshLayout.EXTRA_IS_REFRESHING, mIsRefreshing);
    getTargetView().setTop(0);
    return bundle;
}

@java.lang.Override
public void onClick(android.view.View v) {
    mRightDrawerGroupContainer.setVisibility(View.VISIBLE);
    mRightDrawerGroupContainer.startAnimation(animScaleUp);
    mRightDrawerFriendContainer.setVisibility(View.GONE);
}

private com.google.android.gms.common.api.GoogleApiClient buildGoogleApiClient() {
    com.google.android.gms.auth.api.signin.GoogleSignInOptions gso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder(com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN).requestEmail().build();
    return new com.google.android.gms.common.api.GoogleApiClient.Builder(this).enableAutoManage(this, this).addApi(Auth.GOOGLE_SIGN_IN_API, gso).build();
}

public static double add(double x, double y) {
    android.util.Log.d("TAG", "ADD");
    return x + y;
}

private void toggle(boolean state) {
    timber.log.Timber.i("Sync: %s", (state ? "enable" : "disable"));
    android.content.ContentResolver.setMasterSyncAutomatically(true);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.e("ERROR", "click");
    nextAddestatePage(5);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.record);
    android.support.v7.widget.Toolbar myToolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.my_toolbar)));
    setSupportActionBar(myToolbar);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.adnroid.pigknight.example.ui.Example.getInstance().switchChildUI(Example.CHILD_ID_PLAYING, false, R.anim.push_bottom_in, R.anim.push_top_out);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    if ((end > 0) && ((mOnPushLoadMoreListener) != null)) {
        mOnPushLoadMoreListener.onLoadMore();
        mLoadMore = true;
    }else {
        mLoadMore = false;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (mLogAccelerometerData) {
        mAccelerometerToggleButton.setText(R.string.stop_accel_data);
        mLogAccelerometerData = true;
    }else {
        mAccelerometerToggleButton.setText(R.string.start_accel_data);
        mLogAccelerometerData = false;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    brush_size = ((int) (sizeSetter.findViewById(R.id.slider_dialog).getX()));
    sizeSetter.dismiss();
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    getLoaderManager().destroyLoader(com.example.android.quakereport.EarthquakeActivity.EARTHQUAKE_LOADER_ID);
    android.util.Log.e(com.example.android.quakereport.EarthquakeActivity.LOG_TAG, "Earthquake Activity stopped");
}

@java.lang.Override
protected void onDestroy() {
    this.unregisterReceiver(mBroadcastReceiver);
    this.unregisterReceiver(finishActivity);
    android.util.Log.i(GLOBAL_TRACK_LOG, ((LOG_TAG_ACTIVITY) + "Stopped service"));
    super.onDestroy();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    butterknife.ButterKnife.bind(this);
    if (isTablet) {
        loadDetailFragmentWith("");
    }
}

public void log(java.lang.String message) {
    android.util.Log.d(digicrafts.extensions.AdvertisingContext.TAG, message);
    dispatchStatusEventAsync("LOGGING", message);
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent event) {
    show(com.wb.nextgen.widget.CustomMediaController.sDefaultTimeout);
    return true;
}

@java.lang.Override
public void onStop() {
    super.onStop();
    android.util.Log.w("STATE 4", "ONSTOP");
    com.example.yunita.reflexsimulator.ReactionTimer.isDismiss = false;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putParcelableArrayList(abhi.com.popularmovies.ui.fragment.MovieListFragment.MOVIESTATE, new java.util.ArrayList<android.os.Parcelable>(moviesGridAdapter.getItems()));
    super.onSaveInstanceState(outState);
}

public void onSend() {
    android.content.Intent dmIntent = new android.content.Intent(YYCommand.ANSWER_MACHINE_GDMS);
    dmIntent.putExtra("data", "2");
    main_activity.sendBroadcast(dmIntent);
    android.util.Log.v("cconn", "requestOutgoingIsUseDefaultMessage send");
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    com.unit5app.Settings.setArticleSettingsBoolean(0, isChecked);
    com.unit5app.Settings.save(getApplicationContext());
    android.os.Process.killProcess(android.os.Process.myPid());
    java.lang.System.exit(1);
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder surfaceHolder, int i, int i2, int i3) {
    android.util.Log.d("minko", "DummyCameraPreview.surfaceChanged");
    if (isActive())
        _callback.run(surfaceHolder);
    
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    ning.xyw.androidmanager.App.mContext = this;
    ning.xyw.androidmanager.service.FloatViewService.startService();
}

@java.lang.Override
public void onActivityDestroyed(android.app.Activity activity) {
    android.util.Log.d(acr.browser.lightning.app.BrowserApp.TAG, "Cleaning up after the Android framework");
    acr.browser.lightning.utils.MemoryLeakUtils.clearNextServedView(this);
}

public void onPause(@android.support.annotation.NonNull
V v) {
    VP presenter = getPresenter(v);
    if (presenter != null)
        presenter.onPause(v);
    
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    kobeissidev.autobirthday.Settings.loadContacts(getApplicationContext(), dbHandler, granted);
    finish();
    startActivity(getIntent());
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            restoreToInitial();
        }
    });
}

public void setProductListener(final de.handler.mobile.android.fairmondo.data.interfaces.OnSearchResultListener productListener) {
    this.productListener = productListener;
    errorHandler.setListener(productListener);
}

@java.lang.Override
public void onSuccess(java.lang.String roomId) {
    if (null != roomId) {
        org.matrix.matrixandroidsdk.activity.CommonActivityUtils.goToRoomPage(roomId, this, null);
    }
}

@android.annotation.TargetApi(value = 21)
public static void createCaptureSession(java.util.List<android.view.Surface> sfl) {
    com.almalence.opencam.cameracontroller.HALv3.createCaptureSession(sfl);
}

@java.lang.Override
public void onItem(@android.support.annotation.Nullable
java.lang.Boolean item) {
    if (java.lang.Boolean.TRUE.equals(item)) {
        addBookmark(title, url);
    }else {
        deleteBookmark(title, url);
    }
}

@java.lang.Override
public void onServiceDisconnected(android.content.ComponentName componentName) {
    android.util.Log.e(edu.nthu.nmsl.itri_app.FragmentActivity.TAG, "onServiceDisconnected");
    mBluetoothLeService = null;
    mBound = false;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    localCalendar.remove(event);
    android.content.Intent mainActivityIntent = new android.content.Intent(getApplicationContext(), com.clairvoyance.crystal.MainActivity.class);
    startActivity(mainActivityIntent);
    localCalendar.save(this);
}

public void dropAllTables() {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    for (java.lang.String string : com.rudie.severin.textadventure.InformationHolders.PH.all_tables) {
        db.execSQL(("DROP TABLE IF EXISTS " + string));
    }
}

@java.lang.Override
public void onNext(com.jyutwaa.zhaoziliang.glimpse.Model.Bilibili.TopListType topListType) {
    android.widget.Toast.makeText(mContext, "onNext()!", Toast.LENGTH_SHORT).show();
    mIBlibiliFragment.hideProgressbar();
    mIBlibiliFragment.updateList(topListType);
}

public void onLoginFailed() {
    android.widget.Toast.makeText(getBaseContext(), "Login failed", Toast.LENGTH_LONG).show();
    _loginButton.setEnabled(true);
}

@java.lang.Override
public void onStreamReceived(com.opentok.android.Session session, com.opentok.android.Stream stream) {
    for (demo.tokbox.com.multiparty.MultipartyActivity.SubscriberContainer subscriber : _subsrciberLst) {
        if (null == (subscriber.getStream())) {
            _subscribeStream(subscriber, stream);
        }
    }
}

@java.lang.Override
public boolean isContactUsEnabled(int brandId) {
    return com.desk.android.sdk.helper.PropertyHelper.getBooleanWithArgs(buildBrandKey(com.desk.android.sdk.config.ContactUsPropertyConfig.KEY_CONTACT_US_ENABLED), isCallUsEnabled(), properties, brandId);
}

public void getColor(android.view.View v) {
    new mobiledev.charlottegodley.gemmaphoneapp.ColorPicker(activity, this, "", android.graphics.Color.BLACK, android.graphics.Color.WHITE).show();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_assignments_recycler, container, true);
    butterknife.ButterKnife.bind(this, view);
    return view;
}

private void setUpMessage() {
    android.util.Log.d(jaydahstudios.com.chatstories.MainActivity.TAG, "setUpMessage: Exec");
    lstChat = mDBHelper.getListChat();
}

private void onEditClick(android.view.View view) {
    android.content.Intent newIntent = new android.content.Intent(this, com.example.aaron.welcomeActivity.editBudgetActivity.class);
    com.example.aaron.welcomeActivity.Budget transferBudget = currentBudget;
    newIntent.putExtra("Budget", transferBudget);
    startActivity(newIntent);
}

public static void addBitmapToMemoryCache(java.lang.String key, android.graphics.Bitmap bitmap) {
    if ((com.keepingatimeline.kat.BitmapCache.getBitmapFromMemCache(key)) == null) {
        com.keepingatimeline.kat.BitmapCache.getInstance().mMemoryCache.put(key, bitmap);
    }
}

@java.lang.Override
public void onActivityResult(android.content.Intent data) {
    wipraktikum.informationwallandroidapp.BusinessObject.BlackBoard.BlackBoardAttachment blackBoardAttachment = wipraktikum.informationwallandroidapp.BusinessObject.BlackBoard.BlackBoardAttachment.createNewAttachmentByFilePath(getFilePathFromResult(data));
    addAttachmentViewToAttachmentContainer(blackBoardAttachment);
    blackBoardAttachments.add(blackBoardAttachment);
    otherFragmentIsVisible = false;
    saveBlackBoardAttachmentsToSharedPrefs();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.v(com.enhueco.view.FriendListFragment.LOG, EnHueco.EHSystemNotification.SYSTEM_DID_RECEIVE_FRIEND_AND_SCHEDULE_UPDATES);
    refresh();
}

public static int getTextColor(android.content.Context context) {
    switch (fr.ybo.transportsrennes.application.TransportsRennesApplication.getTheme(context)) {
        case 1 :
            return android.graphics.Color.LTGRAY;
        default :
            return android.graphics.Color.BLACK;
    }
}

void newList(java.lang.String name) {
    android.content.ContentValues contentValues = new android.content.ContentValues();
    contentValues.put(DatabaseHelper.LIST_NAME, name);
    database.insert(DatabaseHelper.TABLE_NAME_MASTER, null, contentValues);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putInt(filtermusic.net.ui.favorites.FavoritesFragment.LAST_OPENED_VIEW, mViewFlipper.getDisplayedChild());
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase sqLiteDatabase) {
    sqLiteDatabase.execSQL(SqlContacts.STATEMENT_CREATE_TABLE_USERS);
    sqLiteDatabase.execSQL(SqlContacts.STATEMENT_CREATE_TABLE_INSULIN_DOSE);
    android.util.Log.i("DATABASE", "tables  is crated! ");
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    mActiveStreamType = -1;
    mAudioManager.forceVolumeControlStream(mActiveStreamType);
    setZenPanelVisible(false);
    mDemoIcon = 0;
    mSecondaryIconTransition.cancel();
}

public void changeCursor(android.database.Cursor c) {
    if ((cursor) != null)
        c.close();
    
    cursor = c;
    notifyDataSetChanged();
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_detail_msg);
    butterknife.ButterKnife.bind(this);
    init();
    loadData();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    if ((passwordList) != null)
        outState.putStringArray(org.exobel.routerkeygen.ui.NetworkFragment.PASSWORD_LIST, passwordList.toArray(new java.lang.String[0]));
    
}

@java.lang.Override
public void onReceive(final android.content.Context context, android.content.Intent intent) {
    if (intent.getAction().equals(com.infiniteshield.main.NotificationReceiver.ACTION_STOP)) {
        com.infiniteshield.main.Shield.toggle(context);
        context.sendBroadcast(new android.content.Intent(MainActivity.UPDATE_UI_ACTION));
    }
}

public void editPatientProf(android.view.View v) {
    setFieldsEnability((!(mEditTextCustomerFName.isEnabled())));
    com.extenprise.mapp.medico.util.Utility.collapse(mContLay, false);
    com.extenprise.mapp.medico.util.Utility.collapse(mAddrLayout, true);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    showSnack();
    deleteMessage(finalOpponentId);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    displayRecyclerView(1);
    dialog.dismiss();
}

@java.lang.Override
public void d(java.lang.String text, java.lang.Object... args) {
    if (isDebugEnabled())
        android.util.Log.d(TAG, java.lang.String.format(text, args));
    
}

public void carregaImagem(java.lang.String localArquivoFoto) {
    android.graphics.Bitmap imagemFoto = android.graphics.BitmapFactory.decodeFile(localArquivoFoto);
    usuario.setPathFoto(localArquivoFoto);
}

public com.danimahardhika.cafebar.CafeBar.Builder icon(@android.support.annotation.DrawableRes
int res) {
    mIcon = com.danimahardhika.cafebar.CafeBarUtil.getDrawable(mContext, res);
    return this;
}

private void bindService() {
    android.content.Intent mIntent = new android.content.Intent(this, org.deviceconnect.android.deviceplugin.host.HostDeviceService.class);
    mIntent.setAction("camera");
    bindService(mIntent, mServiceConnection, Context.BIND_AUTO_CREATE);
}

@java.lang.Override
public void removeView(android.view.View view) {
    super.removeView(view);
    android.util.Log.i(psn.oldmilk.swipecard.SwipeDeck.TAG, "removeView");
}

public void showSelectProgramFragment() {
    setTitle("Event Capture");
    switchFragment(new org.hisp.dhis2.android.eventcapture.fragments.selectprogram.SelectProgramFragment(), SelectProgramFragment.TAG);
}

public boolean isMarkForMobileField() {
    return android.text.TextUtils.equals(this.name, "marked_for_mobile") ? true : false;
}

@java.lang.Override
public void failure(retrofit.RetrofitError error) {
    android.widget.Toast.makeText(this, ("error" + filePath), Toast.LENGTH_LONG).show();
}

static java.lang.String getString(@android.support.annotation.NonNull
android.widget.EditText edit, java.lang.String defaultValue) {
    final java.lang.String text = edit.getText().toString();
    if (text.isEmpty()) {
        return defaultValue;
    }
    return text;
}

public static void unregisterActivityReceiver(android.content.BroadcastReceiver receiver) {
    if (com.adsamcik.signalcollector.Play.PlayController.apiActivity) {
        (com.adsamcik.signalcollector.Play.PlayController.registeredCount)--;
        com.adsamcik.signalcollector.Play.PlayController.c.unregisterReceiver(receiver);
    }
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.media.MediaPlayer mp = com.cviac.nheart.nheartapp.fragments.MusicFragment.mp;
    if (mp != null) {
        mp.release();
    }
    doUnbindService();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.profile_page);
    android.widget.Toast.makeText(getApplicationContext(), "Successfully Signed In", Toast.LENGTH_LONG);
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    if (savedInstanceState != null) {
        checkBoxSetTime.setChecked(savedInstanceState.getBoolean("IsCheckedBox"));
    }
}

private void menuLoadContacts(java.lang.String toastText) {
    kobeissidev.autobirthday.Settings.loadContacts(getApplicationContext(), dbHandler, granted);
    android.widget.Toast.makeText(this, toastText, Toast.LENGTH_SHORT).show();
    finish();
    startActivity(getIntent());
}

public void onClick(android.view.View v) {
    com.cards.flash.testez.EditCardFragment.cateObject = com.cards.flash.testez.NavigationDrawerFragment.getCurrCateObject();
    android.content.Intent intent = new android.content.Intent(getContext(), com.cards.flash.testez.ShareActivity.class);
    startActivity(intent);
}

public static void startHookFragment(android.app.Activity activity, android.content.Intent rawIntent, com.jude.ferryman.internal.router.result.OnActivityResultListener listener) {
    com.jude.ferryman.internal.router.result.HookFragment fragment = com.jude.ferryman.internal.router.result.ActivityResultHooker.getValidFragment(((android.support.v4.app.FragmentActivity) (activity)));
    fragment.startActivityForResult(0, rawIntent, listener);
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    newTemp.behaviours.get(index).bName = bName.getText().toString();
    newTemp.behaviours.get(index).type = spinner.getSelectedItemPosition();
    updateBehaviours();
}

protected void onCreate(android.os.Bundle bundle) {
    super.onCreate(bundle);
    setContentView(R.layout.sorusayfasi);
    tanimlar();
    hangisorudasin = 0;
    soruyugetir(hangisorudasin);
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {
    sqLiteDatabase.execSQL(("DROP TABLE IF EXISTS " + (BusContract.BusEntry.TABLE_NAME)));
    sqLiteDatabase.execSQL(("DROP TABLE IF EXISTS " + (BusContract.BusEntry.TABLE_NAME_SINGLE_BUS)));
    onCreate(sqLiteDatabase);
}

@java.lang.Override
public void finalize() throws java.lang.Throwable {
    if (!(isReleased)) {
        android.util.Log.w(TAG, (("AnyMemoDBOpenHelper for db " + (dbPath)) + " is not released before being GCed. This class must be explicitly released! Force releasing now."));
        org.liberty.android.fantastischmemo.common.AnyMemoDBOpenHelperManager.forceRelease(dbPath);
    }
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putInt(idv.seventhmoon.hkinfomap.MapsActivity.STATE_SELECTED_NAVIGATION_ITEM, getSupportActionBar().getSelectedNavigationIndex());
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    cc.xiaoyuanzi.pianorobot.player.PianoPlayer.getPlayer().play(this, mStaffList.get(i));
}

public void onSuccess(int statusCode, cz.msebera.android.httpclient.Header[] headers, org.json.JSONObject response) {
    android.widget.Toast.makeText(context, (("Success, " + response) + " has been removed from your list"), Toast.LENGTH_LONG).show();
    Refresh();
}

void initBitmap() {
    mBitmap = android.graphics.Bitmap.createBitmap(1280, 720, Bitmap.Config.ARGB_8888);
    mBitmap.eraseColor(Color.BLACK);
    mImageView.setImageBitmap(mBitmap);
    mImageView.invalidate();
}

public synchronized void setResponse(int questionNumber, java.lang.String response) {
    android.util.Log.e("RESPONSE", ((("to question #: " + questionNumber) + " setting response: ") + response));
    thisSectionsQuestions.get(questionNumber).setResponseText(response);
}

@java.lang.Override
public void onClick(android.view.View v) {
    saveComputer();
    onBackPressed();
    android.content.Intent goToItems1 = new android.content.Intent(this, ca.ualberta.cs.technologic.Activities.HomePage.class);
    startActivity(goToItems1);
}

public android.widget.TextView addSubItem(int id, @android.support.annotation.NonNull
java.lang.String text) {
    return addSubItem(id, text, 0);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    caldroidFragment.setBackgroundResourceForDate(R.color.caldroid_white, date);
    caldroidFragment.refreshView();
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.common.api.Status status) {
    if (status.isSuccess()) {
        drawGeofence();
    }else {
        android.widget.Toast.makeText(context, ("Error drawing geofence" + status), Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_base);
    mApp = ((com.cloud.BaseApplication) (getApplication()));
    gson = mApp.getGson();
}

@java.lang.Override
public boolean onTouch(android.view.View view, android.view.MotionEvent e) {
    return gestureHandler.onTouch(view, e);
}

private static android.net.Uri getOutputMediaFileUri() {
    return android.net.Uri.fromFile(com.example.arjun.nhacks.GroupHardActivity.getOutputMediaFile());
}

public void getUserFromDB(android.app.Activity activity) {
    com.easemob.chatuidemo.db.UserDao dao = new com.easemob.chatuidemo.db.UserDao(activity);
    java.util.Map<java.lang.String, com.easemob.chatuidemo.domain.User> userlist = dao.getContactList();
    com.easemob.chatuidemo.DemoApplication.getInstance().setContactList(userlist);
}

@java.lang.Override
public void onClick(android.view.View v) {
    itemClickListener.onItemClick(adapter.getItem(position), view, position);
}

public java.lang.String getCarrierPackageNameForBroadcastIntent(android.content.pm.PackageManager packageManager, android.content.Intent intent) {
    return (mCarrierPrivilegeRules) == null ? "" : mCarrierPrivilegeRules.getCarrierPackageNameForBroadcastIntent(packageManager, intent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    getDialog().cancel();
}

public void startDrag(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, android.view.View floatView) {
    startDrag(viewHolder.itemView, viewHolder.getAdapterPosition(), floatView);
}

public void onClick(android.view.View v) {
    android.support.v4.app.ActivityCompat.startActivity(new android.content.Intent());
}

@java.lang.Override
protected void onBindView(android.view.View view) {
    mView = view;
    super.onBindView(view);
    widgetFrameView = ((android.widget.LinearLayout) (view.findViewById(android.R.id.widget_frame)));
    setPreviewColor();
}

@java.lang.Override
public void onError(java.lang.String message) {
    tv.superawesome.sdk.events.SAEventManager.getIntance().LogAdFailed(loadedAd);
    android.util.Log.d(tv.superawesome.sdk.views.SAPlacementView.TAG, ("Error:" + message));
    if ((listener) != null)
        listener.onAdError(message);
    
}

@java.lang.Override
protected void onRestart() {
    super.onRestart();
    android.util.Log.d("SCXTT2", " onRestart() ShowMapActivity - so stop the background location service NOW");
    stopService(new android.content.Intent(this, com.harnk.whereru.BackgroundLocationService.class));
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    long result = intent.getLongExtra("start timer", 1000);
    settingTimer(result);
}

public static void triggerUpdate(android.content.Context context, java.lang.Integer[] appWidgetId) {
    android.content.Intent intent = new android.content.Intent(context, me.anon.controller.provider.PlantWidgetProvider.class);
    intent.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE);
    intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, appWidgetId);
    context.sendBroadcast(intent);
}

@java.lang.Override
public void onSuccess(com.google.firebase.storage.UploadTask.TaskSnapshot taskSnapshot) {
    android.net.Uri downloadUrl = taskSnapshot.getDownloadUrl();
    activity.onImageUploaded(crumbPicture);
}

public boolean validiraj(int sistolicki, int diastolicki, int puls) {
    android.widget.Toast.makeText(context, "Validacija u tijeku!", Toast.LENGTH_SHORT).show();
    return true;
}

@java.lang.Override
public void onTabSelected(android.support.design.widget.TabLayout.Tab tab) {
    viewPager.setCurrentItem(tab.getPosition());
    int id = tab.getPosition();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (((currentValue) < (maxValue)) && (((currentValue) + (stepValue)) < (maxValue))) {
        currentValue += stepValue;
        updateCurrentValue();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.digitalwall.utils.ToolbarUtils.setFullScreenToolbar(this);
}

public static final void sendEvent(android.support.v4.app.Fragment fragment, java.lang.String category, java.lang.String action) {
    if (fragment != null) {
        wb.receipts.analytics.Events.sendEvent(fragment.getActivity(), action, category);
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.cancel();
    editor.putBoolean(Constants.PREFERENCES_SHOW_ALARM, false).commit();
    editor.putBoolean(Constants.PREFERENCES_ALREADY_RATED, true).commit();
    editor.apply();
}

private void initView() {
    com.huichongzi.fastwidget4android.widget.AnimationListViewNew blindsListView = ((com.huichongzi.fastwidget4android.widget.AnimationListViewNew) (findViewById(R.id.blinds_listview_act_list)));
    blindsListView.setAdapter(new com.huichongzi.fastwidget4android.adapter.AnimationListAdapter(this));
    blindsListView.setAnimationType(AnimationListViewNew.TYPE_BLINDS);
    blindsListView.setIsVertical(false);
}

public void setDeniedDialog(android.app.Dialog deniedDialog, boolean enableExit) {
    this.mDeniedDialog = deniedDialog;
    this.mEnableExit = enableExit;
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    java.lang.String docFilename = subjectView.getText().toString();
    java.lang.String docMessage = messageView.getText().toString();
}

@android.annotation.SuppressLint(value = "NewApi")
@java.lang.Override
public void run() {
    if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) {
        inAppWebView.load(("javascript:" + finalScriptToInject), null);
    }else {
        inAppWebView.evaluateJavascript(finalScriptToInject, null);
    }
}

private void setItems(java.util.List<edu.galileo.android.twitterclient.entities.Image> newItems) {
    items.addAll(newItems);
    notifyDataSetChanged();
}

@java.lang.Override
public void onFailure(@android.support.annotation.NonNull
java.lang.Exception e) {
    android.widget.Toast.makeText(this, "Failed to add Geofences", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    com.paulvarry.intra42.activities.user.UserActivity.openIt(app, adapter.getItem(position));
}

public void registerTimerCallback(com.fivetrue.workout.timer.service.IRTimerCallback callback) {
    if (callback != null) {
        try {
            com.fivetrue.workout.timer.service.RTimerHelper.sTimerService.registerTimerCallback(callback);
        } catch (android.os.RemoteException e) {
            e.printStackTrace();
        }
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    ((com.example.lucasrosario.extensionchord.RoomActivity) (getActivity())).startMediaPlayer();
    android.util.Log.d("Play", "Play button clicked");
}

public void onClick(android.view.View v) {
    if ((player1_textureState) < 4) {
        (Gameplay.player1_pers)++;
        (Gameplay.player2_vs)++;
        (player1_textureState)++;
        com.example.myapplication.Options.setPlayersPicturesForVar(player1_textureState, player1_leftArrow, player1_texture, player1_rightArrow);
    }
}

@java.lang.Override
public boolean isValid(java.lang.CharSequence value) {
    return (android.text.TextUtils.isEmpty(value)) && ((value.length()) >= (minLength));
}

@java.lang.Override
public void onResponse(java.util.List<com.example.ssteeve.dpd_android.DPDObject> response) {
    android.util.Log.d(this.getClass().getSimpleName(), "response");
}

@java.lang.Override
public void callback(java.lang.String url, android.widget.ImageView iv, android.graphics.Bitmap bm, com.androidquery.callback.AjaxStatus status) {
    aq.id(iv).image(com.florianmski.tracktoid.Utils.shadowBitmap(com.florianmski.tracktoid.Utils.roundBitmap(bm))).animate(android.R.anim.fade_in);
}

@java.lang.Override
public boolean dispatchTouchEvent(android.view.MotionEvent ev) {
    if (mFabAnimatorBuilder.isAnimating()) {
        return true;
    }
    return super.dispatchTouchEvent(ev);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    app = com.defch.blogwbly.MyApplication.getInstance(getActivity());
    addPreferencesFromResource(R.xml.settings);
    bindPreference(findPreference(SettingsActivity.THEME_KEY));
    findPreference(SettingsActivity.KEY_DARK_THEME).setOnPreferenceChangeListener(this);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((com.jialin.chat.MessageInputToolBox.faceLayout.getVisibility()) == (VISIBLE)) {
        com.jialin.chat.MessageInputToolBox.showKeyboard(context);
        hideFaceLayout();
    }else {
        showFaceLayout();
    }
}

@java.lang.Override
public okhttp3.Response intercept(org.gdg.frisbee.android.api.Chain chain) throws java.io.IOException {
    org.gdg.frisbee.android.api.EspressoIdlingResource.increment();
    okhttp3.Request request = chain.request();
    okhttp3.Response proceed = chain.proceed(request);
    return proceed;
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    return inflater.inflate(R.layout.fragment_folder, null);
}

private boolean resetTouchEventFlag(final int flag) {
    org.deviceconnect.android.deviceplugin.sw.profile.SWTouchProfile.sFlagTouchEventManage &= ~flag;
    if ((org.deviceconnect.android.deviceplugin.sw.profile.SWTouchProfile.sFlagTouchEventManage) == 0) {
        return false;
    }
    return true;
}

@java.lang.Override
public void navigateChangedImagesScreen() {
    android.content.Intent intent = com.invisibleteam.goinvisible.mvvm.images.ImagesActivity.buildIntent(this);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    isCount = true;
    onTimeListener.startTime();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_setting);
    com.kudakoding.aaizat.kraider.SettingActivity.ipvalue = "192.168.0.1";
    addListenerOnButton();
}

@java.lang.Override
public void onClick(android.view.View view) {
    mChatBox.setText("");
    mChatPresenter.sendClicked();
}

private void copyNativeLibs(android.content.Context context, java.lang.String apkfile, android.content.pm.ApplicationInfo applicationInfo) throws java.lang.Exception {
    java.lang.String nativeLibraryDir = com.morgoo.droidplugin.core.PluginDirHelper.getPluginNativeLibraryDir(context, applicationInfo.packageName);
    com.morgoo.helper.compat.NativeLibraryHelperCompat.copyNativeBinaries(new java.io.File(apkfile), new java.io.File(nativeLibraryDir));
}

@java.lang.Override
public void onConnected(android.os.Bundle arg0) {
    getLocation(null);
}

public void fetchCalls(java.lang.String filter) {
    cancelFetch();
    int requestId = newCallsRequest();
    fetchCalls(com.android.dialer.calllog.CallLogQueryHandler.QUERY_CALLLOG_TOKEN, requestId, filter);
}

@java.lang.Override
public void onInfoWindowClick(com.google.android.gms.maps.model.Marker marker) {
    at.sw2017.q_up.Place p = ((at.sw2017.q_up.Place) (marker.getTag()));
    mapsGoDetails(p.placeId);
}

private com.mapbox.mapboxsdk.geometry.LatLng getLatLng(final android.location.Location location) {
    return new com.mapbox.mapboxsdk.geometry.LatLng(location.getLatitude(), location.getLongitude());
}

public void deleteTask(int count) {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    db.execSQL(("DELETE from TASKS WHERE ID == " + count));
    db.close();
}

public void createButtons() {
    addSupplyButton = ((android.widget.Button) (findViewById(R.id.main_button)));
    refreshButton = ((android.widget.Button) (findViewById(R.id.refresh_button)));
    android.view.View addButton = findViewById(R.id.add_button);
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    tdd.tracker.hobby.hobbytrackerincremental.database.TableManager tableAdmin = tdd.tracker.hobby.hobbytrackerincremental.database.TableManager.getInstance();
    for (tdd.tracker.hobby.hobbytrackerincremental.database.Table t : tableAdmin.getTables())
        t.createTable(db);
    
}

public void notifyRunInBackground(com.wangjie.androidbucket.services.network.HippoResponse<T> response) {
    if (response.isSuccess()) {
        listener.onResponseInBackground(response.getResult());
    }
}

public static void i(java.lang.String msg) {
    if (android.text.TextUtils.isEmpty(msg)) {
        return ;
    }
    if (com.vinci.imageloader.core.util.MLog.DEBUG) {
        android.util.Log.i(com.vinci.imageloader.core.util.MLog.TAG, msg);
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    hestia.backend.BackendInteractor backendInteractor = hestia.backend.BackendInteractor.getInstance();
    android.content.SharedPreferences prefs = getSharedPreferences(hestia.UI.DeviceListActivity.HESTIA_IP, 0);
    super.onCreate(savedInstanceState);
}

protected void onNewGame(android.view.View v) {
    BattleActivity.score_player_one = 0;
    BattleActivity.score_player_two = 0;
    BattleActivity.winner = 0;
    android.content.Intent intent = new android.content.Intent(this, com.bugsnguns.asprokopov.tapattack.ChooseTargetActivity.class);
    startActivity(intent);
}

public void onFinish() {
    es.carlosrolindez.kbfinder.SelectBtActivity.service.stop();
    es.carlosrolindez.kbfinder.SelectBtActivity.i2dpDisconnectionTimerStarted = false;
    android.util.Log.e(es.carlosrolindez.kbfinder.SelectBtActivity.TAG, "stop after i2dConnection");
    es.carlosrolindez.kbfinder.A2dpService.connectBluetoothA2dp(es.carlosrolindez.kbfinder.SelectBtActivity.mContext, es.carlosrolindez.kbfinder.SelectBtActivity.deviceMAC);
    es.carlosrolindez.kbfinder.SelectBtActivity.service.start();
}

private void OnWeekDayChecked(int dayIndex, java.lang.String dayName) {
    android.app.Fragment f = getFragmentManager().findFragmentById(R.id.mainFragment);
    if (f instanceof com.SFEDU.schedule_1.ScheduleEditRecordFragment) {
        return ;
    }
    updateCurrentDayReference();
    showDayWeek(mCurrentDay);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main_drawer);
    toolbar = ((com.example.rocklct.bangumi.mybangumi.ui.activity.Toolbar) (findViewById(R.id.mytoolbar)));
    setSupportActionBar(toolbar);
    initTabs();
    initDrawer();
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    removeAllDataAndLogout();
    startActivity(new android.content.Intent(this, ch.defiant.purplesky.activities.AboutActivity.class));
    return true;
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeString(this.action);
}

@java.lang.Override
public void onClick(android.view.View v) {
    startStopWatch();
    startService(new android.content.Intent(getApplicationContext(), tracking.id11723222.com.trackingapplication.services.TrackingService.class));
    android.widget.Toast.makeText(getApplicationContext(), Constants.STARTED, Toast.LENGTH_LONG).show();
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.util.Log.d(com.playxiangqi.hoxchess.MainActivity.TAG, "onPause");
    com.playxiangqi.hoxchess.NetworkController.getInstance().removeListener(this);
    com.playxiangqi.hoxchess.MessageManager.getInstance().removeListener(this);
}

@java.lang.Override
public void run() {
    com.okandroid.boot.widget.PageDataAdapter.ExtraPageLoadingStatusCallback safetyCallback = callback;
    if (safetyCallback == null) {
        safetyCallback = new com.okandroid.boot.widget.PageDataAdapter.SimpleExtraPageLoadingStatusCallback();
        ensurePageLoadingStatusHandler();
        mPageLoadingStatusHandler.showPageLoadingStatus(this, pageLoadingStatus, safetyCallback);
    }
}

public void stop() {
    if ((mClient) == null) {
        android.util.Log.e(C.TAG, "locationclient can not be null before using is");
    }else {
        mClient.stop();
    }
}

@java.lang.Override
public void handlerNotification(android.content.Context context, boolean binded, com.yy.httpproxy.service.PushedNotification pushedNotification) {
    if (!binded) {
        showNotification(context, pushedNotification);
    }
    sendArrived(context, pushedNotification);
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.content.SharedPreferences.Editor editor = android.preference.PreferenceManager.getDefaultSharedPreferences(this).edit();
    editor.putBoolean(com.mohammedsazid.android.launsz.v2.AppsService.FORCE_REFRESH, true);
    editor.commit();
    return START_STICKY;
}

@java.lang.Override
public void setButtonDrawable(android.graphics.drawable.Drawable d) {
    getPaddingDrawable().setWrappedDrawable(d);
    super.setButtonDrawable(getPaddingDrawable());
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    mp.reset();
    ibPlay.setImageResource(R.drawable.ic_track_play);
    floatingActionButton.setVisibility(View.VISIBLE);
    rlPlayer.setVisibility(View.GONE);
}

public static int dp2px(android.content.Context context, int dp) {
    float scale = context.getResources().getDisplayMetrics().density;
    return ((int) ((dp * scale) + (0.5F * dp)));
}

@java.lang.Override
public void onDelete(android.view.View view) {
    int position = mSlideItemPosition;
    onItemDelete(view, position);
    mSlideItemPosition = -1;
}

@java.lang.Override
public void run() {
    com.jiang.android.push.utils.L.i("sadasdaddd");
    com.jiang.android.push.flyme.FlymeReceiver.mPushInterface.onAlias(context, subAliasStatus.getAlias());
}

public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    webView.loadUrl("javascript:setClientToolConnected()");
    if ((jsCommand) != null)
        webView.loadUrl(jsCommand);
    
    setProgressDialogVisible(false);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState, android.os.PersistableBundle outPersistentState) {
    super.onSaveInstanceState(outState, outPersistentState);
    getSupportFragmentManager().putFragment(outState, hu.tvarga.popularmovies.GridViewActivity.GRID_FRAGMENT_SAVED_INSTANCE_KEY, gridViewFragment);
}

private void openLink() {
    if (!(isPermissionGranted())) {
        android.support.v4.app.ActivityCompat.requestPermissions(getActivity(), new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, ru.dzgeorgy.versioncheck.VersionUpdateDialog.PERMISSION_WRITE_EXTERNAL_STORAGE);
    }else {
        ru.dzgeorgy.versioncheck.VersionUpdateDialog.startDownload();
    }
}

public void reset(java.lang.String input) {
    this.input = input;
    android.util.Log.d("Lexer", ("input string is " + input));
    currentPos = 0;
    pushedBackTokens = new java.util.Stack<>();
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    if (shouldClearOnOpen && ((editText.length()) > 0)) {
        editText.getText().clear();
    }
    editText.requestFocus();
}

@java.lang.Override
public void onClick(android.view.View v) {
    toggleLike(v.getContext(), holder, comment, position);
}

public static void deleteFlight(com.airmap.airmapsdk.models.flight.AirMapFlight flight, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<java.lang.Void> callback) {
    com.airmap.airmapsdk.networking.services.FlightService.deleteFlight(flight, callback);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    username.set(s.toString());
}

private java.lang.String getLastUpdatedDate(android.content.Context context) {
    android.content.SharedPreferences sharedPref = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
    return sharedPref.getString(Constants.KEY_LAST_UPDATED_DATE, "N/A");
}

public void NewWordClicked(android.view.View Sender) {
    selectedWord = wordGenerator.nextWord(selectedLength);
    scrambledWord = edu.westga.rnrscramble.model.WordScrambler.Scramble(selectedWord);
    setScrambleTextView(scrambledWord);
    setAnswerTextView("");
}

public void refresh(android.widget.CheckBox checkbox, int index) {
    java.util.Set<java.lang.Object> modelValues = retrieveModelValues();
    checkbox.setChecked(modelValues.contains((areValuesDefined() ? values[index] : index)));
}

@java.lang.Override
public void onJoinedRoom(int statusCode, com.google.android.gms.games.multiplayer.realtime.Room room) {
    if (statusCode != (com.google.android.gms.games.GamesStatusCodes.STATUS_OK)) {
        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
        showGameError();
        finish();
    }
    showWaitingRoom(room);
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    mediaPlayer.stop();
    mediaPlayer.release();
    seekBarUpdateHandler.removeCallbacks(seekBarUpdateRunnable);
    return false;
}

protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    IntegrationInterface.act.onActivityResult(requestCode, resultCode, data);
    if ((requestCode == (videoRequestCode)) && (resultCode == (RESULT_OK))) {
        authenticateUser();
    }
}

public static void initIonProxy(android.content.Context context) {
    try {
        java.lang.Class.forName("com.koushikdutta.ion.Ion");
        com.egame.proxy.support.ion.IonProxy.doInit(context);
    } catch (java.lang.ClassNotFoundException e) {
        android.util.Log.d(ProxyUtil.TAG, "Ion is invalid");
    }
}

public void showAlertDialog() {
    android.app.Dialog alertDialog = new android.app.Dialog(mainActivity, R.style.DialogTheme);
    alertDialog.setContentView(R.layout.custom_alert_dialog);
    alertDialog.show();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    new com.myhitchhikingspots.SettingsActivity.getCountriesAsyncTask(false).execute();
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    updatePreference(findPreference(key));
}

public boolean hasInternetConnection(android.content.Context context) {
    return (!(isInAirplaneMode(context))) && (isNetworkAvailable(context));
}

@java.lang.Override
public void onClick(android.view.View view) {
    sendMessageWithPayload(mMessageEditText.getText().toString(), FriendlyMessage.MessageType.Text, false, true);
    mMessageEditText.setText("");
}

public void onDrawerOpened(android.view.View drawerView) {
    super.onDrawerOpened(drawerView);
    setActionBarTitle(mTitle);
    invalidateOptionsMenu();
}

void sendCode(java.lang.String code, android.content.Context context, com.mooo.ewolvy.uppidown.AASuper aaState, android.widget.ImageView iv) {
    codeToSend = code;
    com.mooo.ewolvy.uppidown.SSLServer.doConnection connection = new com.mooo.ewolvy.uppidown.SSLServer.doConnection();
    connection.execute(context);
    currentAAState = aaState;
    onOffSign = iv;
}

public void showQuestion() {
    android.util.Log.e(rocks.throw20.funwithcountries.MainActivity.LOG_TAG, ("showQuestion " + true));
    rocks.throw20.funwithcountries.Question newQuestions = new rocks.throw20.funwithcountries.Question(this);
    newQuestions.getQuestion("");
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    final android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (this.getSystemService(Context.NOTIFICATION_SERVICE)));
    notificationManager.cancelAll();
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(("create table clipboard " + "(id integer primary key autoincrement not null, cliptext text,starred boolean default 0,timestamp default current_timestamp not null)"));
    db.close();
}

public static void showMsg(android.view.View targetView, int strId) {
    android.support.design.widget.Snackbar.make(targetView, strId, Snackbar.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    dialogOnAddButtonPressed();
    mTracker.send(new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory("GlucoseDialog").setAction("Add").build());
    removeWhiteOverlay();
}

@java.lang.Override
public void onSuccess(com.facebook.share.Sharer.Result shareResult) {
    bringBackWebView();
    android.util.Log.i("Share Success", "Shared to facebook");
}

@butterknife.OnClick(value = R.id.today_course_import_or_see_all)
public void seeAll(android.view.View view) {
    android.content.Intent through_out = new android.content.Intent(getActivity(), me.gensh.helloustb.Timetable.class);
    startActivity(through_out);
}

public void stop() {
    if (!(org.droidplanner.services.android.BuildConfig.SITL_DEBUG)) {
        controllerLinkManager.stop();
    }
    soloLinkMgr.stop();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.detailed_item_screen_withpicker);
    init_views();
    setHomeButton();
    get_set_intentdata();
    setInitial_itemPrice();
    setTotalPrice_withquantity();
    send_data_tomainmenu();
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.content.SharedPreferences sharedPreferences = settingsFragment.getPreferenceScreen().getSharedPreferences();
    sharedPreferences.unregisterOnSharedPreferenceChangeListener(this);
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkIfClueFound();
    showCompletedQuestMessage();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    return com.comp.ninti.general.NavigationUtil.switchNavigation(item, this);
}

@java.lang.Override
public void onClick(final android.view.View v) {
    android.support.v4.app.FragmentActivity activity = getActivity();
    com.example.alexm.kunzhutproject.MainActivity mainActivity = ((com.example.alexm.kunzhutproject.MainActivity) (activity));
    mainActivity.showFragment(new com.example.alexm.kunzhutproject.ChatFragmant());
}

public void onFailure(java.io.IOException e) {
    android.util.Log.w("Download", "Download Failed");
    for (org.bottiger.podcast.service.Downloader.engines.Callback callback : mExternalCallback) {
        callback.downloadInterrupted(mEpisode.getId());
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(" ", "Insta clicked");
    android.content.Intent intent = new android.content.Intent(getActivity(), com.appspot.glancesocial.glance.InstaWebViewActivity.class);
    startActivity(intent);
}

private void showSpinner(java.lang.String message) {
    this.mSpinner = new android.app.ProgressDialog(getApplicationContext());
    this.mSpinner.setMessage(message);
    this.mSpinner.setCancelable(false);
    this.mSpinner.show();
}

private void onPlayButtonClick(android.widget.Button playButton, java.lang.String fileName) {
    mInput.playback(playButton, fileName);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    ((com.supafly.swampdefense.MainActivity) (getActivity())).isPaused = !(((com.supafly.swampdefense.MainActivity) (getActivity())).isPaused);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    butterknife.ButterKnife.bind(this);
    this.buildGoogleApiClient();
    this.buildGeoFence();
}

public static android.graphics.Bitmap getAvatarValidBitmap(android.graphics.Bitmap bitmap) {
    return org.puresoftware.chocalandroid.ChocalImage.cropToSquare(org.puresoftware.chocalandroid.ChocalImage.resize(bitmap, 128, 128));
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.content.SharedPreferences sharedPrefs = edu.mit.mitmobile2.PreferenceUtils.getDefaultSharedPreferencesMultiProcess(getActivity());
    if (filterChanged(sharedPrefs)) {
        getCalendarEvents(getArguments().getString(edu.mit.mitmobile2.events.fragment.CalendarDayFragment.DATE), true);
    }
}

@java.lang.Override
public android.nfc.INfcCardEmulation getNfcCardEmulationInterface() {
    if (mIsHceCapable) {
        return mCardEmulationManager.getNfcCardEmulationInterface();
    }else {
        return null;
    }
}

@java.lang.Override
public void onScroll(android.widget.AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
    spinner.setTag(R.id.pos, firstVisibleItem);
    spinner.setSelection(firstVisibleItem);
}

@java.lang.Override
public void onViewPagerDataChanged(android.support.v4.view.ViewPager viewPager) {
    for (int j = 0; j < 17; j++) {
        mTabLayout.newTab();
    }
    mTabLayout.setupWithViewPager(viewPager);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    mAnimator = null;
    mTouchedDotView.getOnDotStateChangedListener().onDismissed(mTouchedDotView);
    dismissed();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    toast = new android.widget.Toast(this);
    toast.setDuration(Toast.LENGTH_SHORT);
    handler = new android.os.Handler();
    showMessage("Service created");
}

void userFavorites(com.dreamdigitizers.androidbaselibrary.utilities.UtilsDialog.IRetryAction pRetryAction, int pId);

@java.lang.Override
public void onNext(lt.dualpair.android.data.resource.Match match) {
    adapter.append(match);
    adapter.notifyDataSetChanged();
    view.stopRefreshing();
    publish();
}

public void displayForTeamA(int score) {
    android.widget.TextView scoreView = ((android.widget.TextView) (findViewById(R.id.team_a_score)));
    scoreView.setText(java.lang.String.valueOf(score));
}

public void openEditorForNewNote() {
    android.content.Intent intent = new android.content.Intent(this, com.example.plainolnotes.EditorActivity.class);
    startActivityForResult(intent, com.example.plainolnotes.MainActivity.EDITOR_REQUEST_CODE);
}

public abstract void Init(android.widget.ImageView imageView, android.widget.ImageView imageView2, com.xingzhiqiao.zipperlockdemo.LockScreenUtils lockScreenUtils);

@java.lang.Override
public void onClick(android.view.View v) {
    final android.content.Context context = v.getContext();
    makeQuickAction(context, v, indexInItineraryList, position, mDataset.get(position));
}

private void handleStartApp(android.content.Intent intent) {
    android.os.Bundle bundle = intent.getExtras();
    mPendingIntent = ((android.app.PendingIntent) (bundle.get("PendingIntent")));
    if ((dbConditionFences) != null) {
    }
}

private void hideOption(int id) {
    android.view.MenuItem item = mOptionsMenu.findItem(id);
    item.setVisible(false);
}

@java.lang.Override
public void onGeoQueryReady() {
    java.lang.System.out.println("All initial data has been loaded and events have been fired!");
    android.widget.Toast.makeText(this, "service ready", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    startCreateJournalEntryActivity(view, journalId, journalName);
    android.widget.Toast.makeText(this, ("Add to: " + journalId), Toast.LENGTH_SHORT).show();
}

public static mn.aug.restfulandroid.security.AuthorizationManager getInstance(mn.aug.restfulandroid.security.Context context) {
    if ((mn.aug.restfulandroid.security.AuthorizationManager.mInstance) == null) {
        mn.aug.restfulandroid.security.AuthorizationManager.mInstance = new mn.aug.restfulandroid.security.AuthorizationManager(context);
    }
    return mn.aug.restfulandroid.security.AuthorizationManager.mInstance;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_movie_detail);
    getSupportFragmentManager().beginTransaction().add(R.id.details_container, new com.example.mlanka.popularmovies.MovieDetailActivityFragment()).commit();
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    animating = true;
    setTouchAble((!(animating)));
}

public void submitAnswer(android.view.View view) {
    java.lang.String selectedValue = ((android.widget.Button) (view)).getText().toString();
    com.codequest.main.GameController.getGameController(this).update(selectedValue);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    if ((!(com.hijacker.MainActivity.watchdog_thread.isAlive())) && (watchdog)) {
        com.hijacker.MainActivity.watchdog_thread = new java.lang.Thread(com.hijacker.MainActivity.watchdog_runnable);
        com.hijacker.MainActivity.watchdog_thread.start();
    }
}

public void clearKeyguardWallpaper() {
    if (com.android.server.wallpaper.WallpaperManagerService.DEBUG)
        android.util.Slog.v(com.android.server.wallpaper.WallpaperManagerService.TAG, "clearWallpaper");
    
    synchronized(mLock) {
        clearKeyguardWallpaperLocked(android.os.UserHandle.getCallingUserId());
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_main);
    mPresentType = getResources().getStringArray(R.array.present_types);
    buildLoginDialog();
    mLoginDialog.show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    changeActivity(Activities.DESKTOP_SETTING_FERMAT_NETWORK.getCode(), ApplicationConstants.SETTINGS_FERMAT_NETWORK);
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int w, int h) {
    android.util.Log.i("guoli", "========surfaceChanged =============");
    if (needToResetMovieRatio) {
        mDisplaySizeMode = MediaPlayerMovieRatioView.MOVIE_RATIO_MODE_16_9;
        mMediaPlayerVideoView.setVideoLayout(mDisplaySizeMode);
        needToResetMovieRatio = false;
    }
}

@java.lang.Override
public void onPanelSlide(android.view.View panel, float slideOffset) {
    android.util.Log.i("Reid", "panel is sliding");
    slide_tab_text.setText("");
}

protected final void postNotification(int notificationId, android.support.v4.app.NotificationCompat.Builder builder) {
    module.postNotification(notificationId, builder);
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL((((("CREATE TABLE " + (com.gotwingm.my.meditation.RemindersDBHelper.TABLE_NAME)) + " (_ID INTEGER PRIMARY KEY AUTOINCREMENT, ") + (com.gotwingm.my.meditation.RemindersDBHelper.ACTION)) + " TEXT);"));
    android.util.Log.d("###", "Table created");
}

public void onDestroyActionMode(android.view.ActionMode mode) {
    for (int i = 0; i < (grvNoteList.getCount()); i++) {
        grvNoteList.getChildAt(i).setBackground(getResources().getDrawable(R.drawable.note_background));
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (savedInstanceState == null) {
        if (!(questionListPresenter.handleDeepLinks(getIntent()))) {
            questionListPresenter.loadQuestions();
        }
    }
}

public static boolean isAutoincrement(android.support.database.Column column) {
    return (column.isPrimaryKey()) && (android.support.database.util.TableUtil.isIntegerType(column.getClass()));
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.i(nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, "set pwm success");
    if (pwm > 0) {
        updateLightBulb(true);
    }else {
        updateLightBulb(false);
    }
    done();
}

@java.lang.Override
public void onClick(co.snagapp.android.Sms sms) {
    dataPersister.addNumberToBlockedNumbers(sms.getId());
    numbers.add(sms);
    onBackPressed();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    com.mahovd.bignerdranch.criminalintent.Crime crime = mCrimes.get(position);
    return com.mahovd.bignerdranch.criminalintent.CrimeFragment.newInstance(crime.getId());
}

@java.lang.Override
public void onUploadCompleted() {
    android.util.Log.d(com.wolfpakapp.wolfpak2.camera.editor.PictureEditorLayout.TAG, "Upload Completed");
    com.wolfpakapp.wolfpak2.camera.editor.UndoManager.clearStates();
    startCamera();
}

@java.lang.Override
public boolean dispatchTouchEvent(android.view.MotionEvent ev) {
    return super.dispatchTouchEvent(ev);
}

protected void bleNoBtAdapter() {
    android.content.Intent intent = new android.content.Intent(com.hypercryptic.bleware.BLEService.BLE_NO_BT_ADAPTER);
    sendBroadcast(intent);
}

private void showTimePickerDialog(android.view.View view) {
    android.support.v4.app.DialogFragment showTime = new com.example.framgia.hrm_10.controller.time.DatePickerFragment().setTextViewBirthday(mTextViewBirthday);
    showTime.show(getSupportFragmentManager(), Settings.DATE_PICKER);
}

public com.google.blockly.blocks.Block.Builder setPosition(android.graphics.Point position) {
    mPosition = position;
    return this;
}

@java.lang.Override
protected void onDestroy() {
    storeIP();
    android.os.Process.killProcess(android.os.Process.myPid());
    super.onDestroy();
}

@java.lang.Override
public void run() {
    final android.widget.TextView textView3 = ((android.widget.TextView) (findViewById(R.id.textView3)));
    textView3.setText("Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed, Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed.");
}

@java.lang.Override
public boolean onDoubleTap(android.view.MotionEvent event) {
    onSingleTapUp(event);
    onSingleTapUp(event);
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    sharedPreference.addFavorite(myContext, places.get(position));
    java.lang.String temp = java.lang.String.valueOf(position);
    android.util.Log.v("position", temp);
}

private void showNetworkError() {
    hideAllInterfaceElements();
    android.support.v4.app.DialogFragment networkErrorFragment = new com.arjanvlek.cyngnotainfo.views.NetworkErrorFragment();
    networkErrorFragment.show(getFragmentManager(), "NetworkError");
}

public void setListAdapter(android.widget.ListAdapter adapter) {
    synchronized(this) {
        org.xbmc.android.util.LOG.D(org.xbmc.android.remote.presentation.controller.FileListController.TAG, "setListAdapter()...");
        mAdapter = adapter;
        mList.setAdapter(mAdapter);
    }
}

@java.lang.Override
public void onSuccess(com.quickblox.users.model.QBUser result, android.os.Bundle params) {
    android.util.Log.d(com.quickblox.sample.videochatwebrtcnew.activities.ListUsersActivity.TAG, "onSuccess login to chat with params");
    android.content.Intent intent = new android.content.Intent(this, com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.class);
    intent.putExtra("login", login);
    startActivity(intent);
}

private void closeDatabaseNow(java.lang.String dbName) {
    android.database.sqlite.SQLiteDatabase mydb = this.getDatabase(dbName);
    if (mydb != null) {
        mydb.close();
        org.pgsqlite.SQLitePlugin.dbmap.remove(dbName);
    }
}

void keepState(int state) {
    switch (state) {
        case android.service.quicksettings.Tile.STATE_ACTIVE :
            changeToActive();
            break;
        case android.service.quicksettings.Tile.STATE_INACTIVE :
            changeToInactive();
            break;
        default :
            break;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    mPendingDeleteItemPosition = android.support.v7.widget.RecyclerView.NO_POSITION;
    int mPosition = viewHolder.getAdapterPosition();
    notifyItemChanged(mPosition);
}

@java.lang.Override
protected void onCancelled(android.graphics.Bitmap bitmap) {
    super.onCancelled(bitmap);
    synchronized(mPauseWorkLock) {
        mPauseWorkLock.notifyAll();
    }
}

public void sendPauseStopMessage(android.view.View view) {
    byte[] message = com.example.acer.taxiapp.MessengerClient.getPauseStopMessage(lastLocation, this);
    tcpClientService.sendBytes(message);
}

private void setDateToView(int viewId) {
    com.example.eliasvensson.busify.DateDialog dialog = new com.example.eliasvensson.busify.DateDialog(findViewById(viewId));
    android.app.FragmentTransaction ft = getFragmentManager().beginTransaction();
    dialog.show(ft, "DatePicker");
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) {
    mMap = googleMap;
    m = mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(currentPos).draggable(true));
    mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(currentPos, 16));
}

protected void loadMap(com.google.android.gms.maps.GoogleMap googleMap) {
    map = googleMap;
    if ((map) != null) {
        android.widget.Toast.makeText(getContext(), "Map Fragment was loaded properly!", Toast.LENGTH_SHORT).show();
        addMarkersToMap();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((R.id.submitButtonEditCard) == (view.getId())) {
        submitEdits(view);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((objSummaryMatrix) == null)
        objSummaryMatrix = new com.example.swsahu.duplicatecardgame.SummaryMatrix(new java.lang.ref.WeakReference<com.example.swsahu.duplicatecardgame.Game>(CurrentGame), CardHeight, CardWidth);
    
    objSummaryMatrix.SetMatrixType(objSummaryMatrix.MOVE_TRACE);
    objSummaryMatrix.CreateMatrix();
}

public static com.z4.zoptimization.ZOptimization.ZOptimizationBuilder withContext(android.content.Context context) {
    com.z4.zoptimization.ZOptimization.init(context);
    return com.z4.zoptimization.ZOptimization.get().new ZOptimizationBuilder();
}

public void startReceivingToken(android.view.View view) {
    isStarted = true;
    updateButtons();
    startReceiverService();
    tokenValueTextView.setText("");
    title22.setText("Awaiting Transfer...");
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) throws com.tonilopezmr.easysqlite.exception.SQLiteHelperException {
    if ((tables) == null) {
        throw new com.tonilopezmr.easysqlite.exception.SQLiteHelperException("The array of String tables can't be null!!");
    }
    executePragma(db);
    for (java.lang.String table : tables) {
        db.execSQL(table);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(this, ("Note " + (v.getId())), Toast.LENGTH_SHORT).show();
}

public void updateDataSet(int position) {
    android.util.Log.i("Gracker", ("update position =" + position));
    arrayList.remove(position);
    notifyDataSetInvalidated();
    notifyDataSetChanged();
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.desk.java.apiclient.model.Case> call, java.lang.Throwable throwable) {
    callback.onCreateCaseError(new com.desk.android.sdk.error.ErrorResponse(throwable));
}

private void drawNextMonth(android.graphics.Canvas canvas) {
    setCalenderToFirstDayOfMonth(calendarWithFirstDayOfMonth, currentDate, (-(monthsScrolledSoFar)), 1);
    drawMonth(canvas, calendarWithFirstDayOfMonth, ((width) * ((-(monthsScrolledSoFar)) + 1)));
}

public void restoreActionBar() {
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
    actionBar.setDisplayShowTitleEnabled(true);
    actionBar.setTitle(mTitle);
}

public static void init(android.app.Activity act) {
    com.ryangame.pet.jni.Helper.mCanvas = new android.graphics.Canvas();
    com.ryangame.pet.jni.Helper.mPaint = new android.graphics.Paint();
    com.ryangame.pet.jni.Helper.mActivity = act;
    com.ryangame.pet.jni.Helper.mApp = com.ryangame.pet.AppContext.getInstance();
}

@java.lang.Override
public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    bundle = new android.os.Bundle();
    bundle.putInt("position", position);
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    getDelegate().onPostCreate(savedInstanceState);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(this, com.rmr.ngusarov.geoquiz.CheatActivity.class);
    i.putExtra(com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.QUEST_INDEX_TRUE_FALSE_PARAMETR, com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.questArr[com.rmr.ngusarov.geoquiz.GeoQuizMainActivity.counter].isQuestionResult());
    startActivityForResult(i, 0);
}

@java.lang.Override
public void onPause() {
    super.onPause();
    com.gcw.sapienza.places.MainActivity.isForeground = false;
    android.util.Log.d(com.gcw.sapienza.places.MainActivity.TAG, "pause");
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions.indexOf(selectedMsg);
    outState.putInt(org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION, lastSelectedPosition);
}

public static void show(android.support.v7.app.AppCompatActivity activity, org.onebusaway.android.io.elements.ObaStop stop, org.onebusaway.android.report.ui.ReportProblemFragmentCallback callback) {
    org.onebusaway.android.report.ui.ReportStopProblemFragment.show(activity, stop, null, callback);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    mapView.onSaveInstanceState(outState);
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public boolean onFling(android.view.MotionEvent e1, android.view.MotionEvent e2, float velocityX, float velocityY) {
    doFling(e1, e2, velocityX, velocityY);
    return false;
}

private void readFromParcel(android.os.Parcel in) {
    in.readList(unitIds, null);
}

private android.widget.CheckBox removeSupport(android.widget.CheckBox check, android.view.View convertView, int id) {
    check = ((android.widget.CheckBox) (convertView.findViewById(id)));
    check.setVisibility(View.GONE);
    return check;
}

@android.annotation.TargetApi(value = 14)
public static int getNavigationBarHeight(android.app.Activity activity) {
    com.gyf.barlibrary.BarConfig config = new com.gyf.barlibrary.BarConfig(activity, true, true);
    return config.getNavigationBarHeight();
}

public void onTabUnselected(android.app.ActionBar.Tab tab, android.app.FragmentTransaction ft) {
    sg.edu.ntu.sce.fyp.calevent.model.DataManager dataMgr = sg.edu.ntu.sce.fyp.calevent.model.DataManager.getInstance();
    if (dataMgr != null) {
        dataMgr.setTimeSlotList(null);
    }
}

@java.lang.Override
public void onScreenStarted() {
    android.util.Log.d(es.ulpgc.eite.clean.mvp.sample.listDoneMaster.TAG, "calling onScreenStarted()");
    checkAddBtnVisibility();
    checkDeleteBtnVisibility();
    checkDoneBtnVisibility();
}

private void updateTask(vn.com.baohq.simpletodo.data.TaskItem taskItem) {
    android.content.ContentValues values = getContentValues(taskItem);
    vn.com.baohq.simpletodo.data.DataManager.mDbHelper.update(TaskEntry.TABLE_NAME, values, ((TaskEntry.COLUMN_TASK_ID) + " = ?"), new java.lang.String[]{ taskItem.getId().toString() });
}

private void reloadDimens() {
    android.content.res.Resources res = mContext.getResources();
    mIconSize = res.getDimensionPixelSize(R.dimen.status_bar_icon_size);
    mIconHPadding = res.getDimensionPixelSize(R.dimen.status_bar_icon_padding);
    mIconWidth = res.getDimensionPixelSize(R.dimen.status_bar_icon_size);
}

@java.lang.Override
public void onShowPress(android.view.MotionEvent e) {
    if ((mIsPrepressed) && ((mPressedView) != null)) {
        mIsShowPress = true;
    }
    super.onShowPress(e);
}

@java.lang.Override
public void onRemoveChannelMember(java.lang.String userId) {
    android.util.Log.d(com.toraysoft.qinjia_lib.QinjiaManager.TAG, (userId + " exit channel"));
    removeUser(userId);
    mProxy.onRemoveChannelMember(userId);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if ((mTransactionns.size()) != 0)
        sendUpdate();
    
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent homeIntent = new android.content.Intent(android.content.Intent.ACTION_MAIN);
    homeIntent.addCategory(Intent.CATEGORY_HOME);
    homeIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    getContext().startActivity(homeIntent);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(false);
}

@java.lang.Override
public void onDestroy() {
    isRunning = false;
    android.util.Log.i(com.grayraven.robotexample.MyService.TAG, "Service onDestroy");
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((android.hardware.Camera.getNumberOfCameras()) > 0) {
        mPublisher.switchCameraFace((((mPublisher.getCamraId()) + 1) % (android.hardware.Camera.getNumberOfCameras())));
    }
}

@java.lang.Override
public void onCaptureCompleted(@android.support.annotation.NonNull
android.hardware.camera2.CameraCaptureSession session, @android.support.annotation.NonNull
android.hardware.camera2.CaptureRequest request, @android.support.annotation.NonNull
android.hardware.camera2.TotalCaptureResult result) {
    super.onCaptureCompleted(session, request, result);
    android.media.Image image = cameraImageReader.acquireNextImage();
    java.lang.System.out.println("Woohoo");
    unlockFocus();
}

public void onScanCompleted(java.lang.String path, android.net.Uri uri) {
    android.util.Log.i("ExternalStorage", (("Scanned " + path) + ":"));
    android.util.Log.i("ExternalStorage", ("-> uri=" + uri));
}

public void setFrameInScene(android.graphics.RectF frameInScene) {
    this.frameInScene = frameInScene;
    for (com.example.try_gameengine.framework.ILayer child : layers) {
        if (child.isComposite())
            child.setFrameInScene(child.frameInSceneByCompositeLocation());
        
    }
}

@java.lang.Override
public void onError(android.content.Context context, java.lang.Exception e) {
    progress.setVisibility(View.GONE);
    mLogcatSummary.setText(errorText);
    mLogcatSummary.setTextColor(android.support.v4.content.ContextCompat.getColor(getActivity(), errorTextColor));
    e.printStackTrace();
}

@java.lang.Override
public void onBackPressed() {
    android.util.Log.v(BezierGlobals.TAG, "%%%%%%%%%%%%%%> onBACKPressed");
    if ((this.task) != null) {
        this.task.setRunning(false);
    }
    super.onBackPressed();
}

@java.lang.Override
public void onEvent(int eventType, android.os.Bundle params) {
    printe(((("onEvent: type " + eventType) + ", with params: ") + (toString(params.keySet()))));
}

@java.lang.Override
public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) {
    android.app.Dialog dialog = super.onCreateDialog(savedInstanceState);
    dialog.getWindow().requestFeature(Window.FEATURE_CONTEXT_MENU);
    dialog.setCancelable(true);
    return dialog;
}

public void onClick(android.view.View view) {
    java.lang.Thread thread = new java.lang.Thread(mutiThread);
    thread.start();
    try {
        startActivity(intent);
    } catch (java.lang.Exception e) {
        text.setText(e.toString());
    }
}

void handleTag() {
    cordova.getThreadPool().execute(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            android.util.Log.d(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, ("handleTag " + (savedTag)));
            fireTagEvent(tag);
        }
    });
}

@java.lang.Override
public void onPrepareOptionsMenu(android.view.Menu menu) {
    android.view.MenuItem checkable = menu.findItem(R.id.heatmap);
    checkable.setChecked(heatMapActive);
}

@java.lang.Override
public void onClick(android.view.View view) {
    view.setElevation(getResources().getDimension(R.dimen.elevation_card_pressed));
    startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, ItemsContract.Items.buildItemUri(getItemId(vh.getAdapterPosition()))));
}

public int getCurrent() {
    java.lang.String str = java.lang.String.valueOf(((android.widget.TextView) (mText)).getText());
    validateCurrentView(str);
    return mCurrent;
}

private void showStopProblemFragment(org.onebusaway.android.io.elements.ObaStop obaStop) {
    org.onebusaway.android.report.ui.ReportStopProblemFragment.show(this, obaStop, R.id.ri_report_stop_problem, this);
}

static void updatePublishDateIfShouldBePublishedImmediately(org.wordpress.android.fluxc.model.PostModel postModel) {
    if (org.wordpress.android.ui.posts.PostUtils.shouldPublishImmediately(postModel)) {
        postModel.setDateCreated(org.wordpress.android.util.DateTimeUtils.iso8601FromDate(org.wordpress.android.util.DateTimeUtils.nowUTC()));
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkAnswer(true);
    updateQuestion();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle savedInstanceState) {
    android.util.Log.d("Ziolle", ("onCreateView: " + (mSelectedPosition)));
    savedInstanceState.putInt(com.example.android.sunshine.app.ForecastFragment.LIST_POSITION, mSelectedPosition);
    super.onSaveInstanceState(savedInstanceState);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.parse.Parse.enableLocalDatastore(this);
    com.parse.Parse.initialize(this, "T1TTXPJcPzM830GZeCBIupyVU1cMT4tiqByRVFVt", "akwdXIApXkPOGA50FmcbBnWmFCEGatusbOJ1CQnr");
    buildGoogleApiClient();
}

@android.support.annotation.NonNull
@java.lang.Override
public java.lang.Object clone() {
    byte[] result = new byte[data.length];
    java.lang.System.arraycopy(data, 0, result, 0, data.length);
    return new jp.kshoji.javax.sound.midi.MetaMessage(result);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return ingredientListFragment;
        case 1 :
            return stepListFragment;
        default :
            return null;
    }
}

@java.lang.Override
public void onReceivedError(android.webkit.WebView view, int errorCode, java.lang.String description, java.lang.String failingUrl) {
    didReceiveError = true;
    hideLoadingProgress();
    pageIsLoaded = false;
    ViewPagerDownloadManager.instance.done(this, false);
    showErrorMessage(R.string.network_error_message, FontAwesomeIcons.fa_exclamation_circle);
}

void clear(android.transition.Transition.TransitionListener transitionListener) {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) {
        transition.removeListener(transitionListener);
    }
    this.transitionListener = null;
    this.transition = null;
}

@java.lang.Override
public void onFailure(@android.support.annotation.NonNull
java.lang.Exception exception) {
    android.widget.Toast.makeText(this, (url + " does not exist"), Toast.LENGTH_SHORT).show();
}

public void updateAppInfo(com.dkanada.openapk.AppInfo appInfo) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    removeAppInfo(appInfo);
    addAppInfo(appInfo);
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    android.util.Log.d(((opensource.zeocompanion.fragments.MainDuringFragment._CTAG) + ".onTouch"), ("Touch on view " + v));
    userSelect = true;
    return false;
}

@java.lang.Override
public void onUnhandledKeyEvent(android.webkit.WebView view, android.view.KeyEvent event) {
    if (!(mInForeground)) {
        return ;
    }
    if (!(mWebViewController.onUnhandledKeyEvent(event))) {
        super.onUnhandledKeyEvent(view, event);
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    isLong = true;
    start();
    return false;
}

int addAlarm() {
    return addAlarm(true, "fully_charged", "", android.provider.Settings.System.DEFAULT_NOTIFICATION_URI.toString(), "notification", false, true);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    if ((progress > 0) && (progress <= (screenCount))) {
        saveSurvey();
        mCurrentScreen = getScreen(progress);
        setupScreen();
    }
}

public void setData(java.util.List<com.ericsender.android_nanodegree.popmovie.parcelable.ReviewListObj> data) {
    int v = (data.isEmpty()) ? android.view.View.GONE : android.view.View.VISIBLE;
    mReviewListView.setVisibility(v);
    mRowObjs = data;
    notifyDataSetChanged();
}

private android.graphics.Bitmap loadImage(int id) {
    android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeResource(context.getResources(), id);
    android.graphics.Bitmap scaled = android.graphics.Bitmap.createScaledBitmap(bitmap, IMAGE_WIDTH, IMAGE_HEIGHT, true);
    bitmap.recycle();
    return scaled;
}

@java.lang.Override
public void onFailure(com.parse.ParseException exception) {
    android.util.Log.d("zzz-makeReservation", ("get available machine fail " + (exception.getMessage())));
    callback.onFailure(exception);
}

@java.lang.Override
public boolean onInterceptTouchEvent(android.view.MotionEvent ev) {
    dispatchJSTouchEvent(ev);
    return super.onInterceptTouchEvent(ev);
}

public static android.widget.ImageView getImage(android.support.v7.widget.RecyclerView.ViewHolder holder) {
    return ((com.alexvasilkov.gestures.sample.adapters.FlickrPhotoListAdapter.ViewHolder) (holder)).image;
}

public static void init(org.catrobat.paintroid.MainActivity mainActivity, android.graphics.Bitmap first_layer) {
    if ((org.catrobat.paintroid.dialog.LayersDialog.instance) == null)
        org.catrobat.paintroid.dialog.LayersDialog.instance = new org.catrobat.paintroid.dialog.LayersDialog(mainActivity, first_layer);
    
}

private void workoutComplete() {
    android.os.Bundle data = getIntent().getExtras();
    boolean isSaved = data.getBoolean("isSaved");
    if (!isSaved)
        timeTextView.setText("0");
    
    title.setText("YOU'RE DONE!");
}

@java.lang.Override
public void onClick(android.view.View view) {
    ch.dissem.apps.abit.util.Preferences.setWifiOnly(this, true);
    finish();
}

@android.webkit.JavascriptInterface
public void showLoadingScreen(boolean isLoading) {
    webModel.setIsLoading(isLoading);
    java.lang.System.out.println("SHOW LOADING SCREEN>>>");
    webModel.notifyObservers();
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    android.util.Log.i("GameActivity", "surfaceDestroyed");
    paulscode.android.mupen64plusae.jni.NativeExports.notifySDLSurfaceDestroyed();
    mSurface.setEGLContextNotReady();
    mIsSurface = false;
    tryPausing();
}

@java.lang.Override
public void onError(java.lang.Exception e) {
    android.util.Log.i("CZD Websocket", ("Error " + (e.getMessage())));
}

public void startMusic() {
    mediaPlayer = android.media.MediaPlayer.create(context, R.raw.classical_a_minor);
    mediaPlayer.setLooping(true);
    mediaPlayer.start();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.aboutMeMenuItem :
            return true;
        case R.id.preferences :
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    android.util.Log.i(TAG, "onPageScrolled: ");
}

@java.lang.Override
public void finish() {
    super.finish();
    ((android.app.Activity) (context)).finish();
    setMode(com.example.try_gameengine.scene.Scene.FINISHED);
    gameModel.setData(new com.example.try_gameengine.scene.Scene.DestoryData());
    com.example.try_gameengine.framework.LayerManager.deleteSceneLayersByLayerLevel(sceneLayerLevel);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    init();
    startNotificationService();
    checkFillingPhoneNumber();
    setRecyclerView();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putLong("bufferPosition", mExoPlayer.getCurrentPosition());
}

@java.lang.Override
public void onSearch(java.lang.String searchTerm) {
    android.widget.Toast.makeText(this, (searchTerm + " Searched"), Toast.LENGTH_LONG).show();
    toolbar.setTitle(searchTerm);
    getWeekPager(searchTerm);
}

public static int vfmt(java.lang.String tag, java.lang.String fmt, java.lang.Object... args) {
    if (tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_VERBOSE) {
        java.lang.String msg = java.lang.String.format(java.util.Locale.US, fmt, args);
        return android.util.Log.v(tag, msg);
    }
    return 0;
}

private void play(io.evercam.androidapp.dto.EvercamCamera camera) {
    nativeSetUsername(camera.getUsername());
    nativeSetPassword(camera.getPassword());
    nativePlay();
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(this, com.alpha.sound_recorder_app.ui.RecordListActivity.class));
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.util.ArrayList<com.theironyard.finalproject.representations.Reward>> call, java.lang.Throwable t) {
    android.support.design.widget.Snackbar.make(view, "There was an issue with the API.", Snackbar.LENGTH_LONG).setAction("Action", null).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (mTakePictureBtn.isEnabled()) {
        if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) {
            autoFocus();
        }else {
            takePicture();
        }
    }
}

public static com.andrejjj.criminalintent.models.CrimeLab get(android.content.Context context) {
    if ((com.andrejjj.criminalintent.models.CrimeLab.sCrimeLab) == null) {
        return new com.andrejjj.criminalintent.models.CrimeLab(context);
    }else {
        return com.andrejjj.criminalintent.models.CrimeLab.sCrimeLab;
    }
}

public static void stopForegroundDispatch(final android.app.Activity activity, android.nfc.NfcAdapter adapter) {
    adapter.disableForegroundDispatch(activity);
}

public boolean refreshList(android.view.MenuItem item) {
    new me.blueland.metro.activity.BusStationPre.BusController().execute(stationCode);
    return true;
}

@java.lang.Override
public void onPause() {
    int positie = s.getSelectedItemPosition();
    android.content.SharedPreferences.Editor editor = savedValues.edit();
    editor.putInt("spinnerPositie", positie);
    editor.commit();
    super.onPause();
}

@java.lang.Override
public void onClick(android.view.View v) {
    mListener.onListItemSelectedListener(1);
}

public void launchActivity(java.lang.Class target, android.support.v4.util.Pair<android.view.View, java.lang.String>[] sharedElements, java.util.Map<java.lang.String, java.lang.Object> data, boolean killCurrunt) {
    launchActivity(activity, target, null, null, killCurrunt);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (seafDirent.isDir()) {
    }else {
    }
}

public void loadItems() {
    if (!(database.getRunningTask())) {
        android.util.Log.d(es.ulpgc.eite.clean.mvp.sample.listSubjects.TAG, "calling onLoadItemsSubjectsFinished() method");
    }else {
        android.util.Log.d(es.ulpgc.eite.clean.mvp.sample.listSubjects.TAG, "calling onLoadItemsSubjectStarted() method");
        onLoadItemsSubjectStarted();
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if (mDrawerToggle.onOptionsItemSelected(item)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

public static com.google.firebase.database.FirebaseDatabase getDatabase() {
    if ((com.irene.fintrip.Utils.DatabaseUtil.mDatabase) == null) {
        android.util.Log.e("DEBUG", "new DB instance");
        com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true);
        com.irene.fintrip.Utils.DatabaseUtil.mDatabase = com.google.firebase.database.FirebaseDatabase.getInstance();
    }
    return com.irene.fintrip.Utils.DatabaseUtil.mDatabase;
}

@java.lang.Override
public void pause() {
    android.util.Log.v(TAG, "<< Pause has been called! >>");
    if ((isPlaying()) && ((currentState) == (com.piglettee.maxpipes.StreamPlayer.PlayerState.PAUSING))) {
        mediaPlayer.pause();
    }
}

R proceed(android.content.Intent intent) throws T;

public void mensajeGanador() {
    android.support.v7.app.AlertDialog.Builder alertDialog = new android.support.v7.app.AlertDialog.Builder(this);
    alertDialog.setTitle("Felicidades");
    alertDialog.setMessage("¡Juego terminado!");
    alertDialog.show();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    finish();
    setResult(android.app.Activity.RESULT_OK, null);
}

@java.lang.Override
public void onClick(android.view.View v) {
    getLeftButtonAccessor().setBehaviour(new com.matthewtamlin.sliding_intro_screen_library.buttons.IntroButton.RequestPermissions(com.matthewtamlin.testapp.TestBehaviours.PERMISSIONS, com.matthewtamlin.testapp.TestBehaviours.PERM_REQUEST_CODE));
    getFinalButtonAccessor().setText("REQUEST PERMS", null);
}

@java.lang.Override
public VH onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    return decoratedAdapter.onCreateViewHolder(parent, viewType);
}

public static boolean sniffFragmented(com.google.android.exoplayer.extractor.ExtractorInput input) throws java.io.IOException, java.lang.InterruptedException {
    return com.google.android.exoplayer.extractor.mp4.Sniffer.sniffInternal(input, (4 * 1024), true);
}

public void InitializeRealm(android.content.Context context) {
    mContext = context;
    io.realm.RealmConfiguration config = new io.realm.RealmConfiguration.Builder(context).name(context.getString(R.string.realm_name)).build();
    mRealm = io.realm.Realm.getInstance(config);
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d(com.hinohunomi.bgbeacon.BeaconService.TAG, "onDestroy");
    unregisterReceiver(broadcastReceiver);
    mActionHandler.abortBeacon();
}

public void showZeroOffBanner(@android.support.annotation.NonNull
final android.app.Activity activity, java.lang.String message, int background, int foreground) {
    android.support.design.widget.Snackbar snackbar = org.wikipedia.util.FeedbackUtil.makeSnackbar(activity.getWindow().getDecorView(), message, FeedbackUtil.LENGTH_DEFAULT);
    show(snackbar, background, foreground);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    java.lang.Integer integer = ((java.lang.Integer) (parent.getItemAtPosition(position)));
    this.prio = com.example.andreas.studentmanager.models.Prio.makePrio(integer);
}

private void startStory(java.lang.String name) {
    android.content.Intent intent = new android.content.Intent(this, com.epicodus.storytime.StoryActivity.class);
    intent.putExtra(getString(R.string.key_name));
    startActivity(intent);
}

private void updatePageInfo() {
    updatePageInfo(quranPageFeeder.getCurrentPagePosition());
    com.quran.labs.androidquran.util.QuranSettings.getInstance().setLastPage(quranPageFeeder.getCurrentPagePosition());
}

private boolean netCheckin() {
    android.net.ConnectivityManager cm = ((android.net.ConnectivityManager) (getSystemService(Context.CONNECTIVITY_SERVICE)));
    android.net.NetworkInfo netInfo = cm.getActiveNetworkInfo();
    return (netInfo != null) && (netInfo.isConnectedOrConnecting());
}

public void setThumbnailImage(android.graphics.Bitmap bm) {
    bmThumb = bm;
    if (bm != null) {
        imgThumb.setImageBitmap(bm);
    }
}

@java.lang.Override
public void run() {
    android.util.Log.d(com.project.ishoupbud.view.fragment.TAG, "run: ");
    transactionAdapter.notifyDataSetChanged();
    tabLayout.setupWithViewPager(viewPager);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> arg0, android.view.View arg1, int arg2, long arg3) {
    showItem(arg2);
}

@java.lang.Override
protected void onResume() {
    android.widget.Toast.makeText(this, "resume", Toast.LENGTH_SHORT).show();
    mAdapter.swapCursor(com.mynotes.android.mynotes.data.DataUtils.getInstance(this).getAllNotes("date"));
    setAdapter();
    super.onResume();
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    try {
        con.disconnect();
    } catch (java.io.IOException e) {
        android.util.Log.e("ERROR", ("Read this: " + (e.getMessage())));
    }
}

private static com.ziftr.android.ziftrwallet.util.ZLog initLogger() {
    if ((com.ziftr.android.ziftrwallet.ZWApplication.isDebuggable()) || (com.ziftr.android.ziftrwallet.ZWPreferences.getDebugMode())) {
        return new com.ziftr.android.ziftrwallet.util.ZLog.AndroidLogger();
    }
    return new com.ziftr.android.ziftrwallet.util.ZLog.NoOpLogger();
}

public android.view.ViewGroup getInnerView() {
    if ((mHost) instanceof com.taobao.weex.ui.view.refresh.wrapper.BounceScrollerView) {
        return ((com.taobao.weex.ui.view.refresh.wrapper.BounceScrollerView) (mHost)).getInnerView();
    }else {
        return getHostView();
    }
}

public void resumeGame(android.view.View v) {
    finalproject.tap.PlayActivity.pausestatus = 0;
    finalproject.tap.PlayActivity.timerPaused = false;
    finalproject.tap.PlayActivity.timerResume = true;
    android.content.Intent intent = new android.content.Intent(this, finalproject.tap.PlayActivity.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP);
    finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d(com.example.alvinlam.drawer.activity.MainActivity.TAG, ("onClick: " + "1"));
    java.lang.Class destinationClass = com.example.alvinlam.drawer.activity.AddCardAddActivity.class;
    android.content.Intent intentToStartAddCardActivity = new android.content.Intent(this, destinationClass);
    startActivity(intentToStartAddCardActivity);
}

@java.lang.Override
public android.content.Loader<java.util.ArrayList<com.example.picturemanager.MyImage>> onCreateLoader(int id, android.os.Bundle args) {
    android.util.Log.d("AND", "HERE");
    return new com.example.picturemanager.ImageLoaderAsyncTask(activity, page, category);
}

public net.datafans.android.common.widget.table.TableView<T> bulid() {
    return new net.datafans.android.common.widget.table.TableView(context, refreshType, enableRefresh, enableLoadMore, enableAutoLoadMore, style, dataSource, delegate);
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    int time = intent.getExtras().getInt(MathActivity.INTENT_EXTRA_MINUTES);
    beginBroadcast(time);
    android.util.Log.i(com.hannah.hannahworld.BroadcastTimeCountService.TAG, ("time" + time));
    return mBinder;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.content.Intent intent = io.github.gdg_bucharest.gdg_feedly_client.EntryActivity.newIntent(this, streamContents.getItems());
    startActivity(intent);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    java.lang.System.out.println(position);
    activity.setTop(position);
    return fragmentList.get(position);
}

@java.lang.Override
public int compare(java.util.Map.Entry<java.lang.Long, com.asgj.android.appusage.Utility.UsageInfo> lhs, java.util.Map.Entry<java.lang.Long, com.asgj.android.appusage.Utility.UsageInfo> rhs) {
    return ((int) ((lhs.getKey()) - (rhs.getKey())));
}

@java.lang.Override
public com.mediamonkey.android.lib.dto.contents.ChapterInventory createFromParcel(final android.os.Parcel in) {
    return new com.mediamonkey.android.lib.dto.contents.ChapterInventory(in.readLong(), in.readLong(), com.mediamonkey.android.lib.dto.contents.ChapterInventory.MediaType.byValue(in.readInt()), in.readString());
}

private void scaleImage(android.graphics.Bitmap bm, android.widget.ImageView iv, int width, int length) {
    iv.setImageBitmap(android.graphics.Bitmap.createScaledBitmap(bm, width, length, false));
}

public void Delete(android.content.Context context) {
    context.deleteDatabase(InventoryContract.ProductEntry.TABLE_NAME);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.widget.Toast.makeText(context, R.string.update_start_hint, Toast.LENGTH_SHORT).show();
    new com.oidiotlin.classmanager.utils.network.UpdateAppTask(context, handler).run();
}

private android.widget.FrameLayout createFrameLayout(android.content.Context context) {
    android.widget.FrameLayout frameLayout = new android.widget.FrameLayout(context);
    frameLayout.setTag(null);
    frameLayout.setVisibility(com.wiky.ui.layout.INVISIBLE);
    frameLayout.setY(0.0F);
    return frameLayout;
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    android.widget.Toast.makeText(getBaseContext(), java.lang.String.valueOf(hasFocus), Toast.LENGTH_SHORT).show();
}

public com.berepublic.commons.manager.NavigationManager.Builder putData(android.os.Bundle extras) {
    extras.putAll(extras);
    return this;
}

public void addAttachment(@android.support.annotation.NonNull
ly.loud.loudly.new_base.interfaces.attachments.Attachment attachment) {
    attachmentList.add(attachment);
    setEditTextParams();
    setAttachmentsParams();
    adapter.notifyDataSetChanged();
    if ((onAttachmentListener) != null) {
        onAttachmentListener.onAttachmentAdded(attachment);
    }
}

@java.lang.Override
public void onTermChanged(int termID, java.lang.String termName) {
    adapter.newList(getCourseScoreByTerm(termID));
    android.util.Log.d("学期", termName);
}

android.text.Spanned enrichText(java.lang.String text) {
    return android.text.Html.fromHtml(text.replaceAll("<", "&lt;").replaceAll("\\{(.*)\\}", "<font color=#4caf50>$1</font>"));
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle state) {
    super.onActivityCreated(state);
    setUpState(state);
    setUpBindings();
    setUpRefreshing();
    setUpMetrics();
}

public void onStart() {
    final android.content.IntentFilter intentFilter = new android.content.IntentFilter();
    intentFilter.addAction(UsbEventReceiverActivity.ACTION_USB_PERMISSION);
    intentFilter.addAction(UsbManager.ACTION_USB_DEVICE_DETACHED);
    mActivity.registerReceiver(mUsbReceiver, intentFilter);
}

@java.lang.Override
public boolean onInterceptTouchEvent(android.view.MotionEvent motionEvent) {
    io.rmiri.skeleton.utils.CLog.i(("SkeletonMaster onInterceptTouchEvent  " + (position)));
    return (skeletonAttribute.isHoldTouchEventsFromChildren()) || (super.onInterceptTouchEvent(motionEvent));
}

public void doWrite(android.bluetooth.BluetoothGattCharacteristic characteristic, byte[] data) {
    characteristic.setValue(data);
    if (!(gatt.writeCharacteristic(characteristic))) {
        android.util.Log.d(it.innove.Peripheral.LOG_TAG, "Error on doWrite");
    }
}

public static void test_044() throws com.android.uiautomator.core.UiObjectNotFoundException {
    framework.common.PhoneCommon.Makecall("10086", 1);
    check(testcase.Object_ResourceId, testcase.Operation_checkExist, "com.android.dialer:id/floating_end_call_action_button");
    excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.dialer:id/floating_end_call_action_button");
}

@java.lang.Override
public void run() {
    java.lang.String xmlData = addModelAndInstanceTag(data).replaceAll("\"", "\\\"");
    webView.loadUrl((("javascript:loadDraft('" + xmlData) + "')"));
    android.util.Log.d("posting data", xmlData);
}

@java.lang.Override
public void onBatchCompleted(com.facebook.GraphRequestBatch graphRequestBatch) {
    android.util.Log.d("called", "main req");
    (pageNumber)++;
}

public static free.rm.skytube.gui.businessobjects.SubsAdapter get(android.content.Context context, android.view.View progressBar) {
    if ((free.rm.skytube.gui.businessobjects.SubsAdapter.subsAdapter) == null) {
        free.rm.skytube.gui.businessobjects.SubsAdapter.subsAdapter = new free.rm.skytube.gui.businessobjects.SubsAdapter(context, progressBar);
    }else {
        free.rm.skytube.gui.businessobjects.SubsAdapter.subsAdapter.setContext(context);
    }
    return free.rm.skytube.gui.businessobjects.SubsAdapter.subsAdapter;
}

@java.lang.Override
public void onClick(android.view.View view) {
    startActvitiy(nl.yoerinijs.notebuddy.activities.NotesActivity.EDIT_NOTE_ACTIVITY, false, null, null);
}

@java.lang.Override
public android.content.Context setUpContext(flow.path.Path path, android.content.Context parentContext) {
    mortar.MortarScope screenScope = screenScoper.getScreenScope(parentContext, path.getClass().getName(), path);
    return new com.example.mortar.mortarflow.MortarContextFactory.TearDownContext(parentContext, screenScope);
}

@java.lang.Override
public boolean onLongClick(android.view.View view) {
    index.add(position);
    if ((index.size()) == (com.vtewari.bunkconfidently.adapter.LectureListAdapter.list.size())) {
        return true;
    }else {
        return true;
    }
}

private void animateToLocation(final org.osmdroid.util.GeoPoint location) {
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            mapView.getController().animateTo(location);
        }
    }, 200);
}

public abstract void onScroll(android.view.ViewGroup container, int position, float positionOffset);

@butterknife.OnClick(value = R.id.faq_button)
public void onFaqButtonClicked(android.view.View view) {
    android.content.Intent faqIntent = new android.content.Intent(this, com.piemicrosystems.bancus.ui.activities.help.FAQActivity.class);
    startActivity(faqIntent);
    finish();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    if (!(location.equals(null))) {
        moveMarker(PositionMarker, location);
    }
}

@java.lang.Override
public void onTabSelected(android.support.design.widget.TabLayout.Tab tab) {
    vpViewPager.setCurrentItem(tab.getPosition());
    android.util.Log.d("HERE", "HERE");
}

private void displayJokeActivity() {
    new com.elorri.android.builditbigger.GCEndpointsApiService(getActivity()).execute();
}

public static void addBitmapToMemoryCache(com.esaych.calc.utils.TextBookLoc key, android.graphics.Bitmap bitmap) {
    if ((com.esaych.calc.utils.ImageCache.imageCache.get(key)) == null) {
        com.esaych.calc.utils.ImageCache.imageCache.put(key, bitmap);
    }
}

public void addToDb(int id) {
    java.lang.String query_normal = "INSERT INTO %s VALUES ('%d');";
    java.lang.String query = java.lang.String.format(android.database.DatabaseUtils.sqlEscapeString(query_normal), DbContract.Bookmarks.TABLE_NAME, id);
    org.fossasia.openevent.dbutils.DbSingleton dbSingleton = org.fossasia.openevent.dbutils.DbSingleton.getInstance();
    dbSingleton.insertQuery(query);
}

@java.lang.Override
public com.github.kolandroid.kol.data.DataCache<java.lang.String, com.github.kolandroid.kol.data.RawSkill> getSkillCache() {
    if (skillsCache.isLoadRequired()) {
        synchronized(skillsCache) {
            if (skillsCache.isLoadRequired()) {
                skillsCache.load(this);
            }
        }
    }
    return skillsCache;
}

private void activateGeofences() {
    android.util.Log.v(com.ngynstvn.android.blocspot.ui.fragment.MapsFragment.TAG, "activateGeofences() called");
    LocationServices.GeofencingApi.addGeofences(googleApiClient, getGeofencingRequest(), getGeofencePendingIntent()).setResultCallback(this);
}

@java.lang.Override
public boolean onNestedPreFling(android.view.View target, float velocityX, float velocityY) {
    return true;
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    mFile = new java.io.File(getActivity().getExternalFilesDir(Environment.DIRECTORY_PICTURES), "pic.jpg");
}

@java.lang.Override
protected void onPostExecute(java.lang.Void aVoid) {
    android.app.LoaderManager loaderManager = getLoaderManager();
    loaderManager.initLoader(ahmadadam96.comicbookmovies.MainActivity.MOVIE_LOADER_ID, null, this);
    loaderManager.initLoader(ahmadadam96.comicbookmovies.MainActivity.CODES_LOADER_ID, null, this);
    mSwipeRefreshLayout.setRefreshing(false);
}

public void changeDataSet(java.util.ArrayList<com.bitbudai.fermat_cht_android_sub_app_chat_bitdubai.models.ChatMessage> data) {
    if (filterString.equals(""))
        this.chatMessages = data;
    else
        this.filteredData = data;
    
}

private static void applyChanges(@android.support.annotation.NonNull
final java.util.List<net.gini.android.vision.internal.camera.photo.PhotoModifier> modifiers) {
    for (final net.gini.android.vision.internal.camera.photo.PhotoModifier modifier : modifiers) {
        modifier.modify();
    }
}

@java.lang.Override
@org.xwalk.core.internal.XWalkAPI
public void setOnTouchListener(android.view.View.OnTouchListener l) {
    if ((mContent) == null)
        return ;
    
    org.xwalk.core.internal.XWalkViewInternal.checkThreadSafety();
    this.setOnTouchListener(l);
}

public void showFab() {
    if ((getFab().getVisibility()) == (android.view.View.GONE)) {
        getFab().show();
    }
    java.lang.System.out.println(getFab().getVisibility());
}

public void producerPath(android.view.View view) {
}

private void onStartAnimation(int itemId) {
    android.view.View item = mFixedItem.get(itemId);
    itemAutoMove(item, mPerTranslateY, 2.0F);
    preItemId = itemId;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putString(com.huhx0015.doordashchallenge.view.fragments.RestaurantListFragment.INSTANCE_TAG, mTag);
    outState.putParcelableArrayList(com.huhx0015.doordashchallenge.view.fragments.RestaurantListFragment.INSTANCE_RESTAURANT_LIST, new java.util.ArrayList(mRestaurantList));
}

@java.lang.Override
public void onServiceDisconnected(android.content.ComponentName name) {
    isSensorServiceBound = false;
}

@java.lang.Override
public boolean onNavigationItemSelected(@android.support.annotation.NonNull
android.view.MenuItem item) {
    activity.startActivity(activity.getIntent());
    return true;
}

public static void initUserReferences(android.content.Context context) {
    com.k12nt.k12netframe.utils.userSelection.K12NetUserReferences.references = new com.k12nt.k12netframe.utils.userSelection.K12NetUserReferences(context);
}

@java.lang.Override
public int compareTo(@android.support.annotation.NonNull
co.smartreceipts.android.model.Category category) {
    return category.getName().compareTo(mName);
}

public void initCallbacks() {
    mCameraManager.registerAvailabilityCallback(getCamAvailabilityCallback(), new android.os.Handler(mContext.getMainLooper()));
    if ((mCamNoPreview) != null) {
        mCamNoPreview.registerCameraListener(this);
    }
}

@java.lang.Override
public void before() {
    android.util.Log.w(com.google.android.perftesting.testrules.GetExecutionTime.LOG_TAG, "------GetExecutionTime before--------");
    try {
        android.util.Log.w(com.google.android.perftesting.testrules.GetExecutionTime.LOG_TAG, "--------------start------------");
        StartTime = java.lang.System.nanoTime();
    } catch (java.lang.Exception exception) {
    }
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    if (((curPosition) < (phraseFiles.size())) || (repeat)) {
        (curPosition)++;
        playQueue();
    }else {
        mp.release();
    }
}

@java.lang.Override
public void LongclickListener(android.view.View view) {
    layout.addMovedView(view);
    view.setVisibility(View.INVISIBLE);
    dragImageView.disallowInterceptTouchEvent(true);
    layout.setMaxRecylerViewWidth(recyclerview.getMeasuredWidth());
}

public void start() {
    mediaPlayer.start();
    state = edu.calpoly.idulkin.podcrust.MediaPlayerService.MP_STATE.PLAYING;
    android.util.Log.e("Media Player Service", ("State: " + (getState())));
}

public void initData(com.bumptech.glide.RequestManager manager, com.mobcent.discuz.bean.Banner banner) {
    this.banner = banner;
    com.litesuits.android.log.Log.d("Banner", ("startLoad:" + (banner.getImg())));
}

@java.lang.Override
public java.lang.Throwable handleError(retrofit.RetrofitError err) {
    retrofit.client.Response resp = err.getResponse();
    android.util.Log.v("Error :", ("err: " + (resp.toString())));
    return err;
}

public void deleteUser(io.github.data4all.model.data.User user) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    db.delete(io.github.data4all.model.DataBaseHandler.TABLE_USER, ((io.github.data4all.model.DataBaseHandler.KEY_USERNAME) + "=?"), new java.lang.String[]{ user.getUsername() });
    db.close();
}

@java.lang.Override
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    doOnActivityResult(requestCode, resultCode, data);
}

public void done(java.lang.Boolean result, com.parse.ParseException e) {
    if (e == null) {
        android.util.Log.i("Results :", result.toString());
    }else {
        android.util.Log.i("Error", e.getMessage());
    }
}

public void clearExerciseTable() {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    java.lang.String qry = "DELETE FROM " + (com.liftlog.data.DataAccessObject.EXERCISE_TABLE_NAME);
    db.execSQL(qry);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    editor.putBoolean("firstAppStart", false);
    editor.commit();
    createUser(androidId, userInput.getText().toString());
    setRecentReviews();
}

@java.lang.Override
public void onNext(com.scala.exp.android.sdk.model.Thing thing) {
    java.lang.Object zones = thing.get("location.zones");
    android.util.Log.e("Response", thing.toString());
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    alarms.deleteAlarm(position);
    alarms.cancelAlarm(position);
    notifyDataSetChanged();
    return false;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            removeOverlayFromMap(overlay);
            break;
        case android.content.DialogInterface.BUTTON_NEGATIVE :
            break;
        default :
            break;
    }
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker datePicker, int year, int month, int day) {
    etBeginDate.setText(com.codepath.nytquest.utils.DateHelper.getFormatteDate(year, month, day));
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int i, boolean fromUser) {
    if (fromUser)
        jcAudioPlayer.seekTo(i);
    
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    wakeLock();
    android.util.Log.d(com.neirx.stopwatchtimer.MainActivity.TAG, ((com.neirx.stopwatchtimer.MainActivity.CLASS_NAME) + "onResume"));
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    save();
    android.widget.Toast.makeText(getApplicationContext(), "onStop called", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public android.database.Cursor loadInBackground() {
    android.database.Cursor cursor = db.getUserFood();
    try {
        java.util.concurrent.TimeUnit.MILLISECONDS.sleep(1);
    } catch (java.lang.InterruptedException e) {
        e.printStackTrace();
    }
    return cursor;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent("ml.yats.connect.mainactivity");
    i.putExtra("mode", "router");
    i.putExtra("number", mPhoneText.getText());
    startActivity(i);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
    android.os.Bundle args = getArguments();
    if (args != null) {
        mPageIndex = args.getInt(me.li2.android.inteliment_demo.ui.SimplePageFragment.ARG_KEY_PAGE_INDEX);
    }
}

@java.lang.Override
public void onLoaded(@android.support.annotation.NonNull
com.demo.navigator.ds.model.Entry entry) {
    if ((mBinding) == null) {
        return ;
    }
    setupMenuBar();
    navigateEntry(entry, true);
    mBinding.getFragment().getChildFragmentManager().addOnBackStackChangedListener(this);
}

@java.lang.Override
public void onClick(android.view.View v) {
    int clickedPosition = getAdapterPosition();
    if (isSteps) {
        mOnClickListener.onListItemClick(clickedPosition);
    }
}

@java.lang.Override
public void onClick(android.view.View onClickView) {
    com.example.kangjisung.likeroom.FragmentStamp.StampUseDialog stampUseDialog = new com.example.kangjisung.likeroom.FragmentStamp.StampUseDialog(context, activity, (((position * 2) + 1) * (com.example.kangjisung.likeroom.DefineManager.standardMileage)));
    stampUseDialog.show();
}

public static boolean applyIptablesRules(android.content.Context ctx, boolean showErrors) {
    if (ctx == null) {
        return false;
    }
    dev.ukanth.ufirewall.Api.initSpecial();
    dev.ukanth.ufirewall.Api.saveRules(ctx);
    return dev.ukanth.ufirewall.Api.applySavedIptablesRules(ctx, showErrors);
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.i(TAG, "onDestroy");
    if (fi.vtt.nubotest.MainActivity.kurentoRoomAPI.isWebSocketConnected())
        fi.vtt.nubotest.MainActivity.kurentoRoomAPI.sendLeaveRoom(roomId);
    
    fi.vtt.nubotest.MainActivity.kurentoRoomAPI.disconnectWebSocket();
}

public void addMarker(java.lang.String title, double longitude, double latitude) {
    myMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().title(title).position(new com.google.android.gms.maps.model.LatLng(longitude, latitude)));
}

public void startGMail(android.view.View view) {
    com.example.asds_template.IMAPManager imap = new com.example.asds_template.IMAPManager();
    imap.checkInBox();
}

public synchronized android.database.sqlite.SQLiteDatabase openDB(int type) {
    android.database.sqlite.SQLiteDatabase database = org.spinsuite.base.DB_Manager.getInstance().open();
    database.enableWriteAheadLogging();
    return database;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    android.util.Log.d(foodie.com.foodie.GPSLocation.TAG, "Locations API connected successfully");
    getLastKnownLocation();
    locationSubject.notifyAllObservers();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((mMovieDetail) != null) {
        mUserFavoriteViewModel.deleteMovieById(mMovieId);
    }
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    br.pro.hashi.ensino.desagil.sqlite.StudentDAO dao = new br.pro.hashi.ensino.desagil.sqlite.SQLiteStudentDAO(this);
    dao.delete(student);
    dao.close();
    refresh();
    return false;
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.String responseString, java.lang.Throwable throwable) {
    super.onFailure(statusCode, headers, responseString, throwable);
    android.widget.Toast.makeText(com.codepath.apps.tweetter.TweetAdapter.context, "Unable to unretweet", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onLoadSuccess() {
    android.util.Log.i(app.park.com.vr.VrVideoActivity.TAG, ("Sucessfully loaded video " + (mVrVideoView.getDuration())));
    loadVideoStatus = app.park.com.vr.VrVideoActivity.LOAD_VIDEO_STATUS_SUCCESS;
    mVrVideoView.pauseVideo();
}

private void checkIsInEditMode() {
    final android.os.Bundle arguments = getArguments();
    if (null == arguments) {
        edit = false;
    }else {
        edit = arguments.getBoolean(com.google.samples.apps.topeka.fragment.SignInFragment.ARG_EDIT, false);
    }
}

@java.lang.Override
public void onOffsetChanged(android.support.design.widget.AppBarLayout appBarLayout, int verticalOffset) {
    if (verticalOffset < 0) {
        translateContent(verticalOffset);
        animatePinningView(verticalOffset);
    }
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.String res, java.lang.Throwable t) {
    android.widget.Toast.makeText(getApplicationContext(), ("" + res), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onPostExecute(java.lang.String s) {
    super.onPostExecute(s);
    android.widget.Toast.makeText(this, "Sent Information to Server...", Toast.LENGTH_LONG);
    android.widget.Toast.makeText(this, s, Toast.LENGTH_LONG);
}

public void returnToMainLoop(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(ctx, hackmit2016.moodometer.ContactsActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(getBaseContext(), de.androidnewcomer.pendlerwecker.Geo_Service.class);
    startService(intent);
    android.util.Log.d("Log", "hier1");
}

@java.lang.Override
public void onNetError(com.example.dramtar.testprojectforestafeta.libs.NetWork.NetErrors oError) {
    mNetProgressDialog.dismiss();
    android.widget.Toast.makeText(getContext(), "Error Connection", Toast.LENGTH_LONG);
}

@java.lang.Override
public boolean onClusterItemClick(com.whiterabbit.pisabike.screens.map.MapItem mapItem) {
    android.util.Log.d("MAP", ((mapItem.getTitle()) + "cliccked"));
    mPresenter.onStationClicked(mapItem.getStation().getName());
    return true;
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    if ((android.content.pm.PackageManager.PERMISSION_GRANTED) != (android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE))) {
        refreshPhotoList();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((com.visiontech.yummysmile.ui.adapter.MainCardsAdapter.listener) != null) {
        com.visiontech.yummysmile.ui.adapter.MainCardsAdapter.listener.onMealCardClicked(meal);
    }
}

public void onConnected(android.os.Bundle connectionHint) {
    signInStatus = "Sign Out Of Google";
}

void updateChart(int position) {
    android.view.View view = getViewAtPosition(position);
    updateChart(((com.github.mikephil.charting.charts.LineChart) (view.findViewById(R.id.chart))));
}

public void turnOnSync() {
    context.getContentResolver();
    android.content.ContentResolver.setSyncAutomatically(mAccount, AUTHORITY, true);
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_DONE)) {
        login(v);
        return true;
    }
    return false;
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    setFilterSpinnerValue(position, currentPagePosition);
    getFilterInputValue(position, currentPagePosition);
}

@java.lang.Override
public void onClick(android.view.View v) {
    AnimationSupport.Reveal.closeToLeft(LLcontainerSBvolume, new com.android.simplemusic.Support.AnimationSupport.Reveal.AnimationAction() {
        @java.lang.Override
        public void onPrepare() {
        }

        @java.lang.Override
        public void onStart() {
            RFLcontainerSBvolume.setVisibility(View.GONE);
        }
    });
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    Reddit.seen.edit().putBoolean(SettingValues.PREF_FAB_CLEAR, true).apply();
    me.ccrama.redditslide.Reddit.fabClear = true;
    clearSeenPosts(false);
}

@java.lang.Override
public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) {
    android.app.Dialog dialog = super.onCreateDialog(savedInstanceState);
    dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
    dialog.setCancelable(true);
    return dialog;
}

public void onClick(android.view.View v) {
    gameClick(v);
}

@java.lang.Override
public void run(java.lang.Boolean success, java.lang.Exception error) {
    if (success) {
        list.remove(position);
        notifyDataSetChanged();
    }else {
        android.util.Log.d("a", "CANNOT REMOVE RULE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    }
}

public static void report(android.app.Activity activity, com.heinrichreimersoftware.androidissuereporter.model.Report report, com.heinrichreimersoftware.androidissuereporter.model.github.GithubTarget target, com.heinrichreimersoftware.androidissuereporter.model.github.GithubLogin login) {
    new com.heinrichreimersoftware.androidissuereporter.IssueReporterActivity.ReportIssueTask(activity, report, target, login).execute();
}

@java.lang.Override
protected void onPostExecute(java.lang.Void ignore) {
    try {
        new com.ilyarudyak.android.portfel.ui.StockDetailActivity.FetchNewsFeed().execute(com.ilyarudyak.android.portfel.api.Config.getCompanyNewsUrl(mSymbol));
    } catch (java.net.MalformedURLException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void locationCallback(android.location.Location location) {
    init();
}

public void connectToNetworkService() {
    com.android1.homework3.Logger.d("Connect to network service");
    disconnect();
    android.content.Intent intent = new android.content.Intent(this, com.android1.homework3.net.NetworkService.class);
    bindService(intent, mServiceConnection, com.android1.homework3.ui.BIND_AUTO_CREATE);
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    mCallbackListener = ((eu.intermodalics.tango_ros_streamer.android.SaveMapDialog.CallbackListener) (activity));
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    android.graphics.Rect boundingRect = new android.graphics.Rect(0, 0, width, height);
    pudding.setBoundingRect(boundingRect);
}

@java.lang.Override
public void onMainViewAppeared(com.innovativetech.audio.audiobookmaster.fabreveallayout.FABRevealLayout fabRevealLayout, android.view.View mainView) {
    if (((mMediaPlayer) == null) || (!(mMediaPlayer.isPlaying()))) {
        showMainViewItems();
    }else {
        showSecondaryViewItems();
    }
}

@java.lang.Override
protected void onResume() {
    android.content.SharedPreferences shared = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
    shared.registerOnSharedPreferenceChangeListener(this);
    placeSubredditCurrent();
    if ((mPrefTimeFenceMinutes) < 999L) {
        registerFence("timeFenceKey");
    }
    super.onResume();
}

public static int e(java.lang.String msg) {
    return android.util.Log.w(za.co.cporm.util.CPOrmLog.TAG, msg);
}

public void refresh(android.widget.CheckBox checkbox, int index) {
    java.util.Set<java.lang.Object> modelValues = retrieveModelValues();
    checkbox.setChecked(modelValues.contains((areValuesDefined() ? checkbox.getText() : index)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.relLayout :
            android.content.Intent myCartIntent = new android.content.Intent(getApplicationContext(), com.cb.vmss.MyCartActivity.class);
            startActivityForResult(myCartIntent, Constant.CODE_MAIN_LOGIN);
            break;
        case R.id.searchImageView :
            break;
    }
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.i(com.sparq.application.userinterface.EventActivity.TAG, "onPause");
    if (isReceiverRegistered) {
        unregisterReceiver(timerReceiver);
        isReceiverRegistered = false;
    }
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    shareIntent.putExtra(Intent.EXTRA_TEXT, editor.getText());
    share.setShareIntent(shareIntent);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.v("Nick", (" " + (mShowMainUI)));
    if (mShowMainUI) {
        loadMainUI();
    }
}

@java.lang.Override
public void onClick(final android.content.DialogInterface dialog, final int which) {
    studentInfoList.remove((pos + 1));
    notifyItemRangeRemoved(pos, 1);
}

public co.bitsquared.vanitygenerator.android.query.ParcelableQuery[] newArray(int size) {
    return new co.bitsquared.vanitygenerator.android.query.ParcelableQuery[0];
}

@java.lang.Override
public void run() {
    try {
        java.lang.Thread.sleep(mTimer);
    } catch (java.lang.InterruptedException e) {
        e.printStackTrace();
    }
    handler.sendMessage(new android.os.Message());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    android.widget.Toast.makeText(getApplicationContext(), "onCreate", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(accent_flag))
        com.example.cesarsk.say_it.MainActivity.american_speaker_google.speak(com.example.cesarsk.say_it.PlayActivity.selected_word, android.speech.tts.TextToSpeech.QUEUE_FLUSH, null, null);
    else
        com.example.cesarsk.say_it.MainActivity.british_speaker_google.speak(com.example.cesarsk.say_it.PlayActivity.selected_word, android.speech.tts.TextToSpeech.QUEUE_ADD, null, null);
    
}

private static android.content.IntentFilter makeGattUpdateIntentFilter() {
    final android.content.IntentFilter intentFilter = new android.content.IntentFilter();
    intentFilter.addAction(OsswService.ACTION_WATCH_CONNECTING);
    intentFilter.addAction(OsswService.ACTION_WATCH_CONNECTED);
    intentFilter.addAction(OsswService.ACTION_WATCH_DISCONNECTED);
    intentFilter.addAction(OsswService.ACTION_WATCH_AUTO_RECONNECT);
    return intentFilter;
}

private void setBitmap(android.graphics.Bitmap bitmap, int imageResource) {
    setBitmap(bitmap, imageResource, null, 0, 0);
}

public void selection2(java.lang.String value) {
    android.util.Log.v("EpubReader", ("SELECTION2<=19:" + value));
}

@java.lang.Override
public void accept(org.oneat1.android.model.VideoItemResponse.VideoItem videoItem) throws java.lang.Exception {
    videoIDCache.put(videoItem.id, videoItem);
    populateMainVideoDetails(videoItem);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    if (position == 0) {
        return com.romankaranchuk.musicplayer.ui.tracklist.TracklistFragment.newInstance();
    }else
        if (position == 1) {
            return com.romankaranchuk.musicplayer.ui.player.PlayerFragment.getSingleton();
        }
    
    return null;
}

public void startChronometer(android.view.View view) {
    android.widget.Chronometer chronometer = ((android.widget.Chronometer) (layout.findViewById(R.id.trip_timer)));
    chronometer.setBase(android.os.SystemClock.elapsedRealtime());
    chronometer.start();
    hideSoftKeyboard();
}

private void register(com.xfrocks.api.androiddemo.Api.User u) {
    android.content.Intent registerIntent = new android.content.Intent(this, com.xfrocks.api.androiddemo.RegisterActivity.class);
    registerIntent.putExtra(RegisterActivity.EXTRA_USER, u);
    startActivityForResult(registerIntent, com.xfrocks.api.androiddemo.LoginActivity.RC_REGISTER);
}

@java.lang.Override
public boolean onMenuItemActionCollapse(android.view.MenuItem item) {
    kat.android.com.movielist.MovieListActivity.drawerResult.setSelection(2);
    showFragment(kat.android.com.movielist.MovieListActivity.TOP_RATED_FRAGMENT);
    return true;
}

public static java.lang.String getPath(final android.content.Context p) {
    try {
        return net.sourceforge.clonekeenplus.Settings.SdcardAppPath.get().path(p);
    } catch (java.lang.Exception e) {
    }
    return net.sourceforge.clonekeenplus.Settings.SdcardAppPath.Dummy.Holder.sInstance.path(p);
}

@java.lang.Override
public void onLongPress(android.view.MotionEvent e) {
    android.util.Log.d(se.anotherhermit.voxels.GLESView.MyGestureListener.DEBUG_TAG, "onLongPress");
    se.anotherhermit.voxels.GLESView.longPress();
    android.widget.Toast.makeText(getContext(), "Toggled Light/Camera", Toast.LENGTH_SHORT).show();
    super.onLongPress(e);
}

@android.support.annotation.CallSuper
protected void onStop(@android.support.annotation.NonNull
final android.view.View view, @android.support.annotation.NonNull
final TActivity activity) {
    if (appeared) {
        onDisappear(view, activity);
        appeared = false;
    }
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    prefs.edit().putString(java.lang.String.valueOf(editText.getId()), s.toString()).apply();
}

public void remove() {
    android.content.SharedPreferences.Editor editor;
    editor = sharedPreferences.edit();
    editor.remove(com.example.msk.onlinebotique.Utilities.KeyStore.fileName);
    editor.commit();
}

@java.lang.Override
public void onMergedCellClick(com.hzn.easytableview.EasyTableView.MergeInfo mergeInfo) {
    if (null != (mergeInfo.texts))
        android.widget.Toast.makeText(this, mergeInfo.texts[0], Toast.LENGTH_SHORT).show();
    
}

public void openOutListView(android.view.View view) {
    outListView.setVisibility(View.VISIBLE);
    showInImageView.setVisibility(View.INVISIBLE);
    showOutImageView.setVisibility(View.INVISIBLE);
}

@android.annotation.TargetApi(value = 14)
public static boolean isNavigationAtBottom(android.app.Activity activity) {
    com.gyf.barlibrary.BarConfig config = new com.gyf.barlibrary.BarConfig(activity, true, true);
    return config.isNavigationAtBottom();
}

@java.lang.Override
public void done(java.util.List<com.terpsync.parse.UMDBuildings> arg0, com.parse.ParseException arg1) {
    com.terpsync.parse.UMDBuildings building = arg0.get(0);
    updateMarker(building, true);
    android.widget.Toast.makeText(getApplicationContext(), "Added event to map", Toast.LENGTH_SHORT).show();
}

public static de.struckmeierfliesen.ds.micromanagement.Food cursorToFood(android.database.Cursor cursor) {
    return de.struckmeierfliesen.ds.micromanagement.sqlite.DatabaseConnection.cursorToFood(cursor, (-1), true);
}

private void connectingGoogleApiClient() {
    createLocationRequest();
    mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build();
    mGoogleApiClient.connect();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    me.ccrama.redditslide.Reddit.forceRestart(this, true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    sendCancelRoutineMessage();
    android.content.Intent intent = new android.content.Intent(this, com.sxnwlfkk.dailyroutines.views.profileActivity.ProfileActivity.class);
    intent.setData(mCurrentUri);
    startActivity(intent);
    sendStopTalkingMessage();
    finish();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    com.marz.snapprefs.PaintTools.width = seekBar2.getProgress();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle bundle) {
    bundle.putBoolean(aaku492.smartfoodtracker.FragmentContainerActivity.IS_MODAL, this.isModal);
}

@java.lang.Override
public void onClick(android.view.View view) {
    new io.gloop.drawed.dialogs.SearchDialog(this, owner, mTwoPane, this.getSupportFragmentManager()).show();
    floatingActionMenu.close(false);
}

protected void setButtonState(android.view.View button, boolean show) {
    if (show) {
        button.setVisibility(View.VISIBLE);
    }else {
        button.setVisibility(View.INVISIBLE);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    onRefresh();
    if (!(com.calgen.stockhawk.utils.BasicUtils.isNetworkUp(getApplicationContext()))) {
        showInternetOffSnackBar();
    }
}

private void populateToDoObject() {
    try {
        todoItem = getTodo();
        displayDetail();
    } catch (java.lang.AssertionError err) {
        todoItem = new com.nearsoft.androidschool.todoapp.models.ToDoContent();
        buttonViewConfig(true);
    }
}

public void deleteRecipe(android.content.Context context, long id) {
    new com.example.caitlin.cookhelper.DatabaseHandler(context).deleteIngredientMeasures(id);
    new com.example.caitlin.cookhelper.DatabaseHandler(context).deleteRecipe(id);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    if (editable != null)
        answerList.get(getPosition()).setNumAns(java.lang.String.valueOf(editable));
    
    saveAnswer.onAnswerSave(answerList.get(getPosition()));
}

@java.lang.Override
public void onActivityCreated(android.app.Activity activity, android.os.Bundle bundle) {
    addActivity(activity);
    if ((activityLifeHandler) != null)
        activityLifeHandler.onCreated();
    
}

private android.util.ArrayMap<java.lang.String, java.lang.String> getMetaFromPuller() {
    return com.birdle.pranay.birdle.MetaDataPuller.pull(YTN, false);
}

public static java.lang.String getDateTimeString(@android.support.annotation.NonNull
android.content.res.Resources resources, @android.support.annotation.NonNull
java.util.Date date) {
    java.text.SimpleDateFormat format = new java.text.SimpleDateFormat(resources.getString(R.string.format_date_time));
    return format.format(date);
}

@java.lang.Override
public void endRequest() {
    super.endRequest();
    com.smartydroid.android.starter.kit.app.RecyclerViewPagedFragment.getPaginate().setHasMoreDataToLoad(com.smartydroid.android.starter.kit.app.RecyclerViewPagedFragment.getPagePaginator().hasMorePages());
}

@java.lang.Override
public void onAdClosed() {
    super.onAdClosed();
    com.crashlytics.android.Crashlytics.log("onAdClosed");
}

public static boolean checkConnection(android.content.Context context) {
    if (org.wordpress.android.util.NetworkUtils.isNetworkAvailable(context)) {
        return true;
    }
    org.wordpress.android.util.ToastUtils.showToast(context, R.string.no_network_message);
    return false;
}

private void restoreInstanceState(android.os.Bundle savedInstanceState) {
    com.jparkie.givesmehope.models.Anthology.getParcelable(savedInstanceState, mHotAnthology);
    mHotAdapter = new com.jparkie.givesmehope.views.adapters.HotAdapter(mHotView.getContext(), mHotAnthology.getStories());
    mHotView.setAdapterForRecyclerView(mHotAdapter);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    list.archived = true;
    com.liamfruzyna.android.wishlister.data.IO.getInstance().saveAndSync();
    ((com.liamfruzyna.android.wishlister.activities.ListerActivity) (getActivity())).loadActivity();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.mozzandroidutils.file.MozzConfig.makeAppDirs(this);
    testEloquentCreate();
    testDB();
}

@java.lang.Override
public void show(android.support.v4.app.FragmentManager fragmentManager, java.lang.String tag) {
    fragmentManager.popBackStack();
    android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
    fragmentTransaction.addToBackStack(tag);
    fragmentTransaction.add(this, tag);
    fragmentTransaction.commit();
}

public void updatePosts(java.util.List<com.theratio.utilities.Post> results, android.support.v7.widget.RecyclerView.Adapter adapterToNotify) {
    com.theratio.utilities.Post.updatePostsByUserID(this.id, results, adapterToNotify);
}

public static int optimalCharArraySize(int desiredSize) {
    return (de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools.optimalByteArraySize((desiredSize * 2))) / 2;
}

@java.lang.Override
public void onCreate() {
    android.util.Log.e(com.gerus.pulpomatic.services.LocationService.TAG, ("onCreate " + (com.gerus.pulpomatic.services.LocationService.isActiveAlive)));
    com.gerus.pulpomatic.services.LocationService.isActiveAlive = false;
    init();
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase sqLiteDatabase) {
    if (!(this.isDatabaseExists())) {
        this.getReadableDatabase();
        this.close();
    }
}

@android.annotation.SuppressLint(value = "NewApi")
@java.lang.Override
protected void onResume() {
    super.onResume();
    new java.lang.Thread(new java.lang.Runnable() {
        @java.lang.SuppressWarnings(value = "deprecation")
        @java.lang.Override
        public void run() {
            mBluetoothAdapter.startLeScan(mLeScanCallback);
        }
    }).start();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    chaitanya.im.searchforreddit.ShareActivity.ruler.setVisibility(View.INVISIBLE);
    android.util.Log.d("ShareActivity.java", "onResume");
}

public void showEntries(@android.support.annotation.NonNull
java.util.List<com.demo.navigator.ds.model.Entry> entries) {
    mBinding.entryContentRv.setAdapter(new com.demo.navigator.navigation.EntryFragment.EntryListAdapter(entries));
}

public void onAnimationEnd(android.animation.Animator animation) {
    if (!(mWasCanceled)) {
        revealView.setOutlineProvider(ViewOutlineProvider.BACKGROUND);
        revealView.setClipToOutline(false);
        if (shouldRemoveElevationDuringAnimation()) {
            revealView.setTranslationZ(0);
        }
    }
}

@java.lang.Override
public java.lang.Thread newThread(java.lang.Runnable runnable) {
    return new java.lang.Thread(runnable, ((com.fernandocejas.android10.sample.data.executor.JobExecutor.JobThreadFactory.THREAD_NAME) + (counter)));
}

@java.lang.Override
public void onTrackPositionChanged(int position) {
    android.util.Log.d(io.nya.powerlyrics.LyricsActivity.LOG_TAG, ("play position: " + (position * 1000)));
    mLyricView.updateCurrentTime((position * 1000));
}

@java.lang.Override
public void onLoadFinished(android.content.Loader<android.database.Cursor> loader, android.database.Cursor cursor) {
    progress.dismiss();
    android.widget.Toast.makeText(getApplicationContext(), "YaY", Toast.LENGTH_LONG).show();
}

private void showSuggestList() {
    if ((mSearchLayout.getVisibility()) == (android.view.View.GONE)) {
        mRecyclerView.setVisibility(View.GONE);
        mSearchLayout.setVisibility(View.VISIBLE);
        mRecyclerView.setLayoutFrozen(true);
    }
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    android.util.Log.d(org.eyeseetea.malariacare.fragments.DashboardSentFragment.TAG, "onActivityCreated");
    initAdapter();
    initListView();
}

public void onClick(android.view.View V) {
    saveData();
    android.content.Intent intent = new android.content.Intent(this, com.example.levinm.bcreaderv3.historyactivity.class);
    intent.putStringArrayListExtra("key", historyitems);
    startActivity(intent);
}

@com.squareup.otto.Subscribe
public void onAuthSuccess(cz.kovar.petr.homevoice.bus.events.AuthEvent.Success event) {
    android.util.Log.v(cz.kovar.petr.homevoice.frontend.FragmentPlan.LOG_TAG, "Auth Success!");
    createButtons(dataContext.getLocationsNames());
}

@java.lang.Override
public void destroyItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    container.removeView(((android.widget.ImageView) (object)));
}

public void makeExplosionSound(android.content.Context context) {
    if ((mp) != null) {
        mp.stop();
        mp.release();
    }
    mp = android.media.MediaPlayer.create(context, R.raw.torpedo);
    mp.start();
}

public void setDefaultHeadAndFoot() {
    android.content.Context context = getContext();
    setHeaderView(mLayoutInflater.inflate(R.layout.layout_google_header, mSwipe, false));
    setFooterView(mLayoutInflater.inflate(R.layout.layout_google_footer, mSwipe, false));
}

private void changeFragment(android.support.v4.app.Fragment destinationFragment) {
    android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
    android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
    fragmentTransaction.replace(R.id.fragment_container, destinationFragment);
    fragmentTransaction.addToBackStack(null);
    fragmentTransaction.commit();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    super.onStartCommand(android.content.Intent, flags, startId);
    fireEvent(com.tenforwardconsulting.cordova.bgloc.BackgroundGpsPlugin.Event.MESSAGE, "StartBackGroundActivity");
    return START_REDELIVER_INTENT;
}

@java.lang.Override
public void onError(java.lang.Throwable e) {
    this.hideViewLoading();
    this.showErrorMessage(new org.mythtv.android.domain.exception.DefaultErrorBundle(((java.lang.Exception) (e))));
    this.showViewRetry();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int i) {
    dialog.cancel();
    noPlayerAnsweredCorrectly();
    sendCard(null);
    clientsResponded = 0;
}

@java.lang.Override
public void onClick(android.view.View v) {
    SendGoods();
    sureSendGoods.setEnabled(false);
}

static boolean isFragment(java.lang.Class clazz) {
    return (android.support.v4.app.Fragment.class.isAssignableFrom(clazz)) || (android.support.v4.app.Fragment.class.isAssignableFrom(clazz));
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_main, container, false);
    butterknife.ButterKnife.bind(this, view);
    return view;
}

private boolean requestFocus() {
    return (android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED) == (mAudioManager.requestAudioFocus(this, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN));
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    duration = mp.getDuration();
    playMedia();
}

@java.lang.Override
protected void onClick(android.content.Context context) {
    if ((fileType) != (com.frostwire.android.core.Constants.FILE_TYPE_RINGTONES)) {
        com.frostwire.android.gui.util.UIUtils.openFile(context, path, mime);
    }else {
        com.andrew.apollo.utils.MusicUtils.playSimple(path);
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    pauseMedia();
    buildNotification(PlaybackStatus.PAUSED);
}

private void createQR() {
    android.graphics.Bitmap b = getQRBitmap();
    co.celloscope.printingdemo.FileHelper.saveBitmapFileToExternalCacheDirectory(this, b, "qr.png");
}

private void launchDialogsListFragment() {
    android.util.Log.d("MainActivity", "launchDialogsListFragment()");
    setCurrentFragment(com.quickblox.q_municate.ui.fragments.chats.DialogsListFragment.newInstance());
}

@java.lang.Override
public boolean onKeyUp(int keyCode, android.view.KeyEvent event) {
    if ((keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_DOWN)) || (keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_UP))) {
        return true;
    }
    return false;
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse) {
    android.util.Log.i("info", (("T" + (client.finalUrl)) + errorResponse));
}

public void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    mUserIngredients = savedInstanceState.getStringArrayList("userIngredients");
    allIngredientsSearchValues = savedInstanceState.getStringArrayList("searchValues");
    userInput.setText(savedInstanceState.getString("userInput"));
}

public void setStateRevealed() {
    changeState(de.wackernagel.android.sidekick.widgets.CircularRevealView.STATE_REVEALED);
    android.support.v4.view.ViewCompat.postInvalidateOnAnimation(this);
}

public static void playSound(java.lang.String soundPath, android.media.MediaPlayer.OnCompletionListener playAllListener) {
    com.ichi2.libanki.Sound.playSound(soundPath, playAllListener, null);
}

public void stop() {
    if (mRunning) {
        mRunning = false;
        android.util.Log.i(ch.logixisland.anuto.game.GameEngine.TAG, "Stopping game loop");
        mGameThread.quit();
        mGameThread = null;
        mGameHandler = null;
    }
}

@java.lang.Override
public void onCancelled(com.firebase.client.FirebaseError firebaseError) {
    android.util.Log.e(getString(R.string.LogTagUserProfile), ((getString(R.string.FirebaseOnCancelledError)) + (firebaseError.getMessage())));
}

@java.lang.Override
public void setLocation(de.fau.cs.mad.wanthavers.common.Location location) {
    mFilterSettingFragBinding.setLocation(location);
    java.lang.System.out.println("reached set loaction");
    wanthavers.mad.cs.fau.de.wanthavers_android.baseclasses.WantHaversApplication.setLocation(location, getActivity().getApplicationContext());
    showLocationInView();
}

@java.lang.SuppressWarnings(value = "unused")
public void onEventMainThread(me.ryanmiles.mysummoner.events.ExceptionHandle e) {
    timber.log.Timber.e(java.lang.String.valueOf(e));
    android.widget.Toast.makeText(this, e.getErrorString(), Toast.LENGTH_LONG).show();
}

public static boolean isRetryable(@android.support.annotation.NonNull
org.wikipedia.util.ThrowableUtil.AppError e) {
    return !(e.getDetail().contains("404"));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setTheme();
    setContentView(R.layout.activity_confirm_appointment);
    setUpRecyclerView();
}

public void apply() {
    net.gini.android.vision.internal.camera.photo.PhotoEdit.applyChanges(mPhotoModifiers);
    clearModifiers();
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    if ((adapter.getmOnItemChildLongClickListener()) != null) {
        adapter.getmOnItemChildLongClickListener().onItemChildLongClick(adapter, view, getClickPosition());
    }
    return false;
}

@java.lang.Override
public void afterTextChanged(android.text.Editable p1) {
    byte[] decoded = org.apache.commons.codec.binary.Base64.decodeBase64(p1.toString().getBytes());
    output.setText(new java.lang.String(decoded));
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    getFragmentManager().beginTransaction().replace(android.R.id.content, new com.github.hintofbasil.hodl.settings.SettingsFragment()).commit();
}

private static android.net.Uri insertNut(android.content.ContentResolver contentResolver, com.izettle.wrench.core.Nut nut) {
    return contentResolver.insert(com.izettle.wrench.core.ConfigProviderContract.nutUri(), nut.toContentValues());
}

@java.lang.Override
public moneytracker2017.loftschool.com.loftschoolmoneytrackerjune17.ItemsAdapter.ItemViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    return new moneytracker2017.loftschool.com.loftschoolmoneytrackerjune17.ItemsAdapter.ItemViewHolder(android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.item, null));
}

@android.support.annotation.Nullable
public java.lang.String[] listServices() {
    android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA.getService(mSspName);
    me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative.asInterface(sspBinder);
    if (sspService != null) {
        return sspService.listServices();
    }
    return null;
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    view = inflater.inflate(R.layout.opinions_fragment, container, false);
    initializeUI(view);
    return view;
}

public void open() {
    db = desDBHelper.getWritableDatabase();
    isOpen = true;
    android.util.Log.d(net.deschulz.desdatabase0.DesDBManager.DEBUG_TAG, "desDBHelper opened");
}

@java.lang.Override
public void onClick(android.view.View v) {
    mEventClickListener.onEventViewClick(v, this, mEvent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(this, "open camera", Toast.LENGTH_LONG).show();
    android.content.Intent intent = new android.content.Intent("android.media.action.IMAGE_CAPTURE");
    startActivityForResult(intent, unical.master.computerscience.yellit.graphic.Activities.SignUpActivity.TAKE_PICTURE);
}

@java.lang.Override
public boolean onShowCustomView(android.view.View view, int requestedOrientation, android.webkit.WebChromeClient.CustomViewCallback callback) {
    return false;
}

public void onTick(long millisUntilFinished) {
    android.util.Log.i("COUNTTIME::", ("" + millisUntilFinished));
    broadcastToUI(millisUntilFinished);
}

private void setupViewPager() {
    viewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.viewPager)));
    viewPagerAdapter = new sneer.android.ui.ConvoActivityWithTabs.ViewPagerAdapter(getSupportFragmentManager());
    viewPager.setAdapter(viewPagerAdapter);
}

@java.lang.Override
public void onError(com.facebook.FacebookException e) {
    bringBackWebView();
    android.util.Log.i("Error", "Error");
}

@java.lang.Override
public void onClick(android.view.View v) {
    mCurrentIndex = ((mCurrentIndex) + 1) % (mQuestionBank.length);
    updateQuestion();
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    new com.antest1.kcanotify.SettingActivity.getKcaStart2Data(context).execute();
    return false;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    presenter.onClickDelete(originalURL);
    dismiss();
}

@java.lang.Override
public void onError(com.google.android.gms.common.api.Status status) {
    android.util.Log.i("Advanced", ("An error occurred: " + status));
}

public void loadInitialData() {
    java.lang.String message = getString(org.hisp.dhis.android.sdk.R.string.finishing_up);
    org.hisp.dhis.android.sdk.utils.UiUtils.postProgressMessage(message);
    org.hisp.dhis.android.sdk.controllers.DhisService.loadInitialData(this);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (mEnabled) {
        setState(getNextState());
        notifyListeners();
    }
}

@java.lang.Override
public void onPause() {
    super.onPause();
    com.android.EvtSpinner theSpinner = ((com.android.EvtSpinner) (mRootView.findViewById(R.id.spinner_didSomething)));
    theSpinner.setOnTouchListener(null);
    theSpinner.setOnItemSelectedListener(null);
    mListener = null;
}

@java.lang.Override
public boolean onBackPressed() {
    if ((bottomSheetBehavior.getState()) == (android.support.design.widget.BottomSheetBehavior.STATE_EXPANDED)) {
        bottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);
    }
    return false;
}

private int getNumOfPoints() {
    if (!(isAdded())) {
        return 0;
    }
    if (org.wordpress.android.ui.stats.StatsUIHelper.shouldLoadMoreBars(getActivity())) {
        return 10;
    }else {
        return 7;
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    imageButton.setImageResource(R.drawable.fb_press_background);
    scanIntegrator.initiateScan();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(mTele.isShown())) {
        mTeleField.setVisibility(View.VISIBLE);
    }else {
        mTeleField.setVisibility(View.GONE);
    }
}

public void toastError(java.lang.Exception error) {
    android.util.Log.e("MPissue", error.toString());
    error.fillInStackTrace().printStackTrace();
}

public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent();
    i.setClass(this, utc_4910.screenActivities.LoginActivity.class);
    finish();
    startActivity(i);
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem menuItem) {
    android.util.Log.d(com.codepath.nytimes.activity.NYTimesMainActivity.TAG, ("Menu Item Clicked = " + (menuItem.toString())));
    filteredSearch = true;
    showSearchFilterDialog();
    return false;
}

@java.lang.Override
public java.lang.CharSequence getPageTitle(int position) {
    if (position < (com.podraza.android.gaogao.gaogao.MainActivity.todos.size())) {
        return com.podraza.android.gaogao.gaogao.MainActivity.todos.get(position).getName();
    }else
        return "No More Dogs";
    
}

public void addStatusFilter(int statusFilter) {
    android.util.Log.d("FoodItemAdapter", ("adding status filter = " + (com.mfranklin.fridgeapp.data_model.Constants.statusToString(statusFilter))));
    statusFilters.add(statusFilter);
}

private void startCamera() {
    android.content.Intent intentCamera = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    if ((intentCamera.resolveActivity(getPackageManager())) != null) {
        startActivityForResult(intentCamera, wwckl.projectmiki.activity.MainActivity.REQUEST_TAKE_PICTURE);
    }
    android.util.Log.e(wwckl.projectmiki.activity.MainActivity.LOG_TAG, "Unable to dispatch intent. No supported application available");
}

public void run() {
    android.bluetooth.BluetoothSocket cSocket = null;
    try {
        cSocket = mmSSocket.accept();
    } catch (java.io.IOException e) {
        showMessage("Socket Accept Error");
        return ;
    }
    onConnected(cSocket);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    android.util.Log.i(LOG_TAG, (("Fragment" + (getId())) + ".onCreate()"));
    super.onCreate(savedInstanceState);
}

public static void startSwipeActivity(android.app.Activity activity, android.content.Intent intent) {
    com.github.bluzwong.swipeback.SwipeBackActivityHelper.startSwipeActivity(activity, intent, false, false);
}

@java.lang.Override
public void setOrientation(int orientation) {
    if ((android.widget.LinearLayout.HORIZONTAL) == orientation) {
        throw new java.lang.IllegalArgumentException("DragLinearLayout must be VERTICAL.");
    }
    super.setOrientation(orientation);
}

public void registerNetworkReceiver() {
    android.content.IntentFilter filter = new android.content.IntentFilter();
    filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
    filter.addAction(LocationManager.PROVIDERS_CHANGED_ACTION);
    registerReceiver(mNetworkStateReceiver, filter);
}

public void setIpAddress(android.view.View view) {
    showPopup(this, p);
}

public com.raizlabs.android.dbflow.sql.language.Where<ModelClass> and(com.raizlabs.android.dbflow.sql.builder.Condition condition) {
    mConditionQueryBuilder.putCondition(condition);
    return this;
}

public void saveSelected(int id) {
    android.content.SharedPreferences.Editor editor = prefs.edit();
    editor.putString("city", ("" + id));
    editor.commit();
    android.util.Log.d(org.scoutant.tf.TrafficMap.tag, ("saving preference : " + id));
}

@butterknife.OnClick(value = R.id.btn_sign_in_offline)
public void onSignInOffline() {
    android.os.Bundle bundle = getIntent().getExtras();
    android.content.Intent startAppInOffline = new android.content.Intent(getApplicationContext(), com.bytebuilding.affairmanager.activities.MainOfflineActivity.class);
    startAppInOffline.putExtras(bundle);
    startActivity(startAppInOffline);
    finish();
}

@java.lang.Override
protected void onPostExecute(java.lang.String aVoid) {
    super.onPostExecute(aVoid);
    mProgressBar.setVisibility(View.GONE);
    android.util.Log.d("ONPOSTEXECUTE", ("Array = " + (mArrayList.toString())));
    mArrayAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void onRetry() {
    try {
        joinRoom(roomIdOrAlias, callback);
    } catch (java.lang.Exception e) {
        android.util.Log.e(org.matrix.androidsdk.rest.client.RoomsRestClient.LOG_TAG, ("resend joinRoomByAlias : failed " + (e.getMessage())));
    }
}

private void showProgressDialog(final java.lang.String message) {
    jackpal.androidterm.Term.mActivity.runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            mProgressDialog = android.app.ProgressDialog.show(jackpal.androidterm.Term.mContext, null, message);
        }
    });
}

@java.lang.Override
public void onSessionResumed(com.google.android.gms.cast.framework.CastSession session, boolean wasSuspended) {
    timber.log.Timber.d("VideoDetailsFragment : onSessionResumed()");
    onApplicationConnected(session);
}

@java.lang.Override
public void onActivitySaveInstanceState(android.app.Activity activity, android.os.Bundle outState) {
    com.gigigo.ggglogger.GGGLogImpl.log("CloudRecognitionActivityLifeCycleCallBack.onActivitySaveInstanceState");
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int position, long l) {
    jumpup.imi.fb4.htw.de.jumpupandroid.portal.trip.entity.search.SingleTripQueryResult singleTripQueryResult = singleTripsQueryResultListAdapter.getItem(position);
    navigateToViewTrip(singleTripQueryResult.getTrip());
}

public com.danimahardhika.cafebar.CafeBar.Builder icon(@android.support.annotation.DrawableRes
int res, boolean tintIcon) {
    mIcon = com.danimahardhika.cafebar.CafeBarUtil.getDrawable(mContext, res);
    mTintIcon = tintIcon;
    return this;
}

@java.lang.Override
public void onProviderEnabled(java.lang.String s) {
    android.util.Log.d("GPSTest", "onProviderEnabled called");
}

private void loadShowBatteryTextSetting() {
    android.content.ContentResolver resolver = getContext().getContentResolver();
    mShowBatteryText = 0 != (Settings.System.getInt(resolver, Settings.System.STATUS_BAR_SHOW_BATTERY_PERCENT, 0));
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    java.lang.System.out.println("--- onConfigurationChanged");
    super.onConfigurationChanged(newConfig);
    drawerToggle.onConfigurationChanged(newConfig);
}

public static void setText(android.app.Activity activity, android.widget.TextView textView, java.lang.String str) {
    activity.runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            textView.setText(str);
        }
    });
}

private void initRotationForDisplay(final net.gini.android.vision.internal.camera.photo.ExifReader exifReader) {
    if (((mImageDocument) != null) && (mImageDocument.isImported())) {
        mRotationForDisplay = exifReader.getOrientationAsDegrees();
    }
}

void onCreateEventInteraction(android.widget.ProgressBar progressBar, tcss450.uw.edu.project18.event.Event createdEvent, java.lang.String url);

public void onClickButtonMyReservations(android.view.View view) {
    android.util.Log.v("onClickButtonRes", "OK");
    android.content.Intent intent = new android.content.Intent(this, com.example.tmary.proresto2.ReservationsActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkAnswer(false);
    updateQuestion();
}

private void setupActionBar() {
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    if (actionBar != null) {
        actionBar.setDisplayHomeAsUpEnabled(false);
    }
}

@java.lang.Override
public void showMoreItems() {
    homepageItemsAdapter.initData(me.aaron.zhihudaily.view.activities.MainActivity.returnMainPresenter().getLatestBean());
    homepageItemsAdapter.notifyDataSetChanged();
    android.util.Log.d("88888888", ("showMoreItems: " + (me.aaron.zhihudaily.view.fragments.HomePageFragment.isLoading)));
    me.aaron.zhihudaily.view.fragments.HomePageFragment.isLoading = false;
}

@java.lang.Override
public void call(final java.util.List<org.bookdash.android.domain.model.firebase.FireLanguage> fireLanguages) {
    this.languages = languages;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    super.onReceive(context, intent);
    if (Constants.ACTION_FOOTBALL_SCORE_UPDATED.equals(intent.getAction())) {
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_insert_dummy_data :
            insertPet();
            displayDatabaseInfo();
            break;
        case R.id.action_delete_all_entries :
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onComplete(java.lang.Void aVoid) {
    com.hackgsu.fall2016.android.HackGSUApplication.refreshAnnouncements(getApplicationContext());
    this.finish();
}

public void changeEntrySelection(vsd.co.za.sambugapp.DataAccess.DTO.ClassificationResultDTO currentEntry) {
    isClassified = true;
    android.widget.Toast.makeText(getApplicationContext(), "Species Identified!", Toast.LENGTH_SHORT).show();
    changeEntrySelection(((currentEntry.SpeciesID) + 1));
}

private void handleIntent(android.content.Intent intent) {
    com.google.android.gms.common.api.Status status = intent.getParcelableExtra(pl.charmas.android.reactivelocation.observables.location.LocationSettingsActivity.ARG_STATUS);
    try {
        status.startResolutionForResult(this, pl.charmas.android.reactivelocation.observables.location.LocationSettingsActivity.REQUEST_CODE_RESOLUTION);
    } catch (android.content.IntentSender | java.lang.NullPointerException e) {
        setResolutionResultAndFinish(Activity.RESULT_CANCELED);
    }
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View v = inflater.inflate(R.layout.fragment_welcome_step2, null);
    butterknife.ButterKnife.inject(this, v);
    return v;
}

public void startInfoActivity(java.lang.String textToShow) {
    android.content.Intent infoIntent = new android.content.Intent(getBaseContext(), com.example.qrhelper_android.InfoActivity.class);
    infoIntent.putExtra("qr_content", textToShow);
    startActivityForResult(infoIntent, 3);
}

protected void start() {
    timerState = TimerService.State.RUNNING;
    android.util.Log.d(com.simpleworkout.timer.MainActivity.TAG, ("start: timerState=" + (timerState)));
    updateButtonsLayout();
    updateSetsDisplay();
}

public static void getFlight(java.lang.String flightId, boolean enhance, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<com.airmap.airmapsdk.models.flight.AirMapFlight> callback) {
    com.airmap.airmapsdk.networking.services.FlightService.getFlight(flightId, enhance, callback);
}

@java.lang.Override
public void run() {
    android.widget.TextView textTime = ((android.widget.TextView) (findViewById(R.id.timer)));
    textTime.setText((((getString(R.string.play_activity_time)) + " ") + (seconds)));
}

@java.lang.Override
public void scheduleDrawable(android.graphics.drawable.Drawable drawable, java.lang.Runnable runnable, long l) {
    android.util.Log.e("CALL BACK", "SCH");
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.fjg.android.zxing.ZxingApplication.mInstance = this;
    cn.jpush.android.api.JPushInterface.setDebugMode(false);
    cn.jpush.android.api.JPushInterface.init(this);
}

public void onRadioButtonClicked(android.view.View source) {
    switch (source.getId()) {
        case R.id.radioButtonDebtor :
            iAmCreditor = false;
            setButtons();
            break;
        case R.id.radioButtonCreditor :
            iAmCreditor = true;
            setButtons();
            break;
    }
}

@java.lang.Override
public void onDrawerOpened(android.view.View drawerView) {
    ab.setTitle(title);
    invalidateOptionsMenu();
}

@java.lang.Override
public boolean onAnimationEnd(android.view.View view) {
    if ((mSearchViewListener) != null) {
        mSearchViewListener.onSearchViewShown();
    }
    return false;
}

@java.lang.Override
public void onResume() {
    super.onResume();
    mPageflip.setPageflipListener(new com.shopgun.android.sdk.demo.PageflipListenerPrinter(com.shopgun.android.sdk.demo.CatalogViewerActivity.TAG, false));
}

public static synchronized void clearAddedEventTitles() {
    com.dancedeets.android.gcm.ListenerService.addedEventTitles.clear();
}

public int obtainExtraMargin(android.view.View child, boolean isLayoutEnd) {
    if (child != null) {
        return computeAlignOffset(child, isLayoutEnd, true);
    }
    return 0;
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return com.laudandjolynn.mytv.ProgramTableFragment.newInstance(getPageTitle(position).toString(), date);
}

@java.lang.Override
public com.nabwera.filamuapp.adapter.MoviesAdapter.MyViewHolder onCreateViewHolder(android.view.ViewGroup viewGroup, int i) {
    android.view.View view = android.view.LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.movie_card, android.view.ViewGroup, false);
    return new com.nabwera.filamuapp.adapter.MoviesAdapter.MyViewHolder(view);
}

public void DeleteEvent(java.lang.String isAttending, int eventID, java.lang.String eventName) {
    com.plan_it.mobile.plan_it.UpdateDatabase.DeleteEvent(isAttending, eventID);
    android.widget.Toast.makeText(this, (("Deleting: " + eventName) + " Refresh List from menu"), Toast.LENGTH_LONG).show();
}

public static void load(android.content.Context context, java.lang.String path, android.widget.ImageView imageView) {
    com.bumptech.glide.Glide.with(context).load(path).diskCacheStrategy(DiskCacheStrategy.ALL).into(imageView);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_toggle :
            updateMenuIcon(item);
            toggle();
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    replaceViewFragment(new com.donor.oncall.fragments.RegisterationFragment(), true);
}

public static void save(java.util.ArrayList<java.lang.String> drafts) {
    android.content.SharedPreferences.Editor e = Authentication.authentication.edit();
    e.putString(SettingValues.PREF_DRAFTS, me.ccrama.redditslide.Reddit.arrayToString(drafts, "</newdraft>"));
    e.apply();
}

private void startNewNote(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, app.band.runawaynation.matth.plainnotes.EditorActivity.class);
    startActivityForResult(intent, app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE);
}

public static com.example.kimichael.yandextranslate.data.objects.Language from(android.database.Cursor cursor) {
    return new com.example.kimichael.yandextranslate.data.objects.Language(cursor.getString(cursor.getColumnIndex(TranslationContract.LanguageEntry.COLUMN_LANGUAGE_KEY)), cursor.getString(cursor.getColumnIndex(TranslationContract.LanguageEntry.COLUMN_LANGUAGE_NAME)));
}

@java.lang.Override
public void onError(int error) {
    android.util.Log.e(com.shaedar.virtualclient.VoiceEngine.GoogleRecognizer.TAG, ((("error " + error) + ": ") + (com.shaedar.virtualclient.VoiceEngine.GoogleRecognizer.getErrorText(error))));
    m_listener.onError(com.shaedar.virtualclient.VoiceEngine.GoogleRecognizer.getErrorText(error));
}

public synchronized boolean putFavorite(java.lang.String imdbID, com.example.vineetpatil.moviesearch.TitleRecord titleRecord) {
    android.content.SharedPreferences.Editor editor = sharedPreferences.edit();
    editor.putString(imdbID, titleRecord.toString());
    editor.apply();
    return true;
}

public boolean onActivityResultImpl(@android.support.annotation.NonNull
V v, int requestCode, int resultCode, android.content.Intent data) {
    VP presenter = getPresenter(v);
    return (presenter != null) && (presenter.onActivityResult(v, requestCode, resultCode, data));
}

public net.rainville.android.outstreamads.ArticleItem getArticleItem(java.util.UUID id) {
    for (net.rainville.android.outstreamads.ArticleItem articleItem : mArticleItems) {
        if ((articleItem.getArticleId()) == id) {
            return articleItem;
        }
    }
    return null;
}

@java.lang.Override
public void onInputGiven(java.lang.String number) {
    dataPersister.addNumberToBlockedNumbers(number);
    co.snagapp.android.model.Sms sms = new co.snagapp.android.model.Sms();
    sms.setId(number);
    numbers.add(sms);
    onBackPressed();
}

public static java.net.URL buildUrlPopular() {
    android.util.Log.d("----->>>>> NetworkUtils", "buildUrlPopular");
    return com.baulen.androidmovies.utilities.NetworkUtils.buildUrlGeneric(com.baulen.androidmovies.utilities.NetworkUtils.URL_POPULAR);
}

public static synchronized android.database.sqlite.SQLiteDatabase open() throws android.database.SQLException {
    (net.polybugger.apollot.db.ApolloDbAdapter.sOpenCounter)++;
    if ((net.polybugger.apollot.db.ApolloDbAdapter.sOpenCounter) == 1) {
        net.polybugger.apollot.db.ApolloDbAdapter.sDb = net.polybugger.apollot.db.ApolloDbAdapter.sDbHelper.getWritableDatabase();
    }
    return net.polybugger.apollot.db.ApolloDbAdapter.sDb;
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeDouble(latitude);
    dest.writeDouble(longitude);
    dest.writeFloat(radius);
}

public eu.nullbyte.android.urllib.Urllib login() throws com.liato.bankdroid.banking.exceptions.BankException, com.liato.bankdroid.banking.exceptions.LoginException, java.io.IOException {
    com.liato.bankdroid.banking.banks.LoginPackage lp = preLogin();
    java.lang.String response = urlopen.open(lp.getLoginTarget(), lp.getPostData());
    return urlopen;
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.d(aditi.hangman.Game.TAG, "game onResume");
}

public int getBaliseToTargetIndex() {
    android.util.Log.d(fr.univ_lille1.iut_info.caronic.mapsv3.maps.map_objects.Parcours.LOG, ("getBaliseToTargetIndex " + (baliseToTarget)));
    return baliseToTarget;
}

@java.lang.Override
public android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter) {
    receivers.add(receiver);
    return super.registerReceiver(receiver, filter);
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mSharedPrefsManager = cz.ejstn.gargantua.model.DefaultSharedPreferencesManager.getInstance(this);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    mLastLocation = location;
    android.widget.Toast.makeText(c, "Location changed!", Toast.LENGTH_SHORT).show();
    displayLocation();
}

public void launchJokeActivity(android.view.View view) {
    new com.elorri.android.builditbigger.GCEndpointsApiService(this).execute();
}

public void callHandler() {
    handler = new android.os.Handler();
    com.example.clock.stopwatchActivity.updateTimer my_update = new com.example.clock.stopwatchActivity.updateTimer();
    handler.postDelayed(my_update, 1000);
}

private void doLockScreenAnimation() {
    android.util.Log.d(com.vitaminbacon.lockscreendialer.LockScreenActivity.TAG, "doLockScreenAnimation() called");
    android.view.View lockScreen = mWrapperView.findViewById(R.id.lock_screen_interaction_container);
    lockScreen.animate().translationX(0);
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    android.widget.Toast.makeText(this, "onConnected", Toast.LENGTH_SHORT).show();
    android.util.Log.d(com.tacticsgames.dontdie.activities.PlayServicesActivity.TAG, "onConnected(): connected to Google APIs");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.event_list);
    android.content.Intent intent = getIntent();
    displayPrivateEvents();
    client = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addApi(AppIndex.API).build();
}

public static com.google.android.gms.common.api.PendingResult<com.google.android.gms.common.api.Status> requestLocationUpdates(com.google.android.gms.common.api.GoogleApiClient googleApiClient, com.google.android.gms.location.LocationRequest locationRequest, com.google.android.gms.location.LocationListener locationListener) {
    return null;
}

private void setTargetView(@android.support.annotation.IdRes
int resId) {
    setTargetView(((android.app.Activity) (mContext)).findViewById(resId));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (co.smartreceipts.android.BuildConfig.DEBUG) {
        android.util.Log.d(co.smartreceipts.android.fragments.ReceiptsFragment.TAG, "onCreate");
    }
    mCurrentTrip = getArguments().getParcelable(Trip.PARCEL_KEY);
}

@java.lang.Override
public void onFailure(retrofit2.Call<in.tosc.doandroidlib.objects.Action> call, java.lang.Throwable t) {
    setSwitchWithoutTriggering(switchBackup, true);
    android.support.design.widget.Snackbar.make(coordinatorLayout, getString(R.string.network_error), Snackbar.LENGTH_SHORT).show();
}

@java.lang.Override
public void setPrimaryItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    uk.co.senab.photoview.PhotoView imageView = ((uk.co.senab.photoview.PhotoView) (object));
    mCurrentPrimaryItem = imageView;
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.android.record.RecordApplication.mApplication = this;
    com.android.record.RecordApplication.mContext = getApplicationContext();
    setDatabase();
}

public void clickCreateDataBase(android.view.View v) {
    edu.byui.cs246.project.DataBaseCreator creator = new edu.byui.cs246.project.DataBaseCreator(db);
    creator.create();
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse) {
    android.util.Log.d("DEBUG", errorResponse.toString());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    findViewById(R.id.launch_recording_activity);
    android.util.Log.i(com.blabbertabber.blabbertabber.MainActivity.TAG, "onCreate()");
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    linearLayout = ((android.widget.LinearLayout) (inflater.inflate(R.layout.fragment_course_section, container, false)));
    return linearLayout;
}

public void connect(com.ericsson.addroneapplication.model.ConnectionInfo connectionInfo) {
    android.util.Log.e(com.ericsson.addroneapplication.communication.TcpSocket.DEBUG_TAG, "connect");
    state = com.ericsson.addroneapplication.communication.TcpSocket.State.CONNECTING;
    connection = new com.ericsson.addroneapplication.communication.TcpSocket.SocketConnection();
    android.util.Log.e(com.ericsson.addroneapplication.communication.TcpSocket.DEBUG_TAG, "connect22");
    connection.execute(connectionInfo);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    canActivateAlarmNow = false;
    cancelAlarm(false);
}

@java.lang.Override
public net.idik.lib.slimadapter.viewinjector.DefaultViewInjector typeface(int id, android.graphics.Typeface typeface) {
    android.widget.TextView view = findViewById(id);
    view.setTypeface(typeface);
    return null;
}

public void createBoundBitmap() {
    boundBM = android.graphics.Bitmap.createBitmap(xWidth, yHeight, Bitmap.Config.ARGB_8888);
}

void displayCoordinates(@android.support.annotation.NonNull
java.lang.String latitude, @android.support.annotation.NonNull
java.lang.String longitude, @android.support.annotation.Nullable
java.lang.Double altitude, float accuracy) {
    statusIndicator.setText(getContext().getString(R.string.geo_location_accuracy, accuracyFormat.format(accuracy)));
    displayCoordinates(latitude, longitude, altitude);
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder surfaceHolder) {
    android.util.Log.d("minko", "DummyCameraPreview.surfaceCreated");
    if (isActive())
        _callback.run(surfaceHolder);
    
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    plugin.deleteRecording(recording);
    listAdapter.remove(recording);
}

private void newPAssError() {
    android.widget.Toast.makeText(getBaseContext(), "New passwords don't match!", Toast.LENGTH_SHORT).show();
    changeDocFirebase.removeEventListener(changeDocListener);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.kcb.teacher.activity.test.EditTestActivity.sTest.addQuestion();
    showTestNameNum();
    switchNextButton();
    com.kcb.common.util.ToastUtil.toast(java.lang.String.format(getResources().getString(R.string.tch_question_added), questionNum));
}

@java.lang.Override
public void onResume() {
    if (com.android.messaging.util.OsUtil.hasStoragePermission()) {
        startMediaPickerDataLoader();
        updateForPermissionState(true);
    }else {
        updateForPermissionState(false);
    }
}

public boolean onTouch(android.view.View view, android.view.MotionEvent event) {
    updateButton(2);
    return false;
}

boolean isFileSaveEnabled() {
    if (codepath.apps.demointroandroid.ScoreKeeperUtils.getTodayAsNoTimeString().equals(fileSaveFeatureDate)) {
        return fileSaveForToday;
    }
    return false;
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    android.util.Log.i(cn.bit.hao.ble.tool.activity.BaseActivity.TAG, ((this.getClass().getSimpleName()) + " onStop"));
    cn.bit.hao.ble.tool.response.manager.CommonResponseManager.getInstance().unregisterUINotification(this);
}

public void onClick(android.view.View v) {
    setNotificationData();
    switch (v.getId()) {
        case R.id.btnMainSendNotificationActionBtn :
            setDataForNotificationWithActionButton();
            break;
    }
    firebaseAuth = com.google.firebase.auth.FirebaseAuth.getInstance();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initView();
    initData();
    viewPager.setAdapter(pageAdapter);
    initEvent();
}

@java.lang.Override
public void invalidateDrawable(android.graphics.drawable.Drawable drawable) {
    android.util.Log.e("CALL BACK", "invalidate");
    if ((getCallback()) != null) {
        getCallback().invalidateDrawable(this);
    }
}

protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.friends);
    android.widget.ImageButton disableFriends = ((android.widget.ImageButton) (findViewById(R.id.friends_button)));
    disableFriends.setEnabled(false);
}

@java.lang.Override
protected void onQueueInputBuffer(com.google.android.exoplayer2.decoder.DecoderInputBuffer buffer) {
    if (((com.google.android.exoplayer2.util.Util.SDK_INT) < 23) && (tunneling)) {
        maybeNotifyRenderedFirstFrame();
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    new com.rohitsuratekar.NCBSinfo.database.ContactsData(context).makeTable();
    new com.rohitsuratekar.NCBSinfo.database.AlarmData(context).makeTable();
    new com.rohitsuratekar.NCBSinfo.database.NotificationData(context).makeTable();
    new com.rohitsuratekar.NCBSinfo.database.TalkData(context).makeTable();
}

@java.lang.Override
public void draw(android.graphics.Canvas canvas) {
    super.draw(canvas);
    java.lang.System.out.println(" indexable list view draw .");
    if ((mScroller) != null)
        mScroller.draw(canvas);
    
}

@java.lang.Override
protected void onSaveInstanceState(final android.os.Bundle outState) {
    outState.putSerializable(com.company.mbelogorodtsev.trainingapplication.HomeActivity.SAVE_PROGRESS_DIALOG_PROGRESS, progressDialog.getProgress());
    super.onSaveInstanceState(outState);
}

public void registerBroadcastReceiver() {
    android.content.IntentFilter statusIntentFilter = new android.content.IntentFilter(com.njlabs.showjava.Constants.PROCESS_BROADCAST_ACTION);
    registerReceiver(processStatusReceiver, statusIntentFilter);
}

public void setGridData(java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>> mGridData) {
    this.mGridData = mGridData;
    android.util.Log.v(com.example.android.popmovies.MovieImagesAdapter.TAG, mGridData.get(0).get("imageUrl"));
    notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.view.View v) {
    mCurrentIndex = ((mCurrentIndex) - 1) % (mQuestionBank.length);
    updateQuestion();
}

public void onSingleTap() {
    android.content.Intent launchIntent = packagemanager.getLaunchIntentForPackage(sPrefs.getSelectedApp(2));
    startActivity(launchIntent);
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.example.android.popularmoviesstagetwo.model.MoviesListResponse> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(getContext(), getString(R.string.internet_connection_message), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onAnimationUpdate(android.animation.ValueAnimator valueAnimator) {
    window.setStatusBarColor(((java.lang.Integer) (valueAnimator.getAnimatedValue())));
}

@java.lang.Override
public void onAuthStateChanged(@android.support.annotation.NonNull
com.google.firebase.auth.FirebaseAuth firebaseAuth) {
    com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser();
    if (user == null) {
        startActivity(new android.content.Intent(this, bt.com.bombardiertransportation.LoginActivity.class));
        finish();
    }
    displaySelectedScreen(R.id.nav_QRDevice);
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(this, message, Toast.LENGTH_LONG).show();
    okButton.setProgress(0);
}

private void setDesc(java.lang.String desc) {
    android.widget.TextView post_desc = ((android.widget.TextView) (mView.findViewById(R.id.post_desc)));
    post_desc.setText(desc);
}

@java.lang.Override
public void onFailure(java.lang.Throwable error) {
    android.util.Log.e("seyi", "farmer fetch failed");
    android.util.Log.e("TAG", "failed to fetchFarmersIntoRealm", error);
}

@java.lang.Override
protected void onPause() {
    android.util.Log.v(com.example.andrea.tabsactionbar.chat.ConversationActivity.TAG, "onPause");
    if (bound) {
        unregisterConversation();
        unbindService(mConnection);
        mService = null;
    }
    super.onPause();
}

private void startHeadsetStateListener() {
    if ((receiver) == null) {
        android.content.IntentFilter receiverFilter = new android.content.IntentFilter(android.content.Intent.ACTION_HEADSET_PLUG);
        receiver = new ca.uqac.florentinth.speakerauthentication.Audio.HeadsetStateReceiver();
        registerReceiver(receiver, receiverFilter);
    }
}

public void defineTextViews() {
    rosTextView = ((org.ros.android.view.RosTextView<msgs.ImageData>) (com.github.ros_java.android_ROS.controller.Listener.app.findViewById(R.id.text)));
    rosTextView.setTopicName(topic);
    if (msgTyp.equals("msgs/ImageData")) {
        listenForImageData();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.leosko.todotxt_gdrive.TaskEditDialog ted = new com.leosko.todotxt_gdrive.TaskEditDialog(this, null);
    android.app.AlertDialog.Builder builder = ted.createTaskCreationDialog();
    final android.app.AlertDialog alertD = builder.create();
    alertD.show();
}

public static boolean needPermission(android.app.Activity activity, java.lang.String[] permissions) {
    for (java.lang.String permission : permissions) {
        if (org.gem.indo.dooit.helpers.permissions.PermissionsHelper.needPermission(activity, permission)) {
            return false;
        }
    }
    return true;
}

public void run() {
    try {
        android.app.Instrumentation inst = new android.app.Instrumentation();
        inst.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);
    } catch (java.lang.Exception e) {
        android.util.Log.w("TAG-T1", e.toString());
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    try {
        startForeground(com.tencent.tinker.lib.service.TinkerPatchService.notificationId, new android.app.Notification());
    } catch (java.lang.NullPointerException e) {
        com.tencent.tinker.lib.util.TinkerLog.e(com.tencent.tinker.lib.service.TinkerPatchService.TAG, "InnerService set service for push exception:%s.", e);
    }
    stopSelf();
}

private void handleErrorUpload() {
    dialog.dismiss();
    android.widget.Toast.makeText(mContext, R.string.error_has_occurred, Toast.LENGTH_SHORT).show();
    exitActivity();
}

public void setMusicUrls(java.util.List<java.lang.String> music) {
    musicUrls = music;
    TOR = new android.os.Parcelable.Creator<com.example.seanholcomb.spotifystreamer.ArtistParcel>() {
        {
        }
    };
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    mNotificationManager = ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE)));
    android.util.Log.d(Constants.DEBUG_TAG, "NotificationService : onCreate");
    setState("start");
}

public org.ei.opensrp.domain.FetchStatus sync() {
    org.ei.opensrp.domain.FetchStatus fetchStatus = pullFromServer();
    android.content.org.ei.opensrp.Context.getInstance().pullAllDataFromCloudant();
    android.content.org.ei.opensrp.Context.getInstance().pushAllDataToCloudant();
    return fetched;
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            finish();
            java.lang.System.exit(0);
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@android.support.annotation.NonNull
@java.lang.Override
protected java.lang.String getIdColumnName(@android.support.annotation.NonNull
android.content.ContentValues contentValues) {
    return com.pushtorefresh.storio.sqlitedb.impl.Tweet.COLUMN_ID;
}

@java.lang.Override
public void onAttach(final android.app.Activity activity) {
    super.onAttach(activity);
    this.activity = activity;
    this.application = ((de.schildbach.wallet.WalletApplication) (activity.getApplication()));
    this.packageManager = activity.getPackageManager();
}

android.graphics.Bitmap readFile(java.io.File file) {
    android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeFile(file.getPath());
    return bitmap;
}

@java.lang.Override
public void onDrawFrame(javax.microedition.khronos.opengles.GL10 gl) {
    android.opengl.GLES20.glClear(((android.opengl.GLES20.GL_COLOR_BUFFER_BIT) | (android.opengl.GLES20.GL_DEPTH_BUFFER_BIT)));
    mFilter.onDrawFrame(gl);
}

@java.lang.Override
public android.content.Loader<java.util.List<fr.sims.coachingproject.model.UserProfile>> onCreateLoader(int id, android.os.Bundle args) {
    return new fr.sims.coachingproject.loader.network.GroupMembersLoader(getContext(), mGroupId, true);
}

@java.lang.Override
public void onResponse(retrofit2.Call<java.util.List<tomsnuverink.com.workoutapp.model.Exercise>> call, retrofit2.Response<java.util.List<tomsnuverink.com.workoutapp.model.Exercise>> response) {
    android.util.Log.v("MAIN_ACTIVITY", response.body().toString());
    setAdapter(response.body());
}

public void removeFace(int index) {
    com.google.android.gms.samples.vision.face.facetracker.FaceTrackerActivity.faces.get(index).stopSound();
    com.google.android.gms.samples.vision.face.facetracker.FaceTrackerActivity.faces.remove(index);
    android.util.Log.d("fffa", "fffafffafffafffafffafffafffafffafffafffa");
}

@java.lang.Override
public void onResults(android.os.Bundle results) {
    android.util.Log.d(com.shaedar.virtualclient.VoiceEngine.GoogleRecognizer.TAG, ("onResults " + results));
    java.util.List<java.lang.String> data = results.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);
    m_listener.onRecognitionDone(data);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        lock.toggleLock(((app.lock.bluetooth.smart_lock_app.LockListScreen) (mContext)));
    }
}

public void close() throws java.io.IOException {
    net.fdloch.wifiPresenter.android.network.Connection.log.debug("Going to close socket...");
    this.in.close();
    this.out.close();
    this.socket.close();
    net.fdloch.wifiPresenter.android.network.Connection.log.debug("Successfully closed socket!");
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (mp.isPlaying())
        mp.stop();
    
    finish();
}

private void sendToUnity(java.lang.String cmd) throws java.io.IOException {
    out = new java.io.BufferedWriter(new java.io.OutputStreamWriter(socket.getOutputStream()));
    out.write(cmd);
    out.flush();
    android.util.Log.d("sendUnity", cmd);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mAdapter = new android.widget.ArrayAdapter<ke.co.appslab.mu_graduation.fragments.dummy.DummyContent.DummyItem>(getActivity(), android.R.layout.simple_list_item_1, android.R.id.text1, ke.co.appslab.mu_graduation.fragments.dummy.DummyContent.ITEMS);
}

public static com.pquach.vocabularynote.WordFragment newInstance(long category) {
    com.pquach.vocabularynote.WordFragment fragment = new com.pquach.vocabularynote.WordFragment();
    android.os.Bundle args = new android.os.Bundle();
    args.putLong(Constant.ARG_CATEGORY, category);
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle savedInstanceState) {
    super.onSaveInstanceState(savedInstanceState);
    savedInstanceState.putInt("Position", myVideoView.getCurrentPosition());
    myVideoView.pause();
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    mFocusedView = (hasFocus) ? v : null;
    if (hasFocus && ((mReceipt) == null)) {
        new co.smartreceipts.android.widget.ShowSoftKeyboardOnFocusChangeListener().onFocusChange(v, hasFocus);
    }
}

private com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord constructBalanceRecord(final long availableRunningBalance, final long bookRunningBalance, com.bitdubai.fermat_api.layer.all_definition.enums.BlockchainNetworkType blockchainNetworkType) throws com.bitdubai.fermat_ccp_plugin.layer.basic_wallet.bitcoin_wallet.developer.bitdubai.version_1.exceptions.CantGetBalanceRecordException {
    com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord record = getBalancesRecord(blockchainNetworkType);
    record.setLongValue(BitcoinWalletDatabaseConstants.BITCOIN_WALLET_BALANCE_TABLE_AVAILABLE_BALANCE_COLUMN_NAME, availableRunningBalance);
    record.setLongValue(BitcoinWalletDatabaseConstants.BITCOIN_WALLET_BALANCE_TABLE_BOOK_BALANCE_COLUMN_NAME, bookRunningBalance);
    return record;
}

public static void storeSession(android.content.Context context, long session) {
    android.content.SharedPreferences sharedPreferences = com.silverpop.engage.config.EngageConfig.getConfigSharedPrefs(context);
    sharedPreferences.edit().putLong(com.silverpop.engage.config.EngageConfig.SharedProperties.SESSION.toString(), session).commit();
}

public static android.text.Spanned fromHtml(java.lang.String source, org.wordpress.aztec.spans.UnknownHtmlSpan.OnUnknownHtmlClickListener onUnknownHtmlClickListener, android.content.Context context, java.util.List<org.wordpress.aztec.plugins.IAztecPlugin> plugins) {
    return org.wordpress.aztec.Html.fromHtml(source, null, onUnknownHtmlClickListener, context, plugins);
}

public void setColorPressed(@android.support.annotation.ColorRes
int colorPressed) {
    this.mColorPressed = getColor(colorPressed);
    updateBackground();
}

private void getExtras() {
    android.os.Bundle bundle = getArguments();
    keyword = bundle.getString(com.jds.webapp.Fragment.FragmentListArticle.KEY_WORD);
}

void onItemClick(android.view.View view, M content, int position);

@java.lang.Override
protected void onPostExecute(java.lang.Void aVoid) {
    super.onPostExecute(aVoid);
    android.widget.Toast.makeText(((com.example.thaislins.twitter.activities.DirectMessageActivity) (context)), "Server Stopped!", Toast.LENGTH_SHORT).show();
}

public void onDrawerOpened(android.view.View drawerView) {
    getSupportActionBar().setTitle(mDrawerTitle);
    invalidateOptionsMenu();
}

@java.lang.Override
public void onDisconnect() {
    android.util.Log.v(me.iasc.vultureegg.app.DeviceControlActivity.TAG, "mCottonServer onDisconnect");
    me.iasc.vultureegg.app.DeviceControlActivity.isCottonReady = false;
}

public void run() {
    android.util.Log.i(com.dubstin.btslapjack.MainActivity.TAG, "HERE111111");
    sendBluetoothMessage("passedAllJacks");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_bottom_navigation);
    initNavigation();
    new com.ws.apple.ayuep.proxy.DeviceProxy().registerDevice(this);
}

public static java.lang.String getPackageVersionName(final android.content.Context context) throws android.content.pm.PackageManager.NameNotFoundException {
    android.content.pm.PackageInfo info = com.jana.android.core.utils.DeviceInfo.getPackageInfo(context);
    java.lang.String version = info.versionName;
    return version;
}

@butterknife.OnClick(value = R.id.btn_End)
void onBtnEndClick() {
    android.widget.Toast.makeText(this, "Processing This Section", Toast.LENGTH_SHORT).show();
    edu.aku.hassannaqvi.codi.core.AppMain.endActivity(this, this);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.home_menu, menu);
    android.view.MenuItem item = menu.findItem(R.id.menu_item_share);
    mShareActionProvider = ((android.support.v7.widget.ShareActionProvider) (android.support.v4.view.MenuItemCompat.getActionProvider(item)));
    return true;
}

@java.lang.Override
public sunny.com.criminalintent.CrimeListFragment.CrimeHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.LayoutInflater layoutInflater = android.view.LayoutInflater.from(getActivity());
    android.view.View view = layoutInflater.inflate(android.R.layout.simple_list_item_1, parent, false);
    updateUI();
    return new sunny.com.criminalintent.CrimeListFragment.CrimeHolder(view);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent settingIntent = new android.content.Intent(getApplicationContext(), com.example.yink.amadeus.SettingsActivity.class);
    startActivity(settingIntent);
}

public android.graphics.drawable.Drawable getBitmapToDrawable(android.content.res.Resources resources, android.graphics.Bitmap bitmap) {
    java.lang.System.out.println(("bitmap ::: " + bitmap));
    if (bitmap == null)
        return null;
    
    return new android.graphics.drawable.BitmapDrawable(resources, bitmap);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    saveGame();
    finish();
}

@java.lang.Override
public void onConnected(android.os.Bundle connectionHint) {
    android.util.Log.i(qwikstats.qwikcut.kerbysoft.com.qwikstats.drivetools.BaseDriveActivity.TAG, "GoogleApiClient connected");
    showMessage("Connection Successful!!!");
}

public java.lang.String getText() {
    if (android.text.TextUtils.isEmpty(text))
        return "";
    else
        return text;
    
}

@java.lang.Override
public void onDismissedBySwipeLeft(android.support.v7.widget.RecyclerView recyclerView, int[] reverseSortedPositions) {
    for (int position : reverseSortedPositions) {
        mItems.remove(position);
        mTripListAdapter.notifyItemRemoved(position);
    }
    mTripListAdapter.notifyDataSetChanged();
}

public void addMasterList(java.lang.String value) {
    if (!(masterList.contains(value))) {
        if (value.contains("Treffer1")) {
            android.util.Log.d("testitest", "treffer1");
        }
        masterList.add(value);
    }
}

public void goToSceneComments(android.view.View view) {
    try {
        sceneId = Constants.sceneImages;
        moveButton(view);
    } catch (java.lang.Exception ex) {
        if (BuildConfig.DEBUG) {
            android.util.Log.e(Constants.LOG, ex.getMessage());
        }
    }
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    if (keyCode == (android.view.KeyEvent.KEYCODE_BACK)) {
        if (doneMenuItem.isVisible()) {
            showNotSaveNoteDialog();
        }
        return true;
    }
    return super.onKeyDown(keyCode, event);
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase database) {
    database.execSQL((((((com.fyp.n3015509.db.MySQLiteHelper.CREATE_BOOK_TABLE) + (com.fyp.n3015509.db.MySQLiteHelper.CREATE_AUTHOR_TABLE)) + (com.fyp.n3015509.db.MySQLiteHelper.CREATE_BUZZLIST_TABLE)) + (com.fyp.n3015509.db.MySQLiteHelper.CREATE_BOOK_INTERIM_TABLE)) + (com.fyp.n3015509.db.MySQLiteHelper.CREATE_BUZZLIST_INTERIM_TABLE)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    (giveup)++;
    balanceText.setText((("COMMON FURSE: " + (commonPurse)) + ((giveup) * 50)));
}

@java.lang.Override
public void onChildAdded(com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String previousChildName) {
    android.util.Log.d(tpdev.megaphone.MapsActivity.TAG, ("onChildAdded:" + (dataSnapshot.getKey())));
    tpdev.megaphone.db.Message message = dataSnapshot.getValue(tpdev.megaphone.db.Message.class);
    add_message_marker(message);
}

private void startReboot() {
    android.util.Log.v(com.general.mediaplayer.csr.services.CsrManagerService.TAG, "==CsrManagerService==startReboot==");
    if (!(this.mRebootIsDo)) {
        android.util.Log.v(com.general.mediaplayer.csr.services.CsrManagerService.TAG, "==CsrManagerService==startReboot==do=========");
        this.mRebootIsDo = true;
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    nextAddestatePage(4);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    intent1.putExtra("cartype", mCarType);
    startActivity(intent1);
}

private void drawList() {
    this.adapter = new android.widget.ArrayAdapter<ch.hgdev.toposuite.points.Point>(this, R.layout.history_list_item, new java.util.ArrayList(this.orthoImpl.getMeasures()));
    this.measuresListView.setAdapter(this.adapter);
}

@java.lang.Override
public void onAudioFocusChange(int focusChange) {
    switch (focusChange) {
        case android.media.AudioManager.AUDIOFOCUS_LOSS :
        case android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT :
        case android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK :
            pause();
            break;
        case android.media.AudioManager.AUDIOFOCUS_GAIN :
            resume();
            break;
    }
}

@java.lang.Override
public void onActivityDestroyed(android.app.Activity activity) {
    if (com.gigigo.vuforiacore.sdkimagerecognition.icloudrecognition.CloudRecognitionActivityLifeCycleCallBack.mActivity.equals(activity))
        this.mCloudReco.on_Destroy();
    
    activity.getApplication().unregisterActivityLifecycleCallbacks(this);
}

@java.lang.Override
protected void onPause() {
    handler.removeCallbacks(zoomChecker);
    visible = false;
    super.onPause();
    android.util.Log.d(org.unchiujar.umbra.FogOfExplore.TAG, "onPause completed.");
}

public static com.example.uriel.ordertracker.App.Services.Impl.ConnectionService newTask(android.content.Context context) {
    com.example.uriel.ordertracker.App.Services.Impl.ConnectionService.writeIPtoFile(Constants.BASE_URL, false);
    return new com.example.uriel.ordertracker.App.Services.Impl.ConnectionService(context);
}

private boolean checkConnection() {
    android.net.ConnectivityManager connectivityManager = ((android.net.ConnectivityManager) (getSystemService(Context.CONNECTIVITY_SERVICE)));
    android.net.NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();
    if (networkInfo == null) {
        return false;
    }
    return true;
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent event) {
    gestureDetector.onTouchEvent(event);
    return super.onTouchEvent(event);
}

public void exit() {
    dispose();
    net.qiujuer.tips.factory.cache.Cache.destroy();
    for (android.app.Activity activity : mActivities) {
        if (!(activity.isFinishing()))
            activity.finish();
        
    }
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putParcelable(com.example.vit.popularmovies.ui.fragment.MoviesGridFragment.KEY_MOVIES_LIST, org.parceler.Parcels.wrap(moviesList));
    android.util.Log.d(MovieApplication.TAG, ((com.example.vit.popularmovies.ui.fragment.MoviesGridFragment.CLASS) + "onSaveInstanceState()"));
}

private java.lang.String getJsonStringForWeatherInfo(android.database.Cursor cursor) {
    java.lang.String weatherInfoJsonString = null;
    if (!(recordNeedsToBeUpdatedForWeatherInfo(cursor))) {
        int columnIndexForWeatherInfo = cursor.getColumnIndexOrThrow(columnNameForJsonString);
        weatherInfoJsonString = cursor.getString(columnIndexForWeatherInfo);
    }
    return weatherInfoJsonString;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_maps);
    com.google.android.gms.maps.SupportMapFragment mapFragment = ((com.google.android.gms.maps.SupportMapFragment) (getSupportFragmentManager().findFragmentById(R.id.map)));
    mapFragment.getMapAsync(this);
}

private void onAuthGPlusSuccess(com.google.firebase.auth.FirebaseUser user) {
    android.util.Log.d(com.task.vasskob.firebase.ui.SignInActivity.TAG, ("onAuthGPlusSuccess UserName = " + (user.getEmail())));
    com.task.vasskob.firebase.model.User newUser = new com.task.vasskob.firebase.model.User(username, userEmail);
    com.task.vasskob.firebase.database.FirebaseOperations.CreateNewUser(Constants.USERS, newUser);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(isInSearchUi())) {
        mActionBarController.onSearchBoxTapped();
        enterSearchUi(false, mSearchView.getText().toString());
    }
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    this.currentP = savedInstanceState.getInt("CurrentPosition");
}

@java.lang.Override
public java.util.Set<org.gammf.collabora_android.notes.Note> getAllNoteNotInModules() {
    final java.util.Set<org.gammf.collabora_android.notes.Note> allNotes = new java.util.HashSet<>();
    allNotes.addAll(super.getAllNotes());
    return allNotes;
}

private void showLocationSearch() {
    mLocationAddSection.setVisibility(View.GONE);
    mLocationSearchSection.setVisibility(View.VISIBLE);
    mLocationViewSection.setVisibility(View.GONE);
    org.wordpress.android.util.EditTextUtils.showSoftInput(mLocationEditText);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialogIsDisplayed = false;
    newGame();
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    boolean result = super.onUnbind(intent);
    com.tianyl.android.offlinereader.sync.SyncService.addLog("onUnbind");
    return result;
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    signUpBinding = android.databinding.DataBindingUtil.inflate(inflater, R.layout.fragment_sign_up, container, false);
    return inflater.inflate(R.layout.fragment_sign_up, container, false);
}

public void onTabSelected(android.app.ActionBar.Tab tab, android.app.FragmentTransaction ft) {
    mViewPager.setCurrentItem(tab.getPosition());
    currentPage = tab.getPosition();
}

public <T extends com.takusemba.spotlight.Target> void start(@android.support.annotation.NonNull
android.app.Activity activity, @android.support.annotation.NonNull
T... targets) {
    com.takusemba.spotlight.SpotlightView spotlightView = createSpotlightView(activity);
    setUpSpotlightView(activity, spotlightView, java.util.Arrays.asList(targets));
}

public void setReachSearchResults(java.util.List<com.takescoop.americanwhitewaterandroid.model.ReachSearchResult> reachSearchResults) {
    this.reachSearchResults = reachSearchResults;
    display(reachSearchResults, map);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(v.getContext(), com.example.nick.countrypedia.view.CountryActivity.class);
    intent.putExtra("id", ((int) (v.getTag())));
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    java.lang.String value = input.getText().toString();
    addFood(value);
    populateFoodListView();
}

@java.lang.Override
protected void onReset() {
    android.util.Log.i("loader", ("onReset-" + (tag)));
    if ((presenter) != null) {
        presenter.onDestroyed();
        presenter = null;
    }
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    setState("start");
    android.util.Log.d(Constants.DEBUG_TAG, "NotificationService : onBind");
    return mBinder;
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    updatePlayer();
    if ((currentChapter.getCurrentDuration()) > 0) {
        newtech.audiolibrary.adapters.PlayThread.mediaPlayer.seekTo(currentChapter.getCurrentDuration());
    }
    newtech.audiolibrary.adapters.PlayThread.mediaPlayer.start();
}

@java.lang.Override
public void onClick(final android.view.View v) {
    final java.lang.String key = mRecipeAdapter.getRef(position).getKey();
    doDelete(key, item);
    android.widget.Toast.makeText(getContext(), "Eliminato con successo!", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.stepanp.luna2d.LunaPrefs.init(this);
    glView = new com.stepanp.luna2d.LunaGlView(getApplication());
    setContentView(glView);
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(ctx, com.engstuff.coloriphornia.activities.FavoriteColorsActivity.class));
    ctx.finish();
}

@java.lang.Override
public void onCreate(final android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.app_preferences);
    com.piotr.localweather.view.SettingsFragment.pref_location_key = getString(R.string.pref_location_key);
    com.piotr.localweather.view.SettingsFragment.cityEditTextPreference = ((android.preference.EditTextPreference) (findPreference("settings_edit_city_name")));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.cancel();
    finish();
    startActivity(new android.content.Intent(getApplicationContext(), com.example.kapayakatongo.bikenapped.MapActivity.class));
}

@java.lang.Override
protected java.lang.Void doInBackground(java.lang.Void... none) {
    com.ibm.watson.developer_cloud.android.speech_to_text.v1.SpeechToText.sharedInstance().recognize();
    return null;
}

@java.lang.Override
protected void onServiceConnected() {
    super.onServiceConnected();
    android.accessibilityservice.AccessibilityServiceInfo accessibilityServiceInfo = new android.accessibilityservice.AccessibilityServiceInfo();
    accessibilityServiceInfo.eventTypes = android.view.accessibility.AccessibilityEvent.TYPES_ALL_MASK;
    accessibilityServiceInfo.feedbackType = android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_ALL_MASK;
    accessibilityServiceInfo.flags = android.accessibilityservice.AccessibilityServiceInfo.FLAG_INCLUDE_NOT_IMPORTANT_VIEWS;
    accessibilityServiceInfo.notificationTimeout = 0;
    setServiceInfo(accessibilityServiceInfo);
}

@java.lang.Override
public void onTextQueryFragmentInteraction(android.net.Uri uri) {
    android.util.Log.d(edu.umbc.cs.iot.clients.android.UMBCIoTApplication.getDebugTag(), uri.toString());
}

@java.lang.Override
public void onAudioFocusChange(int focusChange) {
    if (focusChange == (android.media.AudioManager.AUDIOFOCUS_LOSS)) {
        mAudioManager.abandonAudioFocus(afChangeListener);
        if (mPlayer.isPlaying())
            stopPlaying();
        
    }
}

@java.lang.Override
public void onLocationUpdated(android.location.Location location) {
    showLocation(location, new com.google.android.gms.location.DetectedActivity(com.google.android.gms.location.DetectedActivity.UNKNOWN, 100));
}

private boolean SaveData() {
    ActivityMain.mainUser.GetLastTodayDiaryEntry(new java.util.Date());
    ActivityMain.mainUser.SaveDiaryEntry(diaryEntry);
    android.widget.Toast.makeText(this, R.string.Tagebucheintraggespeichert, Toast.LENGTH_SHORT).show();
    return true;
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    java.lang.System.out.println("Changed");
    if ((drawThread) == null) {
        return ;
    }
    drawThread.setSurfaceHolder(holder);
}

@java.lang.Override
public void onClick(android.view.View view) {
    while (true) {
        navigationLogic.navigate(currentPose);
    } 
}

private void refreshGallery(java.io.File file) {
    android.content.Intent mediaScanIntent = new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
    mediaScanIntent.setData(android.net.Uri.fromFile(file));
    sendBroadcast(mediaScanIntent);
}

public void warn(java.lang.String msg) {
    if (com.yourtion.httpdns.Debug.isshow)
        android.util.Log.w(((com.yourtion.httpdns.Debug.PREFIX) + (this.name)), msg);
    
}

public static boolean isMediaDocument(android.net.Uri uri) {
    return "com.android.providers.media.documents".equals(uri.getAuthority());
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.content.Intent intent = new android.content.Intent(getActivity(), de.lespace.apprtc.videocall.DraggableService.class);
    getActivity().bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
}

public void setPackageName(java.lang.String packageName) {
    android.content.SharedPreferences.Editor editor = getPrefs().edit();
    editor.putString(net.oldev.aDictOnCopy.DictionaryOnCopyService.SettingsModel.PREFS_PACKAGE_NAME, packageName);
    editor.apply();
    notifyPropertyChanged(BR.packageName);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    android.widget.Toast.makeText(this, "Đã theo dõi", Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> arg0) {
    setNamerSpinnerSelectionFromDefaultNamer();
}

public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (resultCode == (RESULT_OK)) {
        if (requestCode == 1) {
            android.net.Uri selectedImageUri = data.getData();
        }
    }
}

@java.lang.Override
public void onLoadFinished(android.content.Loader<android.database.Cursor> loader, android.database.Cursor cursor) {
}

@java.lang.Override
public void onBackStackChanged() {
    android.app.Fragment f = getFragmentManager().findFragmentById(R.id.mainContent);
    if (f instanceof com.example.madiskar.experiencesamplingapp.fragments.StudyFragment) {
        setTitle(f.getTag());
    }
}

public void unbindCustomTabsService(android.app.Activity activity) {
    if ((mConnection) == null)
        return ;
    
    activity.unbindService(mConnection);
    mClient = null;
    mCustomTabsSession = null;
}

@java.lang.Override
public void onClick(android.view.View view) {
    button2.setText(((mark) + ""));
    placeMarkOnBoard(0, 1);
    button2.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

public void onCameraUnavailable(java.lang.String cameraId) {
    mPreferences.setCamActiv(true);
    de.simu.decoit.android.decomap.util.Toolbox.logTxt(this.getLocalClassName(), "Camera is in use!");
}

@java.lang.Override
public void setEpisode(@android.support.annotation.NonNull
org.bottiger.podcast.provider.IEpisode argItem) {
    super.setEpisode(argItem);
    try {
    } catch (java.lang.IllegalArgumentException iae) {
    }
    setState(calcState());
    setProgressPercent(new org.bottiger.podcast.listeners.DownloadProgress());
}

private void setImage(java.lang.String image) {
    switcher.setImageURI(android.net.Uri.parse(image));
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse) {
    super.onFailure(statusCode, headers, throwable, errorResponse);
    android.widget.Toast.makeText(com.codepath.apps.tweetter.TweetAdapter.context, "Unable to retweet", Toast.LENGTH_SHORT).show();
}

public void editEvent(int position) {
    org.hisp.dhis2.android.sdk.persistence.models.Event event = displayedExistingEvents.get(position);
    org.hisp.dhis2.android.sdk.events.MessageEvent message = new org.hisp.dhis2.android.sdk.events.MessageEvent(BaseEvent.EventType.showDataEntryFragment);
    message.item = displayedExistingEvents.get(position).localId;
    Dhis2Application.bus.post(message);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.list_view);
    this.setTitle(((mainObject.restarauntName) + " Menu Categories"));
    onDisplayCategoryList();
}

@java.lang.Override
public void onClick(android.view.View v) {
    setNewValues();
    com.codepath.qzineat.fragments.ProfileFragment profileFragment = new com.codepath.qzineat.fragments.ProfileFragment();
    android.support.v4.app.FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();
    fragmentTransaction.replace(R.id.flContent, profileFragment);
    fragmentTransaction.commit();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    if (intent == null) {
        dev.ukanth.ufirewall.log.Log.i(dev.ukanth.ufirewall.log.LogService.TAG, "Restarting LogService");
        startLogService(true);
    }
    return android.app.Service.START_STICKY;
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    if (((v.getScrollY()) == 0) && ((mCurrentViewIndex) == 1)) {
        canPullDown = true;
    }else {
        canPullDown = false;
    }
    return false;
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(mNewLocationReceiver);
    if (mBound) {
        unbindService(mConnection);
    }
}

@android.support.annotation.Nullable
@java.lang.Override
public mihaljevic.miroslav.foundry.slimplayer.BrowserRoot onGetRoot(@android.support.annotation.NonNull
java.lang.String clientPackageName, int clientUid, @android.support.annotation.Nullable
android.os.Bundle rootHints) {
    if (mPackageValidator.validate(clientPackageName, clientUid))
        return new mihaljevic.miroslav.foundry.slimplayer.BrowserRoot(mihaljevic.miroslav.foundry.slimplayer.MediaPlayerService.MEDIA_ROOT_ID, rootHints);
    
    return null;
}

@java.lang.Override
public void onTimeTick() {
    super.onTimeTick();
    android.util.Log.e("[32mONTIMETICK[0m", ("" + (java.lang.System.currentTimeMillis())));
    invalidate();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getWindow().setBackgroundDrawableResource(android.R.color.transparent);
    initWifiInfo();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_VISIBLE);
    super.onCreate(savedInstanceState);
    butterknife.ButterKnife.bind(this);
    init();
    getAllComments();
}

private void handleIntent(android.content.Intent intent) {
    com.sina.weibo.sdk.api.share.IWeiboShareAPI api = mIShareWeiboHelper.getIWeiboShareAPI();
    if (api != null) {
        api.handleWeiboResponse(intent, this);
    }
}

@java.lang.Override
public void onFinish() {
    uiElements.setCountDownText("00:00");
    android.content.Intent countDownIntent = new android.content.Intent(this, com.shapematchandroid.ui.ContinueScreenActivity.class);
    countDownIntent.putExtra(com.shapematchandroid.ui.GameScreenActivity.FINAL_SCORE, gameLogic.currentPoints());
    startActivity(countDownIntent);
}

@java.lang.Override
public void onRestoreStateForActivityResult(android.os.Bundle state, uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext) {
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d("ZHAP", "click fab");
    if ((costList.size()) < 5) {
        createNewCostDialog();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(context, "Daft to delete no action", Toast.LENGTH_SHORT).show();
    dialogo(sTitles[position], java.lang.Integer.valueOf(sEncId[position]), position, false);
}

public void SelectModel(android.view.View v) {
    modelADBObject.show();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    onLocationChanged();
    android.util.Log.d("Receiver", "I received the message");
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(this, com.epfl.dedis.cisc.ConfigActivity.class);
    startActivity(i);
}

@java.lang.Override
public void showOnFailure() {
    if ((pagerAdapter.getCount()) == 0) {
        showNoData();
    }else {
        android.widget.Toast.makeText(this, "加载数据失败，请检查您的网络", Toast.LENGTH_SHORT).show();
    }
}

private void deleteCategory(ch.rmy.android.http_shortcuts.realm.models.Category category) {
    controller.deleteCategory(category);
    showSnackbar(R.string.message_category_deleted);
    ch.rmy.android.http_shortcuts.utils.LauncherShortcutManager.updateAppShortcuts(getContext(), controller.getCategories());
}

public void CallNextActivity() {
    startActivity(new android.content.Intent(this, au.com.knight_fighters.Main.GameMap.class));
    finish();
}

public void sendMessage(java.lang.String message) {
    if ((displayMessageFragment) != null) {
        displayMessageFragment.updateMessage(message);
    }else {
        android.util.Log.w(com.e_conomic.jonfirstapp.MainActivity.MAIN_ACTIVITY_TAG, "Trying to send message, but displayMessageFragment is null.");
    }
    writeMessageToFile(message);
}

@android.annotation.SuppressLint(value = "InlinedApi")
@java.lang.Override
public void run() {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) {
        enterImmersiveMode();
    }else {
        enterImmersiveModeBelowKitKat();
    }
}

public static void show(android.support.v7.app.AppCompatActivity activity, org.onebusaway.android.io.elements.ObaStop stop, java.lang.Integer containerViewId, org.onebusaway.android.report.ui.ReportProblemFragmentCallback callback) {
    org.onebusaway.android.report.ui.ReportStopProblemFragment.show(activity, stop, containerViewId, true, callback);
}

public void updateWifiEnabled(int state) {
    switch (state) {
        case android.net.wifi.WifiManager.WIFI_STATE_DISABLED :
            mHandler.sendEmptyMessage(com.android.systemui.statusbar.notificationbars.WifiDialog.WIFI_UNABLE);
            break;
        case android.net.wifi.WifiManager.WIFI_STATE_ENABLED :
            mHandler.sendEmptyMessage(com.android.systemui.statusbar.notificationbars.WifiDialog.WIFI_ENABLE);
            break;
        default :
            break;
    }
    mWifiEnableBtn.setClickable(true);
}

@android.support.annotation.NonNull
android.content.Context context() {
    return mContext;
}

private int getIconSize() {
    android.app.ActivityManager am = ((android.app.ActivityManager) (Share.activityContext.getSystemService(Context.ACTIVITY_SERVICE)));
    return am.getLauncherLargeIconSize();
}

public static int getDefaultCategory(android.content.Context context) {
    return org.wordpress.android.ui.prefs.SiteSettingsInterface.siteSettingsPreferences(context).getInt(org.wordpress.android.ui.prefs.SiteSettingsInterface.DEF_CATEGORY_PREF_KEY, 0);
}

public void addChannel(fr.unicaen.info.users.hivinaugraffe.apps.android.rssreader.controllers.Channel channel) {
    if (!(channels.contains(channel))) {
        channels.add(channel);
        notifyDataSetChanged();
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    timber.log.Timber.d("WHy wasn't this calle");
    clearInvalid();
}

protected static void initialize(android.content.Context context, com.binarapps.android.cookielogger.interfaces.CLogInterface send, boolean logToLogcat, java.lang.String tag) {
    com.binarapps.android.cookielogger.AppContext.instance = new com.binarapps.android.cookielogger.AppContext(context, send);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    timer = progress;
    timerTextView.setText(java.lang.String.valueOf(timer));
}

public void validateBefore(final android.view.View view, final boolean async) {
    createRulesSafelyAndLazily();
    android.view.View previousView = getViewBefore(view);
    validateOrderedFieldsWithCallbackTill(previousView, "when using 'validateBefore(View)'.", async);
}

private static void onAccountCreated(android.accounts.Account newAccount, android.content.Context context) {
    com.upenn.chriswang1990.sunshine.sync.SunshineSyncAdapter.configurePeriodicSync(context, com.upenn.chriswang1990.sunshine.sync.SunshineSyncAdapter.SYNC_INTERVAL, com.upenn.chriswang1990.sunshine.sync.SunshineSyncAdapter.SYNC_FLEXTIME);
    android.content.ContentResolver.setSyncAutomatically(newAccount, context.getString(R.string.content_authority), true);
    com.upenn.chriswang1990.sunshine.sync.SunshineSyncAdapter.syncImmediately(context);
}

private void onMoreButtonClick(android.view.View v) {
    if (!(moreOptionOpen)) {
        moreOptionOpen = true;
    }else {
        moreOptionOpen = false;
    }
    moreBtnClick();
}

@java.lang.Override
public boolean dispatchKeyEvent(android.view.KeyEvent event) {
    return mGuideViewPage.dispatchKeyGuidePage(event);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.opendata.myparking.parkingapp.database.DBOpenHelper db = new com.opendata.myparking.parkingapp.database.DBOpenHelper(getActivity().getApplicationContext());
}

private android.view.View getFirstChild() {
    return getChildAt(0);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    peter.util.searcher.activity.BaseActivity.LIST.add(this);
    butterknife.ButterKnife.bind(this);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.i("Set", "setting");
    android.util.Log.i("Set", "setting");
    context.sendBroadcast(new android.content.Intent("NOTIFICATION_DISMISSED"));
}

@java.lang.Override
public boolean onNavigationItemSelected(@android.support.annotation.NonNull
android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.navigation_home :
            return true;
        case R.id.navigation_dashboard :
            return true;
        case R.id.navigation_notifications :
            return true;
    }
    return false;
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) {
    preference.setSummary(fr.free.nrw.commons.Utils.licenseNameFor(((java.lang.String) (newValue))));
    return true;
}

@java.lang.Override
public void onPageStarted(java.lang.String url, android.graphics.Bitmap favicon) {
    setLoadLoading();
}

@java.lang.Override
public void onClick(android.view.View v) {
    savedOriginalPosition = getAdapterPosition();
    savedOriginalVerse = songVerses.get(savedOriginalPosition);
    startLevel();
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    super.onDraw(canvas);
    if ((nativeCanvasBitmap) != null) {
        java.lang.System.out.println(("nativeCanvas being drawn " + (nativeCanvasBitmap)));
        canvas.drawBitmap(nativeCanvasBitmap, 100, 100, mPaint);
    }
}

public void cameraVIntent() {
    android.content.Intent videoIntent = new android.content.Intent(android.provider.MediaStore.ACTION_VIDEO_CAPTURE);
    videoIntent.putExtra(MediaStore.EXTRA_DURATION_LIMIT, 10);
    startActivityForResult(videoIntent, CAMERA_VIDEO_CAPTURE);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    clearActivity();
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    com.xwhiteknuckle.soundfx.WidgetHelper.changeWidgetToStop(this);
    mp.start();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((getActivityTab()) != null)
        handleBackPressedWithoutBackStack();
    
}

@java.lang.Override
public void onClick(android.view.View v) {
    reAdd(t2, pos);
    com.svenskfiskapps.materialtodo.MainActivity.enableTask(t2);
}

@java.lang.Override
public void addChild(com.caverock.androidsvg.SVG.SvgObject object) throws org.xml.sax.SAXException {
    if (object instanceof com.caverock.androidsvg.SVG.TextChild)
        children.add(object);
    else
        throw new org.xml.sax.SAXException((("Text content elements cannot contain " + object) + " elements."));
    
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    delayedHide((10 * 1000));
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if (team2beat.com.qrcodes.RegisterView.isLive) {
        confirmAdd(position);
    }
}

public synchronized void updateAll(@android.support.annotation.NonNull
java.util.Collection<TModel> tableCollection) {
    saveAll(tableCollection, modelSaver.getWritableDatabase());
}

@com.facebook.react.bridge.ReactMethod
public void getPublishableKey(final com.facebook.react.bridge.Callback successCallback, final com.facebook.react.bridge.Callback errorCallback) {
    android.content.Context context = getReactApplicationContext();
    callback.invoke(com.hypertrack.lib.HyperTrack.getPublishableKey(context));
}

@java.lang.Override
public void onClick(android.view.View view) {
    removeOrder(view.getContext(), item, appCompatDialog, adapterPosition);
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    if ((event.isAltPressed()) == true) {
        return false;
    }
    return super.onKeyDown(keyCode, event);
}

@java.lang.Override
public void onUploadProgress(org.wordpress.android.fluxc.model.MediaModel media, float progress) {
    java.lang.String localMediaId = java.lang.String.valueOf(media.getId());
    mEditorMediaUploadListener.onMediaUploadProgress(localMediaId, progress);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((mContext) instanceof com.jaylecavalier.chessvisionplus.DefaultActivity) {
        java.lang.String coord = itemIdToCoord(getItemId(f_position));
        ((com.jaylecavalier.chessvisionplus.DefaultActivity) (mContext)).checkIfCorrect(coord, f_imageView);
    }
}

public java.util.List<ca.owenpeterson.twittegorize.models.User> getAllUsers() {
    java.util.List<ca.owenpeterson.twittegorize.models.User> users = java.util.Collections.emptyList();
    users = new com.activeandroid.query.Select().from(ca.owenpeterson.twittegorize.models.User.class).orderBy("Id ASC").execute();
    return users;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent gameStartActivity = new android.content.Intent(this, com.guessgame.akwag.myapplication.GameStartActivity.class);
    startActivity(gameStartActivity);
    overridePendingTransition(R.anim.slide_in, R.anim.slide_out);
}

@dagger.Provides
@com.tomeokin.lspush.injection.scope.PerActivity
public com.tomeokin.lspush.biz.usercase.CheckCaptchaAction provideCheckCaptchaAction(@com.tomeokin.lspush.injection.qualifier.ActivityContext
android.content.Context context, com.tomeokin.lspush.data.remote.LsPushService lsPushService, com.google.gson.Gson gson, com.tomeokin.lspush.common.SMSCaptchaUtils smsCaptchaUtils) {
    return new com.tomeokin.lspush.biz.usercase.CheckCaptchaAction(context.getResources(), lsPushService, gson, smsCaptchaUtils);
}

@java.lang.Override
protected java.lang.Void doInBackground(java.lang.Void... params) {
    double price = new com.carpooler.trips.FuelPrice().getFuelUnitPrice(geoPoint);
    android.util.Log.i("Trip", ("fuelPrice: " + price));
    tripData.setFuelPrice(price);
    saveTrip();
    return null;
}

private void showTimePickerDialog(android.widget.EditText timeDisplay, java.util.Calendar date) {
    activeTimeDisplay = timeDisplay;
    activeTime = date;
    android.util.Log.d("WIN", "WINNING");
    android.app.DialogFragment newFragment = new com.project.team16.nfclock.timePickerFragment();
    newFragment.show(getFragmentManager(), "myDialog");
}

private void setDrawerItemSelected(android.widget.TextView item) {
    item.setBackgroundColor(getResources().getColor(R.color.colorPrimary));
    item.setTextColor(Color.WHITE);
}

public void onFinish() {
    showtimer.setText("END TIMER");
    com.itproject.android.androidtvsample.MainActivity.mp.stop();
    android.content.Intent intent = new android.content.Intent(this, com.itproject.android.androidtvsample.WelcomeActivity.class);
    finish();
    startActivity(intent);
}

void speakToFile() {
    mTts.speakToFile(poem.get().toString());
    snackbarText.set(new ca.rmen.android.poetassistant.main.reader.ReaderViewModel.SnackbarText(R.string.share_poem_audio_snackbar));
}

private void requestResourcePermission() {
    if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.RECORD_AUDIO , Manifest.permission.MODIFY_AUDIO_SETTINGS , Manifest.permission.WRITE_EXTERNAL_STORAGE }, com.google.sample.echo.MainActivity.AUDIO_ECHO_REQUEST);
    }
}

private void clearMatchFoundArrays() {
    android.util.Log.d("mfa", "Clearing");
    matchFoundArrays.clear();
    matchFoundArrays = new java.util.ArrayList<>();
}

@java.lang.Override
protected void onStop() {
    com.app.game.quizee.backend.PlayerManager.getInstance().saveCurrentPlayer();
    super.onStop();
    doBindService();
    stopService(new android.content.Intent(this, com.app.game.quizee.backend.MusicService.class));
    com.app.game.quizee.backend.PlayerManager.getInstance().onStop();
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL("DROP TABLE IF EXISTS PlayScoresHis");
    onCreate(db);
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setUpMultiChoiceRecyclerView();
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    updateSpinnerData();
    dataManager = com.lunokhod.java.android.cashflowapp.DataManager.getInstance(getApplicationContext());
    selectedDate = java.util.Calendar.getInstance();
    setInitialDate(selectedDate);
}

void saveState(@android.support.annotation.NonNull
android.view.View view) {
    final android.util.SparseArray<android.os.Parcelable> parcelableSparseArray = new android.util.SparseArray();
    view.saveHierarchyState(parcelableSparseArray);
    mViewState = parcelableSparseArray;
}

@java.lang.Override
public void onClick(android.view.View v) {
    toolbar.setNavigationIcon(null);
    act.onBackPressed();
}

private void resetAndSaveLayout() {
    if (((mLayout) instanceof android.text.BoringLayout) && ((mSavedLayout) == null)) {
        mSavedLayout = ((android.text.BoringLayout) (mLayout));
    }
    mBoring = null;
}

@java.lang.Override
public void run() {
    android.util.Log.d("BoardUpdater", "Displaying board");
    activity.displayBoard(myBoard);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    mDrawerList.setItemChecked(position, true);
    mDrawerLayout.closeDrawer(mDrawerMenu);
    changeMovieCategory(mDrawerOptionsValue[position]);
}

@java.lang.Override
public awstreams.serry.zadfreshapplication.adapters.RepositoriesAdapter.RepositoryHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(mContext).inflate(R.layout.repo_item, null);
    awstreams.serry.zadfreshapplication.adapters.RepositoriesAdapter.RepositoryHolder productHolder = new awstreams.serry.zadfreshapplication.adapters.RepositoriesAdapter.RepositoryHolder(view);
    return productHolder;
}

@java.lang.Override
public void setIcon(android.graphics.Bitmap icon) {
    marker.setIcon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromBitmap(icon));
}

private void restartLoader() {
    android.util.Log.d("add book", "in restartLoader");
    getLoaderManager().restartLoader(LOADER_ID, null, this);
}

@java.lang.Override
public void onBackPressed() {
    android.content.Intent intent = new android.content.Intent();
    intent.putExtra("key", playingPos);
    setResult((-99), intent);
    java.lang.System.out.println("인포인포!!");
    super.onBackPressed();
    finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    mCurrentIndex = ((mCurrentIndex) + 1) % (mQuestionBank.length);
    mCheated = false;
    updateQuestion();
}

@java.lang.Override
public void onActivityPaused(android.app.Activity activity) {
    android.util.Log.i("BACKGROUND", "pause");
    ++(pause);
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    getLoaderManager().initLoader(0, null, this);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_view_event_test);
    android.widget.TextView tv = null;
    tv.findViewById(R.id.modeTestTextView);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    int index = ((java.lang.Integer) (getView().getTag()));
    removeContact(index);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(R.layout.fragment_game, container, false);
    android.widget.Button button = ((android.widget.Button) (rootView.findViewById(R.id.btnStart)));
}

public void onPower(android.view.View view) {
    if ((mPowerStatus) == false) {
        PowerOn(true);
        mPower = 0;
        SendData();
    }else {
        PowerOff();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    git = $missing$;
    register(txtEmail.getText().toString(), txtPassword.getText().toString());
}

public void onClick(android.content.DialogInterface dialog, int ID) {
    saveUserBio();
    android.content.Intent refreshProfile = new android.content.Intent(this, com.example.gurpreetsingh.encircleme.UserProfileActivity.class);
    startActivity(refreshProfile);
}

private void updateRootAccessOptions() {
    java.lang.String value = android.os.SystemProperties.get(com.android.settings.DevelopmentSettings.ROOT_ACCESS_PROPERTY, "1");
    mRootAccess.setValue(value);
    mRootAccess.setSummary(getResources().getStringArray(R.array.root_access_entries)[java.lang.Integer.valueOf(value)]);
}

@java.lang.Override
public void onCreate(final android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    de.greenrobot.event.EventBus.getDefault().register(this);
    com.nullcognition.spotifystreamer.IntentServiceArtistSearch.searchByArtistName(getActivity(), "Paul");
}

private android.content.SharedPreferences getSharedPreferences() {
    return mContext.getSharedPreferences(com.rey.material.app.ThemeManager.PREF, Context.MODE_PRIVATE);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.d(com.xykivo.gameengine.Game.LOG_TAG, "onCreate");
}

@java.lang.Override
public void replaceFragment(android.support.v4.app.Fragment fragment) {
    getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, fragment).addToBackStack(null).commit();
}

private void startSimulation(com.feheren_fekete.espresso.InputValues inputValues) {
    com.feheren_fekete.espresso.SimulationParameters simulationParameters = new com.feheren_fekete.espresso.SimulationParameters(InputValues);
    android.content.Intent simulationActivityIntent = new android.content.Intent(this, com.feheren_fekete.espresso.SimulationActivity.class);
    simulationActivityIntent.putExtra(Common.SIMULATION_PARAMETERS, simulationParameters);
    startActivity(simulationActivityIntent);
}

public static void setLastExportTime(java.sql.Timestamp lastExportTime) {
    final java.lang.String utcString = org.gnucash.android.util.TimestampHelper.getUtcStringFromTimestamp(lastExportTime);
    android.util.Log.v(org.gnucash.android.util.PreferencesHelper.LOG_TAG, "Saving last export time for the currently active book");
    org.gnucash.android.util.PreferencesHelper.setLastExportTime(lastExportTime, org.gnucash.android.db.adapter.BooksDbAdapter.getInstance().getActiveBookUID());
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    android.util.Log.d(fr.nihilus.recyclerfragment.library.MusicFragment.TAG, "onViewCreated() called");
}

private void drawTxt(android.graphics.Canvas canvas, int x, int y) {
    canvas.drawText(txt, x, (((((fm.bottom) - (fm.top)) / 2) - (fm.bottom)) + y), txtPaint);
}

private void setBarTitle(int titleId) {
    android.util.Log.v(com.misgood.templates.ui.AbstractSignActivity.TAG, "setBarTitle");
    android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar)));
    setSupportActionBar(toolbar);
    getSupportActionBar().setTitle(titleId);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d("isTutVisible", java.lang.String.valueOf(com.bedrock.padder.activity.MainActivity.isTutorialVisible));
    if ((com.bedrock.padder.activity.MainActivity.isTutorialVisible) == false) {
        toggleTutorial();
        com.bedrock.padder.activity.MainActivity.isTutorialVisible = true;
    }
}

@java.lang.Override
public void onActivityCreated(android.app.Activity activity, android.os.Bundle savedInstanceState) {
    if (((loadingDialog) != null) && (loadingDialog.isShowing())) {
        loadingDialog.dismiss();
    }
    loadingDialog = new com.home77.common.ui.widget.LoadingDialog(activity);
}

public android.graphics.Rect getRect() {
    java.lang.System.out.println(("mCurX==" + (mCurX)));
    mRect.set(mCurX, mCurY, ((mCurX) + (mSlideWidth)), ((mCurY) + (mSlideHeight)));
    return mRect;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setIsSwipeable(true);
    setIsDragable(true);
    setCanUndoSwipe(true);
    setHasOptionsMenu(true);
}

public void navigationButtonOnClick(android.view.View v) {
    android.widget.Button button = ((android.widget.Button) (v));
    setContentView(R.layout.edit_page);
    editing = true;
    editPage.loadTimerValues();
}

@java.lang.Override
public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture surface, int width, int height) {
    player.sendMessage(videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, new android.view.Surface(surface));
}

@java.lang.Override
public void onCropped(android.graphics.Bitmap bitmap) {
    if (bitmap != null) {
        compress(bitmap);
    }
}

public java.lang.String getBy() {
    if (android.text.TextUtils.isEmpty(by))
        return "";
    else
        return by;
    
}

private void insertNote(java.lang.String noteText) {
    android.content.ContentValues values = new android.content.ContentValues();
    values.put(DBOpenHelper.NOTE_TEXT, noteText);
    android.net.Uri noteUri = getContentResolver().insert(NotesProvider.CONTENT_URI, values);
    setResult(com.nguyenqphan.notes4u.RESULT_OK);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((index == 3) || (index == 4)) {
        return ;
    }
    viewPager.setCurrentItem(index);
}

@java.lang.Override
public void recreate() {
    if ((android.os.Build.VERSION.SDK_INT) >= 11) {
        super.recreate();
    }else {
        startActivity(getIntent());
        finish();
    }
}

public static void convertSmileys(android.text.Editable input) {
    for (java.lang.String key : org.kontalk.util.MessageUtils.sEmojiConverterMap.keySet()) {
        org.kontalk.util.MessageUtils.replaceEditable(input, key, org.kontalk.util.MessageUtils.sEmojiConverterMap.get(key));
    }
}

public void returnSpeech(android.content.Intent data) {
    modelI.presenter.doneListening(data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS));
}

protected void createLocationRequest() {
    mLocationRequest = new com.google.android.gms.location.LocationRequest();
    mLocationRequest.setInterval(5000);
    mLocationRequest.setFastestInterval(2000);
    mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
    java.lang.System.out.println("***End of createLocationRequest reached");
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder holder) {
    if (!(dialogIsDisplayed)) {
        gameOver = true;
        newGame(holder);
    }
}

public void showArticleBar() {
    if ((bottomBar.getVisibility()) != (android.widget.RelativeLayout.VISIBLE)) {
        bottomBar.setVisibility(View.VISIBLE);
        if (!(isLandscape))
            mAdView.animate().x(xOfAdView);
        
    }
}

public static void showCreateAircraft(android.app.Activity activity, int requestCode) {
    android.content.Intent intent = new android.content.Intent(activity, com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity.class);
    activity.startActivityForResult(intent, requestCode);
}

@java.lang.Override
public void ok(android.content.DialogInterface dialog) {
    if ((states.compareTo(com.noisyninja.abheda_droid.fragment.PictureMatchDetailFrag.STATES.LAST)) == 0) {
        dialog.dismiss();
        com.noisyninja.abheda_droid.util.Utils.showReview(getActivity());
    }
}

public android.database.Cursor RawCustomQueryForAdapter(java.lang.String query) {
    android.util.Log.e(getClass().getName(), query);
    net.sqlcipher.database.SQLiteDatabase database = masterRepository.getReadableDatabase();
    android.database.Cursor cursor = database.rawQuery(query, null);
    return cursor;
}

@java.lang.Override
public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture surfaceTexture, int width, int height) {
    surface = new android.view.Surface(surfaceTexture);
    mediaPlayer.setSurface(surface);
    if (playRequested) {
        start();
    }
}

private void stopInterceptor() {
    if (xyz.hexene.localvpn.LocalVPNService.isRunning()) {
        android.content.Intent stopIntent = new android.content.Intent(this, xyz.hexene.localvpn.LocalVPNService.class);
        stopIntent.putExtra("cmd", "stop");
        startService(stopIntent);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    com.project.nghicv.readingbook.data.local.DatabaseSource.loadDataAtFirstTime();
    super.onCreate(savedInstanceState);
    setSupportActionBar(mToolbar);
    getSupportActionBar().setHomeButtonEnabled(true);
    setupDrawableMenu();
    initContent();
    setupAds();
}

@java.lang.Override
public void gotResult(int responseCode, java.lang.String responseMsg, cn.jpush.im.android.api.model.GroupInfo groupInfo) {
    if (responseCode == 0) {
        callback.success(mGson.toJson(groupInfo));
    }else {
        callback.error(responseMsg);
    }
}

public java.lang.Long getNumberPhone() {
    android.telephony.TelephonyManager telephonyManager = ((android.telephony.TelephonyManager) (this.getSystemService(Context.TELEPHONY_SERVICE)));
    return java.lang.Long.valueOf(telephonyManager.getDeviceId());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    restoreInstance(savedInstanceState);
    org.gtlp.yasb.SoundActivity.preferences = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
    org.gtlp.yasb.SoundActivity.soundPlayerInstance = new org.gtlp.yasb.SoundPlayer(this);
    initUI();
}

@java.lang.Override
public void onPerformSync(android.accounts.Account account, android.os.Bundle bundle, java.lang.String authority, android.content.ContentProviderClient provider, android.content.SyncResult syncResult) {
    org.bottiger.podcast.cloud.drive.DriveSyncer syncer = new org.bottiger.podcast.cloud.drive.DriveSyncer(mContext, provider, account);
    syncer.performSync();
}

public void setLineList(java.util.ArrayList<java.util.ArrayList<android.graphics.PointF>> lineList) {
    android.widget.Toast.makeText(getContext(), ((com.ci.marcopolo.Drawer.TAG) + " setLineList"), Toast.LENGTH_SHORT).show();
    this.lineList = lineList;
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    eu.davidea.flipview.FlipView.resetLayoutAnimationDelay(true, 1000L);
    eu.davidea.samples.flexibleadapter.services.DatabaseService.getInstance().createEndlessDatabase(100);
    initializeRecyclerView(savedInstanceState);
    eu.davidea.flipview.FlipView.stopLayoutAnimation();
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    super.onPostExecute(result);
    runOnUiThread(new java.lang.Runnable() {
        public void run() {
            mProgressDialog = android.app.ProgressDialog.show(com.james.stockparser.MainActivity.this, "連線至伺服器", "取得資料中...請稍候", true);
        }
    });
}

public void OnCreate(android.os.Bundle savedInstance) {
    super.onCreate(savedInstance);
    setContentView(R.layout.activity_impressum);
}

@android.support.annotation.Nullable
public Model findFirst() {
    return realmQuery.findAll().first(null);
}

@org.junit.Before
public void setUp() {
    activityTestRule = new android.support.test.rule.ActivityTestRule(com.nextzy.mrsmile.mvp_example.calculator.CalculatorActivity.class);
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    android.content.Intent intent = new android.content.Intent(getActivity(), com.assesortron.walkthroughnavigator.WalkThrough.class);
}

@java.lang.Override
public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) {
    if ((dataSnapshot.getValue()) == null) {
        finish();
    }
    mSong = dataSnapshot.getValue(com.teinvdlugt.android.piano.Song.class);
    if ((mSong) != null)
        loadSong();
    
}

public void updateSubtitle(java.lang.String text) {
    ((android.support.v7.app.AppCompatActivity) (this.getFragment().getActivity())).getSupportActionBar().setSubtitle(((getItemCount()) + " Notes"));
}

public void initialize(android.content.Context context) {
    this.currentConnectionType = getConnectionType();
    context.registerReceiver(connectionReceiver, new android.content.IntentFilter(android.net.ConnectivityManager.CONNECTIVITY_ACTION));
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    android.util.Log.d(erica.beakon.Pages.RecommendedMovementsTab.TAG, databaseError.getMessage());
}

private void setSurfaceTexture(android.graphics.SurfaceTexture surfaceTexture) {
    this.surfaceTexture = surfaceTexture;
    setSurface((surfaceTexture == null ? null : new android.view.Surface(surfaceTexture)));
}

public co.smartreceipts.android.model.Receipt insertReceiptSerial(co.smartreceipts.android.model.Trip parent, co.smartreceipts.android.model.Receipt receipt, java.io.File newFile) throws android.database.SQLException {
    receipt.setFile(newFile);
    return insertReceiptHelper(receipt);
}

protected void scan(android.view.View v) {
    wlist.clear();
    wifimanager.startScan();
    myadapter.notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.view.View v) {
    int position = ((java.lang.Integer) (v.getTag()));
    java.lang.Object object = getItem(position);
    com.acfreeman.socialmediascanner.DataModel dataModel = ((com.acfreeman.socialmediascanner.DataModel) (object));
}

public void onClick(android.view.View v) {
    arrivalBarValue = arrivalBar.getRating();
}

@java.lang.Override
public void onClick() {
    startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(config.webHomePage)));
    if ((config.analytics) != null) {
        config.analytics.logUiEvent(config.logUiEventName, getString(R.string.egab_website_log_event));
    }
}

@java.lang.Override
public void goResetPassword() {
    android.content.Intent intent = new android.content.Intent(getActivity(), com.belatrixsf.connect.ui.resetpassword.ResetPasswordActivity.class);
    startActivity(intent);
    fragmentListener.closeActivity();
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    java.lang.System.err.println(("There was an error getting the Firebase data: " + databaseError));
    android.widget.Toast.makeText(this, "Permission Denied. Please Login again.", Toast.LENGTH_SHORT).show();
}

@android.annotation.SuppressLint(value = "HardwareIds")
java.lang.String IMEI() {
    return ((android.telephony.TelephonyManager) (getSystemService(Context.TELEPHONY_SERVICE))).getDeviceId();
}

public boolean validateDistance(com.google.android.gms.maps.model.LatLng passengerLocation, com.google.android.gms.maps.model.LatLng userLocation) {
    if ((distance(passengerLocation.latitude, passengerLocation.longitude, userLocation.latitude, userLocation.longitude)) <= 0.1) {
        return true;
    }else {
        return false;
    }
}

@java.lang.Override
public void onCancel(android.content.DialogInterface dialog) {
    listener.onCancel(this);
    if ((mThread) != null) {
        mThread.interrupt();
        mThread = null;
    }
}

public void addFinish(com.geekeclectic.android.stashcache.StashFabric fabric) {
    mFinishes.add(fabric.getId());
}

@java.lang.Override
public void onClick(android.view.View v) {
    onRefresh();
    if (!(com.udacity.stockhawk.utils.BasicUtils.isNetworkUp(this))) {
        addStock(symbol);
    }
}

@java.lang.Override
public void onResponse(retrofit2.Call<userregistration.gearvr.visa.com.userregistration.Model.User> call, retrofit2.Response<userregistration.gearvr.visa.com.userregistration.Model.User> response) {
    android.util.Log.d("service_call", response.toString());
    android.widget.Toast.makeText(getApplicationContext(), "Successful response", Toast.LENGTH_SHORT).show();
}

private void doFinished() {
    android.widget.Toast.makeText(getApplicationContext(), "The video is finished!", Toast.LENGTH_SHORT).show();
    mMediaLoaded = false;
    mLogo.setVisibility(View.VISIBLE);
    mSurfaceView.setBackgroundColor(Color.BLACK);
    mContiner.setBackgroundColor(Color.BLACK);
}

public void deleteAllS2hasilenkripsi() {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    db.execSQL(("delete from " + (database.DatabaseHandler.TABLE_S2HASILENKRIPSI)));
    db.close();
}

public void exception(final java.io.IOException e) {
    final int level = android.util.Log.ERROR;
    log(level, com.google.common.base.Throwables.getStackTraceAsString(e));
}

public void irSiguiente(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.cebancpizza.cliente.DatosCliente.class);
    intent.putExtra("normal", true);
    startActivity(intent);
}

public long getItemId(int position) {
    android.util.Log.i("POSITION", ("GETITEMID: " + (java.lang.String.valueOf(position))));
    return 0;
}

private void addBrowserFragment() {
    android.app.FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();
    fragmentTransaction.add(R.id.theme_browser_container, mThemeBrowserFragment);
    fragmentTransaction.addToBackStack(null);
    fragmentTransaction.commit();
}

public void loadNext(android.content.ContentValues values) {
    values.put(RetrieveList.PAGE_NUMBER, ((currentPage) + 1));
}

@java.lang.Override
public void onClick(android.view.View v) {
    MainActivity.mUDPReceiver.startUDPReceiver();
    fragmentManager.beginTransaction().replace(R.id.frame_container, new babyfon.view.fragment.overview.OverviewBabyFragment(mContext), null).addToBackStack(null).commit();
}

void setTextClockTimeFromString(android.widget.TextView txtClk, java.lang.String timeDisplay) {
    txtClk.setText(timeDisplay);
    android.util.Log.d("ABCABC", timeDisplay);
    android.widget.Toast.makeText(this.getApplicationContext(), timeDisplay, Toast.LENGTH_LONG);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.growthbeat.analytics.GrowthAnalytics.getInstance().setRandom();
}

public static void freeMemoryForTests() {
    checkThread();
    android.webkit.WebView.getFactory().getStatics().freeMemoryForTests();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    if (intent != null) {
        pendingIntent = intent.getParcelableExtra(ListPhotosPresenter.PENDING_INTENT_CODE);
    }
    return super.onStartCommand(intent, flags, startId);
}

private void clickBeacon() {
    wifiButton.setOnClickListener(new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View v) {
            android.content.Intent beacon = new android.content.Intent(com.lynxspa.androidadvanced201617.Activities.CreaProfilo.this, com.lynxspa.androidadvanced201617.Activities.ListaBeacon.class);
            startActivity(beacon);
        }
    });
}

public static dev.ukanth.ufirewall.InterfaceDetails getCurrentCfg(android.content.Context context, boolean checkTether) {
    if ((dev.ukanth.ufirewall.InterfaceTracker.currentCfg) == null) {
        dev.ukanth.ufirewall.InterfaceTracker.currentCfg = dev.ukanth.ufirewall.InterfaceTracker.getInterfaceDetails(context, checkTether);
    }
    return dev.ukanth.ufirewall.InterfaceTracker.currentCfg;
}

@java.lang.Override
protected void onPreExecute() {
    refreshLayout = ((android.support.v4.widget.SwipeRefreshLayout) (((com.example.djordje.seeds.MainActivity) (com.example.djordje.seeds.device.Device.context)).findViewById(R.id.swiperefresh)));
    if (!(refreshLayout.isRefreshing()))
        refreshLayout.setRefreshing(true);
    
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName componentName, android.os.IBinder iBinder) {
    com.davapp.spotify.PlayerService.MyBinder myBinder = ((com.davapp.spotify.PlayerService.MyBinder) (service));
    mBoundService = myBinder.getService();
    mServiceBound = true;
}

@java.lang.Override
public void onConnected(android.os.Bundle connectionHint) {
    ((de.appphil.categories.CategoriesApplication) (getApplication())).setOwnParticipantId();
    finish();
}

@java.lang.Override
public void onError(java.lang.String s) {
    android.util.Log.e(org.kiwix.kiwixmobile.utils.KiwixTextToSpeech.TAG_KIWIX, ("TextToSpeech: " + s));
    stop();
}

@java.lang.Override
public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) {
    if (dataSnapshot.hasChild(user_id)) {
        startActivity(new android.content.Intent(this, dummy.popdesign.cllg_project.NavigationActivity.class));
    }else {
        android.widget.Toast.makeText(this, "You need to set up your account ", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public io.mochadwi.todo_go.todo.ToDoRealmAdapter.ViewHolder onCreateRealmViewHolder(android.view.ViewGroup viewGroup, int viewType) {
    android.view.View v = inflater.inflate(R.layout.to_do_item_view, viewGroup, false);
    io.mochadwi.todo_go.todo.ToDoRealmAdapter.ViewHolder vh = new io.mochadwi.todo_go.todo.ToDoRealmAdapter.ViewHolder(((android.widget.FrameLayout) (v)));
    return vh;
}

@java.lang.Override
public void onColorSelected(@android.support.annotation.ColorInt
int i) {
    ((io.keepcube.kcapp.Data.Device.Led) (io.keepcube.kcapp.Data.Dashboard.getDevice(view.getAdapterPosition()))).setSolidColor(i);
    notifyDataSetChanged();
}

@java.lang.Override
public void getDrawable(android.graphics.drawable.Drawable drawable, java.lang.Object name, java.io.File file) {
    android.widget.Toast.makeText(getApplicationContext(), ("" + name), Toast.LENGTH_SHORT).show();
    android.util.Log.e("name--> ", ("" + name));
}

@java.lang.Override
public void onSuccess(com.lithiumsheep.weatherwrapper.models.CurrentWeather currentWeather) {
    android.widget.Toast.makeText(this, "Success!", Toast.LENGTH_SHORT).show();
    setText(currentWeather);
}

@java.lang.Override
public void onConfigured(@android.support.annotation.NonNull
android.hardware.camera2.CameraCaptureSession session) {
    try {
        session.capture(captureBuilder.build(), captureListener, backgroundHandler);
    } catch (android.hardware.camera2.CameraAccessException e) {
        timber.log.Timber.e(e);
    }
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL("DROP TABLE IF EXISTS clipboard");
    onCreate(db);
    db.close();
}

public void gotoDefaultHomeScreen(android.view.View view) {
    mTransitionManager.transitionTo(mDefaultScene);
    setFabOutline();
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    mapFragment.findMyLocation(googleClient);
    com.doo.study.dytransit.view.adapter.PlaceAutocompleteAdapter adapter = new com.doo.study.dytransit.view.adapter.PlaceAutocompleteAdapter(this, R.layout.auto_view_row);
    adapter.setGoogleApiClient(googleClient);
    searchView.setAdapter(adapter);
}

@java.lang.Override
public void onTitleSlect(android.widget.TextView tv, int position) {
    final com.mdground.hdenergy.models.Bulletin item = mDatas.get(position);
}

@java.lang.Override
public void onClick(android.view.View v) {
    ((me.ccrama.redditslide.Activities.AlbumPager) (getActivity())).showBottomSheetImage(url, true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mViewPager.setCurrentItem(((mViewPager.getCurrentItem()) - 1));
    android.util.Log.i("SK-DEBUG", "Left Button is Clicked");
}

@java.lang.Override
public void onClick(android.view.View v) {
    printAllUrls();
    mSearchQuery = mSearchBox.getText().toString();
    java.lang.String searchScope = mStringSearchScope;
    mainFragmentListener.getSearchInfo(mSearchQuery, searchScope);
}

public static java.lang.String getGroupKey(final android.service.notification.StatusBarNotification sbn) {
    if (sbn instanceof com.oasisfeng.nevo.StatusBarNotificationCompat)
        return ((com.oasisfeng.nevo.StatusBarNotificationCompat) (sbn)).getBaseGroupKey();
    
    return sbn.getGroupKey();
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    android.content.Intent intent = new android.content.Intent();
    intent.putExtra("Online", Online);
    intent.setClass(this, com.FSL.mcuTracker.ListActivity.class);
    callOtherActivity(intent, query);
    return false;
}

@java.lang.Override
protected void onPreExecute() {
    myLoadingDialog = new android.app.ProgressDialog(this);
    myLoadingDialog.setMessage("Loading");
    myLoadingDialog.setIndeterminate(false);
    myLoadingDialog.setCancelable(false);
    myLoadingDialog.show();
    super.onPreExecute();
}

public void drawPosts(android.app.Activity _activity) {
    getRestClient(1, "load");
    adapter = new budgetworld.ru.bw.PostsAdapter(_activity, posts);
    android.widget.ListView listView = ((android.widget.ListView) (_activity.findViewById(R.id.lvItems)));
    listView.setAdapter(adapter);
}

public static void recordActivity(java.lang.String message) {
    org.json.JSONObject jmessage = new org.json.JSONObject();
    de.xavaro.android.common.Json.put(jmessage, "message", message);
    de.xavaro.android.common.ActivityManager.recordActivity(jmessage);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.e("SPEAK RECEIVER", "received message ******");
    speaker = new com.nvharikrishna.whoisthat.Speaker(context);
    speaker.speak(intent.getStringExtra("message_to_speak"));
}

public void onClick(android.view.View v) {
    finish();
    java.lang.System.exit(0);
}

@java.lang.Override
public void onMatrixError(org.matrix.androidsdk.rest.model.MatrixError e) {
    org.matrix.androidsdk.util.Log.d(im.vector.activity.VectorMemberDetailsActivity.LOG_TAG, ("## mCreateDirectMessageCallBack: onMatrixError Msg=" + (e.getLocalizedMessage())));
    if (null != (mRoomActionsListener)) {
        mRoomActionsListener.onMatrixError(e);
    }
}

public void onCreate() {
    super.onCreate();
    com.example.matt.chromesthesia.Repeat Loop = Repeat.ALL;
    songposition = 0;
    mediaPlayer = new android.media.MediaPlayer();
    mp_init();
}

@javax.annotation.Nonnull
public static java.lang.String decrypt(@javax.annotation.Nonnull
java.lang.String message, @javax.annotation.Nonnull
java.lang.String salt) {
    return ua.boberproduction.bbr.util.Encryption.xor(new java.lang.String(android.util.Base64.decode(message, 0)), salt);
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    v.clearFocus();
    hideKeyBoard(v);
    return false;
}

@java.lang.Override
public void onFingerprintDialogStageUpdated(com.aitorvs.android.fingerlock.FingerprintDialog fingerprintDialog, com.aitorvs.android.fingerlock.FingerprintDialog.Stage stage) {
    android.widget.Toast.makeText(this, "onFPDSUpdated", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(this, "Started Cam", Toast.LENGTH_SHORT).show();
    qrScan.initiateScan();
}

@java.lang.Override
public void onClick(android.view.View v) {
    htl_leonding.fiplyteam.fiply.trainingssession.FFeedback fFeedback = new htl_leonding.fiplyteam.fiply.trainingssession.FFeedback();
    fFeedback.setArguments(getArguments());
    displayFragment.displayTSFeedback(fFeedback, getFragmentManager());
}

@java.lang.Override
protected android.graphics.Bitmap doInBackground(java.lang.String... params) {
    mProgressDialog.show();
    android.graphics.Bitmap thumbnail = com.comp.iitb.vialogue.library.Storage.getVideoThumbnail(new java.io.File(params[0]).getAbsolutePath());
    mProgressDialog.dismiss();
    return thumbnail;
}

public void invalidateSelection() {
    calendarDateManager.clearCalendarData();
    new android.os.Handler().post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            notifyDataSetChanged();
        }
    });
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    this.peerListAdapter = new com.group.cs.wi_free.DeviceListFragment.WifiPeerListAdapter(getActivity(), R.layout.row_devices, peers);
    this.setListAdapter(peerListAdapter);
}

private void callbackProgressInternal(int progress) {
    android.util.Log.i(com.hans.doublewaybubbleseekbar.DoubleWaySeekBar.TAG, ("callbackProgressInternal: " + progress));
    if ((mListener) != null) {
        mListener.onSeekProgress(progress);
    }
}

private void onTextChanged(java.lang.CharSequence newText) {
    suggestionsListChanged();
    if (!(android.text.TextUtils.isEmpty(searchEditText.getText()))) {
        displayClearButton(true);
    }else {
        displayClearButton(false);
    }
}

private void sendPlayBroadcastMessage() {
    updateNotificationAction(false);
    android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(getStandardPlayerBroadcast(com.example.tonykazanjian.mp4player.PlayerService.PLAYER_START_MSG));
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    java.lang.String action = intent.getAction();
    if (action.equals(BluetoothAdapter.ACTION_LOCAL_NAME_CHANGED)) {
        updateDeviceName();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.reset_button :
            board.setOnBoardInteractionListener(this);
            board.resetBoard();
            break;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    ma.groupsCompiled.clear();
    ma.getInstituteList();
    ma.compileInstituteList(ma.institute);
    showInstituteChooseDialog();
}

public istat.android.freedev.forms.FormFiller use(istat.android.freedev.forms.Form form) {
    return istat.android.freedev.forms.FormFiller.using(form);
}

@java.lang.Override
protected void onPostExecute(java.lang.Boolean result) {
    if (!result) {
        synchronized(fi.lbd.mobile.fragments.ObjectListFragment.LOCK) {
            android.util.Log.d("________", "Couldn't connect to locationclient. Releasing lock.");
            fi.lbd.mobile.fragments.ObjectListFragment.searchInProgress = false;
        }
        statusText.setText(LOCATION_FAILED);
        lastStatusText = LOCATION_FAILED;
        lastStatusBackground = LOCATION_BACKGROUND;
    }
}

@java.lang.Override
public void run() {
    getAllPPTFiles(android.os.Environment.getExternalStorageDirectory());
    mHandler.sendEmptyMessage(com.changhong.touying.activity.OtherDetailsActivity.PPTLIST_REFRESH);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_calendar);
    initializeCalendar();
    restClient = new com.app.ssumobile.ssumobile_android.service.RestClient();
    initializeListener();
}

@java.lang.Override
public void onPause() {
    super.onPause();
    savedInstance = new android.os.Bundle();
    onSaveInstanceState(savedInstance);
    timingThread.stopTimer();
    handler.removeCallbacks(toggleInputMode);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    java.lang.String token = intent.getStringExtra(com.example.team11.MedicineActivity.GCMTOKEN);
    java.lang.String[] parts = token.split(":");
    gcmToken = parts[1];
    registerWithNotificationHubs();
}

@java.lang.Override
public void run() {
    android.util.Log.d(com.ckt.ckttodo.widgt.CircleAlarmTimerView.TAG, "TimerTask");
    handler.obtainMessage().sendToTarget();
}

private void sendNotification(android.support.v4.app.NotificationCompat.Builder notificationBuilder) {
    android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE)));
    notificationManager.notify(0, notificationBuilder.build());
}

@java.lang.Override
public void onUpdate(android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds) {
    createAlarm(context, appWidgetIds);
    context.startService(new android.content.Intent(context, com.droid.manasshrestha.rxandroid.widget.UpdateWidget.class));
}

@android.webkit.JavascriptInterface
public void annotate(java.lang.String response) {
    android.util.Log.v("EpubReader", ("annotate<=19 " + response));
}

public void OnSetIndicatorView(android.widget.ImageView mIndicatorView, int position) {
    if (null != (mIndicatorBackgroundDrawable))
        mIndicatorView.setBackgroundDrawable(mIndicatorBackgroundDrawable);
    
    if (null != (mIndicatorSrcDrawable)) {
        mIndicatorView.setImageDrawable(mIndicatorSrcDrawable);
    }
}

public java.lang.String getRoomName(final java.lang.String roomKey) {
    com.pajato.android.gamechat.chat.model.Room room = roomMap.get(roomKey);
    return room != null ? room.name : "Anonymous";
}

public static void w(java.lang.Object obj, java.lang.Object... content) {
    dev.xesam.android.logtools.L.log(dev.xesam.android.logtools.L.TYPE_W, obj, content);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d(com.as.atlas.googlemapfollowwe.MapsActivity.TAG, ("buttonSend.setOnclick destination=" + (com.as.atlas.googlemapfollowwe.MapsActivity.currentUserInfo.destination)));
    if (!("".equals(com.as.atlas.googlemapfollowwe.MapsActivity.currentUserInfo.destination))) {
        sendDestionationToServer(com.as.atlas.googlemapfollowwe.MapsActivity.currentUserInfo.destination);
    }
}

public void sendPackages(int frequency) {
    connectedThread = new com.example.make201512.bluetoothtester.BluetoothClassic.ConnectedThread(socket);
    connectedThread.start();
    connectedThread.write(frequency);
    android.util.Log.e(com.example.make201512.bluetoothtester.BluetoothClassic.TAG, "sendPackages被执行");
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.jimmyklein.pillreminder.PatientView obj = new com.example.jimmyklein.pillreminder.PatientView();
    obj.alertPebble();
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.KITKAT)
@java.lang.Override
protected java.lang.Boolean doInBackground(java.lang.Void... voids) {
    return sendSMS(receiverId, from);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.sparshik.yogicapple.utils.CommonUtils.openWebsite(getContext(), pack.getPackDevSiteUrl());
}

@java.lang.Override
public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<java.lang.Void> task) {
    mActivityHelper.dismissDialog();
    com.firebase.ui.auth.util.SmartlockUtil.saveCredentialOrFinish(this, com.firebase.ui.auth.ui.email.RegisterEmailActivity.RC_SAVE_CREDENTIAL, getIntent(), mActivityHelper.getFlowParams(), firebaseUser, password, null);
}

@java.lang.Override
public void onClick(android.view.View v) {
    ipAddress = "null";
    startSession();
}

@java.lang.Override
protected void onRestart() {
    super.onRestart();
    android.util.Log.i(edu.washington.ruokua.quizdroid.QuizDroidModel.TAG, "onRestart event fired.");
    android.util.Log.e(edu.washington.ruokua.quizdroid.QuizDroidModel.TAG, ((topicIndex) + ""));
}

@java.lang.Override
public void onClick(android.content.DialogInterface anInterface, int i) {
    if ((loading.getVisibility()) == (android.view.View.VISIBLE))
        return ;
    
    new uiuc.mbr.ui.AddEventDialog.Worker().execute();
}

public void removeFromFavorites() {
    android.database.sqlite.SQLiteDatabase writeable = new dylan.com.adoptapet.FavoritesDBHelper(this).getWritableDatabase();
    writeable.delete(FavoritesDBHelper.table_name, "id = ?", new java.lang.String[]{ currentPet.getId() });
    writeable.close();
}

public void setProgressChangeListeners(java.util.concurrent.CopyOnWriteArrayList<com.mapbox.services.android.navigation.v5.listeners.ProgressChangeListener> progressChangeListeners) {
    progressChangeListeners.add(this);
    locationUpdatedThread.setProgressChangeListener(progressChangeListeners);
}

@java.lang.Override
public void onActivityStopped(android.app.Activity activity) {
    if (activity instanceof com.example.alex.motoproject.screenMain.MainActivity) {
        mMainActivityVisible = false;
        android.widget.Toast.makeText(this, "Stopped", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    android.util.Log.d("abc", ("getMyLikes: " + 3));
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addApi(Wearable.API).build();
    mGoogleApiClient.connect();
}

@java.lang.Override
public void onTradeNotification(com.android.futures.entity.TradeEntity entity) {
    mTradeSequence.add(entity);
    android.os.Message msg = android.os.Message.obtain();
    msg.what = TraderStatusListener.TradeNotification;
    msg.obj = entity;
    mHandler.sendMessage(msg);
}

public void onSurfaceChanged(int w, int h) {
    synchronized(lock) {
        com.giderosmobile.android.player.GiderosApplication.nativeSurfaceChanged(w, h, com.giderosmobile.android.player.GiderosApplication.getRotation());
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    savedInstanceState.putSerializable("SURFACE", surface);
    new edu.apsu.csci.teamaz.azpaint.DialogBoxColor(surface);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(R.layout.fragment_tab_expenses_paid, container, false);
    initializaButterKnife(rootView);
    prepareAdapter(rootView);
    return rootView;
}

@java.lang.Override
public void onClick(android.view.View v) {
    imageIntent.setType("image/*");
    imageIntent.setAction(Intent.ACTION_GET_CONTENT);
    startActivityForResult(android.content.Intent.createChooser(imageIntent, "Select photo"), 0);
}

@java.lang.Override
public void onDateChanged(android.widget.DatePicker view, int yearChange, int monthOfYear, int dayOfMonth) {
    int age = yearCurrent - yearChange;
    ageTextView.setText(("" + age));
}

@java.lang.Override
public void onRefresh() {
    android.util.Log.d(name.parker.alon.viewerforgithub.view.InfoActivity.LOG_TAG, "PullToRefresh");
    swipeLayout.setRefreshing(true);
    loadData(true);
}

@java.lang.Override
public void onPageSelected(int position) {
    if ((mViewPager) != null) {
        if (position < 3) {
            mBottomNavigationView.setSelectedItemId(position);
            android.util.Log.d(DEBUG_KEY, ("item id is " + position));
        }
    }
}

@java.lang.Override
public void onWriteError(java.lang.Throwable e) {
    android.widget.Toast.makeText(context, R.string.error_write, Toast.LENGTH_LONG).show();
    android.util.Log.e(NFCDemoApplication.LOG_TAG, "Error occurred while writing NFC card", e);
}

private void setUpToolbar() {
    setSupportActionBar(((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))));
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    actionBar.setDisplayHomeAsUpEnabled(true);
    actionBar.setTitle("Contacts");
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    android.util.Log.d(edu.umbc.cs.iot.clients.android.UMBCIoTApplication.getDebugTag(), "Came to onPostCreate");
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    if (key.equals(StartAtraceActivity.ICON_SHOW)) {
        com.jrdcom.systrace.service.AtraceService.sIconShowing = mCommandUtil.getBooleanState(key);
        com.jrdcom.systrace.toolbox.CommandUtil.myLogger(com.jrdcom.systrace.service.AtraceService.TAG, ("onSharedPreferenceChanged: sIconShowing=" + (com.jrdcom.systrace.service.AtraceService.sIconShowing)));
    }
}

@java.lang.Override
protected void onFinishInflate() {
    super.onFinishInflate();
    mDateHeader = ((android.widget.TextView) (findViewById(R.id.date_header)));
    if (isInEditMode()) {
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    mShareNotSave = true;
    startBackup();
}

@java.lang.Override
public void onClick(android.view.View v) {
    getDownloadButton().setClickable(true);
    getDownloadButton().setText(getString(R.string.download));
    hideDownloadProgressBar();
    cancel(true);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    view = inflater.inflate(R.layout.list_book_fragment, container, false);
    initUI();
    getBooks(0);
    return view;
}

@java.lang.Override
public void onAutoFocus(boolean success, android.hardware.Camera camera) {
    if (success) {
        camera.cancelAutoFocus();
    }
}

public static void applyForPermit(com.airmap.airmapsdk.models.permits.AirMapAvailablePermit permit, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<com.airmap.airmapsdk.models.permits.AirMapPilotPermit> callback) {
    com.airmap.airmapsdk.networking.services.PermitService.applyForPermit(permit, callback);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    isActive = true;
    try {
        mLocationAccess.stopUpdates();
        mLocationAccess = null;
    } catch (java.lang.NullPointerException e) {
        mLocationAccess = new com.babykangaroo.android.mylocationlibrary.LocationAccess(this, this);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    binding = android.databinding.DataBindingUtil.setContentView(this, R.layout.activity_game_list);
    viewModel = new ui.com.lightrpg.lightrpgui.game.GameListViewModel();
    setupDrawer();
    setupTopBar();
    setupGameList();
    setupBottomsheet();
}

public static java.lang.CharSequence applyToText(java.lang.CharSequence charSequence, android.graphics.Typeface typeface) {
    return cat.ppicas.customtypeface.CustomTypefaceSpan.applyToText(charSequence, typeface, 0, charSequence.length());
}

private static void killCurrentProcess() {
    android.os.Process.killProcess(android.os.Process.myPid());
    java.lang.System.exit(10);
}

@java.lang.Override
public void onEndOfSpeech() {
    ((android.widget.TextView) (getActivity().findViewById(R.id.result2))).setText("End of search!");
}

@java.lang.Override
public com.parse.ParseQuery create() {
    android.util.Log.d("TASKS_ADAPTER", currentUser);
    com.parse.ParseQuery query = new com.parse.ParseQuery("Task");
    query.whereEqualTo("user", currentUser);
    query.addDescendingOrder("createdAt");
    return query;
}

@java.lang.Override
public void onServiceDisconnected(android.content.ComponentName componentName) {
    timber.log.Timber.d("Disconnected from service.");
    navigationService = null;
    setBound(false);
}

public long getTimeSpent() {
    long time = sharedPreferences.getLong(context.getString(R.string.time), 0);
    android.util.Log.d("waleola", ("called SharedPreferenceManager.. time .... = " + time));
    return time;
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.about_us, menu);
    return true < (HEAD);
}

@java.lang.Override
public void onError(java.lang.Throwable e) {
    finish();
    rx.Subscriber<? super io.relayr.java.model.User> subscriber = io.relayr.android.RelayrSdk.getLoginSubscriber();
    if (subscriber != null)
        subscriber.onError(e);
    
}

@android.annotation.TargetApi(value = 23)
@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    setListAdapter(new android.widget.ArrayAdapter(getContext(), android.R.layout.simple_list_item_1, com.firefly.shoppomem.HistoryActivity.getHistoryList()));
}

public static void setAppContext(android.content.Context appContext) {
    szu.bdi.hybrid.core.HybridTools._appContext = appContext;
}

@java.lang.Override
public void onScanning(java.lang.String paramString, int progress) {
    android.util.Log.d(io.haydar.filescanner.app.MainActivity.TAG, ("onScanning: " + progress));
}

@java.lang.Override
public void onClick(android.view.View view) {
    switchCoolFeed(false, true);
}

public static boolean showAdvancedPreferences(android.content.Context context) {
    return ((android.provider.Settings.Secure.getInt(context.getContentResolver(), android.provider.Settings.Secure.ADVANCED_MODE, 1)) == 1) && (context.getResources().getBoolean(com.android.internal.R.bool.config_advancedSettingsMode));
}

public void toAlarm(android.view.View view) {
    android.content.Intent changeToFavorites = new android.content.Intent(view.getContext(), com.davidtoh.helloworld.Alarm.class);
    startActivityForResult(changeToFavorites, 0);
}

private android.content.res.ThemeConfig getThemeConfig() {
    android.content.res.Configuration config = getConfiguration();
    if (config != null) {
        return config.themeConfig;
    }
    return null;
}

public static long normalizeDate(long startDate) {
    android.text.format.Time time = new android.text.format.Time();
    time.set(startDate);
    int julianDay = android.text.format.Time.getJulianDay(startDate, time.gmtoff);
    return time.setJulianDay(julianDay);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((mCurrentPage) < (mMaxPage)) {
        sbGotoPage.setProgress(mCurrentPage);
    }
    mCurrentPage = mGoToPage;
    showOrLoadPage();
    dialog.dismiss();
}

@java.lang.Override
public void onBackPressed() {
    android.util.Log.d("TKT_create", "onBackPressed");
    saveChanges(0);
}

@java.lang.Override
public void onResult(com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult) {
    handleSignInResult(googleSignInResult);
    com.oligon.bienentracker.ui.activities.HomeActivity.sp.edit().putBoolean("database_old", true).apply();
}

int MNC() {
    java.lang.String networkOperator = ((android.telephony.TelephonyManager) (getSystemService(Context.TELEPHONY_SERVICE))).getNetworkOperator();
    return !(android.text.TextUtils.isEmpty(networkOperator)) ? java.lang.Integer.parseInt(networkOperator.substring(3)) : 0;
}

public static void reapplyForcedLocale(android.content.Context context, android.app.Activity activityContext) {
    br.com.carlosrafaelgn.fplay.ui.UI.setForcedLocale(context, activityContext, br.com.carlosrafaelgn.fplay.ui.UI.forcedLocale);
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    boolean keep = intent.getExtras().getBoolean("keep");
    if (!keep) {
        finish();
    }
    setView(intent);
}

public static java.lang.String getBioSettingFromUri(android.net.Uri uri) {
    return uri.getPathSegments().get(0);
}

public void updateView(java.util.ArrayList data) {
    android.util.Log.d(com.example.ddong.xphoto.LocalGridViewAdapter.TAG, ("updateView: " + (data.size())));
    this.data = data;
}

@butterknife.Optional
@butterknife.OnClick(value = R.id.debugSettings)
void onDebugSettings() {
    android.content.Intent intent = new android.content.Intent(this, debugSettingsClass);
    startActivity(intent);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    com.android.debug.hv.ViewServer.get(this).setFocusedWindow(this);
    new com.example.ivan.champy_v2.activity.MainActivity.DownloadImageTask().buildAnim(this);
}

@java.lang.Override
public void handleMessage(android.os.Message message) {
    switch (message.what) {
        case com.example.blockwatch.BlockwatchFragment.MSG_UPDATE_TIME :
            pV.setCurrentHash(currentHash);
            pV.invalidate();
            android.widget.Toast.makeText(getContext(), "Refresh", Toast.LENGTH_SHORT).show();
            break;
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.v("PREPARED", "recieved prepared");
    setScreen();
    setPlayerControls();
    setSongProgressSeekbar();
    setAlbumCoverImage();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.fragment_preference);
    configureCurrenciesPref();
    configureNotificationsCB();
}

@java.lang.Override
public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) {
    mWebView.loadUrl(url);
    return true;
}

public void callBackFailed(@android.support.annotation.NonNull
android.content.Context context, @android.support.annotation.NonNull
com.mogujie.lever.calendarlever.core.ICallBack callback) {
    callback.onFailed();
}

@java.lang.Override
public void endAnimation() {
    if (layout.isMovedOutSize()) {
        mDatas.remove(position);
        notifyDataSetChanged();
    }else {
        android.util.Log.d("d", "-------- : ----------- movedOut");
        dragImageView.setVisibility(View.VISIBLE);
    }
}

public static com.mn2square.videolistingmvp.utils.thumbnailutils.BitmapCache GetInstance(android.content.Context context) {
    if ((com.mn2square.videolistingmvp.utils.thumbnailutils.BitmapCache.mInstance) == null) {
        com.mn2square.videolistingmvp.utils.thumbnailutils.BitmapCache.ctx = context;
        com.mn2square.videolistingmvp.utils.thumbnailutils.BitmapCache.mInstance = new com.mn2square.videolistingmvp.utils.thumbnailutils.BitmapCache();
    }
    return com.mn2square.videolistingmvp.utils.thumbnailutils.BitmapCache.mInstance;
}

@java.lang.Override
public void onRebind(android.content.Intent intent) {
    super.onRebind(intent);
    com.tianyl.android.offlinereader.sync.SyncService.addLog("onRebind");
}

@java.lang.Override
public void onInput(@android.support.annotation.NonNull
com.afollestad.materialdialogs.MaterialDialog dialog, java.lang.CharSequence input) {
    addStockQuote(input.toString().replaceAll("\\s", ""));
}

@java.lang.Override
public void onLayoutChange(android.view.View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {
    mList.smoothScrollToPosition(ListView.FOCUS_DOWN);
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder surfaceHolder) {
    android.util.Log.d("GStreamer", ("Surface created: " + (surfaceHolder.getSurface())));
    nativeSurfaceInit(surfaceHolder.getSurface());
}

@java.lang.Override
public void success(kat.android.com.movielist.rest.pojo.userdatails.Token token, retrofit.client.Response response) {
    mToken = token.getRequest_token();
    userAuthentication();
}

public static com.flaredown.flaredownApp.Checkin.CheckInSummaryFragment newInstance() throws org.json.JSONException {
    com.flaredown.flaredownApp.Checkin.CheckInSummaryFragment fragment = new com.flaredown.flaredownApp.Checkin.CheckInSummaryFragment();
    android.os.Bundle args = new android.os.Bundle();
    fragment.setArguments(args);
    return fragment;
}

public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    currentState = manager.getActiveGameState();
    currentState.onTouchEvent(v, event);
    return true;
}

@java.lang.Override
public void done(java.lang.Object object) {
    java.lang.Integer rowsAffected = ((java.lang.Integer) (object));
    com.pratilipi.mobile.android.util.Log.d(com.pratilipi.mobile.android.reader.textReader.bookmark.BookmarksListAdapter.TAG, ("Bookmark delete status : " + rowsAffected));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_settings);
    sharedpreferences = getSharedPreferences(io.rasprovers.remotus.activities.Settings.MyPREFERENCES, Context.MODE_PRIVATE);
    java.lang.System.out.println(("====================>>" + (sharedpreferences.getString("Email", ""))));
}

@java.lang.Override
public void onError(java.lang.Throwable t) {
    android.widget.Toast.makeText(this, ("Error in REST service: " + (t.getMessage())), Toast.LENGTH_LONG).show();
}

@android.support.annotation.CheckResult
com.oasisfeng.hack.Hack.HackInvocation<R, C, T1, T2, T3> invoke(A1 arg1, A2 arg2);

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    counter.load(s.getSelectedItem().toString());
}

public void setBackgroundResource(int resId) {
    if ((mTargetView) instanceof android.widget.ImageView) {
        mTargetView.setBackgroundResource(resId);
    }
}

public void addRandomArticle() {
    android.util.Log.e(moizest89.geronimostudios.test.ui.main.MainPresenter.TAG, ("mData: " + (mData)));
    getMvpView().setRandomArticle(this.mData.get(1));
}

public com.exyui.android.debugbottle.components.DTInstaller install(java.lang.Object app) {
    android.util.Log.d(com.exyui.android.debugbottle.components.DTInstaller.TAG, "install");
    return this;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    api = com.tencent.mm.sdk.openapi.WXAPIFactory.createWXAPI(this, com.wanke.tv.wxapi.WXEntryActivity.WX_APP_ID, false);
    api.registerApp(com.wanke.tv.wxapi.WXEntryActivity.WX_APP_ID);
    api.handleIntent(getIntent(), this);
}

public com.anirudh.buttertoast.ButterToast.Builder setTextColor(@android.support.annotation.ColorInt
int textColor) {
    this.setTextColor(textColor);
    return this;
}

@java.lang.Override
public void run() {
    org.hisp.dhis.android.sdk.controllers.DhisService.loadInitialData(this);
    runOnUiThread(new java.lang.Runnable() {
        public void run() {
            showSelectProgramFragment();
        }
    });
}

@java.lang.Override
public void onFailure(@android.support.annotation.NonNull
java.lang.Exception e) {
    android.widget.Toast.makeText(this, "uploading error make shure tha you have internet connection", Toast.LENGTH_SHORT);
}

@java.lang.Override
protected void onPostExecute(java.lang.String str) {
    android.util.Log.e("resultHtml", ("resultHtml: " + str));
}

public static boolean supportsDrop(java.lang.Object info) {
    return ((info instanceof com.android.chavah.ShortcutInfo) || (info instanceof com.android.chavah.LauncherAppWidgetInfo)) || (info instanceof com.android.chavah.FolderInfo);
}

@java.lang.Override
public void onReceivedTouchIconUrl(android.webkit.WebView view, java.lang.String url, boolean precomposed) {
    mWebChromeClient.onReceivedTouchIconUrl(view, url, precomposed);
}

public com.danimahardhika.cafebar.CafeBar.Builder negativeText(@android.support.annotation.StringRes
int res) {
    mNegativeText = mContext.getResources().getString(res);
    return this;
}

public static com.idevicesinc.sweetblue.utils.BluetoothEnabler.BluetoothEnablerListener.Please stop(android.content.Context context) {
    return new com.idevicesinc.sweetblue.utils.BluetoothEnabler.BluetoothEnablerListener.Please(context, com.idevicesinc.sweetblue.utils.BluetoothEnabler.BluetoothEnablerListener.Please.END, com.idevicesinc.sweetblue.utils.BluetoothEnabler.BluetoothEnablerListener.Please.NULL_REQUEST_CODE);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if (validate()) {
        submitEvent();
        getFragmentManager().popBackStack();
    }
}

public java.lang.String getDeviceId() {
    try {
        return getITelephony().getDeviceId();
    } catch (android.os.RemoteException ex) {
        return null;
    }
}

@java.lang.Override
public void onStateReady() {
    android.widget.Toast.makeText(this, "state ready", Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((!(isSettlingProcess)) && (!(isMediaPlayerStarted))) {
        ominext.com.readmestories.fragments.ReadingBookFragment fragment = mPagerAdapter.getFragment(mViewPager.getCurrentItem());
        fragment.onPlayClick();
    }
}

@java.lang.Override
public void run() {
    notifyInterfaceClassActivity(params.type, DataConnectionRealTimeInfo.DC_POWER_STATE_LOW, android.os.SystemClock.elapsedRealtimeNanos(), false);
}

@java.lang.Deprecated
public void enableDebugLog(boolean enabled, java.lang.String tag) {
    android.util.Log.w(com.google.example.games.basegameutils.GameHelper.TAG, ("GameHelper.enableDebugLog(boolean,String) is deprecated. " + "Use GameHelper.enableDebugLog(boolean)"));
    enableDebugLog(enabled);
}

public abstract void doBusiness(android.content.Context mContext);

@java.lang.Override
public void onClick(android.view.View view) {
    com.alphan.mcan.snoozecharity.services.AlarmManagerHelper.addToPendingDonation(getApplicationContext(), charityIndex, donationAmount);
    com.alphan.mcan.snoozecharity.services.AlarmRingService.startSnoozeAlarmIntent(view.getContext(), currentAlarm.getId(), snoozeDurationInMinutes);
    finish();
}

public void onBackPressed() {
    super.onBackPressed();
    android.util.Log.d("### ", "on back pressed setting activity ******************");
    (com.health.openscale.gui.SettingsActivity.backPressed)++;
    if ((com.health.openscale.gui.SettingsActivity.backPressed) == 1) {
        MainActivity.mSectionsPagerAdapter.notifyDataSetChanged();
        com.health.openscale.gui.SettingsActivity.backPressed = 0;
    }
}

private void setLoggedIn(boolean loggedIn) {
    if (loggedIn) {
        android.content.Intent in = new android.content.Intent(this, com.activity.nikhilesh.dropphoto.PictureActivity.class);
        in.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
        startActivity(in);
        finish();
    }
}

public static ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer someSecondsBack(int secondsBackToStartTheSessionFrom) {
    return new ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer((secondsBackToStartTheSessionFrom * 1000));
}

@java.lang.Override
public void onInterpretationTextClick(org.dhis2.android.dashboard.api.models.Interpretation interpretation) {
    org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationTextFragment.newInstance(interpretation).show(getChildFragmentManager());
}

public void setSurfaceSize(int width, int height) {
    synchronized(mSurfaceHolder) {
        mCanvasWidth = width;
        mCanvasHeight = height;
        mBackgroundImage = android.graphics.Bitmap.createScaledBitmap(mBackgroundImage, width, height, true);
    }
}

private boolean activityIsStartingForTheFirstTime(android.os.Bundle savedInstanceState) {
    return ((savedInstanceState == null) || (!(savedInstanceState.containsKey(com.popularmovies.popularmovies.activities.PopularMoviesActivity.KEY_MOVIES)))) || (!(favoriteMovieCursorWasSaved(savedInstanceState)));
}

@java.lang.Override
public void onCreate() {
    android.util.Log.d(com.freddykilo.smartdoor.AutoButton.TAG, "AutoButton.onCreate()");
    if (servicesOK()) {
        createGoogleApiClient().connect();
        com.freddykilo.smartdoor.BluetoothHelper.setup();
    }else {
        stopSelf();
    }
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    dialog.dismiss();
    sendString("abort");
    sendString("quit");
    finish();
}

public void addFooterView(android.view.View view) {
    if (view == null) {
        throw new java.lang.RuntimeException("footer is null");
    }
    if ((getFooterViewsCount()) > 0) {
        removeFooterView(getFooterView());
    }
    mFooterViews.add(view);
}

private void SetupList2(java.util.Date date) {
    android.database.Cursor cursor = doableItemValueTableAdapter.getItems(date);
    adapter.changeCursor(cursor);
}

public static rx.Observable<java.util.List<com.example.alexander.yandexmoneyshops.data.entity.ShopEntity>> getShopsFromWeb() {
    android.util.Log.i("_d", "WEB REQUEST");
    return com.example.alexander.yandexmoneyshops.data.web.YandexMoneyShopsFetcher.sYandexMoneyShopsService.getShops();
}

private void addLineToFavorites() {
    team5.capstone.com.mysepta.Managers.FavoritesManager.addRailLineToFavorites(start, end);
    mOptionsMenu.findItem(R.id.favoriteIcon).setIcon(R.drawable.star_icon);
    favorite = true;
    android.widget.Toast.makeText(this, "Added to Favorites", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onReceivedSslError(android.webkit.WebView view, android.webkit.SslErrorHandler handler, android.net.http.SslError error) {
    if ((gtListener) != null) {
        gtListener.gtError();
    }
}

public void buttonOnClickHelpScreen1(android.view.View view) {
    android.content.Intent iphoneDesignActivityIntent = new android.content.Intent(this, com.example.meghanchua.remoteapp.IphoneHelpScreen.class);
    iphoneDesignActivityIntent.putExtra("user", user);
    this.startActivity(iphoneDesignActivityIntent);
    finish();
}

@java.lang.Override
public void onNewIntent(android.content.Intent intent) {
    android.util.Log.i(com.phuston.android.kyzr.TorchActivity.TAG, "onNewIntent called");
    setIntent(intent);
}

@java.lang.Override
public void addOverlay(android.view.ViewGroup sceneRoot, android.view.View overlayView, int screenX, int screenY) {
    android.transitions.everywhere.utils.ViewOverlayPreJellybean viewOverlay = android.transitions.everywhere.utils.ViewOverlayPreJellybean.getOverlay(sceneRoot);
    viewOverlay.addView(overlayView, screenX, screenY);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.widget.Toast.makeText(getActivity(), "onResume called", Toast.LENGTH_SHORT).show();
    updateUI();
}

@java.lang.Override
public void onClick(android.view.View view) {
    lb.reset();
    sucBtn.setEnabled(false);
    failedBtn.setEnabled(false);
    resetBtn.setEnabled(false);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    if (getShowsDialog()) {
        return super.onCreateView(inflater, container, savedInstanceState);
    }else {
        return fillView(inflater, container);
    }
}

@java.lang.Override
public void onStart(java.lang.String utteranceId) {
    android.util.Log.d(((MD) + (LN)), "UtteranceProgressListener - onStart");
}

public static java.lang.String render(android.content.Context ctx, java.lang.String uniqueId, java.util.Map<java.lang.String, java.lang.String> params) {
    java.lang.String jsonString = com.nuvolect.securesuite.webserver.SyncRest.parse(ctx, uniqueId, params);
    return jsonString;
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.frostwire.android.gui.services.Engine.instance().stopServices(false);
    com.frostwire.android.gui.util.UIUtils.openFile(context, com.frostwire.android.gui.SoftwareUpdater.getUpdateApk().getAbsolutePath(), Constants.MIME_TYPE_ANDROID_PACKAGE_ARCHIVE);
    newSoftwareUpdaterDialog.dismiss();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    android.content.Intent intent = new android.content.Intent(activity, org.give2peer.give2peer.activity.RegistrationActivity.class);
    startActivity(intent);
}

private java.io.BufferedReader openTextFile(java.lang.String name) throws java.io.IOException {
    android.content.res.AssetManager am = fragment.getContext().getAssets();
    return new java.io.BufferedReader(new java.io.InputStreamReader(am.open(name)));
}

static void setLocale(android.app.Activity actitity) {
    com.dev.amazonadvisor.AmazonLocaleUtils.activity = actitity;
    com.dev.amazonadvisor.AmazonLocaleUtils.locale = com.dev.amazonadvisor.AmazonLocaleUtils.getLocale(actitity);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int mNavigationItemId = item.getItemId();
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void openMenu() {
    android.widget.Toast.makeText(mContext, "Menu is opened!", Toast.LENGTH_SHORT).show();
}

@android.annotation.SuppressLint(value = "NewApi")
public void insert(final java.net.URI uri, final java.util.Map<java.lang.String, java.lang.Object> values) {
    org.toilelibre.libe.athg2sms.bp.SmsInserter.insert(uri, values, this.sourceActivity.getContentResolver());
}

@java.lang.Override
protected void attachBaseContext(android.content.Context base) {
    super.attachBaseContext(base);
    com.example.m.divis.ACRA.init(this);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((rowItem.getEntry()) != null) {
        toggleChecked(position1, holder.checkImageView);
    }
}

public void requestNewInterstitial() {
    com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().addTestDevice("B0CE4250758AE4B5BA9A7A7D491F75B3").build();
    mInterstitialAd.loadAd(adRequest);
}

@java.lang.Override
public int onStartCommand(final android.content.Intent intent, final int flags, final int startId) {
    android.widget.Toast.makeText(this, "notification service started", Toast.LENGTH_LONG).show();
    invalidateNotificationsQueue();
    return START_STICKY;
}

@java.lang.Override
public void onClick(android.view.View v) {
    disableall();
    CreateIcon(com.att.attcase.XayDungCase.iconDuocChon);
}

public void turnOffSync() {
    android.content.ContentResolver.setSyncAutomatically(mAccount, AUTHORITY, false);
}

@java.lang.Override
public void onFailure(java.lang.Throwable t) {
    android.widget.Toast.makeText(getContext(), "failure", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(getLayoutId());
    butterknife.ButterKnife.bind(this);
    setupActivityComponent(com.example.sf.myapplication.MyApplication.getsInstance().getAppComponent());
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    if ((mAdapter) == null) {
        mAdapter = new com.android1.homework3.msg.adapter.ChannelListAdapter(getActivity(), mChannels);
    }
    setListAdapter(mAdapter);
}

@java.lang.Override
public android.content.Loader<java.util.List<com.example.android.booklistingproject_udacity.Book>> onCreateLoader(int i, android.os.Bundle bundle) {
    java.lang.String url = updateURL(mKeyword.toString());
    return new com.example.android.booklistingproject_udacity.BookLoader(this, url);
}

@java.lang.Override
public void goToCourseUrl(java.lang.String url) {
    android.content.Intent mainIntent = com.epsilon.screens.main.MainActivity.makeIntent(getActivity(), MainActivity.COURSES_TAB_POSITION);
    startActivity(mainIntent);
    android.content.Intent browserIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(url));
    startActivity(browserIntent);
}

@java.lang.Override
public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    hideProgress();
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    android.content.SharedPreferences sh = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
    com.ecsm.android.movie.ui.ActivityBrows.prefWifi = sh.getBoolean(getString(R.string.pref_key_over_wifi), true);
    if (com.ecsm.android.movie.ui.ActivityBrows.refreshStatus)
        checkConnection();
    
    com.ecsm.android.movie.ui.ActivityBrows.refreshStatus = false;
}

public static android.net.Uri appendProfileWithDefault(final java.lang.String profile, final android.net.Uri uri) {
    if (android.text.TextUtils.isEmpty(profile)) {
        return org.mozilla.gecko.db.DBUtils.appendProfile(GeckoProfile.DEFAULT_PROFILE, uri);
    }
    return org.mozilla.gecko.db.DBUtils.appendProfile(profile, uri);
}

@java.lang.Override
public void onLoadingComplete(java.lang.String imageUri, android.view.View view, android.graphics.Bitmap loadedImage) {
    pic.setImageBitmap(loadedImage);
    pic.setScaleType(ImageView.ScaleType.CENTER_CROP);
    fridgeView.findViewById(R.id.progress_load).setVisibility(View.GONE);
    pic.setVisibility(View.VISIBLE);
}

@java.lang.Override
public void updateHaverStatus(@android.support.annotation.NonNull
long desireId, @android.support.annotation.NonNull
long userId, @android.support.annotation.NonNull
de.fau.cs.mad.wanthavers.common.Haver haver, @android.support.annotation.NonNull
int status, @android.support.annotation.NonNull
wanthavers.mad.cs.fau.de.wanthavers_android.data.source.haver.UpdateHaverStatusCallback callback) {
    callback.onUpdateFailed();
}

public void setImg(byte[] img) {
    this.img = img;
    bmp = android.graphics.BitmapFactory.decodeByteArray(img, 0, img.length);
}

public void displayStepDetailView(eu.javimar.bakingapp.model.Step step) {
    mStep = step;
    android.util.Log.e(eu.javimar.bakingapp.view.RecipeStepDetailViewFragment.TAG, ("JAVIER en displayStepDetailView = " + (step.getmDescription())));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    musicAdapter = new de.teyzer.genie.ui.fragments.MusicListFragment.MusicAdapter();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    outState.putSerializable(augsburg.se.alltagsguide.utilities.ui.BasePageWebViewLanguageActivity.PAGE_STATE, mPage);
    outState.putBoolean(augsburg.se.alltagsguide.utilities.ui.BasePageWebViewLanguageActivity.TRANSLATED_DISMISSED, mTranslatedDismissed);
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void nativeMaintainHome() {
    android.content.Intent intent = new android.content.Intent(this, tw.com.inx.ipm.view.CheckHomeActivity.class);
    startActivity(intent);
    this.finish();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_results);
    setUpToolbar(getString(R.string.title_result));
    setUpViews();
    setUpTest();
}

@java.lang.Override
@org.robolectric.annotation.Implementation
public void unbindService(android.content.ServiceConnection conn) {
    if (unbindServiceShouldThrowIllegalArgument) {
        throw new java.lang.IllegalArgumentException();
    }
}

@java.lang.Override
public void navigate(java.lang.Class<?> cls) {
    android.content.Intent intent = new android.content.Intent(this, cls);
    startActivityForResult(intent, com.kareem.mynursery.MainActivity.LOGIN_ACTIVITY_RESULT_CODE);
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.d(com.cn6000.callrec.CallRecorderService.TAG, "service destory");
    this.stopRecording();
    this.unregisterReceiver();
    cntx = null;
    super.onDestroy();
}

@java.lang.Override
protected void onStop() {
    android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(msgReceiver);
    android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(infoReceiver);
    super.onStop();
}

public void deleteItems() {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    db.delete(helper.SQLiteHandlerItem.TABLE, null, null);
    db.close();
    CreateTable();
    android.util.Log.d(helper.SQLiteHandlerItem.TAG, "Deleted all item info from sqlite");
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.widget.Toast.makeText(getActivity(), "recive", Toast.LENGTH_LONG).show();
    updateWeather();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.i(edu.ucla.nesl.wearcontext.MainActivity.TAG, "onResume() called");
    android.content.SharedPreferences sharedPref = getPreferences(Context.MODE_PRIVATE);
    mAlarmSet = sharedPref.getBoolean(getString(R.string.alarm_set), false);
}

@java.lang.Override
public void update(java.util.Observable o, java.lang.Object arg) {
    android.util.Log.i("Update: ", "Update Called");
    send(((edu.byui.cs246.scandroid.Scanner) (o)).getScan());
}

@java.lang.Override
public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture surfaceTexture, int width, int height) {
    setUpCamera();
    openCamera();
}

private java.util.List<com.google.android.gms.awareness.state.BeaconState.TypeFilter> setupAttachements() {
    java.util.List<com.google.android.gms.awareness.state.BeaconState.TypeFilter> BEACON_TYPE_FILTERS = java.util.Arrays.asList(BeaconState.TypeFilter.with(getString(R.string.Namespace), getString(R.string.Type)));
    return BEACON_TYPE_FILTERS;
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    android.widget.Toast.makeText(context, "CREATED SQLITE FROM PHP", Toast.LENGTH_SHORT).show();
    pd.dismiss();
}

private android.content.ContentValues createContentValues(io.dojogeek.adminibot.models.TypePaymentMethodModel paymentMethod) {
    android.content.ContentValues contentValues = new android.content.ContentValues();
    contentValues.put(TypesPaymentMethodsContract.TypePaymentMethod.COLUMN_NAME, paymentMethod.name);
    contentValues.put(TypesPaymentMethodsContract.TypePaymentMethod.COLUMN_DESCRIPTION, paymentMethod.description);
    return contentValues;
}

static void setRecordingBufferLengthMillis(int recordingBufferLengthMillis) {
    ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition.setSessionStartPointerMillis(recordingBufferLengthMillis);
}

@java.lang.Override
public void addFragment(android.support.v4.app.Fragment fragment, java.lang.String tag) {
    this.fragment = fragment;
    getSupportFragmentManager().beginTransaction().add(R.id.main_content, fragment).commit();
    getSupportFragmentManager().executePendingTransactions();
}

void EnableBluetoothModule() {
    com.futsal.manager.LogModule.LogManager.PrintLog("EmbeddedSystemFinderProcesserVer2", "EnableBluetoothModule", "Try enable ble", com.futsal.manager.DefineManager.LOG_LEVEL_DEBUG);
    android.content.Intent enableBluetoothModuleIntent = new android.content.Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE);
    enableBluetoothModuleIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    embeddedSystemFinderVer2.startActivityForResult(enableBluetoothModuleIntent, com.futsal.manager.DefineManager.ENABLE_BLUETOOTH_MODULE_USER_ACCESS_ACCEPT);
}

public void setToggleDrawables(android.graphics.drawable.Drawable[] drawables) {
    mToggleDrawables = drawables;
    setState(mCurrentState);
}

@java.lang.Override
public void onServicesDiscovered(android.bluetooth.BluetoothGatt gatt, int status) {
    if (status == (android.bluetooth.BluetoothGatt.GATT_SUCCESS)) {
        broadcastUpdate(com.wm.bloodpro_4_0.BluetoothLeService.ACTION_GATT_SERVICES_DISCOVERED);
    }else {
        java.lang.System.out.println(("onServicesDiscovered received: " + status));
    }
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.common.api.Status status) {
    showProgressDialog();
    deleteUser();
    android.content.Intent resultIntent = new android.content.Intent();
    setResult(com.scientists.happy.botanist.ui.RESULT_OK, resultIntent);
    hideProgressDialog();
    finish();
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    java.lang.String Response = text.getText().toString();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.ofcampus.model.SearchData mSearchData = items.get(java.lang.Integer.parseInt(v.getTag().toString()));
    if (mSearchData != null) {
        gotToScreen(mSearchData);
    }
}

public void pause() {
    mediaPlayer.pause();
    state = edu.calpoly.idulkin.podcrust.MediaPlayerService.MP_STATE.PAUSED;
    android.util.Log.e("Media Player Service", ("State: " + (getState())));
}

@java.lang.Override
public void onBackPressed() {
    ((com.themealz.themealz.TheMealzApplication) (((android.support.v7.app.AppCompatActivity) (mContext)).getApplication())).removeFromMealOptionsMap(parentID);
    super.onBackPressed();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    name.gudong.translate.util.Utils.shareText(getBaseContext(), exportText);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    ru.velkonost.lume.activity.BoardCardActivity.LeaveCard leaveCard = new ru.velkonost.lume.activity.BoardCardActivity.LeaveCard();
    leaveCard.execute();
    refreshActivity();
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    this.holder = null;
    if (((mMediaPlayer) != null) && (mMediaPlayer.isPlaying())) {
        releaseMediaPlayer();
        videoPauseFlag = true;
    }
}

public void stopPlaying() {
    if (com.codingspezis.android.metalonly.player.BuildConfig.DEBUG)
        com.codingspezis.android.metalonly.player.stream.StreamPlayerInternal.LOGGER.debug("stopPlaying()");
    
    metadataListener.stop();
    timeoutListener.stop();
    com.codingspezis.android.metalonly.player.stream.StreamPlayerInternal.mediaPlayer.stop();
    com.codingspezis.android.metalonly.player.stream.StreamPlayerInternal.mediaPlayer.reset();
    releaseLocks();
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    android.util.Log.e("MyBindService", "onUnBind");
    mediaPlayer.stop();
    mediaPlayer.release();
    return super.onUnbind(intent);
}

public android.graphics.Rect getSrcRect() {
    return new android.graphics.Rect(0, 0, bm.getWidth(), bm.getHeight());
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (hasFocus) {
        showDialog(com.flipkart.todo.AddFragment.DATE_DIALOG_ID).show();
    }
}

private void setupView() {
    setContentView(R.layout.activity_login);
    setOnClickListeners(R.id.loginCreateAccountBtn, R.id.loginForgotPaswordBtn, R.id.loginSignInBtn);
    remember = ((android.widget.CheckBox) (findViewById(R.id.loginRemember)));
}

@java.lang.SuppressWarnings(value = "deprecation")
private void syncCookies() {
    if ((Build.VERSION.SDK_INT) < 21) {
        android.webkit.CookieSyncManager.createInstance(getApplicationContext());
        android.webkit.CookieSyncManager.getInstance().sync();
    }else {
        android.webkit.CookieManager.getInstance().flush();
    }
}

@butterknife.OnClick(value = R.id.baseDialog)
public void baseDialog(android.view.View v) {
    com.bryan.lib.dialog.FastDialog.ShowNormalDialog(context, "提示", "是否确定退出程序?", true, null, new com.flyco.dialog.listener.OnBtnRightClickL() {
        @java.lang.Override
        public void onBtnRightClick() {
            com.bryan.lib.util.T.showShort(context, "确定");
        }
    });
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mUm = ((android.os.UserManager) (getSystemService(Context.USER_SERVICE)));
    mProfiles = new android.util.SparseArray<com.android.settings.accounts.AccountSettings.ProfileData>(2);
    setHasOptionsMenu(true);
}

public void oCEntryMode(android.view.View v) {
    mode = 0;
    setmode();
    android.util.Log.i("Finished", tech.travis.poolpos.MainActivity.getMethodName());
}

protected void onDestroy() {
    super.onDestroy();
    for (android.support.v4.app.Fragment f : fragments) {
        if (org.kei.android.phone.netcap.OutputFragment.class.isInstance(f))
            ((org.kei.android.phone.netcap.OutputFragment) (f)).delete(false);
        
    }
}

@java.lang.Override
public void onScanDone(boolean isSuccess) {
    com.fezrestia.android.viewfinderanywhere.control.OverlayViewFinderController.getInstance().getCurrentState().onScanDone(isSuccess);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View root = inflater.inflate(R.layout.fragment_singing_songlist, container, false);
    inflateList(inflater, root, savedInstanceState);
    return root;
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    for (java.util.Map.Entry<java.lang.String, java.lang.String> table : tables.entrySet()) {
        db.execSQL(table.getValue());
    }
    database = getWritableDatabase();
}

protected void onHandleWrappedAdapterItemRangeChanged(int positionStart, int itemCount, java.lang.Object payload) {
    com.h6ah4i.android.widget.advrecyclerview.utils.BaseWrapperAdapter.notifyItemRangeChanged(positionStart, itemCount);
}

public void onSaveInstanceState() {
    android.os.Bundle bundle = new android.os.Bundle();
    if ((mParentDelegate) != null) {
        bundle = mParentDelegate.mChildKeyTagsBundle;
    }
    onSaveInstanceState(bundle);
    mParentDelegate.mBundle.putAll(bundle);
}

@java.lang.Override
public void onClick(android.view.View v) {
    dialog.dismiss();
    android.content.Intent intent = new android.content.Intent();
    intent.setClass(this, com.xsdlr.rnjmessage.im.activity.DemoActivity.class);
    startActivity(intent);
    this.finish();
}

public void onDrawerOpened(android.view.View drawerView) {
    super.onDrawerOpened(drawerView);
    android.util.Log.d("drawer", "onDrawerOpened: ");
    getSupportActionBar().setTitle(mDrawerTitle);
    invalidateOptionsMenu();
}

@java.lang.Override
public boolean equals(java.lang.Object otherFolder) {
    return android.text.TextUtils.equals(((com.newsblur.domain.Folder) (otherFolder)).name, name);
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    audioManager.abandonAudioFocus(afChangeListener);
    mediaPlayer.release();
    mediaPlayer = null;
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    return false;
}

@java.lang.Override
public void onSuccess(final com.github.kulebin.myfoursquareapp.model.Venue venue) {
    mPresenter.setProgress(false);
    mPresenter.presentVenueToShowData(new com.github.kulebin.myfoursquareapp.view.VenueDisplayData(venue));
    android.util.Log.d("ShowDetailVenueUseCase", venue.getName());
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.app.Dialog addPaymentDialog = new com.szymkowski.personaltrainercompanion.payments.AddPaymentDialog(this, this);
    addPaymentDialog.show();
    updateLastPayment();
    updateNumberOfTrainingsRemaining();
    floatingActionsMenu.collapse();
}

@java.lang.Override
public com.github.abdurahmanovart.notesrealm.adapter.NoteAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View row = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.note_item, parent, true);
    return new com.github.abdurahmanovart.notesrealm.adapter.NoteAdapter.ViewHolder(row);
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.sharekeg.streetpal.userinfoforlogin.UserInfoForLogin> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(this, R.string.smthing_went_wrong, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void on(java.lang.Throwable throwable) {
    if (throwable == null) {
        android.util.Log.e(fr.esir.services.Context_service.TAG, throwable.toString());
    }
}

@java.lang.Override
public boolean add(@android.support.annotation.NonNull
com.gmail.collinsmith70.libgdx.key.MappedKey key) {
    int[] loadedAssignments = load(key);
    if ((loadedAssignments.length) == 0) {
        return super.add(key);
    }
    key.assign(loadedAssignments);
    return true;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    android.util.Log.d(edu.umbc.cs.iot.clients.android.UMBCIoTApplication.getDebugTag(), "Connected to API client");
    subscribe();
}

@java.lang.Override
public android.content.Intent getParentActivityIntent() {
    android.content.Intent newIntent = null;
    newIntent = new android.content.Intent(this, getIntent().getClass());
    newIntent.putExtra(Constants.IS_INIT, isInit);
    return newIntent;
}

public void setQueue(@android.support.annotation.NonNull
java.util.List<com.marverenic.music.instances.Song> queue, int index) {
    mQueue = queue;
    if (mShuffle) {
        shuffleQueue();
    }
    setBackingQueue(index);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    android.util.Log.v("tabl", ("Save " + (numberOfSite)));
    outState.putInt("NumberOfSite", numberOfSite);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    statusView.setBattery(intent.getIntExtra(BatteryManager.EXTRA_LEVEL, 0), intent.getIntExtra(BatteryManager.EXTRA_SCALE, 0), intent.getIntExtra(BatteryManager.EXTRA_STATUS, (-1)));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    dialogInterface.dismiss();
    finish();
}

@java.lang.Override
public void hideProgressBar() {
    android.util.Log.d(com.example.moyiliu.imagegallerymvp.screen.base.recycler.BaseRecyclerActivity.TAG, "hideProgressBar: ");
    if ((mProgressBar) != null)
        mProgressBar.setVisibility(View.GONE);
    
}

private void fetchEventList(android.widget.RelativeLayout mainLayout, android.widget.FrameLayout progressLayout) {
    try {
        new com.groupr.util.GetUserEventsAsyncTask(mContext, java.lang.Long.parseLong(mUserId), mainLayout, progressLayout).execute();
    } catch (java.lang.NumberFormatException exception) {
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    if ((getSelectedItemCount()) == 0) {
        recentListActionModeUtil.startActionMode();
    }
    toggleSelection(position);
    recentListActionModeUtil.updateActionMode(getItemCount());
    return true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.jxw679.mogul.activities.AddTaskActivity.class);
    intent.putExtra(com.example.jxw679.mogul.activities.ParentViewActivity.PARENT_OBJECT_EXTRA_TAG, mChildObjects);
    intent.putExtra(com.example.jxw679.mogul.activities.ParentViewActivity.CHILD_LIST_OBJECT_EXTRA_TAG, currentUser);
    startActivityForResult(intent, 123);
}

@java.lang.Override
public java.util.List<org.androidannotations.Option> getSupportedOptions() {
    return java.util.Arrays.asList(TraceHandler.OPTION_TRACE, SupposeThreadHandler.OPTION_THREAD_CONTROL, FilesCacheHelper.OPTION_CACHE_FILES, FilesCacheHelper.OPTION_CACHE_FILES_COMPILER_WAIT, FilesCacheHelper.OPTION_DEBUG_CACHE, FilesCacheHelper.OPTION_CACHE_FILES_IN_PROCESS, Actions.OPTION_DEBUG_ACTIONS);
}

public static com.nicdsmith.test.gamenight.SQLiteHelper getInstance(android.content.Context ctx) {
    if ((com.nicdsmith.test.gamenight.SQLiteHelper.mInstance) == null) {
        com.nicdsmith.test.gamenight.SQLiteHelper.mInstance = new com.nicdsmith.test.gamenight.SQLiteHelper(ctx.getApplicationContext());
    }
    return com.nicdsmith.test.gamenight.SQLiteHelper.mInstance;
}

@java.lang.Override
public app.vleon.bitunion.ThreadsAdapter.ViewHolder getViewHolder(android.view.View view) {
    return new app.vleon.bitunion.ThreadsAdapter.ViewHolder(view);
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeString(name);
    dest.writeString(key);
}

private void setupPreferences() {
    final android.content.Context context = getContext();
    final android.content.SharedPreferences sharedPref = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
    setupTileProvidersPreferences(sharedPref);
}

@java.lang.Override
public void onClick(@android.support.annotation.NonNull
com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull
com.afollestad.materialdialogs.DialogAction which) {
    nldr.spamoff.AsyncDataHandler.performInBackground(context, inst, true);
}

@java.lang.Override
public void changeCallDataUsage(long dataUsage) {
    mHandler.obtainMessage(android.telecom.VideoCallImpl.MessageHandler.MSG_CHANGE_CALL_DATA_USAGE, dataUsage).sendToTarget();
}

@java.lang.Override
protected void onPause() {
    android.util.Log.i(TAG, "onPause - start");
    savingModelInDb();
    setResult(com.modelingbrain.home.detailModel.RESULT_OK);
    super.onPause();
    android.util.Log.i(TAG, "onPause - finish");
}

protected void clickButton() {
    intent = new android.content.Intent(getApplicationContext(), aboli.musicbee.easyGame.class);
    startActivity(intent);
}

public com.google.android.gms.ads.AdRequest getAdRequest() {
    return new com.google.android.gms.ads.AdRequest.Builder().addTestDevice(com.carlospinan.lolguide.helpers.Helper.ADS_DEVICE_TEST).build();
}

private void setTitle() {
    java.lang.String title = null;
    if ((currentStory) != null) {
        title = "#" + (currentStory.storyNum);
    }
    ((android.support.v7.app.AppCompatActivity) (getActivity())).getSupportActionBar().setTitle(title);
}

public void getCommonlyLibrary() {
    java.lang.System.out.println("enter here?");
    java.lang.System.out.println("compile 'org.jsoup:jsoup:1.8.3'");
    java.lang.System.out.println("compile 'com.miguelcatalan:materialsearchview:1.4.0'");
    java.lang.System.out.println("compile 'com.jakewharton:butterknife:7.0.1'");
    java.lang.System.out.println("compile 'org.immutables:gson:2.1.15'");
    java.lang.System.out.println("compile 'de.greenrobot:eventbus:2.4.0'");
    java.lang.System.out.println("compile 'com.android.volley:volley:1.0.0'");
    java.lang.System.out.println("compile 'com.afollestad.material-dialogs:core:0.8.6.1'");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.akturk.plugin.LocationChecker checker = new com.akturk.plugin.LocationChecker(this);
    checker.setAdapt(true);
    checker.start(mRawData);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dlg, int position) {
    if (position == 0) {
        createNewSetList();
        unCheckAllSelectedItems();
    }else {
        addLyricsToSetList(items[position]);
        unCheckAllSelectedItems();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.e(com.peets.socialplay.TreasureHuntRestActivity.TAG, "OnClick buttons[0]");
    buttons[0].setText(R.string.connecting);
    participantAccount = accountArray.get(0).getAccountId();
    disableButtons();
    inviteToPlay();
}

public android.app.Activity getCurrentActivity() {
    android.app.Activity activity = com.hitomi.aslibrary.ActivityManager.activityStack.lastElement();
    return activity;
}

private void clearUI() {
    mGattServicesList.setAdapter(((android.widget.SimpleExpandableListAdapter) (null)));
    mDataField.setText(R.string.no_data);
}

void updateHostController(com.mobilesolutionworks.android.app.ControllerHostCallback host) {
    mHost = host;
}

public void setProfilePicURI(android.net.Uri profilePicURI) {
    com.example.cmput401.classdiscuss.ParseDatabase.getInstance().setUsersImageToParse(this.name, profilePicURI.toString());
    com.example.cmput401.classdiscuss.ParseDatabase.getInstance().setDataLocally();
    this.profilePicURI = profilePicURI;
}

public java.lang.String getLength(android.widget.EditText length_input) {
    java.lang.String length = length_input.getText().toString();
    android.widget.Toast.makeText(this, length, Toast.LENGTH_LONG).show();
    android.util.Log.i("LENGTH", length);
    return length;
}

@java.lang.Override
public void _requestBacklogAll(int first, int last, int limit, int additional) {
    android.util.Log.d("libquassel", "request backlog for all");
}

private void setClearOn() {
    setClear(false);
    if (android.speech.SpeechRecognizer.isRecognitionAvailable(getApplicationContext())) {
        btn_mic.setVisibility(View.GONE);
    }
    setInputQueryLayout(R.id.activity_search_inputbar_btn_clear);
    btn_clear.setVisibility(View.VISIBLE);
}

private android.accounts.Account checkAccountNameExistsInDevice(java.lang.String account_name) {
    for (android.accounts.Account this_account : accounts_in_device) {
        if ((this_account.name) == account_name) {
            return this_account;
        }else {
            return null;
        }
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    flagImageView.startAnimation(clkRotate);
    flagImageView.setRotation(((flagImageView.getRotation()) + 90));
}

public void initPointBullet(com.reisen.danmulib.factory.PointBulletFactory factory, int width, int height, android.graphics.Bitmap image) {
    this.mFactory = factory;
    this.width = width;
    this.height = height;
    this.image = image;
}

@java.lang.Override
public void onClick(android.view.View view) {
    holder.toggleFavorite(view);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d("event", "click");
    feedbackManager.giveLikeToFeedback(getItem(pos));
}

@java.lang.Override
public void onSuccess(com.auth0.android.result.UserProfile payload) {
    java.lang.String account_type = payload.getUserMetadata().get("account_type").toString();
    java.lang.System.out.println(account_type);
}

public static org.gdg.frisbee.android.chapter.ChapterSelectDialog newInstance(@android.support.annotation.Nullable
org.gdg.frisbee.android.api.model.Chapter selectedChapter) {
    org.gdg.frisbee.android.chapter.ChapterSelectDialog fragment = new org.gdg.frisbee.android.chapter.ChapterSelectDialog();
    android.os.Bundle args = new android.os.Bundle(2);
    args.putParcelable(org.gdg.frisbee.android.chapter.ChapterSelectDialog.EXTRA_SELECTED_CHAPTER, selectedChapter);
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void run() {
    mMeter.meter_settings.target_meter_state = mMeter.METER_RUNNING;
    mMeter.sendMeterSettings(new com.mooshim.mooshimeter.common.Block() {
        @java.lang.Override
        public void run() {
            android.util.Log.i(null, "Mode set");
        }
    });
    android.util.Log.i(null, "Stream requested");
}

private void hideItem(android.view.Menu menu, int itemId) {
    if ((menu.findItem(itemId)) != null)
        menu.findItem(itemId).setVisible(false);
    
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    mController.setControllerMode(VideoControllerView.PAUSE_MODE);
    mAnnotationTimer.stop();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((mCurrentPage) > 1) {
        sbGotoPage.setProgress(((mCurrentPage) - 2));
    }
    mCurrentPage = mGoToPage;
    showOrLoadPage();
    dialog.dismiss();
}

@java.lang.Override
public boolean onPrepareOptionsMenu(android.view.Menu menu) {
    super.onPrepareOptionsMenu(menu);
    updateMenuItem = menu.findItem(R.id.updateMenuItem);
    remainingFormsToSyncMenuItem = menu.findItem(R.id.remainingFormsToSyncMenuItem);
    updateSyncIndicator();
    updateRemainingFormsToSyncCount();
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (v == (button3)) {
        android.content.Intent LocationView;
        LocationView = new android.content.Intent(this, com.hackathon.thesingularityproject.helpmycity.AddProblemLocation.class);
        startActivity(LocationView);
    }
}

@java.lang.Override
public void onItemClick(int pos, com.application.material.takeacoffee.app.fragments.View v) {
    android.util.Log.e("TAG", "DOING job");
    changeActivity();
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    mActiveSearch = false;
    mPage = 0;
    loadObservations();
}

@java.lang.Override
public void onAnimationStart(final android.animation.Animator animation) {
    if (!(isCancelled())) {
        imageView.setAlpha(0.0F);
        imageView.setImageDrawable(null);
        imageView.setImageDrawable(artwork);
    }
}

@java.lang.Override
public void onPINSetup(java.lang.String pin) {
    android.util.Log.w("PIN", pin);
    com.doodeec.lockscreen.LockScreenController.setPIN(pin);
    runnable.run();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mSharedPrefsManager = cz.ejstn.gargantua.model.DefaultSharedPreferencesManager.getInstance(getContext());
}

public boolean handleActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if ((billingProcessor) != null) {
        return false;
    }
    return billingProcessor.handleActivityResult(requestCode, resultCode, data);
}

void back(android.support.v4.app.FragmentManager fragmentManager, boolean immediate) {
    int count = fragmentManager.getBackStackEntryCount();
    if (count > 1) {
        handleBack(fragmentManager, immediate);
    }
}

public void onFinish() {
    nextCard.setOnClickYes(this);
    android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
    ft.add(nextCard, null);
    ft.commitAllowingStateLoss();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    if ((mCurrentPhotoLarge) != null) {
        outState.putParcelable(sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO, mCurrentPhotoLarge);
    }
}

@java.lang.Override
protected android.content.Intent onFillDeviceDetailIntent(android.content.Context context, li.klass.fhem.domain.core.FhemDevice device, android.content.Intent intent) {
    intent.putExtra(BundleExtraKeys.FRAGMENT, FragmentType.FLOORPLAN);
    intent.putExtra(BundleExtraKeys.DEVICE_NAME, device.getName());
    return intent;
}

public static com.example.booker.MyBook newInstance(int page) {
    android.os.Bundle args = new android.os.Bundle();
    args.putInt(com.example.booker.MyBook.ARG_PAGE, page);
    com.example.booker.MyBook myBook = new com.example.booker.MyBook();
    myBook.setArguments(args);
    return myBook;
}

@java.lang.Override
public void onClick(android.view.View view) {
    onLoginClicked(view);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu_main, menu);
    attachLogoutMenuItem(menu, R.string.logout);
    return true;
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d(com.discflux.android.spotifystreamer.PlayFragment.LOG_TAG, "Activity Resumed");
    getActivity().bindService(mPlaybackService, mConnection, Context.BIND_AUTO_CREATE);
}

@java.lang.Override
protected void onPostExecute(java.lang.Void aVoid) {
    android.widget.ArrayAdapter adapterAutoComplete = new android.widget.ArrayAdapter(context, android.R.layout.simple_list_item_1, autoCompleteNames);
    fragment.autoCompleteStringFillerAsyncTaskOnPostExecute(adapterAutoComplete, cities);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(getLayout());
    initializeNameableList();
    com.idgi.event.ApplicationBus.register(this);
    super.initializeWithTitle(getTitleName());
}

@java.lang.Override
public RecyclerView.ViewHolder onCreateRowHeaderViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View layout = android.view.LayoutInflater.from(m_jContext).inflate(R.layout.table_view_row_header_layout, parent, false);
    com.evrencoskun.tableviewsample.tableview.TableViewAdapter.RowHeaderViewHolder rowHeaderViewHolder = new com.evrencoskun.tableviewsample.tableview.TableViewAdapter.RowHeaderViewHolder(layout);
    return rowHeaderViewHolder;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.d("hell", "Alarm receiver works perfectly");
    android.content.Intent in = new android.content.Intent(context, com.delta.attendancemanager.Userhome.class);
    in.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    context.startActivity(in);
}

@java.lang.Override
public void onShow(android.content.DialogInterface arg0) {
    alert.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(Color.BLUE);
    alert.getButton(AlertDialog.BUTTON_NEGATIVE).setTextColor(Color.BLUE);
}

@java.lang.Override
public void onServiceResolved(android.net.nsd.NsdServiceInfo serviceInfo) {
    android.util.Log.e(moe.retro.unijoysticle.BaseActivity.TAG, ("Resolve Succeeded. " + serviceInfo));
    mServerInetAddress = serviceInfo.getHost();
    mFinishedResolve = true;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    Wearable.DataApi.addListener(mGoogleApiClient, this);
    if (android.util.Log.isLoggable(LOG_TAG, Log.DEBUG)) {
        android.util.Log.d(LOG_TAG, "onConnected");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), superheroesintechnology.gl3am.Activities.LoadSMSActivity.class);
    startActivityForResult(intent, 2);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    pes.twochange.domain.themes.AdTheme.getInstance().remove(username, wantedProducts.get(position).getId());
    loadProductList();
}

@java.lang.Override
protected void onActivityResult(int request, int response, android.content.Intent data) {
    super.onActivityResult(request, response, data);
    mHelper.onActivityResult(request, response, data);
}

public void endSession(android.view.View view) {
    mMetricsManager.printMetrics();
    this.finish();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    outState.putBoolean("noBt", ((btManager) == null));
    finishActivity(tw.edu.ncku.letsdance.MainActivity.REQUEST_ENABLE_BT);
}

private boolean hasPlay() {
    boolean res = false;
    try {
        res = (com.google.android.gms.common.GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(context)) != (com.google.android.gms.common.ConnectionResult.SUCCESS);
    } catch (java.lang.Exception e) {
    }
    return res;
}

@java.lang.Override
public void callback(java.util.ArrayList<cl.smartcities.isci.transportinspector.backend.Event> response) {
    if (!(getStrategyContext().isCurrentStrategyInstance(this))) {
        android.util.Log.d(cl.smartcities.isci.transportinspector.map.strategies.TAG, "It is not the same strategy -> cancel information update for bus");
        return ;
    }
    updateElementById(response, null, getBusId());
}

@java.lang.Override
public void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    position = savedInstanceState.getInt("Position");
    myVideoView.seekTo(position);
}

public void onLongpress(final com.google.android.maps.MapView view, final com.google.android.maps.GeoPoint longpressLocation) {
    getSearchLayoutHeight();
    activity.geoPoint = longpressLocation;
    activity.executeGeocodingTask();
}

@java.lang.Override
public void onProviderDisabled(java.lang.String s) {
    android.content.Intent intent = new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
    startActivity(intent);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_normal_key_board);
    valueList = virtualKeyboardView.getValueList();
    initAnim();
    initView();
}

@java.lang.Override
public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) {
    java.lang.Long orderValue = ((java.lang.Long) (dataSnapshot.getValue()));
    android.util.Log.e("Order update:", ("" + orderValue));
    orderRef.setValue((orderValue - 1));
}

public void init() {
    if ((!(isInit)) && (com.rayboot.scantool.cv.org.opencv.android.OpenCVLoader.initDebug())) {
        mLoaderCallback.onManagerConnected(org.opencv.android.LoaderCallbackInterface.SUCCESS);
        isInit = true;
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            getFragmentManager().popBackStack();
            break;
        case R.id.action_settings :
            break;
    }
    return true;
}

public static boolean removeBond(java.lang.Class btClass, android.bluetooth.BluetoothDevice btDevice) throws java.lang.Exception {
    java.lang.reflect.Method removeBondMethod = btClass.getMethod("removeBond");
    java.lang.Boolean returnValue = ((java.lang.Boolean) (removeBondMethod.invoke(btDevice)));
    return returnValue.booleanValue();
}

@java.lang.Override
public void onOpen(android.database.sqlite.SQLiteDatabase db) {
    super.onOpen(db);
    if (!(db.isReadOnly())) {
        db.setForeignKeyConstraintsEnabled(true);
    }
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    reloadState(ch.grze.frogment.activity.StateAwareFrogmentActivity.getIntent(), savedInstanceState);
    super.onCreate(savedInstanceState);
}

public void UpdateEmail(java.lang.String email) {
    ((android.widget.TextView) (header.findViewById(R.id.email))).setText(email);
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    android.util.Log.i(com.nineinchmales.longcircuit.database.DBHelper.LOG_TAG, "Creating tables");
    createTables(db);
    com.nineinchmales.longcircuit.SampleData.load();
}

@java.lang.Override
public void onSelect(java.lang.String text) {
    android.widget.Toast.makeText(this, ("Level " + text), Toast.LENGTH_SHORT).show();
    int level = java.lang.Integer.parseInt(text);
    com.example.zieng.gl3dosmos.Level.setLevel(level);
}

public java.lang.String getIp() {
    synchronized(mSocketLock) {
        if ((android.text.TextUtils.isEmpty(mIpAddress)) && ((mSocket) != null)) {
            mIpAddress = mSocket.getInetAddress().getHostAddress();
        }
    }
    return mIpAddress;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.TextView tv1 = ((android.widget.TextView) (view.findViewById(R.id.textView1)));
    tv1.setText("Hello");
    ((com.example.spff.fc.MainActivity) (getActivity())).switchFragment(2);
}

private void setFragmentOnFragmentContainer(android.support.v4.app.Fragment fragment) {
    android.support.v4.app.FragmentTransaction trans = getSupportFragmentManager().beginTransaction();
    trans.remove(getSupportFragmentManager().findFragmentById(R.id.teams_layout_fragment_container));
    trans.replace(R.id.teams_layout_fragment_container, fragment);
    trans.commit();
}

public void stopPlaying(android.view.View v) {
    mediaPlayer.release();
    mediaPlayer = null;
}

@java.lang.Override
public void onMovLibFragmentInteraction(java.lang.String id) {
    android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), "Thanks for clicking the move ...", Toast.LENGTH_SHORT);
    toast.show();
}

@java.lang.Override
public void onChangeMonth(int month, int year) {
    java.lang.String text = (("month: " + month) + " year: ") + year;
    android.widget.Toast.makeText(getActivity().getApplicationContext(), "onChangeMonth", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    super.onDraw(canvas);
    com.prolificinteractive.materialcalendarview.CalendarUtils.logd("CPV.onDraw", getFirstViewDay());
    canvas.drawColor(Color.YELLOW);
}

private void setTime(long time) {
    android.widget.TextView post_title = ((android.widget.TextView) (mView.findViewById(R.id.post_time)));
    post_title.setText(convertTime(time));
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB)
@java.lang.Override
public boolean onPreferenceClick(android.support.v7.preference.Preference preference) {
    showDateDialog(0);
    return false;
}

@java.lang.Override
public void onDestroyActionMode(android.view.ActionMode mode) {
    net.micode.fileexplorer.FileListItem.mFileViewInteractionHub.clearSelection();
    ((net.micode.fileexplorer.FileExplorerTabActivity) (net.micode.fileexplorer.FileListItem.mContext)).setActionMode(null);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    if (ua.itstep.android11.moneyflow.utils.Prefs.DEBUG)
        android.util.Log.d(Prefs.LOG_TAG, "ExpensesFragment onResume ");
    
    getActivity().getContentResolver().registerContentObserver(Prefs.URI_EXPENSES, false, observerExpenses);
}

@java.lang.Override
public void run() {
    android.util.Log.d(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, ("handleTag " + (savedTag)));
    fireTagEvent(tag);
}

public void initVoiceCommandPlayer(final android.app.Activity uiContext) {
    showDialogInitializingCommandPlayer(uiContext, true, null, false);
}

public synchronized void stopScannerAndAdvertiser() {
    android.util.Log.i(org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoverer.TAG, "stopScannerAndAdvertiser");
    android.util.Log.d(org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoverer.TAG, ("stopScannerAndAdvertiser: " + (org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BleAdvertiser.currentThreadToString())));
    stopPeerAddressHelperAdvertiser();
    stopScanner();
    stopAdvertiser();
}

protected com.box.androidsdk.content.auth.OAuthWebView.OAuthWebViewClient createOAuthWebViewClient(java.lang.String optionalState) {
    return new com.box.androidsdk.content.auth.OAuthWebView.OAuthWebViewClient(this, mRedirectUrl, optionalState);
}

public boolean onConsoleMessage(net.gree.unitywebview.ConsoleMessage cm) {
    android.util.Log.d("Webview", cm.message());
    return true;
}

public static void getAndPostWithingsData(android.content.Context context) {
    java.lang.String url = NetworkConstants.WITHINGS_URL_DATA;
    new com.wearables.networking.NetworkingTask(url, true, com.wearables.networking.NetworkConstants.METHOD_TYPE.GET, com.wearables.networking.NetworkConstants.REQUEST_TYPE.WITHINGS_DATA_ACCESS, context).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
}

@java.lang.Override
protected void onPrepareDialogBuilder(final android.app.AlertDialog.Builder builder) {
    builder.setPositiveButton(android.R.string.ok, this).setNegativeButton(android.R.string.cancel, this).setNeutralButton(R.string.button_default, null);
}

public void initComponent() {
    com.intellij.openapi.projectRoots.SdkType.findInstance(org.jetbrains.android.sdk.AndroidSdkType.class);
}

public android.widget.TextView addSubItem(int id, @android.support.annotation.StringRes
int textId) {
    return addSubItem(id, getContext().getText(textId), 0);
}

private void drawCurrentMonth(android.graphics.Canvas canvas) {
    setCalenderToFirstDayOfMonth(calendarWithFirstDayOfMonth, currentDate, (-(monthsScrolledSoFar)), 0);
    drawMonth(canvas, calendarWithFirstDayOfMonth, ((width) * (-(monthsScrolledSoFar))));
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.bumptech.glide.Glide.with(this).load(url).diskCacheStrategy(DiskCacheStrategy.ALL).into(imageView1);
}

@java.lang.Override
public void onNext(com.meisolsson.githubsdk.model.User user) {
    super.onNext(user);
    if (!(com.github.pockethub.android.accounts.AccountUtils.isUser(getActivity(), user)))
        startActivity(com.github.pockethub.android.ui.user.UserViewActivity.createIntent(user));
    
}

@java.lang.Override
protected java.util.List<com.facebook.react.ReactPackage> getPackages() {
    return java.util.Arrays.<com.facebook.react.ReactPackage>asList(new com.facebook.react.shell.MainReactPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(com.suta.MainApplication.mCallbackManager), new com.imagepicker.ImagePickerPackage(), new cl.json.RNSharePackage());
}

@java.lang.Override
public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) {
    android.util.Log.i(LOG_TAG, "onStatusChanged");
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    getPreferences().setSetting("warn", "pager", true);
    getPreferences().setSetting("global", "pref_pagers", false);
    goHome();
    finish();
}

@java.lang.Override
public void onDestroy() {
    com.urbanairship.cordova.gimbal.GimbalAdapter.shared().stop();
    super.onDestroy();
    sendBroadcast(new android.content.Intent(com.urbanairship.cordova.gimbal.GimbalAdapterService.INTENT_START));
}

private void setUpTestDuration() {
    android.widget.TextView mDuration = ((android.widget.TextView) (findViewById(R.id.duration)));
    mDuration.setText(((getString(R.string.test_duration)) + (mTest.getDurationToDisplay())));
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.util.List<com.example.rj.cryptodisplay.model.CurrencyAPI>> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(this, "Error :(", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onSuccess() {
    mManager.discoverServices(mChannel, new android.net.wifi.p2p.WifiP2pManager.ActionListener() {
        @java.lang.Override
        public void onSuccess() {
            java.lang.System.out.println("ServiceDiscovery Started");
        }

        @java.lang.Override
        public void onFailure(int error) {
            java.lang.System.out.println("ServiceDiscovery Failed");
        }
    });
}

public boolean isFull() {
    if ((this.nb_person_in) >= (this.capacity)) {
        android.util.Log.i("Elevator", ((this.id) + " is full"));
        return true;
    }else
        return false;
    
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_add :
            listener.onAddPokemonClick();
            return true;
        case android.R.id.home :
            android.util.Log.e("ANDROID", "LE ARROW PRESSED");
        default :
            return false;
    }
}

public com.danimahardhika.cafebar.CafeBar.Builder customView(@android.support.annotation.LayoutRes
int res, boolean adjustCustomView) {
    mCustomView = android.view.View.inflate(mContext, res, null);
    mAdjustCustomView = adjustCustomView;
    return this;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.content.Intent sensor = new android.content.Intent(context, v1.app.com.codenutrient.Services.Pedometer.class);
    sensor.putExtra("conter", intent.getSerializableExtra("counter"));
    context.startService(sensor);
}

@java.lang.Override
public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture surface, int width, int height) {
    setSize(width, height);
    configureTransform();
    dispatchSurfaceChanged();
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    if ((sensorFragInterface.getGraphConfig().getSelectedSensor()) != position) {
        sensorFragInterface.getGraphConfig().setSelectedSensor(position);
        listItemSelected = position;
    }
    notifyDataSetChanged();
}

public static com.example.evoca.evocaforandroidlearning.fragments.LessonFragment newInstance(com.example.evoca.evocaforandroidlearning.Model.Child lesson) {
    com.example.evoca.evocaforandroidlearning.fragments.LessonFragment fragment = new com.example.evoca.evocaforandroidlearning.fragments.LessonFragment();
    com.example.evoca.evocaforandroidlearning.activity.ListActivity.lesson = lesson;
    com.example.evoca.evocaforandroidlearning.fragments.LessonFragment.lesson = lesson;
    android.os.Bundle args = new android.os.Bundle();
    return fragment;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(context, "Will open gallery", Toast.LENGTH_LONG).show();
    com.theartofdev.edmodo.cropper.CropImage.activity().setGuidelines(CropImageView.Guidelines.ON).setAspectRatio(1, 1).start(this);
}

public static void cameraPermissions(android.app.Activity activity, int id, com.liangmayong.base.support.permission.ActivityPermission.OnPermissionListener listener) {
    java.lang.String[] permissionsNeeded = new java.lang.String[]{ Manifest.permission.CAMERA , Manifest.permission.WRITE_EXTERNAL_STORAGE , Manifest.permission.READ_EXTERNAL_STORAGE };
    com.liangmayong.base.support.permission.ActivityPermission.requestPermissions(activity, id, permissionsNeeded, listener);
}

public void addTask(android.content.ContentValues data) {
    this.database.insert(DefaultValue.value.DB_table_name, null, data);
    this.notifyChange(getTask().toString());
}

@java.lang.Override
public void connected(org.jivesoftware.smack.XMPPConnection connection) {
    android.util.Log.d("SMACK", ("BUS -- > new connection: " + (com.pz.supportchat.PostingConnectionChangeListener.CONNECTED)));
    mBus.post(new com.pz.supportchat.PostingConnectionChangeListener.XMPPConnectionStatus(com.pz.supportchat.PostingConnectionChangeListener.CONNECTED));
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parent) {
    android.util.Log.e("ListView", "onNothingSelected:");
}

public void cancel() {
    try {
        serverSocket.close();
    } catch (java.io.IOException e) {
        android.util.Log.e("listenThread", e.getMessage());
    }
}

public void onItemClick(android.widget.AdapterView<?> parent, android.view.View v, int position, long id) {
    android.widget.Toast.makeText(this, (position + "#Selected"), Toast.LENGTH_LONG).show();
    makeDialog(listHomeTracks.get(position));
}

protected AlertDialog.Builder get_builder() {
    android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(getActivity());
    builder.setCancelable(true);
    return new android.app.AlertDialog.Builder(getActivity());
}

public void morphFromFab(android.view.View fab, long showSheetDuration, long showSheetColorDuration, com.gordonwong.materialsheetfab.animations.AnimationListener listener) {
    sheet.setVisibility(View.VISIBLE);
    revealSheetWithFab(getFabRevealRadius(fab), getSheetRevealRadius(), showSheetDuration, fabColor, sheetColor, showSheetColorDuration, listener);
}

public static java.lang.String isCellReceptionOKRequest(android.content.Context context, java.lang.String requestRecipient) {
    return context.getResources().getString(R.string.reception_ok_message);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar refocusSeekBar, int progress, boolean fromuser) {
    int depth = progress / (com.mediatek.galleryfeature.stereo.refocus.RefocusActivity.PROGRESS_PER_DOF);
    if (depth == 0) {
        depth = 1;
    }
    mDofView.setText(com.mediatek.galleryfeature.stereo.refocus.RefocusActivity.DOFDATA[(depth / 2)]);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.playposse.egoeater.util.SimpleAlertDialog.show(getApplicationContext(), R.string.match_lock_icon_title, R.string.match_lock_icon_explanation);
}

@java.lang.Override
public void setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener l) {
    mCreateContextMenuListener = ((l == null) || (l == (this))) ? null : l;
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    setViewState();
    numUpdates = ((numUpdates)++) % 1440;
}

@java.lang.Override
public com.vathsav.blink.model.LogViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View layout = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.card_log, parent);
    return new com.vathsav.blink.model.LogViewHolder(layout, context);
}

@java.lang.SuppressWarnings(value = "WeakerAccess")
@android.support.annotation.NonNull
public ru.spbau.mit.placenotifier.Alarm.AlarmBuilder change() {
    return new ru.spbau.mit.placenotifier.Alarm.AlarmBuilder(this);
}

@android.support.annotation.Nullable
public java.lang.String getExisting(java.lang.String name) {
    java.lang.String existing = mCanonicalMap.get(makeCanonical(name));
    return existing == null ? name : existing;
}

@java.lang.Override
public void onResponseReceived(java.lang.String result) {
    android.util.Log.i("Gobinath", result);
}

@android.support.annotation.Nullable
public java.lang.String getString(java.lang.String key, @android.support.annotation.Nullable
java.lang.String defValue) {
    java.lang.Object obj = mMap.get(key);
    return ((java.lang.String) (obj));
}

private void updateWeather() {
    java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility.getPreferredLocation(getActivity());
    android.widget.Toast.makeText(getActivity(), location, Toast.LENGTH_SHORT).show();
    com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter.syncImmediately(getActivity());
}

@com.mindorks.placeholderview.annotations.Click(value = R.id.photoImageView)
private void onClick() {
    android.util.Log.d("EVENT", "profileImageView click");
    togglePhotoAddOns();
}

@java.lang.Override
public void onGameDraw() {
    turnTextBox.setText("");
    android.widget.Toast.makeText(this, "Draw", Toast.LENGTH_SHORT).show();
    board.setOnBoardInteractionListener(null);
}

protected void onPostExecute(java.util.ArrayList<com.uwo.crystalli.jukebox.VideoResult> videos) {
    mSearchResultsAdapter.clear();
    if (videos != null)
        android.util.Log.v(LOG_TAG, videos.toString());
    
    mSearchResultsAdapter.addAll(videos);
}

private void handleOnCompletion() {
    android.util.Log.i(LOG_TAG, "handleOnCompletion - start");
}

public static com.helger.jcodemodel.JDefinedClass intentBuilder(com.helger.jcodemodel.JDefinedClass activity, de.nenick.androidannotations.plugin.mvp.utils.PluginBaseAnnotationHandler base) {
    for (com.helger.jcodemodel.JDefinedClass innerClass : activity.classes()) {
        if (de.nenick.androidannotations.plugin.mvp.utils.GeneratedClasses.isIntentBuilder(innerClass.name())) {
            return innerClass;
        }
    }
    throw new java.lang.IllegalStateException();
}

@java.lang.Override
public void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    savedInstanceState.getInt(com.example.android.quizapp.MainActivity.STATE_SCORE);
}

public double sendPrice(int fuelKind, android.content.Context context) {
    double price = 0;
    com.vp3000r.yourfuelconsumption.Model model = new com.vp3000r.yourfuelconsumption.Model(context);
    price = com.vp3000r.yourfuelconsumption.Model.sendFuelConsumption(fuelKind);
    return price;
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    android.content.IntentFilter filter = new android.content.IntentFilter(android.content.Intent.ACTION_SCREEN_ON);
    filter.addAction(Intent.ACTION_SCREEN_OFF);
    android.content.BroadcastReceiver mReceiver = new com.halfdotfull.panchi_app.Services.ScreenReceiver();
    registerReceiver(mReceiver, filter);
}

public boolean tryUpdate(android.content.Context context) {
    return this.isUpdate;
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    mLastLocation = location;
    model.updateMap(mMap, mLastLocation);
}

@java.lang.Override
public void onClick(android.view.View v) {
    gridLayout.setMinimumImageSize(1, 400);
}

@butterknife.OnClick(value = R.id.playTrackPlayButton)
public void onPlayButtonPress() {
    android.util.Log.v(io.crispcode.spotifystreamer.PlayTrackFragment.LOG_TAG, "Play button was pressed");
    mStreamPlayerService.play();
    mPlayButtonDown = true;
    configureUIState();
}

private void nextRound() {
    android.util.Log.d("aaa", "nextRound");
    for (ma.com.eclipsecalculator.model.Ship ship : attackers) {
        ship.nextRound();
    }
    for (ma.com.eclipsecalculator.model.Ship ship : defenders) {
        ship.nextRound();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    int i = v.getId();
    if (i == (R.id.button_facebook_signout)) {
        signOut();
    }
}

@java.lang.Override
public boolean onDown(android.view.MotionEvent event) {
    butTrigSettings.setBackgroundColor(-1442807680);
    return super.onDown(event);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    makeToast("onResume!!");
    if (!(isDataMapServiceBound)) {
        isDataMapServiceBound = true;
        bindService(new android.content.Intent(this, com.qi.airstat.dataMap.DataMapService.class), serviceConnection, Context.BIND_AUTO_CREATE);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    (cards)--;
    updateValues();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.bugsense.trace.BugSenseHandler.initAndStartSession(this, com.kvest.developerslife.ui.activity.DevlifeBaseActivity.BUGSENS_APIKEY);
    supportRequestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
}

@java.lang.Override
public void failure(retrofit.RetrofitError error) {
    android.widget.Toast.makeText(this, "Failed !", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.prasilabs.rssexample.rssfeeds.WebpageView.openRssDetail(context, rssItem.getTitle(), rssItem.getUrlLink());
}

@java.lang.Override
protected void prepare() throws at.bitfire.vcard4android.ContactsStorageException {
    journal = new at.bitfire.davdroid.journalmanager.JournalEntryManager(httpClient, remote, localCalendar().getName());
}

@java.lang.Override
public void onTabSelected(android.support.design.widget.TabLayout.Tab tab) {
    viewPager.setCurrentItem(tab.getPosition());
    viewPagerAdapter.getCurrentFragment().onResume();
}

android.database.Cursor getCursor(java.io.File databaseFile) {
    android.database.sqlite.SQLiteDatabase database = getReadableDatabase(databaseFile);
    openedDatabases.put(databaseFile.getPath(), database);
    return getCursor(database);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    java.lang.System.out.println(((("Longitude: " + (location.getLongitude())) + " Latitude: ") + (location.getLatitude())));
    userLocation = location;
    loadUpvoteData();
}

@java.lang.Override
public void onResume() {
    android.util.Log.e("123", "frgmengt on resume");
    checkSoundImage();
    super.onResume();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mPhotoPicker = blueprint.com.sage.shared.validators.PhotoPicker.newInstance(getParentActivity(), getParentFragment());
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase sqLiteDatabase) {
    sqLiteDatabase.execSQL(UserModel.UserNames.CREATE_TABLE);
    sqLiteDatabase.execSQL(TripModel.TripNames.CREATE_TABLE);
    sqLiteDatabase.execSQL(AccDataModel.AccDataNames.CREATE_TABLE);
    sqLiteDatabase.execSQL(TripDataView.TripDataNames.CREATE_TABLE);
    sqLiteDatabase.execSQL(GpsDataModel.GpsDataNames.CREATE_TABLE);
}

public android.content.Context getContext() {
    if (containsObject(com.jstakun.gms.android.config.ConfigurationManager.CONTEXT, android.content.Context.class)) {
        return ((android.content.Context) (com.jstakun.gms.android.config.ConfigurationManager.objectCache.get(com.jstakun.gms.android.config.ConfigurationManager.CONTEXT)));
    }
    return null;
}

private void setBitmap(android.graphics.Bitmap bitmap) {
    setBitmap(bitmap, 0, null, 0, 0);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return new capstoneproject.androidnanodegree.com.cochelper.fragments.VideoFragment();
        case 1 :
            return new capstoneproject.androidnanodegree.com.cochelper.fragments.FileFragment();
        default :
            return null;
    }
}

public synchronized void close() {
    (de.danoeh.antennapod.core.storage.PodDBAdapter.counter)--;
    if ((de.danoeh.antennapod.core.storage.PodDBAdapter.counter) == 0) {
        android.util.Log.v(de.danoeh.antennapod.core.storage.PodDBAdapter.TAG, "Closing DB");
        de.danoeh.antennapod.core.storage.PodDBAdapter.db.close();
        de.danoeh.antennapod.core.storage.PodDBAdapter.db = null;
    }
}

public void onScanCompleted(java.lang.String path, android.net.Uri uri) {
    android.util.Log.v("Encode activity", path);
}

@java.lang.Override
public void switchToFragment(android.support.v4.app.Fragment fragment) {
    getSupportFragmentManager().beginTransaction().add(R.id.content_container, fragment, "chatFragment").addToBackStack(java.lang.String.valueOf(fragment.getId())).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN).commitAllowingStateLoss();
}

public static java.lang.String getApplicationVersion(final android.app.Activity activity) {
    return im.vector.util.im.vector.Matrix.getInstance(activity).getVersion(false);
}

@java.lang.Override
public java.util.List<de.fau.amos.virtualledger.android.views.shared.transactionList.Transaction> getAll() {
    return this.allBankTransactions;
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_refresh :
            refresh();
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onInterstitialLoaded(com.mopub.mobileads.MoPubInterstitial interstitial) {
    super.onInterstitialLoaded(interstitial);
    android.util.Log.d(BuildConfig.LOG_TAG, "Interstitial loaded");
    listener.onAdLoaded(adapter);
}

private void prepareStartProfile(int requestCode) throws android.os.RemoteException {
    android.content.Intent requestpermission = mService.prepareVPNService();
    if (requestpermission == null) {
        onActivityResult(requestCode, Activity.RESULT_OK, null);
    }else {
        startActivityForResult(requestpermission, requestCode);
    }
}

@java.lang.Override
public void bindView(android.view.View view, android.content.Context context, android.database.Cursor cursor) {
    android.widget.TextView tv = ((android.widget.TextView) (view));
    tv.setText(convertCursorRowToUXFormat(cursor));
}

@java.lang.Override
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    mCallbackManager.onActivityResult(requestCode, resultCode, data);
    gameCallbackManager.onActivityResult(requestCode, resultCode, data);
}

public static void saveLastPath(java.io.File file, android.app.Activity act) {
    cn.liangxiwen.picpresser.SP.saveString(act, file.toString(), cn.liangxiwen.picpresser.SP.EXTRA_NAME_LAST_PATH);
}

@java.lang.Override
public void writeToParcel(android.os.Parcel out, int flags) {
    out.writeString(getClass().getName());
    out.writeLong(timestamp);
    out.writeFloatArray(values);
    out.writeList(valuesList);
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putBooleanArray(com.jdelorenzo.capstoneproject.ModifyRoutineActivity.EXTRA_CHECKED_DAYS, mCheckedDays);
    outState.putLong(com.jdelorenzo.capstoneproject.ModifyRoutineActivity.EXTRA_WORKOUT_ID, mRoutineId);
    outState.putBoolean(com.jdelorenzo.capstoneproject.ModifyRoutineActivity.EXTRA_TWO_PANE, mTwoPane);
}

public void backToMain(android.view.View view) {
    unregisterReceiver(msgReceiver);
    android.content.Intent result = new android.content.Intent();
    setResult(Activity.RESULT_OK, result);
    finish();
}

public static void addStock(android.content.Context context, java.lang.String symbol) {
    com.udacity.stockhawk.data.PrefUtils.editStockPref(context, symbol, true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    resetColorAndBackground(index);
    btnSelected(v, index);
    mPager.setCurrentItem(index);
}

@java.lang.Override
public java.lang.String getItem(int position) {
    android.util.Log.e("SchoolIDItem", ("" + (cityZipList.get(position).get("sch_id"))));
    return cityZipList.get(position).get("sch_id");
}

private void refreshMarkers(com.google.android.gms.maps.GoogleMap map, java.util.List<com.busao.gyn.stops.BusStop> stops) {
    clearMarkers();
    for (com.busao.gyn.stops.BusStop stop : stops) {
        createMarker(stop);
    }
}

public void sendAll(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.example.therr.kenpodefinitionapp.DisplaySearchActivity.class);
    intent.putExtra(com.example.therr.kenpodefinitionapp.MainActivity.EXTRA_SEARCH_ALL, true);
    intent.putExtra(com.example.therr.kenpodefinitionapp.MainActivity.EXTRA_ARRAY_LIST, arrTerms);
    startActivity(intent);
}

@java.lang.Override
public void onLoadFinished(android.content.Loader<java.util.ArrayList<com.example.picturemanager.MyImage>> loader, java.util.ArrayList<com.example.picturemanager.MyImage> data) {
    android.util.Log.d("WAS", "I HERE?");
    setAdapter(data);
}

public void addMessage(android.view.View view, dot.dominionofcity.LayoutParams params) {
    messageList.addView(view, params);
    handler.post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            messageWindow.fullScroll(ScrollView.FOCUS_DOWN);
        }
    });
}

public static void setVideoUri(java.lang.String uri) {
    com.hustunique.parsingplayer.player.media.ParsingMediaManager.getInstance(android.support.test.InstrumentationRegistry.getTargetContext()).playOrigin(uri);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    super.onAnimationEnd(animation);
    if ((mMainFab.getVisibility()) == (android.view.View.VISIBLE))
        mMainFab.setVisibility(View.INVISIBLE);
    
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    if ((onItemLongClickListener) != null) {
        onItemLongClickListener.onItemLongClick(holder.itemView, position);
    }
    return false;
}

public android.graphics.Bitmap getImage() {
    byte[] imageAsByte = android.util.Base64.decode(image, Base64.DEFAULT);
    return android.graphics.BitmapFactory.decodeByteArray(imageAsByte, 0, imageAsByte.length);
}

public void receive(java.lang.Object data) {
    _handler.obtainMessage(hs_mannheim.gestureframework.connection.wifidirect.WifiDirectChannel.MSG_DATA_RECEIVED, data).sendToTarget();
    android.util.Log.d(TAG, ("Data received: " + data));
}

void stop(android.widget.TextView textView);

@java.lang.Override
public void removeRecyclerViewFromView() {
    android.view.ViewGroup parent = ((android.view.ViewGroup) (mContainer.getChildAt(0)));
    parent.removeViewAt(1);
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    this.finish();
    super.onSaveInstanceState(outState);
}

private java.lang.String getFileName(co.smartreceipts.android.model.Trip trip) {
    return (trip.getDirectory().getName()) + ".pdf";
}

@java.lang.Override
public void onClick(android.view.View v) {
    uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore.sharedInstance().getConnector().logout(this);
    android.util.Log.d("TEST", "logout button: ON CLICK");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    app.minimize.com.seek_bar_compat.MaterialSeekBar materialSeekBar = ((app.minimize.com.seek_bar_compat.MaterialSeekBar) (findViewById(R.id.materialSeekBar)));
    materialSeekBar.setThumbColor(Color.BLUE);
    materialSeekBar.setProgressColor(Color.RED);
}

@java.lang.Override
public void onGlobalFocusChanged(android.view.View oldFocus, android.view.View newFocus) {
    self.internalUpdateLayoutForKeyboardStateChange();
}

@java.lang.Override
public void attachView(android.view.View header) {
    mParent.attachView(header);
}

@android.support.annotation.Nullable
public Model valueOrNull() {
    if ((offset) != (-1)) {
        return getOrNull(offset);
    }
    return getOrNull(0);
}

@java.lang.Override
public void onClick(android.view.View v) {
    max.sudoku.MainActivity.b = null;
    stopListenerOptions();
    stopListener();
    getValues();
    checkHorizontal();
    checkVertical();
    checkBox();
    startListenerOptions();
    startListener();
}

@java.lang.Override
public void onServiceDisconnected(final android.content.ComponentName name) {
    mService = null;
    mBounded = false;
    android.util.Log.d(diplom.jodoapp.LoginActivity.TAG, "onServiceDisconnected");
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.content.Intent cancelPendingFoodNotifications = new android.content.Intent(this, de.tum.in.tumcampusapp.services.FavoriteDishAlarmScheduler.class);
    cancelPendingFoodNotifications.putExtra(FavoriteDishAlarmScheduler.INTENT_CANCEL_ALL_NOTIFICATIONS, true);
    sendBroadcast(cancelPendingFoodNotifications);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mCurrentIndex = (((mCurrentIndex) - 1) + (mQuestionBank.length)) % (mQuestionBank.length);
    mCheated = false;
    updateQuestion();
}

public void setTemporaryImage(android.graphics.Bitmap bitmap) {
    this.img = bitmap.copy(Bitmap.Config.ARGB_8888, true);
    android.util.Log.d("PuzzleAdapter", ("New image has been set " + (imgId)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.david_2.petshop.Intent intent = new com.example.david_2.petshop.Intent(this, com.example.david_2.petshop.Record.class);
    startActivity(intent);
    adapter.notifyDataSetChanged();
}

public void removeItemFromBuffer(int departurePoint) {
    android.util.Log.d("mbta", "Removing item");
    getDB().deleteDeparturePointFromProfile(com.github.tommywalsh.mbta.ProfileEditHelper.BUFFER_PROFILE, departurePoint);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.util.Log.i(LAG, "what to do");
    aa = $missing$;
}

private void drawDivider(android.graphics.Canvas canvas) {
    android.util.Log.d("Divider bound", mDividerBound.toString());
    canvas.drawLine(mDividerBound.left, mDividerBound.top, mDividerBound.right, mDividerBound.bottom, mDividerPaint);
}

void handlePostDhcpSetup() {
    setSuspendOptimizationsNative(com.android.server.wifi.WifiStateMachine.SUSPEND_DUE_TO_DHCP, true);
    mWifiNative.setPowerSave(true);
    mWifiP2pChannel.sendMessage(WifiP2pServiceImpl.BLOCK_DISCOVERY, WifiP2pServiceImpl.DISABLED);
    mWifiNative.setBluetoothCoexistenceMode(mWifiNative.BLUETOOTH_COEXISTENCE_MODE_SENSE);
    mDhcpActive = false;
    startBatchedScan();
    com.android.server.wifi.WifiNative.restartScan();
}

public void returnResult() {
    android.content.Intent data = new android.content.Intent();
    data.putExtra(com.example.marco.criminalintent.CrimeFragment.HAS_CRIME_CHANGED, mHasCrimeChanged);
    data.putExtra(com.example.marco.criminalintent.CrimeFragment.ARG_CRIME_ID, mCrime.getId());
    getActivity().setResult(Activity.RESULT_OK, data);
}

@android.support.annotation.CallSuper
public void onDraw(@android.support.annotation.NonNull
android.graphics.Canvas canvas, @android.support.annotation.NonNull
android.graphics.Paint paint) {
    com.idonans.acommon.lang.CommonLog.d(((TAG) + " onDraw"));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(getActivity(), "Cancel clicked", Toast.LENGTH_SHORT).show();
    dismiss();
}

public void onLogout() {
    com.parse.ParseUser.logOut();
    android.util.Log.d("TAG", "on log out");
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.tiferet.rebook.LoginActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onItemClick(int position, android.view.View v) {
    android.widget.Toast.makeText(getApplicationContext(), "Suggestion Selected!", Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.flatstack.android.App.appContext = this;
    timber.log.Timber.plant((BuildConfig.DEBUG ? new timber.log.Timber.DebugTree() : new com.flatstack.android.utils.TimberCrashReportingTree()));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent(getApplicationContext(), com.ab.piggybank.activity.MainDebtActivity.class);
    startActivity(i);
    finish();
}

public void surfaceChanged(android.view.SurfaceHolder holder, int format, int w, int h) {
    android.util.Log.d("surfaceChanged", "surfaceChanged");
    refreshCamera(mCamera);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    com.example.jack.thousandorigamicranes.NoteList.updateAdapter();
    hideActionBar();
    mListView.setAdapter(com.example.jack.thousandorigamicranes.NoteList.mAdapter);
    mListView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(this));
}

public static final boolean isValidEmail(java.lang.CharSequence target) {
    if (target == null) {
        return false;
    }else {
        return android.util.Patterns.EMAIL_ADDRESS.matcher(target).matches();
    }
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(R.layout.fragment_bus_view, container, false);
    displayTimes();
    return rootView;
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    removeGroup();
    removePersistentGroups();
    removeService();
    removeServiceDiscoveryRequest();
    unregisterP2pReceiver();
    unregisterP2p();
    unregisterWifiReceiver();
    android.util.Log.i(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Wifi Handler service destroyed");
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    setClipPosition(seekBar.getProgress(), seekBar.getMax());
}

public void toStageHint(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.sweets.rumandapp.StageHintActivity.class);
    intent.putExtra(Const.STAGE_ID_KEY, stageId);
    startActivity(intent);
    this.finish();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    tasks.remove(touchedTask);
    setUpTasksWithNewTasks();
    taskAdapter.notifyDataSetChanged();
    parent.notifyTasksChanged();
    com.todome.ToDoMeActivity.writeTasks(ToDoMeActivity.tasks);
}

private android.app.PendingIntent createPendingIntent() {
    android.content.Intent intent = new android.content.Intent(mContext, org.deviceconnect.android.deviceplugin.host.HostDeviceService.class);
    intent.setAction(org.deviceconnect.android.deviceplugin.host.camera.CameraOverlay.DELETE_PREVIEW_ACTION);
    android.app.PendingIntent contentIntent = android.app.PendingIntent.getService(mContext, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
    return contentIntent;
}

public static void verifyStoragePermissions(android.app.Activity activity) {
    int permission = android.support.v4.app.ActivityCompat.checkSelfPermission(activity, Manifest.permission.WRITE_EXTERNAL_STORAGE);
    if (permission != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        android.support.v4.app.ActivityCompat.requestPermissions(activity, com.balloon.printer.printpdf.MainActivity.PERMISSIONS_STORAGE, com.balloon.printer.printpdf.MainActivity.REQUEST_EXTERNAL_STORAGE);
    }
}

public android.graphics.Rect getRectangle() {
    return new android.graphics.Rect(x, y, ((x) - (width)), ((y) - (height)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mInKbMode) && (isTypedTimeFullyLegal())) {
        finishKbMode(false);
    }else {
        tryVibrate();
    }
    notifyOnDateListener();
    dismiss();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    android.util.Log.i("Frag_position", ("" + position));
    edu.temple.markopromo.DisplayMessageActivity.filename = filelist.get(position);
    return edu.temple.markopromo.MessageFragment.create(position, filelist.get(position));
}

private void sendPlaybackNearlyFinishedEvent(com.willblaschko.android.alexa.interfaces.AvsItem item, long offsetInMilliseconds) {
    alexaManager.sendPlaybackNearlyFinishedEvent(item, offsetInMilliseconds, requestCallback);
    android.util.Log.i(com.willblaschko.android.alexavoicelibrary.BaseActivity.TAG, "Sending PlaybackNearlyFinishedEvent");
}

public void onClick(android.view.View v) {
    java.lang.System.out.println("Button clicked");
    java.lang.String loginString = loginTxt.getText().toString();
    _mClickListener.onLogInClick(loginString);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    com.firebirdberlin.nightdream.services.AlarmService.startAlarm(context);
    android.os.Bundle alarm = new android.os.Bundle();
    alarm.putString("action", "start alarm");
    com.firebirdberlin.nightdream.NightDreamActivity.start(context, alarm);
}

@java.lang.Override
public void onClick(android.view.View v) {
    setNewCredentials();
    verifyServerSettings(v);
    refreshCredentialsDisplay();
}

@java.lang.Override
public void onAnimationUpdate(android.animation.ValueAnimator animation) {
    mDegree = ((float) (trembleAnimator.getAnimatedValue()));
    refresh();
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.person_name :
            toggleDetails(v);
            break;
        case R.id.person_call :
            callButtonOnClick(v);
            break;
    }
}

@java.lang.Override
public void onStatusChanged(java.lang.String arg0, int arg1, android.os.Bundle arg2) {
    if ((org.immopoly.android.helper.LocationHelper.mlocListener) != null)
        org.immopoly.android.helper.LocationHelper.mLocationManager.removeUpdates(org.immopoly.android.helper.LocationHelper.mlocListener);
    
    org.immopoly.android.helper.LocationHelper.mlocListener = null;
    if (callback != null) {
        callback.onLocationChanged(true);
    }
}

public boolean requestAudioFocus() {
    mAudioManager = ((android.media.AudioManager) (getSystemService(Context.AUDIO_SERVICE)));
    int result = mAudioManager.requestAudioFocus(afChangeListener, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN_TRANSIENT);
    return result == (android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED);
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if ((requestCode == (com.usc.itp476.contact.contactproject.ingamescreen.TargetActivity.REQUEST_TAKE_PHOTO)) && (resultCode == (RESULT_OK)))
        setPic();
    else
        if (resultCode == (com.usc.itp476.contact.contactproject.ingamescreen.TargetActivity.RETURN_FROM_RESULT))
            finish();
        
    
}

public void OnSetSelectedIndicatorView(android.widget.ImageView mSelectedIndicatorView) {
    if (null != (mMovingIndicatorBackgroundDrawable))
        mSelectedIndicatorView.setBackgroundDrawable(mMovingIndicatorBackgroundDrawable);
    
    if (null != (mMovingIndicatorSrcDrawable)) {
        mSelectedIndicatorView.setImageDrawable(mMovingIndicatorSrcDrawable);
    }
}

@java.lang.Override
public rx.Single<? extends okhttp3.ResponseBody> call(okhttp3.ResponseBody responseBody) {
    if (com.xabber.android.data.xaccount.XabberAccountManager.getInstance().deleteXMPPAccountsFromRealm())
        return rx.Single.just(responseBody);
    else
        return rx.Single.error(new java.lang.Throwable("Realm: xmpp accounts deletion error"));
    
}

@java.lang.Override
public void onClick(android.view.View v) {
    btn.setVisibility(View.INVISIBLE);
    java.lang.String text = "Enter Time in MM:SS";
    editText.setText(text);
    setProgressBarProgress(root, 0);
    setStartButton(root);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    CountryPos = 0;
    PhoneCode.setText(("+" + (myCountries.get(position).getCode())));
}

@java.lang.Override
public void onClick(android.view.View v) {
    time = java.lang.System.currentTimeMillis();
    mSensorManager.registerListener(this, mAccelerometerSensor, SensorManager.SENSOR_DELAY_GAME);
    mSensorManager.registerListener(this, mGyroscopeSensor, SensorManager.SENSOR_DELAY_GAME);
    java.io.File path = android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MOVIES);
}

public void back() {
    if ((indexPointer) == 0) {
        android.util.Log.d("ProgressDotBar", "Index can't be negative");
        return ;
    }
    (indexPointer)--;
    updateDots();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.support.design.widget.Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG).setAction("Action", null).show();
    android.content.Intent intentLogin = new android.content.Intent(this, com.leptonsoftware.route.MainActivity.class);
    startActivity(intentLogin);
}

public static android.content.Context getContext() {
    if ((org.qtproject.qt5.android.QtNative.m_activity) == null)
        return org.qtproject.qt5.android.QtNative.m_activity;
    
    return org.qtproject.qt5.android.QtNative.m_service;
}

@java.lang.Override
public void init(android.content.Context context, boolean bought) {
    game = new breathing.philipps.apps.com.breathing.BreathingOption(context);
    options = new breathing.philipps.apps.com.breathing.BreathingGame(context);
    this.bought = bought;
}

@java.lang.Override
public int getPoints() {
    android.util.Log.d("myLog", ("points = " + (points)));
    return points;
}

@java.lang.Override
public void unLiked(com.like.LikeButton likeButton) {
    firebaseutils.removelike(offlinedata.Id);
    holder.favoriteButton.setLiked(false);
    android.widget.Toast.makeText(com.example.massa.luxvilla.adaptadores.adaptadorrvtodasoffline.ctx, offlinedata.Id, Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onSkipToQueueItem(long queueId) {
    com.example.android.uamp.utils.LogHelper.d(com.example.android.uamp.playback.PlaybackManager.TAG, ("OnSkipToQueueItem:" + queueId));
    mQueueManager.setCurrentQueueItem(queueId);
    handlePlayRequest();
    mQueueManager.updateMetadata();
}

static com.exemple.android.cookbook.adapters.CategoryRecipeRecyclerAdapter.CustomViewHolder create(android.view.LayoutInflater inflater, android.view.ViewGroup parent, com.exemple.android.cookbook.adapters.CategoryRecipeRecyclerAdapter.ItemClickListener clickListener) {
    return new com.exemple.android.cookbook.adapters.CategoryRecipeRecyclerAdapter.CustomViewHolder(inflater.inflate(R.layout.row_item, parent, false), clickListener);
}

@android.support.annotation.UiThread
@java.lang.Override
public T remove(int i) {
    final T removed = mData.remove();
    org.spacebison.recyclerviewlistadapter.RecyclerViewListAdapter.notifyItemRemoved(i);
    return removed;
}

public org.michaelbel.material.widget.ActionBarMenuItem addItemWithWidth(int id, @android.support.annotation.DrawableRes
int icon, int width) {
    return addItem(id, icon, actionBar.itemsBackgroundColor, null, width);
}

@java.lang.Override
public void onClick(android.view.View v) {
    org.croudtrip.utils.DataHolder.getInstance().setVehicle_id(0);
    ((it.neokree.materialnavigationdrawer.MaterialNavigationDrawer) (_this.getActivity())).setFragmentChild(new org.croudtrip.fragments.VehicleInfoFragment(), "Add new vehicle");
}

java.lang.String getSaveAsFilename() {
    ca.rmen.android.poetassistant.main.reader.PoemFile poemFile = mPoemPrefs.getSavedPoem();
    if (poemFile != null) {
        return poemFile.name;
    }else {
        return ca.rmen.android.poetassistant.main.reader.PoemFile.generateFileName(poem.get().toString());
    }
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animator) {
    android.util.Log.i("TAG", "---- onAnimationEnd ----");
    view.setTranslationY(0);
}

public static boolean confirmRequest(android.net.Uri uri, java.lang.String request) {
    return uri.getPathSegments().get(3).equals(request);
}

@java.lang.Override
protected void onPause() {
    super.onResume();
    if (mEditMode) {
        mFileContent.loadUrl(me.sheimi.android.utils.CodeGuesser.wrapUrlScript("save();"));
    }
}

@java.lang.Override
public void consume(edu.hm.cs.bikebattle.app.modell.User input) {
    principal = input;
    userPhoto = android.net.Uri.parse(input.getFotoUri());
    android.util.Log.d(edu.hm.cs.bikebattle.app.activities.BaseActivity.TAG, principal.toString());
    refreshUserInfo();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
    setHasOptionsMenu(true);
    android.util.Log.d(com.beccap.weathervane.WeatherListFragment.TAG, "in onCreate, connecting to google api services");
    _googleApiClient = buildGoogleApiClient();
    _googleApiClient.connect();
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    android.util.Log.w(org.thoughtcrime.securesms.components.camera.SurfacePreviewStrategy.TAG, "surfaceChanged()");
    cameraView.initPreview();
}

@java.lang.Override
protected void onStart() {
    spiceManager.start(this);
    super.onStart();
    android.util.Log.v("MainActiviry.onStart", "Execute repositoriesPreviews");
}

public static co.japo.mindexplotion.service.InternalStorageService getCurrentInstance(android.content.Context appContext) {
    if ((co.japo.mindexplotion.service.InternalStorageService.instance) == null) {
        co.japo.mindexplotion.service.InternalStorageService.instance = new co.japo.mindexplotion.service.InternalStorageService();
        co.japo.mindexplotion.service.InternalStorageService.context = appContext;
        co.japo.mindexplotion.service.InternalStorageService.init();
    }
    return co.japo.mindexplotion.service.InternalStorageService.instance;
}

public static native void doReconfigure(int w, int h, com.runrev.android.Bitmap bitmap);

private void playMusic(int song) {
    android.util.Log.i(TAG, "playing music");
    android.media.MediaPlayer play = android.media.MediaPlayer.create(this, song);
    play.start();
}

public void setColumnWidth(int width) {
    android.widget.LinearLayout.LayoutParams layoutParams = new android.widget.LinearLayout.LayoutParams(tesla.andrew.magicchart.custom_views.Column.dpToPx(context, width), tesla.andrew.magicchart.custom_views.Column.dpToPx(context, 120), 0);
    column.setLayoutParams(layoutParams);
}

@java.lang.Override
public void onChildMoved(com.google.firebase.database.DataSnapshot snapshot, java.lang.String previousChildName) {
    com.eclipsesource.tabris.android.RemoteObject remoteObject = tabrisContext.getObjectRegistry().getRemoteObjectForObject(this);
    remoteObject.notify("onChildMoved", "child", snapshot.getValue());
}

public void finishActivity() {
    android.app.Activity activity = com.hitomi.aslibrary.ActivityManager.activityStack.lastElement();
    finishActivity(activity);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    updateDsp();
}

@java.lang.Override
public void onError(java.lang.String message) {
    android.util.Log.e(net.nitroshare.android.transfer.TransferService.TAG, java.lang.String.format("transfer %d failed: %s", transferId, message));
    showErrorNotification(device, message);
}

public void onClick(android.view.View view) {
    pager.setCurrentItem(getItem((-1)), true);
    updateButtonVisibility();
}

private com.android.volley.RequestQueue getRequestQueue() {
    if ((mRequestQueue) == null) {
        mRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue(com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx.getApplicationContext());
    }
    return mRequestQueue;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    outState.putString(com.gcw.sapienza.places.ShareActivity.BUNDLED_IMG_PATH, this.imageFile.getAbsolutePath());
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d(com.udacity.bakappies.fragment.FragmentStepDetail.TAG, ("onResume " + (step.getShortDescription())));
    if (getUserVisibleHint()) {
        load(step);
    }
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(getApplicationContext(), "Not on a WiFi Connection", Toast.LENGTH_LONG).show();
}

public void onClick(android.view.View v) {
    jbarton.simple.string school = "Thank you for clicking the button";
    jbarton.simple.string myname = "HelloDearSir";
    nschoolTextView.setText(school);
    mnameTextView.setText(myname);
    nButton.setVisibility(View.GONE);
}

@java.lang.Override
protected void dispatchDraw(android.graphics.Canvas canvas) {
    super.dispatchDraw(canvas);
    onUpdateScrollbar();
    mScrollbar.draw(canvas);
}

public boolean exifSupported(android.content.Context context, us.koller.cameraroll.data.AlbumItem albumItem) {
    java.lang.String mimeType = us.koller.cameraroll.util.MediaType.getMimeType(context, albumItem.getUri(context));
    return us.koller.cameraroll.util.MediaType.doesSupportExif_MimeType(mimeType);
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    stopPreview();
    this.ispriv = false;
    com.wx.imx53server.MyCamera.mCamera.release();
    android.util.Log.d(com.wx.imx53server.MyCamera.TAG, "surface destoryed,release resource");
}

@java.lang.Override
public void onRestoreInstanceState(android.os.Parcelable state) {
    super.onRestoreInstanceState(state);
    if (((mRecyclerView) != null) && (state != null)) {
        mRecyclerView.getLayoutManager().onRestoreInstanceState(state);
    }
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (v == (mWebView)) {
        webViewHasFocus = hasFocus;
    }
}

private void monitorChildController(com.bluelinelabs.conductor.Controller controller) {
    mChildBackstack.add(controller);
    controller.addLifecycleListener(new com.bluelinelabs.conductor.Controller.LifecycleListener() {
        @java.lang.Override
        public void postDestroy(@android.support.annotation.NonNull
        com.bluelinelabs.conductor.Controller controller) {
            mChildBackstack.remove(controller);
        }
    });
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    currentLocation = location;
    double lat = location.getLatitude();
    double lng = location.getLongitude();
    editTextCity.setText(getLocationName(lat, lng));
}

public void play(android.database.Cursor cursor) {
    if (isPaused()) {
        start();
        paused = false;
    }else {
        playPrepared(cursor);
        start();
    }
}

public static void forceRestart(android.content.Context c, boolean forceLoadScreen) {
    me.ccrama.redditslide.Reddit.appRestart.edit().putString("startScreen", "").apply();
    me.ccrama.redditslide.Reddit.forceRestart(c);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    isPaused = true;
    chronometerClick();
    dialog.dismiss();
    immersiveMode();
}

@java.lang.Override
protected java.util.ArrayList<noh.android.moviemanager.models.Movie> doInBackground(java.lang.String... params) {
    android.util.Log.e(noh.android.moviemanager.adapters.MovieAsyncTaskLoader.TAG_MovieAsyncTaskLoader, noh.android.moviemanager.adapters.MovieAsyncTaskLoader.getJson());
    return ConvertJsontoMovieList(noh.android.moviemanager.adapters.MovieAsyncTaskLoader.getJson(params));
}

public void init(android.content.Context context, com.github.mikephil.charting.data.CombinedData priceChartData, com.github.mikephil.charting.data.CombinedData volumeChartData);

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    setContentView(R.layout.activity_main);
    getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
    return true;
}

public static void showMessage(android.content.Context context, java.lang.String message) {
    com.shuruta.sergey.ftpclient.ui.DialogFactory.showMessage(context, message, null);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mGoToPage = 1;
    sbGotoPage.setProgress(mGoToPage);
    mCurrentPage = mGoToPage;
    showOrLoadPage();
    dialog.dismiss();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    twoPlayerManager.setDisplaying(false);
    dialog.dismiss();
}

private void updateButtonStates() {
    ((android.widget.Button) (findViewById(R.id.startListeningButton))).setText((isListening ? R.string.stop_listening : R.string.start_listening));
    findViewById(R.id.clearConsoleButton).setEnabled(isListening);
    findViewById(R.id.sendMessageButton).setEnabled(isListening);
}

private void read() {
    android.graphics.Bitmap mBitmap = com.unimelb.feelinglucky.snapsheet.Util.DatabaseUtils.getImg(DatabaseInstance.database);
    if (mBitmap != null) {
        mImg.setImageBitmap(mBitmap);
        mGrid.setVisibility(View.VISIBLE);
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    android.util.Log.v(database.DatabaseHelper.TAG, TaskContract.CREATE_TABLE);
    db.execSQL(TaskContract.DELETE_TABLE);
    db.execSQL(TaskContract.CREATE_TABLE);
    database.InitDb.initDb(this);
}

@java.lang.Override
protected void sendUpdatedStateTo(edu.up.cs301.game.GamePlayer p) {
    android.util.Log.d("sending state", "updated state");
    edu.up.cs301.blokus.BlokusGameState copyState = new edu.up.cs301.blokus.BlokusGameState(gameState);
    p.sendInfo(((edu.up.cs301.game.infoMsg.GameState) (copyState)));
}

public void closeSingleton() {
    com.example.zoardgeocze.clickonmap.Singleton.SingletonFacadeController.INSTANCE = null;
    java.lang.System.gc();
    android.util.Log.d("Teste", "Matei singleton");
}

public static android.graphics.Bitmap getBitmapFromBytes(byte[] image) {
    java.io.ByteArrayInputStream imageStream = new java.io.ByteArrayInputStream(image);
    android.graphics.Bitmap decodedImage = android.graphics.BitmapFactory.decodeStream(imageStream);
    return decodedImage;
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    gestureDetector.onTouchEvent(event);
    return ((event.getAction()) != (android.view.MotionEvent.ACTION_UP)) && ((focused) != (-1));
}

private void changeActionBarColor() {
    getActionBar().setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(getColors()[com.hkm.sampleswipe.DemoActivity.mBgIndex]));
    (com.hkm.sampleswipe.DemoActivity.mBgIndex)++;
    if ((com.hkm.sampleswipe.DemoActivity.mBgIndex) >= (getColors().length)) {
        com.hkm.sampleswipe.DemoActivity.mBgIndex = 0;
    }
}

@java.lang.Override
public void onConfigure(android.database.sqlite.SQLiteDatabase database) {
    this.onConfigure(database);
}

public static int retrieveCompanyId(android.content.Context context) {
    com.reminisense.fa.models.LoginResult loginResult = com.reminisense.fa.managers.CacheManager.retrieveLoginResult(context);
    return loginResult.getCompanyId();
}

private boolean shouldCancelDragOnDataUpdated() {
    return (!(com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemWrapperAdapter.DEBUG_BYPASS_MOVE_OPERATION_MODE)) && (isDragging());
}

@java.lang.Override
public void onClick(android.view.View view) {
    getActivity().startActivityForResult(pickIntent, com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions.requestPermissions(getParent(), R.mipmap.ic_launcher, "RequestLocationPermissions", getString(R.string.action_settings), PermissionUtils.REQUEST_CONTACTS_CODE, PermissionUtils.PERMISSIONS_CONTACTS_GROUP);
}

public void done(com.parse.ParseException e) {
    if (e != null) {
        android.content.Intent mapIntent = new android.content.Intent();
        mapIntent.setClass(getApplicationContext(), com.example.cmput401.classdiscuss.MapActivity.class);
        startActivity(mapIntent);
    }else {
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    layout_MainMenu.getForeground().setAlpha(20);
    layout_MainMenu.getForeground().setColorFilter(R.color.gray, PorterDuff.Mode.OVERLAY);
    initiateCommentPopup();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    presenter = new com.sean.nanastudio.taoyuanstreetparking.MainPresenterImpl(this, new com.sean.nanastudio.taoyuanstreetparking.MainModelImpl());
    presenter.onCreate();
}

public java.lang.String getNextPlayerTeamB() {
    if ((++(playerTurnCounterOfTeamB)) == (com.example.michael.archerygame.TaskFragment.playerListOfTeamB.size()))
        playerTurnCounterOfTeamB = 0;
    
    android.util.Log.v("playerName", com.example.michael.archerygame.TaskFragment.playerListOfTeamB.get(playerTurnCounterOfTeamB));
    return com.example.michael.archerygame.TaskFragment.playerListOfTeamB.get(playerTurnCounterOfTeamB);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    finish();
}

@java.lang.Override
public void onNewData(long timestamp, android.os.Bundle value) {
    this.onNewData(timestamp, value);
    recordFragmentObserver.onNewData(timestamp, value);
}

public static android.content.Intent createIntent(final android.content.Context context, com.vlabs.medicinetracker.singleMeasurement.mvp.SMInstance extra) {
    final android.content.Intent intent = new android.content.Intent(context, com.vlabs.medicinetracker.singleMeasurement.SingleMeasurementActivity.class);
    intent.putExtra(com.vlabs.medicinetracker.singleMeasurement.SingleMeasurementActivity.PRESENTER_TYPE_KEY, extra);
    return intent;
}

public void enableBluetooth() {
    if (!(mBluetoothAdapter.isEnabled())) {
        mBluetoothAdapter.enable();
        android.util.Log.d(TAG, "enableBluetooth():  BluetoothAdapter 실행");
    }
}

@java.lang.Override
public void initControl() {
    lstPost = ((android.widget.ListView) (findViewById(R.id.lsPost)));
    lstPost.setAdapter(com.example.llh_pc.it_support.activities.frmLuuTru.adapter);
}

public static int getLongSide(android.app.Activity activity) {
    com.easy.util.MeasureUtil.measure(activity);
    return (com.easy.util.MeasureUtil.type) == (com.easy.util.MeasureUtil.TYPE_PHONE) ? com.easy.util.MeasureUtil.screenHeight : com.easy.util.MeasureUtil.screenWidth;
}

@java.lang.Override
public boolean onNavigationItemSelected(android.view.MenuItem menuItem) {
    int id = menuItem.getItemId();
    menu.clear();
    doMenuAction(id);
    return true;
}

public void onClick(android.content.DialogInterface dialog, int id) {
    alertDialogBuilder.setCancelable(true);
    android.content.Intent intent = new android.content.Intent(this, droidahmed.com.jm3eia.start.MainActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onEnabled(android.content.Context context) {
    android.util.Log.d(ru.sigil.fantasyradio.widget.FantasyRadioWidgetProvider.TAG, "onEnabled method called");
}

public void run() {
    android.util.Log.i(org.opencv.samples.tutorial1.MarkerTracker.TAG, "sasquatch");
    onLandmark_enabled = true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    mContext.startActivity(new android.content.Intent(mContext, com.easemob.qixin.activity.PersonalInfoActivity.class).putExtra("userId", item));
}

@java.lang.Override
public void onRestoreInstanceState(android.os.Bundle outState) {
    updateValuesFromBundle(outState);
    updateUI();
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    getSaveEffectValue(((seekBar.getProgress()) * (com.fesskiev.player.widgets.dialogs.effects.EffectDialog.SCALE)));
}

public void update(android.graphics.Canvas canvas) {
    if ((animationCount) < (singleAnimation.animationFrames.size()))
        (animationCount)++;
    else
        isFinished = true;
    
    drawSelf(canvas);
}

@java.lang.Override
public void processFinish(com.group02.guard.AsyncGetConnectivityData.Wrapper output) {
    mSsid = output.ssid;
    android.util.Log.d("processFinish", output.ssid);
    mIp = output.ip;
    android.util.Log.d("processFinish", output.ip);
    mNetworkpass = output.password;
    android.util.Log.d("processFinish", output.password);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    loadFromFile();
    adapter = new android.widget.ArrayAdapter<ca.ualberta.cs.lonelytwitter.Tweet>(this, R.layout.list_item, tweets);
    oldTweetsList.setAdapter(adapter);
    adapter.notifyDataSetChanged();
}

@java.lang.Override
public void onConfigurationChanged(final android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    if (de.azapps.mirakel.helper.MirakelCommonPreferences.isTablet()) {
        setResult(de.azapps.mirakel.settings.model_settings.generic_list.GenericModelDetailActivity.SWITCH_LAYOUT, de.azapps.mirakel.settings.model_settings.generic_list.GenericModelDetailActivity.getIntent());
        de.azapps.mirakel.settings.model_settings.generic_list.GenericModelDetailActivity.finish();
    }
}

@java.lang.Override
public void onEventLongPress(com.alamkanak.weekview.WeekViewEvent event, android.graphics.RectF eventRect) {
    ShowDialog(event);
    events.remove(event);
    mWeekView.notifyDatasetChanged();
}

public void run() {
    applyToChildren(new com.artifex.mupdfdemo.ReaderView.ViewMapper() {
        @java.lang.Override
        void applyToView(android.view.View view) {
            ((com.artifex.mupdfdemo.MuPDFView) (view)).update();
        }
    });
}

@java.lang.Override
public void onClick(android.view.View v) {
    super.onClick(v);
    if ((v.getId()) == (R.id.btnSend)) {
        sendMessage();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.DialogFragment a = new ediger.diarynutrition.AddFoodDialog();
    a.setTargetFragment(this, ediger.diarynutrition.Fragments.tabs.FoodTab.REQ_CODE_ADD);
    a.show(getFragmentManager(), "add_dialog");
    getLoaderManager().getLoader(0).forceLoad();
}

@java.lang.Override
public void onDestroy() {
    android.widget.Toast.makeText(this, "SUCCESS DESTROY", Toast.LENGTH_LONG);
    super.onDestroy();
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    android.os.Bundle args = getArguments();
    loadPage(args.getString(ru.yandex.money.android.fragments.WebFragment.KEY_URL), ru.yandex.money.android.utils.Bundles.readStringMapFromBundle(args.getBundle(ru.yandex.money.android.fragments.WebFragment.KEY_POST_DATA)));
}

@java.lang.Override
public void setColorFilter(android.graphics.ColorFilter colorFilter) {
    mPaint.setColorFilter(colorFilter);
    invalidateSelf();
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    mToolbar = ((android.support.v7.widget.Toolbar) (activity.findViewById(R.id.toolbar)));
}

@java.lang.Override
public void onError(com.quickblox.core.exception.QBResponseException e) {
    progress.dismiss();
    android.widget.Toast.makeText(getBaseContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
}

public void onDrawerOpened(android.view.View drawerView) {
    super.onDrawerOpened(drawerView);
    getSupportActionBar().setTitle("Setari");
    invalidateOptionsMenu();
}

@java.lang.Override
public boolean onPrepareOptionsMenu(android.view.Menu menu) {
    if (favorite) {
        menu.getItem(1).setTitle("查看全部");
    }else {
        menu.getItem(1).setTitle("查看收藏");
    }
    return true;
}

@java.lang.Override
public void onDestroy() {
    try {
        super.onDestroy();
        mapFragment.removeOnTouchListeners();
    } catch (java.lang.Exception e) {
        android.util.Log.e(com.platypii.baseline.MapActivity.TAG, "Exception in onDestroy", e);
    }
}

@java.lang.Override
public boolean onSingleTapUp(android.view.MotionEvent e) {
    returnPaletteAble();
    act.add(key, num);
    p.dismiss();
    return true;
}

@java.lang.Override
public void onSearchShopsSuccess(java.util.List<com.framgia.forder.data.model.Shop> shops) {
    android.support.v4.app.Fragment fragment = mAdapter.getFragment(SearchContainerAdapter.SearchResultsTab.TAB_SHOP);
    if (fragment instanceof com.framgia.forder.screen.searchshop.ShopSearchResultFragment) {
        ((com.framgia.forder.screen.searchshop.ShopSearchResultFragment) (fragment)).setShops(shops);
    }
}

public com.example.natis.hagana.Model.ClientUser getOneUser(java.lang.String uid) {
    android.util.Log.d("TEST", "1");
    return com.example.natis.hagana.Model.ClientUserSQL.getUser(modelSql.getReadableDatabase(), uid);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    android.util.Log.i(com.example.android.uamp.ui.tv.MusicPlaybackOverlayFragment.TAG, "onCreate");
    super.onCreate(savedInstanceState);
    setFadingEnabled(false);
    setupRows();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.tianyl.android.offlinereader.sync.SyncService.addLog("onCreate");
    articleDBUtil = new com.tianyl.android.offlinereader.dao.ArticleDBUtil(this);
}

void onClick(android.view.View v, com.track.android.TrackData data);

@java.lang.Override
protected void onStart() {
    visible = true;
    super.onStart();
    android.util.Log.d(org.unchiujar.umbra.FogOfExplore.TAG, "onStart completed: Activity started");
}

@java.lang.Override
public void run() {
    android.util.Log.e(com.junhzhan.cal.widget.CalendarWidgetNew.TAG, "change current month");
    mAdapter.increment();
}

public void disconnect() {
    if ((_socket) != null) {
        try {
            _socket.close();
        } catch (java.lang.Exception ex) {
        }
        cancelDateTimer();
        _socket = null;
        android.util.Log.d(jwtc.android.chess.ics.ICSClient.TAG, "disconnect method");
    }
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    com.google.android.gms.maps.model.LatLng latLng = new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude());
    mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng));
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle instanceState) {
    super.onSaveInstanceState(instanceState);
    stopQuizTimerCount();
    saveViewData(instanceState);
}

@java.lang.Override
public java.util.Iterator<T> iterator() {
    return new br.com.zbra.androidlinq.ArrayStream.ArrayIterator<>(source, 0, 1, source.length);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    dataSource = MainActivity.dataSource;
    dataSource.deleteAllThrows();
    addDemoThrows();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.roigreenberg.easyshop.MainActivity.ShareList(getBaseContext(), userId, listId);
}

@java.lang.Override
public void onRequestFocus(android.webkit.WebView view) {
    mWebChromeClient.onRequestFocus(view);
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    super.onDraw(canvas);
    removeAllViews();
    addView(gridLayout);
    android.util.Log.i("WASD", ("" + ((layout.getHeight()) / 5)));
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    if (isClosedOrder())
        return false;
    
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu_order, menu);
    return true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    button3.setText(((mark) + ""));
    placeMarkOnBoard(0, 2);
    button3.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_sign_in_as_approver_or_claimant);
    user.setUserId(1);
}

public boolean isAppConfigured() {
    return ((mGcmTokenPreference) != null) && (!(android.text.TextUtils.isEmpty(mGcmTokenPreference.get())));
}

public static java.lang.String getLastAddr(android.content.Context context) {
    android.content.SharedPreferences pref = context.getSharedPreferences(com.cooper.wheellog.SettingsManager.key, Context.MODE_PRIVATE);
    if (pref.contains("last_mac")) {
        return pref.getString("last_addr", "");
    }
    return "";
}

public void onClick(android.content.DialogInterface dialog, int id) {
    com.spinecoin.app.Helper.SpinecoinLog.appendLog("[StartActivity generateJsonData] Alert dialog -> user clicked OK button");
    is_session_running = false;
}

private void sendState(com.example.grand.assignment31.State state) {
    android.content.Intent intent = new android.content.Intent(PlayerActivity.FILTER);
    intent.putExtra(PlayerActivity.PARAM_STATE, state);
    android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
}

public hotchemi.android.rate.OnClickButtonListener getListener() {
    return listener.get();
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    searchRequest = query;
    android.util.Log.i(com.example.camille.booklist.MainActivity.LOG_TAG, "TEST: Setting searchRequest to be the query");
    android.app.LoaderManager loaderManager = getLoaderManager();
    loaderManager.initLoader(com.example.camille.booklist.MainActivity.BOOK_LOADER_ID, null, this);
    return true;
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.util.Log.e(com.biglynx.fulfiller.MainActivity.TAG, "Destroyed....");
    stopService(new android.content.Intent(this, com.biglynx.fulfiller.services.MyJobService.class));
}

@java.lang.Override
public final void addView(android.view.View child, int index) {
    super.addView(child, index);
}

public void cancelAdding(android.view.View v) {
    changeToModeNormal();
    java.util.Arrays.fill(selectedViews, java.lang.Boolean.FALSE);
    resetViews();
}

public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int pos, long id) {
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if ((temp) == 0) {
        check = false;
    }
    temp = 0;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(ctx, com.historicar.app.activity.AboutActivity.class);
    startActivity(intent);
}

@java.lang.Override
public android.view.View initView() {
    android.view.View view = com.fuyi.googleplay.utils.UIUtils.inflate(R.layout.listview_home_item);
    tvContent = ((android.widget.TextView) (view.findViewById(R.id.tvContent)));
    return view;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    adapterPresenter.unFavoriteSong(song);
    notifyDataSetChanged();
    viewHolder.favorite.setImageResource(R.drawable.unfavoritebutton);
}

@java.lang.Override
public void onStop() {
    com.crashlytics.android.Crashlytics.log(Log.DEBUG, TAG, "canceling Picasso request");
    com.squareup.picasso.Picasso.with(this).cancelRequest(mTarget);
    super.onStop();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    it.bsdsoftware.library.BSDImage image = adapter.getItem(position);
    it.bsdsoftware.library.BSDUtility.handleClickItem(getActivity(), image, gallery, position);
}

@java.lang.Override
protected java.lang.Void doInBackground(java.lang.Void... aVoid) {
    com.ringsterz.androidtextreader.BibleManager bibleManager = com.ringsterz.androidtextreader.BibleManager.getInstance(context);
    bibleManager.insertBook();
    bibleManager.insertPhrase();
    return null;
}

public synchronized int getDuration() {
    if (((currentTrackPlayer) != null) && (currentTrackPlayer.isPlaying()))
        return currentTrackPlayer.getDuration();
    
    android.util.Log.d(org.fitchfamily.android.symphony.MusicService.TAG, "getDuration() not playing?");
    return 0;
}

@java.lang.Override
public java.util.Map getFilterParams() {
    android.content.Intent packageIntent = getIntent();
    map.put("bankId", packageIntent.getStringExtra("bankId"));
    map.put("orderId", packageIntent.getStringExtra("orderId"));
    return map;
}

@java.lang.Override
public void onClick(android.view.View view) {
    button4.setText(((mark) + ""));
    placeMarkOnBoard(1, 0);
    button4.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

protected void updateColors() {
    final android.content.ContentResolver resolver = mContext.getContentResolver();
    mLabelColor = Settings.System.getInt(resolver, Settings.System.QS_TEXT_COLOR, -1);
    mIconColor = Settings.System.getInt(resolver, Settings.System.QS_ICON_COLOR, -16738680);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    java.lang.String newNote = input.getText().toString();
    adapter.insert(newNote, 0);
    me.shreyasr.quicknote.notepad.NotepadUtils.setCurrentNote(newNote);
    me.shreyasr.quicknote.notepad.NotepadUtils.updateNotepad();
}

void addPlayerToUI(com.example.gideonsassoon.avariel.data.Player player) {
    android.widget.EditText mNameEditText = null;
    mNameEditText = ((android.widget.EditText) (findViewById(R.id.et_character_name)));
    mNameEditText.setText(player.getName());
}

protected void startLocationUpdates() {
    int permission = android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION);
    if (permission == (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this);
    }else {
        requestPermission();
    }
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    if ((mLooper) != null) {
        mLooper.start();
    }
}

@java.lang.Override
public void loadAlbums() {
    android.content.ContentResolver cr = mTasksView.getAppCr();
    if (cr == null) {
        return ;
    }
    com.bilibili.boxing.model.BoxingManager.getInstance().loadAlbum(cr, mLoadAlbumCallback);
}

@java.lang.Override
public void onAuthenticateFailed() {
    br.org.cesar.knot.beamsensor.ui.login.Log.d("miguel", "lala");
    runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            android.widget.Toast.makeText(br.org.cesar.knot.beamsensor.ui.login.LoginActivity.this, R.string.text_authentication_failed, Toast.LENGTH_SHORT).show();
        }
    });
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    this.c = getApplicationContext();
}

@java.lang.Override
public boolean canSwipe() {
    android.content.SharedPreferences sp = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
    boolean ob = sp.getBoolean(getString(R.string.sp_omnibox_control), true);
    return (!(io.github.UltimateBrowserProject.Activity.BrowserActivity.switcherPanel.isKeyBoardShowing())) && ob;
}

public void onClick(android.view.View v) {
    if (checkNumberOfTries()) {
        if (isCharInWord("å")) {
            android.util.Log.i("Button", "You guessed a right character");
        }else {
            btn_å.setEnabled(false);
        }
    }else {
        return ;
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.adleritech.android.developertest.application.DeveloperTestApplication.sInstance = this;
    android.content.Intent intent = new android.content.Intent(com.adleritech.android.developertest.application.DeveloperTestApplication.SERVICE_NAME);
    bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
    mBound = true;
}

@android.support.annotation.NonNull
public java.lang.String getUserIDLang() {
    return org.apache.commons.lang3.StringUtils.defaultString(userIDLang, "");
}

private android.content.Intent GetBatteryStatusIntent() {
    android.content.IntentFilter ifilter = new android.content.IntentFilter(android.content.Intent.ACTION_BATTERY_CHANGED);
    android.content.Intent batteryStatus = context.registerReceiver(null, ifilter);
}

public void statusCheckGPS() {
    final android.location.LocationManager manager = ((android.location.LocationManager) (getSystemService(Context.LOCATION_SERVICE)));
    if (!(manager.isProviderEnabled(LocationManager.GPS_PROVIDER))) {
        buildAlertMessageNoGps();
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    setContentView(getLayoutResource());
    butterknife.ButterKnife.inject(this);
}

@java.lang.Override
public void onBindViewHolder(com.example.johannes.colorpicker.RVAdapter.TaskViewHolder taskViewHolder, int position) {
    taskViewHolder.headline.setText(tasks.get(position).getOtsikko());
    taskViewHolder.cv.setCardBackgroundColor(android.graphics.Color.parseColor(tasks.get(position).getOtsikko()));
}

@java.lang.Override
public final void onBindViewHolder(final com.henriquenfaria.popularmovies.ui.FavoriteMoviesRecyclerViewAdapter.ViewHolder holder, final int position) {
    final android.database.Cursor cursor = this.getItem(position);
    this.onBindViewHolder(holder, cursor);
}

public static int getDeviceWidth(android.content.Context context) {
    android.view.WindowManager wm = ((android.view.WindowManager) (context.getSystemService(Context.WINDOW_SERVICE)));
    android.view.Display display = wm.getDefaultDisplay();
    return display.getWidth();
}

@java.lang.Override
public void onNewsUpdateFailed(java.lang.String section, java.lang.String message) {
    android.widget.Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
    mSwipeRefreshLayout.setRefreshing(false);
    loading = true;
}

public void ProfileSetup(android.view.View view) {
    checkUser(this);
    android.content.Intent intent = new android.content.Intent(this, itsjustaaron.food.ProfileSetup.class);
    startActivity(intent);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    btnGenerate.setOnClickListener(new com.lava.ldc.randomnumbersapp.RandomNumberGeneratorFragment.ClickButton());
}

@java.lang.Override
public void onFailure(retrofit2.Call<org.septa.android.app.services.apiinterfaces.model.NextArrivalDetails> call, java.lang.Throwable t) {
    android.util.Log.d(org.septa.android.app.nextarrive.NextToArriveResultsActivity.TAG, t.getMessage());
    android.util.Log.d(org.septa.android.app.nextarrive.NextToArriveResultsActivity.TAG, t.getStackTrace().toString());
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    synchronized(szu.bdi.hybrid.demo.MainActivity._is_main_init) {
        if ((szu.bdi.hybrid.demo.MainActivity._is_main_init) == true)
            return ;
        
        szu.bdi.hybrid.demo.MainActivity._is_main_init = true;
    }
    android.util.Log.v(szu.bdi.hybrid.demo.MainActivity.LOGTAG, ".onStart()");
    fwdToMain();
}

@java.lang.Override
public void onClick(android.view.View v) {
    showMovieTasteTest();
    movieList.remove(0);
}

public void deauthenticate() {
    java.lang.String return_value = JSONSendCmd("deauthenticate", null);
    android.util.Log.d(Consts.LOG_TAG, ("Deauthenticate Return Value " + return_value));
}

private void btnLocalMultiplayerClicked() {
    startActivity(new android.content.Intent(this, com.vintagetechnologies.menschaergeredichnicht.Spieloberflaeche.class));
    com.vintagetechnologies.menschaergeredichnicht.Impl.ActualGame.getInstance().setLocalGame(true);
    com.vintagetechnologies.menschaergeredichnicht.Impl.ActualGame.getInstance().reset();
}

@java.lang.Override
public void onResponse(com.wilee8.coyotereader2.gson.UserInfo response) {
    com.wilee8.coyotereader2.mUserId = response.getUserId();
    android.util.Log.d("coyotereader", "return json: userid");
    subscriber.onNext(null);
}

public static void test_235() throws android.os.RemoteException, com.android.uiautomator.core.UiObjectNotFoundException {
    excute(testcase.Object_TextScroll, testcase.Operation_ClickWait, "应用", "vertical");
    excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.settings:id/advanced");
    excute(testcase.Object_Text, testcase.Operation_ClickWait, "修改系统设置");
    check(testcase.Object_TextScroll, testcase.Operation_checkExist, "可修改系统设置");
}

private void commit(long[] selectedIds) {
    android.content.Intent data = new android.content.Intent();
    data.putExtra(cwa115.trongame.FriendsListActivity.SELECTED_IDS_EXTRA, selectedIds);
    setResult(cwa115.trongame.RESULT_OK, data);
    finish();
}

public static com.alwaysrejoice.hexengine.dto.Game getGame() {
    android.util.Log.d("game", ("returning current game " + (com.alwaysrejoice.hexengine.util.GameUtils.game)));
    return com.alwaysrejoice.hexengine.util.GameUtils.game;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    com.zerohour.utils.Utility.navigateDashBoardFragment(new com.zerohour.fragments.NoticeBoardDetailFragment(), NoticeBoardDetailFragment.TAG, null, mParent);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    _adapter = new com.github.weimasoft.joke.list.JokeListAdapter(com.github.weimasoft.joke.list.TestJokeData.getTestData(getActivity().getResources()), getActivity());
    setListAdapter(_adapter);
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar seekBar) {
    isOriginallyPlaying = mPlayer.isPlaying();
}

public void draw(android.graphics.Canvas canvas) {
    canvas.drawBitmap(resized, x, y, null);
    android.util.Log.i("x", java.lang.String.valueOf(x));
    android.util.Log.i("y", java.lang.String.valueOf(y));
}

@java.lang.Override
public void onActivityDestroyed(android.app.Activity activity) {
    if (false) {
        com.taobao.weex.WXSDKManager.getInstance().notifyTrimMemory();
    }
    if (true) {
        com.taobao.weex.WXSDKManager.getInstance().notifySerializeCodeCache();
    }
}

@java.lang.Override
public synchronized boolean isCached(java.lang.String key, long position, long length) {
    com.google.android.exoplayer.upstream.cache.CachedContent cachedContent = index.get(key);
    if (cachedContent == null) {
        return false;
    }
    return cachedContent.isCached(position, length);
}

@java.lang.Override
public void onSessionSuspended(com.google.android.gms.cast.framework.CastSession session, int reason) {
    timber.log.Timber.d("VideoDetailsFragment : onSessionSuspended()");
}

@java.lang.Override
public void onClick(android.view.View v) {
    chooseCategory(5);
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    stopService(new android.content.Intent(this, brotic.findmyfriends.Service.PositionService.class));
}

@android.support.annotation.Nullable
android.app.Activity getCurrent() {
    try {
        return activityStack.peek().get();
    } catch (java.util.EmptyStackException e) {
        return null;
    }
}

private android.net.Uri getDownloadUri() {
    return android.net.Uri.parse(getDownloadUrl().replace("https", "http"));
}

@java.lang.Override
protected void onPostExecute(android.graphics.Bitmap bitmap) {
    imagePreview.setImageBitmap(bitmap);
}

@java.lang.Override
public void onLongPress(android.view.MotionEvent e) {
    android.widget.Toast.makeText(main.getApplicationContext(), "press", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String query) {
    android.widget.Toast.makeText(getActivity(), query, Toast.LENGTH_SHORT).show();
    return true;
}

@java.lang.Override
public void notifyDataSetChanged() {
    for (android.database.DataSetObserver observer : observes) {
        observer.onChanged();
    }
}

@java.lang.Override
public void stop() {
    super.stop();
    com.github.ybq.android.spinkit.animation.AnimationUtils.stop(sprites);
    com.github.ybq.android.spinkit.animation.AnimationUtils.stop(getAnimation());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mItem) != null) {
        mItem.set(mItem.getOriginal());
        setViews(rootView, mItem);
    }
}

private void stop() {
    android.util.Log.i("X", "ctrl STOP");
    stopProgress();
    audioState = pl.cprojekt.cpaudiopreview.CPAudio.AUDIO_STATE.STOPPED;
    mp.stop();
    setProgress(progressStartPos);
    showPlay();
}

private int createBundle(int varValueIndex) {
    int bundleIndex = com.rfo.basic.Run.theBundles.size();
    com.rfo.basic.Run.NumericVarValues.set(varValueIndex, ((double) (bundleIndex)));
    com.rfo.basic.Run.theBundles.add(new android.os.Bundle());
    return bundleIndex;
}

private android.widget.ScrollView createContentLayout(android.content.Context context) {
    android.widget.ScrollView sv = new android.widget.ScrollView(context);
    cn.bassy.library.widget.LayoutParams params = new cn.bassy.library.widget.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
    sv.setLayoutParams(params);
    return sv;
}

@java.lang.Override
protected void onGeometryTouched(com.metaio.sdk.jni.IGeometry geometry) {
    if (geometry == (canonGeometry1)) {
        android.util.Log.d(com.google.sprint1.GameActivity.TAG, "hej");
    }
}

@java.lang.Override
public void onValueChange(android.widget.NumberPicker numberPicker, int oldVal, int newVal) {
    quantityUnit = unitOptions[newVal];
    android.util.Log.e("unit", quantityUnit);
}

public static void show(android.support.v7.app.AppCompatActivity activity, org.onebusaway.android.io.elements.ObaArrivalInfo arrival, org.onebusaway.android.report.ui.ReportProblemFragmentCallback callback) {
    org.onebusaway.android.report.ui.ReportTripProblemFragment.show(activity, arrival, null, true, callback);
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (hasFocus) {
        expirationDatePicker.show();
    }
    v.clearFocus();
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    mLastLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
    if ((mLastLocation) != null) {
        android.util.Log.d("location", java.lang.String.valueOf(mLastLocation.getLatitude()));
    }
}

public void postStartActivityDismissingKeyguard(final android.content.Intent intent, int delay) {
    mHandler.postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            handleStartActivityDismissingKeyguard(intent, true);
        }
    }, delay);
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.util.Log.i("called", "on destroy");
    dialog.dismiss();
    player.stopSelf();
}

private android.view.View getLastChild() {
    return getChildAt(((getChildCount()) - 1));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    java.lang.String email = etEmail.getText().toString();
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mMediaPlayer) {
    releaseMediaPlayer();
    mAudioManager.abandonAudioFocus(afChangeListener);
}

public com.example.caitlin.cookhelper.Recipe getRecipe(android.content.Context context, long id) {
    return new com.example.caitlin.cookhelper.DatabaseHandler(context).getRecipe(((int) (id)));
}

@org.androidannotations.annotations.Click(value = R.id.activity_login_btn_login)
void setBtnLogin() {
    validator.validate();
    doLogin();
}

@java.lang.Override
public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent event) {
    this.processAccessibilityEvent(event);
}

protected void onPostExecute(java.lang.Boolean success) {
    android.widget.TextView textView = new android.widget.TextView(this);
    textView.setText("yupppppp success");
}

private void Back() {
    android.support.v4.app.FragmentManager FM = getActivity().getSupportFragmentManager();
    FM.beginTransaction().remove(this).commit();
}

@java.lang.Override
public void onStart() {
    super.onStart();
    android.util.Log.d(org.fraunhofer.cese.madcap.SignInActivity.TAG, "On start being called, now trying to silently log in");
    org.fraunhofer.cese.madcap.authentification.MadcapAuthManager.silentLogin();
}

@java.lang.Override
public void iconTextViewOnClick(android.support.v7.widget.RecyclerView.ViewHolder v, int position) {
    if (position == 0)
        stopAnimation(v, R.drawable.power_disable_icon);
    else
        stopAnimation(v, R.drawable.power_enable_icon);
    
}

private void reloadTimeline() {
    android.util.Log.d("Reload", "Reloading timeline");
    this.adapter.refresh(this.timelineRefreshCallback);
}

@java.lang.Override
public boolean isSignedIn() {
    android.util.Log.d(com.ashomok.imagetotext.sign_in.social_networks.silent_login.SilentLoginGoogle.TAG, ("call to isSignedIn, returned " + (isSignedIn)));
    return isSignedIn;
}

@java.lang.Override
public void onInitializationSuccess(com.google.android.youtube.player.YouTubePlayer.Provider provider, com.google.android.youtube.player.YouTubePlayer player, boolean wasRestored) {
    mPlayer = player;
    if (!wasRestored) {
        mPlayer = player;
        mPlayer.setPlayerStyle(YouTubePlayer.PlayerStyle.MINIMAL);
        mPlayer.loadVideo("lc03JqnPbIk");
    }
}

@java.lang.Override
public void onAnimationUpdate(android.animation.ValueAnimator animation) {
    canvasAngle = ((float) (animation.getAnimatedValue()));
    android.util.Log.e(com.xingstarx.canvas.view.CustomView.TAG, ("onAnimationUpdate canvasAngle == " + (canvasAngle)));
}

@java.lang.Override
public void onClick(android.view.View view) {
    new ir.rasen.charsoo.model.business.DeleteBusiness(context, ir.rasen.charsoo.controller.helper.LoginInfo.getUserId(context), businessId, iOnBusinessDeletedListener).execute();
    dismiss();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.widget.Toast.makeText(this, vno[position], Toast.LENGTH_SHORT).show();
    viewCode(vno[position]);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_game_view);
    gameUpdater = new com.group7.farmtycoon.GameUpdater(this);
    gameUpdater.start();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    view = inflater.inflate(R.layout.fragment_profile, container, false);
    initialization();
    fetchData();
    return view;
}

void loadCalls(android.content.Context context, java.lang.String phoneNumberIncoming, int pageIncoming);

@java.lang.Override
public void onFailure(retrofit2.Call call, java.lang.Throwable t) {
    android.widget.Toast.makeText(this, getString(R.string.set_userdestination_api_fail), Toast.LENGTH_LONG);
}

public void registerOnStatusChange(final android.content.Intent response, final java.lang.String serviceId) {
    mOnStatusChangeEventFlag = true;
    response.putExtra(DConnectMessage.EXTRA_RESULT, DConnectMessage.RESULT_OK);
    response.putExtra(DConnectMessage.EXTRA_VALUE, "Register OnStatusChange event");
    sendResponse(response);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    prepareFragment(savedInstanceState);
    showIconInActionBar();
    initializeParse();
}

@java.lang.Override
public void onText(java.lang.CharSequence text) {
    android.util.Log.d(TAG, "onText: ");
}

private void launchPlayMenuActivity(final java.lang.String romPath, java.lang.String action) {
    paulscode.android.mupen64plusae.util.Notifier.showToast(this, java.lang.String.format(getString(R.string.toast_loadingGameInfo)));
    new paulscode.android.mupen64plusae.task.ComputeMd5Task(new java.io.File(romPath), this, action).execute();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    if (!(serviceIsStarted)) {
        serviceIsStarted = true;
        showNotification();
    }
    return START_NOT_STICKY;
}

@java.lang.Override
public void onClick(android.view.View view) {
    getChatMessages();
    sendMessages();
    handler.post(timedTask);
}

public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    if ((camera) != null) {
        camera.stopPreview();
    }
}

public void onClick(android.content.DialogInterface dialog, int which) {
    android.util.Log.d("log", "click zamknij");
    EndGame();
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    android.util.Log.d("BackEnd", ("On method onTouch " + event));
    return clickDetector.onTouchEvent(event);
}

private void launchDetailsActivity(com.example.test.samplemasterdetail.entities.RelatedTopic relatedTopic) {
    android.util.Log.d(com.example.test.samplemasterdetail.MainActivity.TAG, "launchDetailsActivity: ");
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.test.samplemasterdetail.DetailsActivity.class);
    intent.putExtra(com.example.test.samplemasterdetail.MainActivity.DETAILS_KEY, relatedTopic);
    startActivity(intent);
}

public void toBack() {
    android.view.ViewGroup parent = ((android.view.ViewGroup) (this.getParent()));
    parent.removeView(this);
    parent.addView(this, 0);
}

public void handleMessage(android.os.Message msg) {
    super.handleMessage(msg);
    cancelLoader();
    initviews();
}

@java.lang.Override
public void onBackPressed() {
    if (decision.equals("NO")) {
        android.widget.Toast.makeText(getApplicationContext(), "You have to exit the queue first !", Toast.LENGTH_SHORT).show();
    }else {
        super.onBackPressed();
    }
}

protected void onResume() {
    if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED))
        com.example.gdev.unipicityguide.MainActivity.locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this);
    
    super.onResume();
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.buttonRestart :
            start();
            break;
        case R.id.buttonStop :
            stop();
            finish();
            break;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_choose_topic);
}

void shutdown() {
    android.os.Looper.myLooper().quit();
    synchronized(renderObj) {
        isReady = true;
        renderObj.notify();
    }
    android.util.Log.d(com.flipcam.view.CameraView.TAG, "Camera thread done... main thread can continue");
}

public void loadVisite(java.lang.String element, boolean french, android.content.Context context) {
    m_GoogleMap.clear();
    theron_b.com.visitetablette.tool.DataExplorer dataExplorer = new theron_b.com.visitetablette.tool.DataExplorer(element, m_GoogleMap);
    m_ListPlacesObjects = dataExplorer.getM_ListPlacesObjects();
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(getBaseContext(), message, Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onTerminate() {
    super.onTerminate();
    component.episodeDownloads().unregisterReceiver();
    android.util.Log.d("APP", "unregister");
}

@java.lang.Override
public org.appcelerator.titanium.view.TiUIView createView(android.app.Activity activity) {
    mView = new de.appwerft.spinkit.SpinnerViewProxy.SpinnerView(this);
    mView.getLayoutParams().autoFillsHeight = true;
    mView.getLayoutParams().autoFillsWidth = true;
    return mView;
}

@android.support.annotation.NonNull
public java.util.Set<java.lang.String> readFilteredCategories() {
    return getDefaultPrefs().getStringSet(com.blogspot.e_kanivets.moneytracker.controller.PreferenceController.KEY_FILTERED_CATEGORIES, new java.util.HashSet<java.lang.String>());
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.widget.Toast.makeText(getApplicationContext(), "Apagar da base de dados", Toast.LENGTH_SHORT).show();
    if (deletarCotacaoNaBase()) {
        finish();
    }
}

@java.lang.Override
public void onNext(android.view.View view) {
    com.srmarlins.weather.network.model.WeatherInfo info = ((com.srmarlins.weather.network.model.WeatherInfo) (view.getTag(WeatherRecyclerAdapter.VIEW_KEY)));
    startActivity(com.srmarlins.weather.ui.activity.DetailActivity.newIntent(this, info));
}

private com.teamagam.gimelgimel.app.Alerts.view.BubbleAlertsSubcomponent.PeakColorToolbarAnimator createActionbarAnimator(android.app.Activity activity) {
    return new com.teamagam.gimelgimel.app.Alerts.view.BubbleAlertsSubcomponent.PeakColorToolbarAnimator(mToolbar, activity.getResources());
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.app.Activity a, android.view.Menu m) {
    menu = m;
    generateMenu();
    return (size()) > 0;
}

private void loadProgram() {
    android.content.Intent intent = new android.content.Intent(tech.michaeloverman.android.mscount.dataentry.MetaDataEntryFragment.mActivity, tech.michaeloverman.android.mscount.database.LoadNewProgramActivity.class);
    startActivityForResult(intent, tech.michaeloverman.android.mscount.dataentry.MetaDataEntryFragment.REQUEST_NEW_PROGRAM);
}

public static synchronized void send(java.lang.String message) {
    android.util.Log.e("Trying to send ", message);
    com.example.simon.battleships.GameManager.clientWrite = new com.example.simon.battleships.ClientWrite(com.example.simon.battleships.GameManager.client, message);
    com.example.simon.battleships.GameManager.clientWrite.start();
}

@java.lang.Override
public void onClick(android.view.View v) {
    input2.setText(vickenkrikorian.calculator.Advanced.solve(input2.getText().toString().substring(((bracket) + 1))));
    actionLocation = -1;
}

public void updateArticleView(int position) {
    mCurrentPosition = position;
    android.widget.TextView textView = ((android.widget.TextView) (getView().findViewById(R.id.article_text)));
    textView.setText(Articles.Articles[position]);
}

public void onCompletion(android.media.MediaPlayer player) {
    player.reset();
    playSound();
}

@java.lang.Override
public void onStart() {
    super.onStart();
    cm = ((android.net.ConnectivityManager) (com.adsamcik.signalcollector.DataStore.context.getSystemService(Context.CONNECTIVITY_SERVICE)));
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    if (fromUser && ((org.gtlp.yasb.SoundActivity.soundPlayerInstance) != null))
        org.gtlp.yasb.SoundActivity.soundPlayerInstance.seekTo(progress);
    
}

@java.lang.Override
public java.lang.Boolean call(com.etiennelawlor.moviehub.data.model.MoviesPage moviesPage) {
    android.util.Log.d(com.etiennelawlor.moviehub.data.source.movies.MoviesRepository.TAG, ("call: moviesPage.isExpired() - " + (moviesPage.isExpired())));
    return !(moviesPage.isExpired());
}

public java.util.List<android.location.Location> getLocationsToProcess() {
    java.util.List<android.location.Location> outputList = new java.util.ArrayList<android.location.Location>(locationsToProcess);
    locationsForThisRun.addAll(locationsToProcess);
    locationsToProcess.clear();
    return outputList;
}

public void setVerticalInterval(float interval) {
    mVerticalInterval = co.lujun.androidtagview.Utils.dp2px(getContext(), interval);
    postInvalidate();
}

public static void e(final java.lang.String msg) {
    if (com.stanko.tools.Log.isDebuggable)
        android.util.Log.e(com.stanko.tools.Log.getMethodName(), msg);
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_project_photo_select);
    project_photo_select_activity = this;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    menuhandler = new com.nag.android.stm.MenuHandler(getActivity(), this);
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mListener = ((com.akash.vachana.fragment.KathruListFragment.OnKathruListFragmentInteractionListener) (getArguments().getSerializable("listener")));
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    mRecordButton.setEnabled(true);
    mDeleteButton.setEnabled(true);
    stopPlaying();
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.util.Log.e("ListView", ("onItemSelected:" + position));
}

public com.lzj.appupdate.UpdateManager config(android.content.Context context, boolean debug, boolean useDefaultDialogDisplay) {
    UpdateConfigs.context = context;
    UpdateConfigs.DEBUG = debug;
    UpdateConfigs.useDefaultDialogDisplay = useDefaultDialogDisplay;
    return com.lzj.appupdate.UpdateManager.getInstance();
}

@java.lang.Override
public com.lweynant.yearly.model.BirthdayBuilder set(android.os.Bundle bundle) {
    super.set(bundle);
    if (bundle.containsKey(com.lweynant.yearly.model.BirthdayBuilder.KEY_LAST_NAME)) {
        lastName = bundle.getString(com.lweynant.yearly.model.BirthdayBuilder.KEY_LAST_NAME);
    }
    return this;
}

public void update(com.beccap.weathervane.model.WeatherStatus weatherStatus, android.location.Location currentLocation) {
    _weatherStatus = weatherStatus;
    _currentLocation = currentLocation;
    updateView(getView());
    android.util.Log.d(com.beccap.weathervane.WeatherStatusFragment.TAG, "calling updateMap from update()");
    updateMap();
}

private void globalToast(final java.lang.String text) {
    jwtc.android.chess.ics.Toast t = jwtc.android.chess.ics.Toast.makeText(this, text, Toast.LENGTH_LONG);
    t.setGravity(Gravity.BOTTOM, 0, 0);
    t.show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mOnItemClickListener) != null) {
        int position = holder.getAdapterPosition();
        mOnItemClickListener.onItemClick(v, mDataList.get(position), position);
    }
}

@java.lang.Override
public android.os.Parcelable onSaveInstanceState() {
    android.util.Log.d(com.github.rtoshiro.view.video.FullscreenVideoView.TAG, "onSaveInstanceState");
    return super.onSaveInstanceState();
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<android.database.Cursor> loader) {
    android.widget.Toast.makeText(getApplicationContext(), "Provider resetting", Toast.LENGTH_SHORT).show();
    mTaskCursorAdapter.swapCursor(null);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.dismiss();
    this.finish();
}

@java.lang.Override
public void extractIntentData() {
    if (getIntent().hasExtra(com.skillvo.android.views.PortFolioActivity.KEY_DATA_MODEL)) {
        mPagedDataModel = getIntent().getParcelableExtra(com.skillvo.android.views.PortFolioActivity.KEY_DATA_MODEL);
        portfolioViewModel.bindPagedDataModel(mPagedDataModel);
        com.skillvo.android.utils.DialogUtils.showToast(getApplicationContext(), "Portfolio Object Found");
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getFragmentManager().beginTransaction().add(R.id.settings_fragment, new com.dbtest.ivan.app.fragment.SettingsFragment()).commit();
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_done, menu);
    menu.getItem(0).setVisible(false);
    return true;
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    spring.setCurrentValue(1);
    spring.setEndValue(0);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if (position != (spinnerPos)) {
        spinnerPos = position;
        updateMethodIcon(position);
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    this.finish();
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_two, container, false);
    return super.onCreateView(inflater, container, savedInstanceState);
}

public void swapCursor(android.database.Cursor cursor) {
    this.mCursor = cursor;
    notifyDataSetChanged();
}

@java.lang.Override
public void onQuestionsLoaded(java.util.List<com.jbrys.android.bloquery.api.model.Question> questions) {
    for (com.jbrys.android.bloquery.api.model.Question q : questions) {
        mQuestionList.add(q);
    }
    mAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void onHandRelease(com.daimajia.swipe.SwipeLayout arg0, float arg1, float arg2) {
    android.util.Log.d("TimeFleeting", "onHandRelease");
}

@java.lang.Override
public void onPanelCollapsed(android.view.View panel) {
    android.util.Log.i(com.pipit.waffle.TestFragmentNew.TAG, "onPanelCollapsed");
    isExpanded = false;
}

@java.lang.Override
public void onDestroy() {
    this.unregisterReceiver(this.m24HourResetReceiver);
    android.util.Log.v(com.general.mediaplayer.csr.services.CsrManagerService.TAG, "===onDestroy==");
    this.mHandler.removeCallbacks(this.mTimerRunable);
    super.onDestroy();
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.graphic_fragment, null);
    initView(view);
    InitUUID(savedInstanceState);
    return view;
}

@java.lang.Override
public void oneclick() {
    android.content.Intent camera = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    startActivityForResult(camera, 0);
    android.content.Intent i = new android.content.Intent(this, com.example.bordia98.drawer.upload_activity.class);
    startActivity(i);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    me.nereo.multi_image_selector.MultiImageSelector.create(this).single().start(this, Config.REQUEST_IMAGE_CODE);
    dismissDialog();
}

public void registerReceiver() {
    broadcastReceiver = new com.kiwi.flickrbatchdownload.photolist.PhotoListActivity.MBroadcastReceiver();
    android.support.v4.content.LocalBroadcastManager.getInstance(this).registerReceiver(broadcastReceiver, new android.content.IntentFilter(com.kiwi.flickrbatchdownload.download.DownloadService.IMAGE_TASKINFO_SENDBACK_ACTION));
}

private engine.LocalFolder getDcim() {
    if ((mDcim) == null) {
        java.io.File root = android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);
        mDcim = new com.dmitrymalkovich.fileexplorer.LocalFolderImpl(root);
        mDcim.setPredefinedThumbnail(R.drawable.ic_photo_camera_grey600_24dp);
    }
    return mDcim;
}

@java.lang.Override
public void onLoadFinished(android.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    updateTitleAndUnread();
    adapter.notifyDataSetChanged();
}

private void updateUI(com.ashokgujju.newsonair.PlaybackStatus status) {
    buildNotification(status);
    org.greenrobot.eventbus.EventBus.getDefault().postSticky(new com.ashokgujju.newsonair.MediaPlayerServiceResult(android.app.Activity.RESULT_OK, status));
}

@java.lang.Override
public org.akanza.androidosms.core.OSms build() throws java.io.IOException, org.akanza.androidosms.core.exception.HttpApiOrangeException {
    if (((id) == null) || ((secretCode) == null)) {
        org.akanza.androidosms.entity.Token token = obtainsToken();
        return new org.akanza.androidosms.core.OSms(token, Builder.client);
    }
    return null;
}

@java.lang.Override
public void onLocationAvailability(com.google.android.gms.location.LocationAvailability locationAvailability) {
    boolean available = locationAvailability.isLocationAvailable();
    googleApiClientStatus(native_ptr_, (available ? ru.dublgis.androidlocation.GmsLocationProvider.STATUS_REQUEST_SUCCESS : ru.dublgis.androidlocation.GmsLocationProvider.STATUS_REQUEST_FAIL));
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    if (!(com.hungnt.customlogin.fragments.MusicPlayerFragment.isPlaying)) {
        seekTime();
    }
}

public void ReleaseButton(int i) {
    SendData(releaseKey[i]);
    android.util.Log.i("iBeatCon", (("Button " + i) + " Released"));
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animator) {
    gameView.animatedCards.add(cardView.getCard());
    gameView.drawQueue();
    super.onAnimationStart(animator);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    de.fau.sensorlib.DsSensorManager.checkBtLePermissions(this, true);
    android.util.Log.d(de.fau.teksample.MainActivity.TAG, ("Ver: " + (Build.VERSION.SDK_INT)));
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.i(ch.hevs.aislab.paams.ui.ListValuesFragment.TAG, "Warning: onDestroy() was called!");
    super.onDestroy();
}

@java.lang.Override
public void run() {
    menuProcessor.processActivity(activity);
    android.view.View view = activity.getWindow().getDecorView();
    processView(view);
}

@java.lang.Override
public void createSketch() {
    processing.core.PApplet sketch = new devel.android_everything_test.WallpaperSketch();
    java.lang.System.out.println(("created sketch " + sketch));
    setSketch(sketch);
}

public static org.shreyans.greendot.fragments.CreateGoalFragment newInstance() {
    android.util.Log.d(org.shreyans.greendot.fragments.CreateGoalFragment.TAG, "in CreateGoalFragment.newInstance");
    org.shreyans.greendot.fragments.CreateGoalFragment f = new org.shreyans.greendot.fragments.CreateGoalFragment();
    return f;
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    org.smap.smapTask.android.activities.MainTabsActivity.stopNFCDispatch(this, mNfcAdapter);
    if (listenerRegistered) {
        unregisterReceiver(listener);
        listenerRegistered = false;
    }
}

private void updateScore() {
    android.widget.TextView scoreDisplay = ((android.widget.TextView) (findViewById(R.id.scoreId)));
    scoreDisplay.setText(java.lang.Integer.toString(l00lgamescommunity.movingsquares.MainActivity.getScore()));
}

public synchronized void removeAll(java.util.List<T> items) {
    this.data.remove(items);
    com.flyn.smartandroid.ui.interfaces.ListBaseAdapter.notifyDataSetChanged();
}

public boolean isExternalStorageWritable() {
    java.lang.String state = android.os.Environment.getExternalStorageState();
    if (Environment.MEDIA_MOUNTED.equals(state)) {
        return true;
    }
    return false;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case android.content.DialogInterface.BUTTON_POSITIVE :
            deleteMember(simNumber);
            break;
        case android.content.DialogInterface.BUTTON_NEGATIVE :
            dialog.cancel();
            break;
    }
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mediaPlayer, int i, int i1) {
    android.util.Log.v("MUSIC PLAYER", "Playback Error");
    return true;
}

@java.lang.Override
public void onCancelScanDone() {
    com.fezrestia.android.viewfinderanywhere.control.OverlayViewFinderController.getInstance().getCurrentState().onCancelScanDone();
}

@java.lang.Override
public void onPersonAdded(com.djonique.birdays.models.Person person) {
    pagerAdapter.addPerson(person);
    android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(findViewById(R.id.container), R.string.record_added, Snackbar.LENGTH_SHORT);
    snackbar.show();
}

@java.lang.Override
public void onLocationAvailable(java.lang.String postalCode) {
    mSearchFilter.setPostalCode(postalCode);
    android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), ("Location found: " + postalCode), Snackbar.LENGTH_LONG).show();
}

public void seekToPosition(int i) {
    if (i > 10000) {
        this.player.seekToPosition(i);
    }else {
        android.util.Log.d(saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG, (("Position " + i) + " is less than three seconds. Let's just skip the seek. Probably a new track"));
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if ((id == (R.id.action_search)) || (super.onOptionsItemSelected(item)))
        return true;
    else
        return false;
    
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_best_day :
            onBestDaySelected();
            return true;
        default :
            return false;
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int which) {
    deleteBottomFolder(path);
    dialog.dismiss();
}

private void openActivity(java.lang.Class myClass) {
    android.content.Intent intent = new android.content.Intent(this, myClass);
    startActivity(intent);
    stopAlarm();
}

public void onSwipeLeft() {
    android.util.Log.d(com.lyk.ai_2048.main.MainGameActivity.TAG, "swiped left");
    numberGrid.saveState();
    numberGrid.moveLeft();
}

public int getDefaultNightMode() {
    return android.support.v7.app.AppCompatDelegate.getDefaultNightMode();
}

private android.app.AlertDialog getNetworkErrorDialog(android.app.Activity activity, android.content.DialogInterface.OnClickListener createNetworkListener) {
    if ((networkErrorDialog) == null) {
        createNetworkErrorDialog(activity, createNetworkListener);
    }
    return networkErrorDialog;
}

public void setOrder(android.view.MenuItem order) {
    if ((setItemOrder()) == (com.example.personale.noteexam.controller.utilities.Field.ORDER_DESC)) {
        order.setIcon(R.drawable.ic_desc);
    }else {
        order.setIcon(R.drawable.ic_asc);
    }
}

@java.lang.Override
public boolean onCreateActionMode(android.view.ActionMode mode, android.view.Menu menu) {
    mMode = mode;
    getMenuInflater().inflate(R.menu.select_all, menu);
    mode.setTitle("已選擇:0");
    android.util.Log.i("zj", "onCreateActionMode");
    return true;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    tv_test = ((android.widget.TextView) (findViewById(R.id.tv_test)));
    tv_test.setText(BuildConfig.MARKET_URL);
}

@java.lang.Override
public rx.Completable call(java.lang.Throwable throwable) {
    return rx.Completable.error(new com.polidea.rxandroidble.exceptions.BleCannotSetCharacteristicNotificationException(bluetoothGattCharacteristic, com.polidea.rxandroidble.exceptions.BleCannotSetCharacteristicNotificationException.CANNOT_WRITE_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR));
}

void pause() {
    camera.stopPreview();
    camera.setPreviewCallback(null);
    camera.release();
    android.util.Log.d("", "pause: camera released");
}

public static void showLoading(@android.support.annotation.NonNull
android.view.View loadingView, @android.support.annotation.NonNull
android.view.View contentView, @android.support.annotation.NonNull
android.view.View errorView) {
    errorView.setVisibility(View.GONE);
    loadingView.setVisibility(View.VISIBLE);
}

@java.lang.Override
protected void onDetachedFromWindow() {
    android.util.Log.d("CustomViewFlipper", "onDetachedFromWindow");
    super.onDetachedFromWindow();
}

public static com.obabichev.artists.fragments.ArtistDetailsFragment create(android.content.Context context, com.obabichev.artists.model.Artist artist) {
    com.obabichev.artists.fragments.ArtistDetailsFragment fragment = new com.obabichev.artists.fragments.ArtistDetailsFragment();
    fragment.artist = artist;
    fragment.context = context;
    return fragment;
}

@java.lang.Override
public void onTimeSet(android.widget.TimePicker timePicker, int hourOfDay, int minute) {
    mCalendar.set(java.util.Calendar.HOUR_OF_DAY, hourOfDay);
    mCalendar.set(java.util.Calendar.MINUTE, minute);
    updateTime();
}

@java.lang.Override
public void onClick(android.view.View v) {
    ipv.setCoverDrawable(R.drawable.no_cover);
    playlist.play(((playlist.getSongIndex()) + 1), songInfo, sharerInfo);
    playing = true;
}

@java.lang.Override
public void onDateSetSuccess(java.util.Date date) {
    mDob = date;
    java.lang.String dateString = com.lftechnology.khop.khop.utils.DateUtils.getDateString(date, com.lftechnology.khop.khop.activity.AddChildActivity.DATE_FORMAT);
    android.widget.Toast.makeText(this, dateString, Toast.LENGTH_SHORT).show();
    mDateOfBirth.setText(dateString);
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.morning.AlarmService.snoozeAlarm(this, mAlarm);
    finish();
}

public com.takahirom.android_abtest_builder.ABTest<T> buildIfFirstTime() {
    com.takahirom.android_abtest_builder.ABTest<T> builtInstance = com.takahirom.android_abtest_builder.ABTest.getBuiltInstance(context, clazz);
    if (builtInstance != null) {
        return builtInstance;
    }
    return build();
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.util.Log.v(TAG, "onCreateOptionsMenu()");
    getMenuInflater().inflate(R.menu.options_menu, menu);
    return true;
}

@java.lang.Override
public void onCloseWindow(android.webkit.WebView window) {
    android.util.Log.d(getString(R.string.TAG), "Window Closed");
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    if ((menu.size()) == 2) {
        inflater.inflate(R.menu.menu_favourite, menu);
        super.onCreateOptionsMenu(menu, inflater);
    }
}

@com.facebook.react.bridge.ReactMethod
@android.support.annotation.NonNull
public java.lang.Object variationForKeyWithDefaultValue(@android.support.annotation.NonNull
java.lang.String key, @android.support.annotation.NonNull
java.lang.Object defaultValue, @javax.annotation.Nullable
com.facebook.react.bridge.Callback callback) {
    java.lang.Object retrievedObject = com.vwo.mobile.VWO.getVariationForKey(key, defaultValue);
    if (callback != null) {
        callback.invoke(retrievedObject);
    }
    return retrievedObject;
}

@java.lang.Override
protected void onStartLoading() {
    super.onStartLoading();
    progressBar.setVisibility(View.VISIBLE);
    android.widget.Toast.makeText(this, "Started Loading", Toast.LENGTH_SHORT).show();
    forceLoad();
}

@java.lang.Override
public void onClick(android.view.View v) {
    uploadImage();
    uploadImage();
    android.widget.Toast.makeText(getApplicationContext(), "Upload Here", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.v("Flathead", "[Flow] Java - onDestroy");
    com.flathead.MYFWPackage.MYFWActivity.NativeOnDestroy();
    if (m_ShowAds) {
    }
    super.onDestroy();
    m_IAPManager.Shutdown();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.input_categories);
    connector = new be.coenenjonas.spendapp.Connector();
    java.lang.System.out.println("helloworldomgyes");
    setup();
}

private void init() {
    if (isInEditMode()) {
        android.view.View view = inflate(this.getContext(), R.layout.card, this);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    boolean checked = ((android.widget.CheckBox) (v)).isChecked();
}

@java.lang.Override
public void onMessageReceived(java.lang.String endpointId, byte[] payload, boolean isReliable) {
    if (!isReliable) {
        return ;
    }
    int message = de.handler.mobile.android.videobox.MessageHelper.unmapPayload(payload);
    this.handleMessage(message);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    command &= 248;
    command |= progress;
    sendCommand();
    receiveAndUpdateStatus();
}

public void speak(java.lang.String toSpeak) {
    android.widget.Toast.makeText(getApplicationContext(), toSpeak, Toast.LENGTH_SHORT).show();
    t1.speak(toSpeak, TextToSpeech.QUEUE_FLUSH, params);
}

private void navigateToMain() {
    android.content.Intent intent = new android.content.Intent(this, com.patels95.sanam.ewb.ui.MainActivity.class);
    startActivity(intent);
    android.widget.Toast.makeText(this, "You have been logged out.", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    _processed = true;
    android.widget.Toast.makeText(getApplicationContext(), "Przetworzono ", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    countmaterial.add(position, s.toString());
}

public void initVariable() {
    android.util.Log.i("INIT", "TopupFragment");
    hideSoftKeyboard(getActivity().getCurrentFocus());
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    tvShowDetailPresenter.seasonSelected(position);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    singleton.removeFromAllLinks(positionToRemove);
    notifyDataSetChanged();
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.content.IntentFilter intentFilter = new android.content.IntentFilter();
    intentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
    intentFilter.addAction("android.location.PROVIDERS_CHANGED");
    getActivity().registerReceiver(receiver, intentFilter);
    setup();
}

public void newCameraOpen(android.view.View view) {
    android.widget.Toast.makeText(this, "NewCamera", Toast.LENGTH_SHORT).show();
    android.content.Intent intent = new android.content.Intent(this, cs321.classcamapp.CameraActivity2.class);
    startActivity(intent);
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    ensureRecycler();
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent ev) {
    if (((isInPlaybackState()) && ((mMediaController) != null)) && ((mCurrentState) != (meng.videoplayproto.widget.TextureVideoView.STATE_PLAYBACK_COMPLETED))) {
        toggleMediaControlsVisibility();
    }
    return false;
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    if ((googleApiClient) != null) {
        android.util.Log.i(au.com.mazeit.seedaudit.GoogleDrive.TAG, "In onStop() - disConnecting...");
        googleApiClient.disconnect();
    }
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mediaPlayer, int what, int extra) {
    if ((videoView) == null) {
        return false;
    }
    com.medo.tweetspie.utils.IntentUtils.openUrl(this, url);
    exit();
    return false;
}

public static void synchronizeMotivationCsv(android.content.Context context) {
    android.util.Log.d("darkGoals", "synchronizing csv");
    aman.darkgoals.MotivationAlarm.DownloadCsvTask csvTask = new aman.darkgoals.MotivationAlarm.DownloadCsvTask(context);
    csvTask.execute(((aman.darkgoals.MotivationAlarm.MOTIVATION_PATH) + (aman.darkgoals.MotivationAlarm.MESSAGES_CSV)));
}

private void showEditDialog(info.dylansymons.fpfrhelper.player.Player player) {
    android.app.DialogFragment fragment = info.dylansymons.fpfrhelper.game.management.NewPlayerDialogFragment.newEditInstance(mGame.getFirefighterList(), mColourList, this, player);
    fragment.show(getFragmentManager(), "dialog");
}

public void onConfigurationChanged(android.content.res.Configuration config) {
    com.gigigo.ggglogger.GGGLogImpl.log("onConfigurationChanged");
    vuforiaAppSession.onConfigurationChanged();
}

public static java.lang.String retrieveAuthToken(android.content.Context context) {
    com.reminisense.fa.models.LoginResult loginResult = com.reminisense.fa.managers.CacheManager.retrieveLoginResult(context);
    return loginResult.getAuthenticationToken();
}

@java.lang.Override
public void onBackPressed() {
    android.app.FragmentManager fm = getFragmentManager();
    fm.popBackStack(null, android.support.v4.app.FragmentManager.POP_BACK_STACK_INCLUSIVE);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    view = inflater.inflate(R.layout.fragment_intros, container, false);
    initView(view);
    initData();
    return view;
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    super.onAnimationEnd(animation);
    android.view.ViewGroup.LayoutParams params = mTabs.getLayoutParams();
    params.height = mToolbar.getHeight();
    mTabs.setLayoutParams(params);
    mLoadingContainer.setVisibility(View.GONE);
}

private void checkForResumedCalculating() {
    if ((!(android.text.TextUtils.isEmpty(answer))) && (android.text.TextUtils.isEmpty(equation))) {
        equationHandler.handleResumedCalculating(equation, answer);
    }
}

public static boolean isT9Auto(android.content.Context context) {
    android.content.SharedPreferences sp = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
    return sp.getBoolean("t9_auto", false);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d("TEST", ("TAG" + (view.getTag())));
    com.jayway.alphabet.tracking.FirebaseTracker.getInstance().send(("REGISTRATION_ON_FIELD_CLICKED_" + (view.getTag())));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((targetAccuracy) == (com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY)) {
        currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO;
        resetLocationPointAtCurrentPosition();
        refreshClearButtonVisibility();
    }else {
        showClearDialog();
    }
}

@com.o3dr.services.android.lib.drone.connection.ConnectionType.Type
public int getConnectionParameterType() {
    @com.o3dr.services.android.lib.drone.connection.ConnectionType.Type
    int connectionType = java.lang.Integer.parseInt(prefs.getString(org.droidplanner.android.utils.prefs.DroidPlannerPrefs.PREF_CONNECTION_TYPE, org.droidplanner.android.utils.prefs.DroidPlannerPrefs.DEFAULT_CONNECTION_TYPE));
    return connectionType;
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    mp = new android.media.MediaPlayer();
}

@java.lang.Override
public void onClick(android.view.View v) {
    root.setDefault(s, view);
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    setCurrentItem(msg.what);
}

@javax.inject.Singleton
@dagger.Provides
com.kamk2k.alkobuddy.presenter.MainActivityPresenter provideMainActivityPresenter(com.kamk2k.alkobuddy.presenter.logic.UserStateChangeHandler userStateChangeHandler, android.os.Handler updateHandler, com.kamk2k.alkobuddy.presenter.CreateDrinkPresenter createDrinkPresenter) {
    return new com.kamk2k.alkobuddy.presenter.MainActivityPresenterImpl(userStateChangeHandler, updateHandler, createDrinkPresenter);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (vacationMode) {
        confirmOff();
        vacationMode = false;
    }else {
        confirmOn();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_detail);
    setTitle("DetailActivity");
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    this.tag = ((io.tanners.taggedwallpaper.interfaces.IGetTag) (getActivity())).getTag();
}

public void setPermission(int permission) {
    android.util.Log.d("Journee-permission", ("setting permission:" + permission));
    this.permission = permission;
}

@java.lang.Override
public void onProviderDisabled(java.lang.String s) {
    android.util.Log.d("GPSTest", "onProviderDisabled called");
    org.redcross.openmapkit.tagswipe.TagEdit.cleanUserLocationTags();
    checkLocationProviderEnabled();
}

@java.lang.Override
public void onBandUpErrorResponse(com.android.volley.VolleyError error) {
    android.util.Log.d(com.melodies.bandup.gcm_tools.RegistrationIntentService.TAG, error.getMessage());
}

public void showJobActivity(android.view.View view) {
    saveInfo();
    android.content.Intent intent = new android.content.Intent(this, dat255.chalmers.com.welcome.JobActivity.class);
    dat255.chalmers.com.welcome.GenderAndBirthActivity.jobActivityActivated = true;
    startActivity(intent);
}

public void addHeaderView(android.view.View view) {
    mHeaderView = view;
    mGloriousAdapter.notifyItemInserted(0);
}

public void resetSelectedTags() {
    for (android.widget.CheckBox c : checkBoxes)
        c.setChecked(false);
    
    selectedStrings.clear();
}

@java.lang.Override
public nu.yona.app.ui.challenges.TimeZoneGoalViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View layoutView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.timezoen_goal_item_layout, null);
    nu.yona.app.ui.challenges.TimeZoneGoalViewHolder rHolder = new nu.yona.app.ui.challenges.TimeZoneGoalViewHolder(layoutView, clickListener);
    return rHolder;
}

private void handleIntent(android.content.Intent intent) {
    com.sina.weibo.sdk.api.share.IWeiboShareAPI api = mIShareWeiboHelper.getIWeiboShareAPI();
    if (api != null) {
        api.handleWeiboResponse(intent, com.idonans.ishare.weibo.IShareWeiboHelper.getGlobalWeiboHandlerResponseAdapter());
    }
}

public static void returnToDefaultTheme(android.content.Context context) {
    Settings.Secure.putInt(context.getContentResolver(), Settings.Secure.THEME_PRIMARY_COLOR, 1);
    Settings.Secure.putInt(context.getContentResolver(), Settings.Secure.THEME_ACCENT_COLOR, 0);
}

@java.lang.Override
public void onItemSelected(android.net.Uri eventUri) {
    android.content.Intent intent = new android.content.Intent(this, com.example.olivi.maphap.DetailActivity.class).setData(eventUri);
    startActivity(intent);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    cn.alien95.util.Utils.Log("fragment onCreate");
    getActivity().setTitle("吃货");
    adapter = new cn.zhou.foodie.module.adapter.CommodityAdapter(java.security.AccessController.getContext());
}

@javax.annotation.Nullable
public static java.lang.String getCleanString(android.text.Editable editable) {
    java.lang.String str = editable.toString().trim();
    return (str.length()) > 0 ? str : null;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.util.Log.i("alertdialog", " Please save the home location");
}

public void onClick(android.content.DialogInterface dialog, int which) {
    progressDialog.dismiss();
    getFragmentManager().popBackStack();
}

public void ProfileSetting() {
    android.content.Intent myIntent = new android.content.Intent(this, gopackdev.arrivalpack.ProfileSettingActivity.class);
    startActivity(myIntent);
}

@java.lang.Override
protected void onStop() {
    if ((photoListAdapter) != null) {
        android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(broadcastReceiver);
    }
    super.onStop();
}

public static android.security.KeyStore getInstance() {
    android.security.IKeystoreService keystore = IKeystoreService.Stub.asInterface(android.os.ServiceManager.getService("android.security.keystore"));
    return new android.security.KeyStore(keystore);
}

public void onClick(android.view.View v) {
    startActivity(game_intent);
    startService(new android.content.Intent(this, com.example.veronika.ball.MusicService.class));
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.allfeedsitem, menu);
    android.view.MenuItem searchItem = menu.findItem(R.id.action_search);
    searchItem.setVisible(false);
    return super.onCreateOptionsMenu(menu);
}

public static com.android.volley.RequestQueue getRequestQueue() {
    if ((com.aspsine.swipetoloadlayout.demo.App.sRequestQueue) == null) {
        synchronized(com.aspsine.swipetoloadlayout.demo.App.class) {
            com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue(com.aspsine.swipetoloadlayout.demo.App.sContext);
        }
    }
    return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue;
}

@java.lang.Override
public java.lang.Boolean proceed(final android.content.Intent intent) {
    return com.oasisfeng.condom.CondomContext.super.bindService(intent, conn, flags);
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.v(TAG, ("onDestroy() called for fragment with tag: " + (mTag)));
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_map);
    init();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), dsca.cs.nju.mytabmenudemo.login.LoginActivity.class);
    startActivity(intent);
    finish();
}

private void pushToBackstack(@android.support.annotation.NonNull
com.bluelinelabs.conductor.RouterTransaction entry) {
    backstack.push(entry);
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    java.lang.System.out.println(new com.google.gson.Gson().toJson(error));
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    audioVisualization.linkTo(DbmHandler.Factory.newVisualizerHandler(getContext(), 0));
    viewPager.setCurrentItem(mPreferences.getStartPageIndex());
}

@java.lang.Override
public void onLoadMore(int current_page) {
    page = current_page;
    new com.androidbelieve.drawerwithswipetabs.SerialsFragment.LoadSerials(false).execute();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.content.Intent intent1 = new android.content.Intent(context, com.example.kali.weathy.WeatherActivity.class);
    intent1.putExtra("refresh", "refresh");
    startActivity(intent1);
    finish();
}

@java.lang.Override
public void onDestroy() {
    android.util.Log.w("TopicsFragment:Destroy", "I am here");
    super.onDestroy();
    topicsData = null;
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder surfaceHolder) {
    boolean startAgain = false;
    snakeThread.setRunning(false);
    while (startAgain) {
        try {
            snakeThread.join();
            startAgain = false;
        } catch (java.lang.InterruptedException e) {
        }
    } 
}

@java.lang.Override
public void onClick(android.view.View v) {
    MainContent.setText(R.string.reverb_text);
    TitleContent.setText(R.string.reverb_title);
    if (ReverbButton.isChecked()) {
        ReverbButton.setBackgroundColor(Color.GREEN);
    }else
        ReverbButton.setBackgroundColor(Color.LTGRAY);
    
}

public static void postStressMeasurementData(android.content.Context context, org.json.JSONObject object) {
    java.lang.String url = (NetworkConstants.BASE_URL) + (NetworkConstants.POST_PIP_DATA_ENDPOINT);
    new com.wearables.networking.NetworkingTask(url, true, com.wearables.networking.NetworkConstants.METHOD_TYPE.POST, com.wearables.networking.NetworkConstants.REQUEST_TYPE.POST_PIP, context).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, object);
}

@java.lang.Override
public void responseCallBack(org.json.JSONObject response) {
    android.widget.Toast.makeText(getApplicationContext(), ("Meetup successfully created!" + " Now to add content and people to it!"), Toast.LENGTH_LONG).show();
}

public void onClick(android.view.View v) {
    if ((features.backButtonCanClose) && (!(inAppWebView.canGoBack()))) {
        closeDialog();
    }else {
        goBack();
    }
}

private static boolean isGpsHardwarePresent(android.content.Context context) {
    try {
        return com.jstakun.gms.android.location.LocationServicesManager.HelperInternal.isGpsHardwarePresent(context);
    } catch (java.lang.VerifyError e) {
        return true;
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    sbGotoPage.setProgress(((mMaxPage) - 1));
    mCurrentPage = mGoToPage;
    mOffsetInPage = LAST_FLOOR_OFFSET;
    showOrLoadPage();
    dialog.dismiss();
}

@java.lang.Override
public void onClick(android.view.View view) {
    setUserLocationNoStair();
    finishButton.setVisibility(View.INVISIBLE);
}

@java.lang.Override
public void onBindViewHolder(final adapter.EstacaoAdapter.PersonViewHolder personViewHolder, int position) {
    personViewHolder.tvSupervisor.setText(lista.get(position).getDescricao());
    personViewHolder.cbCheck.setOnClickListener(new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View v) {
        }
    });
}

public void onLocationChanged(android.location.Location location) {
    location.getLatitude();
    location.getLongitude();
}

@java.lang.Override
public void onClick(@android.support.annotation.NonNull
com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull
com.afollestad.materialdialogs.DialogAction which) {
    acquisitionSaveRequest = null;
    chartComponent.play(true);
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) {
    endDateEditText.setText(formatDate(year, monthOfYear, dayOfMonth));
    startDateEditText.clearFocus();
    layout.requestFocus();
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    clear_buttons();
    Button_LandHere.setSelected(true);
    set_selected_block(3, false);
    return false;
}

@java.lang.Override
public com.exemple.android.cookbook.adapters.CategoryRecipeRecyclerAdapter.CustomViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    if ((mInflater) == null) {
        mInflater = android.view.LayoutInflater.from(mContext);
    }
    return com.exemple.android.cookbook.adapters.CategoryRecipeRecyclerAdapter.CustomViewHolder.create(mInflater, parent, mClickListener);
}

@java.lang.Override
public void onClick(android.view.View v) {
    new android.app.AlertDialog.Builder(getParent()).setTitle("Changelog").setMessage(DeprecationHelper.Html.fromHtml(fullUpdateMessage)).setPositiveButton(R.string.dialog_action_positive_close, null).show();
}

public static java.lang.Double getDoubleFromPreferences(android.content.Context context, java.lang.String name) {
    android.content.SharedPreferences preferences = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
    return java.lang.Double.valueOf(preferences.getFloat(name, 0));
}

@java.lang.Override
public void onDestroyView() {
    android.util.Log.d(mclab1.pages.MediaPlayerFragment.tag, ("height = " + (mclab1.pages.MediaPlayerFragment.controller.getHeight())));
    mclab1.pages.MediaPlayerFragment.controller.removeAllViews();
    stopService();
    super.onDestroyView();
}

@android.annotation.SuppressLint(value = "NewApi")
public synchronized void onActivity() {
    cancel();
    inactivityTask = new io.github.marktony.espresso.zxing.utils.InactivityTimer.InactivityAsyncTask();
    if ((Build.VERSION.SDK_INT) >= 11) {
        inactivityTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
    }else {
        inactivityTask.execute();
    }
}

@java.lang.Override
public void run() {
    action.doActionAndScheduleNext(player, trackSelector, surface, mainHandler, next);
    if ((repeatIntervalMs) != (com.google.android.exoplayer2.C.TIME_UNSET)) {
        clock.postDelayed(mainHandler, this, repeatIntervalMs);
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    mColors.clear();
    if ((mAdapter) != null) {
        mAdapter.notifyDataSetChanged();
    }
    bindUi();
}

public void onClick(android.content.DialogInterface dialog, int which) {
    android.content.res.Resources res = getResources();
    java.lang.String[] choices = res.getStringArray(R.array.choices);
    mChoice = choices[which];
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.d("Testing", "Resume");
    localMultiplayerView.resume();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((bottomSheetBuilding) != null) {
        setNavigationPOI(bottomSheetBuilding);
        showBuildingInfoFragment(false);
    }
}

@java.lang.Override
public void success(java.lang.Object o, retrofit.client.Response response) {
    android.util.Log.d("Debug", "success");
    java.util.ArrayList<com.example.andrew.testapp.Models.RailModel> trainLocationList = ((java.util.ArrayList<com.example.andrew.testapp.Models.RailModel>) (o));
    addTrainLocationsToMap(trainLocationList);
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar seekBar) {
    if (mp.isPlaying()) {
        pause();
    }
}

@android.annotation.SuppressLint(value = "DefaultLocale")
private java.lang.String formatPressure(double pressure) {
    return java.lang.String.format((((com.endava.abondarenco.weatherapp.forecasts.ForecastsFormatter.DOUBLE_FORMAT) + (com.endava.abondarenco.weatherapp.forecasts.ForecastsFormatter.VALUE_UNITS_SEPARATOR)) + (com.endava.abondarenco.weatherapp.forecasts.ForecastsFormatter.PRESSURE_UNITS)), pressure);
}

private android.graphics.drawable.GradientDrawable getLayer(int n, android.graphics.drawable.LayerDrawable drawableNormal) {
    return ((android.graphics.drawable.GradientDrawable) (drawableNormal.getDrawable(n).mutate()));
}

public void executeImport(android.content.Context context, org.mercycorps.translationcards.porting.TxcPortingUtility.ImportSpec importSpec) throws org.mercycorps.translationcards.porting.ImportException {
    loadData(context, importSpec);
}

public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.btn_new :
            android.content.Intent intent = new android.content.Intent(this, net.teamsv.selfalarm.NewAlarmActivity.class);
            startActivity(intent);
            break;
        case R.id.btn_record :
            break;
    }
}

public static vision.resourcemanager.RMBottomButtonFragment newInstance(byte type) {
    vision.resourcemanager.RMBottomButtonFragment fragment = new vision.resourcemanager.RMBottomButtonFragment();
    android.os.Bundle args = new android.os.Bundle();
    args.putByte(vision.resourcemanager.RMBottomButtonFragment.ARG_PARAM1, type);
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onStop() {
    if ((this.currentTask) != null) {
        android.util.Log.d("actuseries", "cancelling recup banniere");
        this.currentTask.cancel(true);
    }
    super.onPause();
}

public static void closeApp(android.content.Context context) {
    android.widget.Toast.makeText(context, ((com.familyparking.app.utility.Tools.getAppName(context)) + " cannot work without location services!"), Toast.LENGTH_LONG).show();
    ((android.app.Activity) (context)).finish();
}

public static com.mdsgpp.eef.controller.StateConroller getInstance(android.content.Context contextActivity) {
    if ((com.mdsgpp.eef.controller.StateConroller.instance) == null)
        com.mdsgpp.eef.controller.StateConroller.instance = new com.mdsgpp.eef.controller.StateConroller(contextActivity);
    
    return com.mdsgpp.eef.controller.StateConroller.instance;
}

public void interactionEnded() throws java.io.IOException {
    if ((socket) != null) {
        socket.close();
    }
    socket = null;
    com.android.gscaparrotti.bendermobile.network.ServerInteractor.instance = null;
}

@java.lang.Override
public void onBufferReceived(byte[] buffer) {
    android.util.Log.d(com.shaedar.virtualclient.VoiceEngine.GoogleRecognizer.TAG, "onBufferReceived");
}

public void onClick(android.view.View v) {
    temp_button.setVisibility(View.GONE);
    food.remove(entry.getKey());
}

private void navigateToMain() {
    android.content.Intent toMain = new android.content.Intent(this, org.secfirst.umbrella.MainActivity.class);
    toMain.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.support.v4.content.IntentCompat.FLAG_ACTIVITY_CLEAR_TASK)));
    startActivity(toMain);
}

void setControls() {
    lisCate = ((android.widget.ListView) (getActivity().findViewById(R.id.lisCategoryFragment)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.bck_btn_id :
            {
                backButtonPressed();
                break;
            }
        case R.id.home_btn_id :
            {
                homeButtonPressed();
            }
        case R.id.fwd_btn_id :
            {
                forwardButtonPressed();
            }
    }
}

public void onLocationChanged(android.location.Location location) {
    mLoc = com.example.daniel.app0.MyLocationListener.mLocationManager.getLastKnownLocation(com.example.daniel.app0.MyLocationListener.mProvider);
}

@java.lang.Override
public void onGridColorBarFragmentInteraction(android.net.Uri uri) {
    com.pea.jay.redditlists.userInterface.GridColorBarFragment gridColorBarFragment = ((com.pea.jay.redditlists.userInterface.GridColorBarFragment) (getSupportFragmentManager().findFragmentById(R.id.fragment_color_bar)));
}

@android.support.annotation.NonNull
public rx.Observable<com.github.st1hy.countthemcalories.database.IngredientTemplate> saveIntoDatabase() {
    java.util.List<com.github.st1hy.countthemcalories.activities.addingredient.fragment.model.IngredientTypeCreateException.ErrorType> errorList = canCreateIngredient();
    if (errorList.isEmpty()) {
        return insertOrUpdateIntoDatabase();
    }else {
        return rx.Observable.error(new com.github.st1hy.countthemcalories.activities.addingredient.fragment.model.IngredientTypeCreateException(errorList));
    }
}

@java.lang.Override
public boolean hasNavigationBar() {
    return mOverWriteHasNavigationBar ? mHasNavigationBar : mContext.getResources().getBoolean(com.android.internal.R.bool.config_showNavigationBar);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    fab.show();
    floatSendCard.setVisibility(View.INVISIBLE);
}

public int updateProduct(android.content.ContentValues values, java.lang.String selection) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    int updatedRows = 0;
    updatedRows = db.update(com.duffin22.marketingapi.MyDBHandler.TABLE_SUPERSICKS, values, selection);
    db.close();
    return updatedRows;
}

@java.lang.Override
public void call() {
    if (!(bluetoothGatt.setCharacteristicNotification(characteristic, isNotificationEnabled))) {
        throw new com.polidea.rxandroidble.exceptions.BleCannotSetCharacteristicNotificationException(characteristic, com.polidea.rxandroidble.exceptions.BleCannotSetCharacteristicNotificationException.CANNOT_SET_LOCAL_NOTIFICATION);
    }
}

private void showSubmitBarFragment(android.app.Fragment submitBarFragment) {
    android.app.FragmentTransaction ft = getFragmentManager().beginTransaction();
    ft.setCustomAnimations(android.R.animator.fade_in, android.R.animator.fade_out);
    ft.show(submitBarFragment);
}

public void setRatio(float ratio) {
    mRatio = ratio;
    if ((mRatio) < 10.0F)
        mRatio = 10.0F;
    
    android.util.Log.i(com.fourtech.variometer.AltimeterView.TAG, ("setRatio() ratio=" + ratio));
}

public com.afollestad.materialdialogs.MaterialDialog.Builder typeface(android.graphics.Typeface medium, android.graphics.Typeface regular) {
    this.mediumFont = medium;
    this.regularFont = regular;
    this.useCustomFonts = true;
    return this;
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    if (!(i == (-1))) {
        childRegistryYear = spinnerYears.get((i - 1));
    }
}

public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (hasFocus) {
        isFocusedSearch = true;
    }else {
        isFocusedSearch = false;
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.item_clear_history :
            db.clearDB();
            break;
        case R.id.item_history :
            break;
    }
    return super.onOptionsItemSelected(item);
}

public static void resetEvents() {
    synchronized(com.aimbrain.androidsdk.library.EventStore.sync) {
        if ((com.aimbrain.androidsdk.library.EventStore.eventList) == null) {
            com.aimbrain.androidsdk.library.EventStore.eventList = new org.json.JSONArray();
        }
    }
}

@java.lang.Override
public void onStart() {
    super.onStart();
    mediaBrowser.connect();
    if (!(android.support.v17.leanback.app.BackgroundManager.getInstance(getActivity()).isAttached())) {
        prepareBackgroundManager();
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    return (id == (R.id.action_settings)) || (super.onOptionsItemSelected(item));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_location_armory);
    game = nl.tudelft.pixelperfect.client.GameClient.getInstance();
    nl.tudelft.pixelperfect.pixelperfect.LocationArmoryActivity.ship = nl.tudelft.pixelperfect.pixelperfect.Spaceship.getInstance();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initViews();
    initPublisher();
    mMainPresenter = new comkorlex.httpsgithub.videochat.presenter.MainPresenter(this);
    mMainPresenter.outputSessionData();
}

@java.lang.Override
public void run() {
    android.util.Log.d("RACEMANAGERY", "UPDATELISTVIEW RUNONUITHREAD");
    runOnUiThread(updateListView);
}

@java.lang.Override
public void onWebContentClicked(android.webkit.WebView.HitTestResult result, android.view.MotionEvent event) {
}

@java.lang.Override
public void onTaskDone() {
    rafraichitListeCommentaire();
    ((android.support.v7.app.ActionBarActivity) (getActivity())).setSupportProgressBarIndeterminateVisibility(false);
}

@java.lang.Override
public void deregister(de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer) {
    this.dataListenings.remove(observer);
    if (this.dataListenings.isEmpty()) {
        this.contactsDataManager.deleteObserver(this);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(this, www.app.remindme.com.remindme.ConfigureActivity.class));
    startMainService(v);
}

public void goGenerateList(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.example.zaccianflone.pantrypro.GenerateList.class);
    intent.putExtra(Constants.KEY_LIST_ID, mListId);
    arrayAdapter.clear();
    startActivity(intent);
}

public static uncmn.eve.Eve.Builder builder(android.content.Context context) {
    return new uncmn.eve.Eve.Builder(context);
}

public static java.lang.String getEmail(android.content.Context context) {
    android.accounts.AccountManager accountManager = android.accounts.AccountManager.get(context);
    android.accounts.Account account = com.mysjsu.mobsecurity.UserDataUtil.getAccount(accountManager);
    if (account == null) {
        return null;
    }else {
        return account.name;
    }
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.support.v4.content.LocalBroadcastManager.getInstance(this).registerReceiver(mAlertBroadcastReceiver, new android.content.IntentFilter(com.stripe.android.CustomerSession.ACTION_API_EXCEPTION));
    android.support.v4.content.LocalBroadcastManager.getInstance(this).registerReceiver(mBroadcastReceiver, new android.content.IntentFilter(com.stripe.android.view.PaymentFlowActivity.EVENT_SHIPPING_INFO_PROCESSED));
}

public static com.cpiz.android.playground.TakePicture.PhotoHelper.CameraLauncher create(android.app.Activity activity) {
    return new com.cpiz.android.playground.TakePicture.PhotoHelper.CameraLauncher(activity).setPortrait(true).setUseFrontCamera(false).setRatio(1, 1).setPreferredSize(1080, 1080);
}

public void finishActivity(android.app.Activity activity) {
    if ((activity != null) && (!(activity.isFinishing()))) {
        activityStack.remove(activity);
        activity.finish();
    }
}

public void getWifiConnections(android.app.Activity activity) {
    android.support.v4.app.ActivityCompat.requestPermissions(activity, new java.lang.String[]{ Manifest.permission.ACCESS_COARSE_LOCATION }, 0);
    mWifiManager.startScan();
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    camera.release();
    android.widget.Toast.makeText(getActivity(), "On Destroy", Toast.LENGTH_SHORT).show();
}

public void makeToast(java.lang.String toastString) {
    android.widget.Toast.makeText(this, toastString, Toast.LENGTH_SHORT);
}

@android.arch.persistence.room.TypeConverter
public static java.lang.Long dateToTimestamp(java.util.Date date) {
    return java.util.Calendar.getInstance().getTime().getTime();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getFragmentManager().beginTransaction().replace(android.R.id.content, new com.example.akgul.movies_application.SettingsActivity.SettingsFragment()).commit();
    setupActionBar();
}

private void buildView(final android.content.Context context, final android.widget.LinearLayout layout, final org.apache.avro.Schema.Field field) {
    android.view.View view = interdroid.vdb.avro.view.factory.AvroViewFactory.buildListView(context, field);
    layout.addView(view);
}

public static void gaussianBlur(android.graphics.Bitmap bitmap) {
    org.quenlen.magic.MagicImage.gaussianBlur(bitmap, 32);
}

@android.webkit.JavascriptInterface
public void savePartialFormData(java.lang.String partialData) {
    android.widget.Toast.makeText(mContext, "saving un-submitted form data", Toast.LENGTH_LONG).show();
    ((org.ei.opensrp.view.activity.SecuredNativeSmartRegisterActivity) (getActivity())).savePartialFormData(partialData, recordId, formName, getFormFieldsOverrides());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (mIsHasUpload) {
        mQrUploadTv.setClickable(false);
        mQrUploadTv.setTextColor(getResources().getColor(R.color.gray_character));
        uploadData();
        mIsHasUpload = !(mIsHasUpload);
    }
}

@java.lang.SuppressWarnings(value = "unused")
public void getSelf(com.emreeran.android.instagram.Instagram.UserCallback callback) {
    com.emreeran.android.instagram.controllers.UserController controller = new com.emreeran.android.instagram.controllers.UserController(mContext);
    java.lang.String token = getAccessToken();
    if (token != null) {
        controller.getSelf(token, callback);
    }else {
        login();
    }
}

public static java.lang.String getBaseUrl(android.content.Context activity) {
    boolean useHttps = android.preference.PreferenceManager.getDefaultSharedPreferences(activity).getBoolean(Constants.PREF_USE_HTTPS, false);
    if (useHttps)
        return (Constants.ROOT_HTTPS) + (Constants.ROOT_URL);
    else
        return (Constants.ROOT_HTTP) + (Constants.ROOT_URL);
    
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    com.zhanghao.androiddemo.chapter5.ActivityController.addActivity(this);
}

private void initViews(android.view.View view) {
    fetchingItems = ((android.widget.LinearLayout) (view.findViewById(R.id.listEmptyView)));
    itemsListRecyclerView = ((android.support.v7.widget.RecyclerView) (view.findViewById(R.id.photosListRecyclerView)));
    makeSnackBar();
}

@java.lang.Override
public void onClick(android.view.View v) {
    mCurrentIndex = ((mCurrentIndex) + 1) % (mQuestionBank.length);
    mIsCheater = false;
    updateQuestion();
}

private void showAlert(java.lang.String title, java.lang.String message) {
    new android.support.v7.app.AlertDialog.Builder(this).setTitle(title).setMessage(message).setPositiveButton(getString(R.string.ok), null).create().show();
}

private void logError(java.lang.String message) {
    android.util.Log.e(jp.straylight.scannerapp.ScanResultsReporter.TAG, message);
    listener.onReport(("ERROR: " + message));
}

public void setTransformation(com.remind101.android.views.TokenBackgroundSpan.TextDisplayTransformation transformation) {
    this.transformation = transformation;
    setCachedDisplayText(null, 0, 0, null);
}

@java.lang.Override
public void onLoginSuccess(retrofit2.Response<gem.training3.enterprisenetwork.network.dto.ResponseDTO> response) {
    android.content.Intent i = new android.content.Intent(this, gem.training3.enterprisenetwork.screen.main.MainActivity.class);
    startActivity(i);
    finish();
}

public void trackWithProperties(java.lang.String event, com.facebook.react.bridge.ReadableMap properties) {
    mixpanel.track(event, this.readableMapToJson(properties));
    android.util.Log.d("mixpanel", "trackWithProperties");
}

@java.lang.Override
protected void onPreExecute() {
    android.widget.Toast.makeText(getApplicationContext(), "Downloading Reports into a CSV...", Toast.LENGTH_LONG);
}

private boolean isJson(java.lang.String jsonString) {
    try {
        org.json.JSONObject jsonObject = new org.json.JSONObject(jsonString);
        return true;
    } catch (org.json.JSONException je) {
        android.util.Log.e("CoverosMobileApp", "isJson is false", je);
        return false;
    }
}

@java.lang.Override
public boolean dispatchTouchEvent(android.view.MotionEvent ev) {
    if (!(super.dispatchTouchEvent(ev)))
        mGestureDetector.onTouchEvent(ev);
    
    return true;
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View fragment;
    fragment = inflater.inflate(R.layout.fragment_landing_header, container);
    butterknife.ButterKnife.inject(this, fragment);
    return fragment;
}

private void exitWithError() {
    finish();
    overridePendingTransition(R.anim.fadein, R.anim.fadeout);
    android.widget.Toast.makeText(baseContext, "There was an error initialising the decompiler with the app you selected.", Toast.LENGTH_LONG).show();
}

protected void onDraw(android.graphics.Canvas canvas) {
    setPaths(Spinner_A1_Choice, Spinner_A2_Choice, Spinner_D1_Choice, Spinner_D2_Choice);
    if (canvas == null)
        createBitmap();
    
}

@java.lang.Override
public void onItemMove(int fromPosition, int toPosition) {
    java.util.Collections.swap(categoryList, fromPosition, toPosition);
    android.util.Log.d("ZHAP", ((("2 moved from " + fromPosition) + " to ") + toPosition));
}

@java.lang.Override
public com.takescoop.americanwhitewaterandroid.controller.BackEventResult onBack() {
    com.takescoop.americanwhitewaterandroid.controller.BackEventResult result = super.onBack();
    if (result == (BackEventResult.NotHandled)) {
        parentListener.onClose(filterContainer.getFilter());
    }
    return BackEventResult.Handled;
}

private void setupTextView() {
    mProgressSpinner.setVisibility(View.GONE);
    mWrapper.setVisibility(View.VISIBLE);
    mTitle.setText(title);
    mBody.setText(android.text.Html.fromHtml(content));
}

public void setLocalStyle(com.tokbox.android.otsdkwrapper.utils.VideoScale style) {
    if (style == (com.tokbox.android.otsdkwrapper.utils.VideoScale.FILL)) {
        mPublisher.setStyle(BaseVideoRenderer.STYLE_VIDEO_SCALE, BaseVideoRenderer.STYLE_VIDEO_FILL);
    }else {
        mPublisher.setStyle(BaseVideoRenderer.STYLE_VIDEO_SCALE, BaseVideoRenderer.STYLE_VIDEO_FIT);
    }
}

public void onClick(android.view.View button) {
    mIconId = (ib.isChecked()) ? com.sharad.epocket.AddCategoryActivity.UNASSIGNED : label;
    updateIconGroup();
}

private void setAvatar(java.lang.String path) {
    avatarImagePath = person.getIdPhoto();
    if ((avatarImagePath) != "") {
        avatarView.setImageURI(android.net.Uri.parse(avatarImagePath));
        avatarView.setScaleType(ImageView.ScaleType.CENTER_CROP);
    }
}

public void setTabText(java.lang.String text) {
    if ((current_tab_position) != 1) {
        ((android.widget.TextView) (tabMenuView.getChildAt(current_tab_position))).setText(text);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    setContentView(R.layout.activity_learn);
}

@java.lang.Override
public void onFailure(java.lang.String message) {
    if ((getActivity()) != null) {
        setRefreshIndicatorVisiblity(true);
        android.widget.Toast.makeText(getActivity(), message, Toast.LENGTH_LONG).show();
    }
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    startLocationUpdates(true);
    android.util.Log.d(Constants.TAG, "Starting location updates...");
}

@java.lang.Override
public void run() {
    if (this.isAvailable()) {
        android.content.Intent intent = com.idonans.doodle.demo.DoodlePlayActivity.start(this, path);
        this.startActivity(intent);
    }
}

@java.lang.Override
public void finalize() throws java.lang.Throwable {
    if (Logger.DEBUG) {
        android.util.Log.d(TAG, "[finalize]");
    }
    cleanup();
    super.finalize();
}

private void onScrollIdle() {
    ss.jaredluo.com.stickerselector.model.Nearest nearest = getNearestScrollOffset();
    android.util.Log.i("JARED", ("Nearest position: " + (nearest.getNearestPosition())));
    scrollViewToCenter(nearest);
}

@java.lang.Override
public void onWebServiceCoordinatorError(java.lang.Exception error) {
    android.util.Log.e(com.mixey69.roulettevideochat.ConnectionManager.LOG_TAG, ("Web Service error: " + (error.getMessage())));
    uiInterface.showWebServiceCoordinatorError(error);
}

@java.lang.Override
public void run() {
    com.epicodus.shakeitup.MainActivity.loadingDialog.hide();
    android.widget.Toast.makeText(this, "Oops, that address doesn't work!", Toast.LENGTH_LONG).show();
    locationLabel.setText("");
    locationLabel.setHint("Please try again!");
}

private boolean assetExists(java.lang.String assetString, android.content.Context context) {
    android.content.res.AssetManager am = context.getAssets();
    try {
        java.io.InputStream inputStream = am.open(assetString);
    } catch (java.io.IOException e) {
        return false;
    }
    return true;
}

private void addMood() {
    filter.filter("");
    android.content.Intent intent = new android.content.Intent(this, com.cmput301w17t08.moodr.AddMoodActivity.class);
    startActivityForResult(intent, 1);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    timber.log.Timber.d("Yes for enjoying betch clicked");
    getAppStoreDialog().show();
    dialogInterface.dismiss();
}

protected void onNoNewTweets(@android.support.annotation.StringRes
int messageId) {
    android.support.design.widget.Snackbar.make(coordinatorLayout, messageId, Snackbar.LENGTH_SHORT).show();
    timeline.hasMoreTweetsFlag = net.kyouko.cloudier.model.Timeline.FLAG_NO_MORE;
}

private void startBackgroundThread() {
    mBackgroundThread = new android.os.HandlerThread("CameraBackground");
    mBackgroundThread.start();
    mBackgroundHandler = new android.os.Handler(mBackgroundThread.getLooper());
}

@java.lang.Override
public void onFailure(@android.support.annotation.NonNull
java.lang.Exception exception) {
    progressDialog.dismiss();
    android.widget.Toast.makeText(getApplicationContext(), exception.getMessage(), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onServiceReady(com.amazon.ags.api.AmazonGamesClient amazonGamesClient) {
    com.gcex.GameCircle.agsClient = amazonGamesClient;
    android.util.Log.i(com.gcex.GameCircle.TAG, "GameCircle: initialize Successful");
    if (com.gcex.GameCircle.enableWhispersync) {
        com.gcex.GameCircle.gameDataMap = com.amazon.ags.api.AmazonGamesClient.getWhispersyncClient().getGameData();
    }
}

@java.lang.Override
protected void onActivityResult(final int requestCode, final int resultCode, final android.content.Intent data) {
    if (de.azapps.mirakel.settings.SettingsHelper.handleActivityResult(requestCode, resultCode, data, this)) {
        de.azapps.mirakel.settings.model_settings.generic_list.GenericModelDetailActivity.finish();
    }
}

@java.lang.Override
public void onPause() {
    if (co.smartreceipts.android.BuildConfig.DEBUG) {
        android.util.Log.d(co.smartreceipts.android.fragments.ReceiptsFragment.TAG, "onPause");
    }
    super.onPause();
    getPersistenceManager().getDatabase().unregisterReceiptRowListener();
}

public static android.graphics.drawable.Drawable getBackButtonIcon(android.content.Context context) {
    return com.popdeem.sdk.uikit.utils.PDUIColorUtils.getTintedDrawable(context, R.drawable.pd_ic_arrow_back, R.color.pd_back_button_color, false);
}

@java.lang.Override
public void pause() {
    android.util.Log.d("bbb", "pausing");
    playing = false;
    try {
        gameThread.join();
    } catch (java.lang.InterruptedException e) {
        android.util.Log.e("bbb", ("InterruptedException:" + e));
    }
}

public void btnExitClicked(android.view.View button) {
    android.content.Intent intent = new android.content.Intent(this, com.app.carnelao.presentation.ui.login.LoginActivity.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    intent.putExtra("Exit me", true);
    startActivity(intent);
    finish();
}

public boolean isNewsArticlesTableEmpty(android.database.sqlite.SQLiteDatabase database) {
    long numberOFArticles = this.getNumberOfNewsArticles(database);
    return (this.getNumberOfNewsArticles(database)) == 0;
}

public void set_complexty(int c) {
    this.complexty = c;
    android.util.Log.d("debug1", ("comlexty:" + c));
}

@java.lang.Override
public void requestFail() {
    android.widget.Toast.makeText(com.excitingboat.freshmanspecial.view.fragment.Style.PictureGridFragment.getContext(), R.string.load_fail, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected java.util.List<com.facebook.react.ReactPackage> getPackages() {
    return java.util.Arrays.<com.facebook.react.ReactPackage>asList(new com.facebook.react.shell.MainReactPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(com.concentrationgame.MainApplication.mCallbackManager));
}

@retrofit2.http.GET(value = "/users/{user}/repos")
retrofit2.Call<io.caly.calyandroid.Model.Response.BasicResponse> test(@retrofit2.http.Path(value = "user")
java.lang.String user);

@java.lang.Override
public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) {
    progressBar.cancel();
    if (!(task.isSuccessful())) {
        com.firebasechatdemo.support.utils.SnackBarUtil.showSnackBar(getActivityRegister(), R.string.warning_registration_fail);
    }else {
        updateProfile();
    }
}

protected android.content.SharedPreferences getSharedPreferences(android.content.Context context) {
    if ((preferences) == null) {
        context.getSharedPreferences(getSharePreferenceName(), Context.MODE_PRIVATE);
    }
    return preferences;
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_preview, container, false);
    initView(view);
    return view;
}

@java.lang.Override
public synchronized void onLoadMore() {
    android.util.Log.d("Paginate", "onLoadMore");
    loading = true;
    movieListAdapter.add(getMovies(((currentPgNo) + 1)));
    loading = false;
}

public void exoPlayerPause() {
    if ((isPlaying()) == true) {
        pause();
    }else {
        android.widget.Toast.makeText(mContext, "You are already pause", Toast.LENGTH_SHORT).show();
    }
}

private void setupMainWindowDisplayMode() {
    startLockTask();
    mIsKioskEnabled = true;
    android.view.View decorView = setSystemUiVisilityMode();
    decorView.setOnSystemUiVisibilityChangeListener(new android.view.View.OnSystemUiVisibilityChangeListener() {
        @java.lang.Override
        public void onSystemUiVisibilityChange(int visibility) {
            setSystemUiVisilityMode();
        }
    });
}

public void oCclearorder(android.view.View v) {
    clearorder();
    android.util.Log.i("Finished", tech.travis.poolpos.MainActivity.getMethodName());
}

@java.lang.Override
public void onConnected(android.os.Bundle dataBundle) {
    LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this);
    mBestReading = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
    handleLocationChanged();
}

public void onEvent(blueprint.com.sage.events.sessions.ResetPasswordEvent event) {
    android.widget.Toast.makeText(getActivity(), event.getApiSuccess().getMessage(), Toast.LENGTH_SHORT);
    blueprint.com.sage.utility.view.FragUtils.popBackStack(this);
}

private void showDocumentForUri(@android.support.annotation.NonNull
android.net.Uri uri, @android.support.annotation.NonNull
final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration, @android.support.annotation.Nullable
final java.lang.String password) {
    com.pspdfkit.ui.PdfActivity.showDocument(cordova.getActivity(), uri, configuration, password);
}

@android.support.annotation.Nullable
@java.lang.Override
public T get() {
    if (exists()) {
        return mGson.fromJson(mBackingPreference.get(), mType);
    }else {
        return com.garpr.android.preferences.persistent.PersistentGsonPreference.getDefaultValue();
    }
}

@java.lang.Override
public void onActivityDestroyed(android.app.Activity activity) {
    com.gigigo.ggglogger.GGGLogImpl.log("CloudRecognitionActivityLifeCycleCallBack.onActivityDestroyed");
    if (com.gigigo.vuforiacore.sdkimagerecognition.icloudrecognition.CloudRecognitionActivityLifeCycleCallBack.mActivity.equals(activity))
        this.mCloudReco.on_Destroy();
    
    activity.getApplication().unregisterActivityLifecycleCallbacks(this);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (com.parse.ParseCrashReporting.isCrashReportingEnabled()) {
        populateCampaignsParse();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    butterknife.ButterKnife.bind(this);
    android.util.Log.d("Butto Ref :: ", ((button) + ""));
}

public void setProgressChangeListeners(java.util.concurrent.CopyOnWriteArrayList<com.mapbox.services.android.navigation.v5.listeners.ProgressChangeListener> progressChangeListeners) {
    this.progressChangeListeners = progressChangeListeners;
    progressChangeListeners.add(this);
    if ((navigationEngine) != null) {
        navigationEngine.setProgressChangeListeners(progressChangeListeners);
    }
}

@java.lang.Override
public void onClickSmile(int id) {
    android.widget.Toast.makeText(this, (id + " "), Toast.LENGTH_SHORT).show();
}

public void onClick(android.view.View v) {
    android.content.Intent it = new android.content.Intent(this, com.neri.alexa.cartaovacina.CadastroActivity.class);
    startActivity(it);
}

private void setStartOfRatingPeriod(android.content.SharedPreferences prefs, long startOfRatingPeriod) {
    prefs.edit().putLong(Constants.PREF_KEY_START_OF_RATING_PERIOD, startOfRatingPeriod).commit();
}

@java.lang.Override
protected void setUp() throws java.lang.Exception {
    super.setUp();
    setActivityInitialTouchMode(false);
    android.app.Activity mActivity = getActivity();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    scheduleUploading();
    return super.onStartCommand(intent, flags, startId);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.cancel();
    android.app.Dialog introWeekSystem = D_introWeekSystem();
    introWeekSystem.show();
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    android.provider.Settings.System.putInt(getContentResolver(), "show_touches", 0);
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent ev) {
    dispatchJSTouchEvent(ev);
    super.onTouchEvent(ev);
    return true;
}

@java.lang.Override
public android.view.View getSelectedView() {
    throw new java.lang.UnsupportedOperationException(getContext().getString(R.string.not_supported));
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parent) {
    videoPresenter.onSpinnerSelected("All videos");
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    showOptionsDialog();
    return true;
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    java.lang.String CREATE_LUMINARIAS_TABLE = context.getString(R.string.create_table_luminarias);
    db.execSQL(CREATE_LUMINARIAS_TABLE);
    java.lang.String CREATE_IMAGENES_TABLE = context.getString(R.string.create_table_imagenes);
    db.execSQL(com.eduardorascon.luminarias.sqlite.CREATE_PICTURES_TABLE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    db.readCSV(getApplicationContext(), R.raw.stats_6);
    db.deleteDuplicates();
    db.logClicks();
}

@java.lang.Override
public android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder) {
    android.util.Log.i("Hier", "query");
    return super.query(uri, projection, selection, selectionArgs, sortOrder);
}

private boolean isValidInLength(android.text.Editable s) {
    return (!(respectPatternLength)) || ((s.length()) <= (maxLength));
}

void up(android.view.MotionEvent event) {
    int index = event.getActionIndex();
    int id = event.getPointerId(index);
    controller.removePoint(id);
}

private boolean controlling(android.graphics.Point p1, android.graphics.Point p2) {
    if ((threatening(p1, p2)) && (!(isFrozen(p1))))
        return true;
    
    return false;
}

@java.lang.Override
public void onCaptureCompleted(@android.support.annotation.NonNull
android.hardware.camera2.CameraCaptureSession session, @android.support.annotation.NonNull
android.hardware.camera2.CaptureRequest request, @android.support.annotation.NonNull
android.hardware.camera2.TotalCaptureResult result) {
    showToast(("Saved: " + (mFile)));
    android.util.Log.d(com.example.android.camera2basic.Camera2BasicFragment.TAG, mFile.toString());
    unlockFocus();
}

@java.lang.Override
protected void populateView(android.view.View view, com.speedyfirecyclone.cardstore.Cardstructure card, int position) {
    android.widget.TextView listCardname = ((android.widget.TextView) (view.findViewById(R.id.listCardnameCardlistAdapter)));
    listCardname.setText(" ");
    listCardname.setText(card.getCardTitle());
}

@java.lang.Override
public void onConnected() {
    microsoftBands.register();
    notificationManager = new org.md2k.microsoftband.notification.NotificationManager(this, microsoftBands.find());
    notificationManager.start();
    android.widget.Toast.makeText(this, "MicrosoftBand Started successfully", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onNetworkError(java.lang.Exception e) {
    org.matrix.androidsdk.util.Log.d(org.matrix.androidsdk.data.EventTimeline.LOG_TAG, "backPaginate onNetworkError");
    mIsBackPaginating = false;
    if (null != (callback)) {
        callback.onNetworkError(e);
    }else {
        super.onNetworkError(e);
    }
}

public void doShowBalance(android.view.View v) {
    if (!(oldTx()))
        act.sayOk("Customer Balance", A.balance, null);
    
}

public void Pause() {
    android.util.Log.d("SOUND", "PAUSE");
    isRecording = false;
}

public void test_012() throws android.os.RemoteException, com.android.uiautomator.core.UiObjectNotFoundException {
    excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "com.android.settings:id/title", "WLAN");
    check(testcase.Object_Text, testcase.Operation_checkExist, "WLAN");
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    android.util.Log.d("menu", "create");
    return true;
}

public void setEmptyView(android.view.View emptyView) {
    mEmptyView = emptyView;
}

@java.lang.Override
protected void afterViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    super.afterViewCreated(view, savedInstanceState);
    loadList(true);
}

@java.lang.Override
protected void onPostExecute(java.util.List<java.lang.String> cities) {
    if (cities == null) {
        android.widget.Toast.makeText(getApplicationContext(), R.string.citiesnull, Toast.LENGTH_LONG).show();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    locFirst = true;
    sendSMSMessage(getResources().getString(EnumSms.WHERE.getSms()));
}

@java.lang.Override
public void onProgressChange(android.location.Location location, com.mapbox.services.android.navigation.v5.RouteProgress routeProgress) {
    if ((routeProgress.getAlertUserLevel()) == (NavigationConstants.ARRIVE_ALERT_LEVEL)) {
        java.lang.System.out.println("working");
        endNavigation();
    }
}

protected void returnSelectedWinery(final long wineryId) {
    android.content.Intent intent = new android.content.Intent(this, com.robcutmore.vinotes.ui.AddNoteActivity.class);
    intent.putExtra("id", wineryId);
    setResult(com.robcutmore.vinotes.ui.RESULT_OK, intent);
    finish();
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    view.setVisibility(View.GONE);
    searchView.setVisibility(View.GONE);
    if (listener != null) {
        listener.onClose();
    }
}

boolean isLoginOK(java.lang.String userName, java.lang.String userPass) throws com.xsoft.android.ebookreader.repository.exceptions.CacheException;

@java.lang.Override
public void onReceivedError(android.webkit.WebView view, int errorCode, java.lang.String description, java.lang.String failingUrl) {
    android.util.Log.v(org.radare2.installer.WebActivity.TAG, "Error: radare2 webserver did not start");
    mUtils.myToast("Error: radare2 webserver did not start", Toast.LENGTH_LONG);
    finish();
}

@java.lang.Override
public void onResourceReady(java.io.File resource, com.bumptech.glide.request.animation.GlideAnimation<? super java.io.File> glideAnimation) {
    android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeFile(resource.getAbsolutePath());
    addSticker(bitmap);
    addSticker(bitmap);
    addSticker(bitmap);
}

public void fillFood(java.util.ArrayList<com.bulkes.myapplication2.Bulk> bulkesMap) {
    android.util.Log.v("fill food", java.lang.String.valueOf(map.size()));
    generateSmartMap(bulkesMap);
    startFoodTimer();
}

@java.lang.Override
public void onBackPressed() {
    super.onBackPressed();
    startActivity(new android.content.Intent(this, eic.beike.projectx.android.activities.MenuActivity.class));
    finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    switchCoolFeed(true, true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    popup(sms);
    Smsreceiver.notQuestion = true;
}

@java.lang.Override
public void changeBackground() {
    teamfmg.hangman.Settings.load(this);
    android.widget.RelativeLayout rl = ((android.widget.RelativeLayout) (this.findViewById(R.id.relLayout_layout)));
    teamfmg.hangman.Settings.setColor(rl);
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) {
    mMap = googleMap;
    if ((address) != null) {
        getLatitudeAndLongitude();
    }
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    dropAllTables();
    this.onCreate(db);
}

@java.lang.Override
public void onDetected(java.lang.String instance_id) {
    android.util.Log.d("MainActivity", instance_id);
    gameController.interrupt(instance_id);
}

@java.lang.Override
public void handleMessage(android.os.Message message) {
    java.util.HashSet<scar.ChunkMetaPub> chunks = ((java.util.HashSet<scar.ChunkMetaPub>) (message.obj));
    java.util.Iterator iterator = chunks.iterator();
    while (iterator.hasNext()) {
    } 
}

public android.view.MenuItem setVisible(boolean visible) {
    mFlags = ((mFlags) & (com.cocosw.bottomsheet.ActionMenuItem.HIDDEN)) | (visible ? 0 : com.cocosw.bottomsheet.ActionMenuItem.HIDDEN);
    return this;
}

@java.lang.Override
public void run() {
    if (android.text.TextUtils.equals(getCallState(), IMXCall.CALL_STATE_RINGING)) {
        onAnsweredElsewhere();
    }
}

@java.lang.Override
public void onStart() {
    super.onStart();
    com.lkworm.miniservice.GPSTrackService.StartService(this);
    com.lkworm.miniservice.GPSTrackService.LogError(((com.lkworm.miniservice.MainActivity.TAG) + "onStart"));
    android.util.Log.d(com.lkworm.miniservice.MainActivity.TAG, "onStart");
}

private void showGooglePlayServicesAvailabilityErrorDialog(final int connectionStatusCode) {
    com.google.android.gms.common.GoogleApiAvailability api = com.google.android.gms.common.GoogleApiAvailability.getInstance();
    android.app.Dialog dialog = api.getErrorDialog(this, connectionStatusCode, com.y_taras.scheduler.activity.MainActivity.RequestGooglePlayServices);
    dialog.show();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    outState.putBoolean(io.github.hidroh.materialistic.LazyLoadFragment.STATE_EAGER_LOAD, mEagerLoad);
    outState.putBoolean(io.github.hidroh.materialistic.LazyLoadFragment.STATE_ACTIVITY_CREATED, mActivityCreated);
}

public void process(net.osmand.plus.osmedit.data.Tag tag) {
    if (mFilters.containsKey(tag.tag)) {
        final android.widget.EditText editText = mFilters.get(tag.tag);
        editText.setText(tag.value);
        mFilters.remove(tag.tag);
    }
}

@android.support.annotation.RequiresPermission(value = Manifest.permission.BLUETOOTH)
public final boolean hasBluetoothLeAdvertising() {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) {
        return (hasBluetoothLe()) && (android.bluetooth.BluetoothAdapter.getDefaultAdapter().isMultipleAdvertisementSupported());
    }
    return false;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    super.onReceive(context, intent);
    ((org.wordpress.android.WordPress) (context.getApplicationContext())).component().inject(this);
}

@java.lang.Override
public void onFrameAvailable(android.graphics.SurfaceTexture surfaceTexture) {
    synchronized(this) {
        frameAvailable = true;
    }
}

@java.lang.Override
public void onCommentEdit(org.dhis2.android.dashboard.api.models.InterpretationComment comment) {
    org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment.newInstance(this, comment).show(getChildFragmentManager());
}

public void grow(android.view.View view) {
    character += factor;
    java.lang.System.out.println("worked");
    android.widget.TextView t = ((android.widget.TextView) (findViewById(R.id.character)));
    t.setText(character);
}

public android.graphics.Bitmap getAsBitmap(java.lang.String key) {
    byte[] bytes = getAsBytes(key);
    return com.zhy.base.cache.disk.Utils.bytes2Bitmap(bytes);
}

@java.lang.Override
public void onClick(android.view.View v) {
    submitCheckin();
    displaySummary();
    setView(com.flaredown.flaredownApp.Checkin.CheckinActivity.Views.SUMMARY);
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    mZMQRecvTask = new com.fan.gazeshutter.service.ZMQReceiveTask(this);
    mZMQRecvTask.execute(com.fan.gazeshutter.utils.NetworkUtils.getServerIP());
    android.util.Log.d(com.fan.gazeshutter.service.OverlayService.TAG, "onStartCommand");
    return START_STICKY;
}

@java.lang.Override
public void onError(java.lang.Exception ex) {
    android.support.design.widget.Snackbar.make(coordinatorLayout, ("Error: " + (ex.getMessage())), Snackbar.LENGTH_LONG).show();
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult) {
    mGoogleApiClient.disconnect();
    handleGoogleResult(googleSignInResult, callback);
}

@java.lang.Override
public void onClick(android.view.View v) {
    int adapterPosition = getAdapterPosition();
    com.darurats.baking.models.Step Step = mStepData.get(adapterPosition);
    mClickHandler.onStepClick(Step);
}

@java.lang.Override
public void onCancel(android.content.DialogInterface dialogInterface) {
    super.onCancel(dialogInterface);
    m_mediaPlayer.stop();
    m_thread.cancel(true);
    m_mediaPlayer.release();
    m_mediaPlayer = null;
}

static void stopTransfer(int transferId) {
    net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers.get(transferId);
    if (transferWrapper != null) {
        transferWrapper.mTransfer.stop();
    }
}

@dagger.Provides
@javax.inject.Named(value = "androidBluetoothPlatform")
@javax.inject.Singleton
public com.sensorberg.sdk.internal.interfaces.BluetoothPlatform provideAndroidBluetoothPlatform(android.bluetooth.BluetoothAdapter adapter, com.sensorberg.bluetooth.CrashCallBackWrapper wrapper, android.content.Context context) {
    return new com.sensorberg.sdk.internal.AndroidBluetoothPlatform(adapter, wrapper, context);
}

@java.lang.Override
public void onRefresh() {
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            swipeRefresh.setRefreshing(false);
        }
    }, 2000);
    this.messageCount += 10;
    getMessages();
}

public void datasetChanged(java.util.List<com.random.recyclerviewbug.MainModel> dataset) {
    android.support.v7.util.DiffUtil.DiffResult diffResult = calculateDiffResult(dataset);
    this.dataset = dataset;
    diffResult.dispatchUpdatesTo(this);
}

@java.lang.Override
public void onRecordFrame(final java.nio.ByteBuffer frame) {
    android.util.Log.i(com.serenegiant.usbcameracommon.AbstractUVCCameraHandler.CameraThread.TAG_THREAD, (("IFrameCallback#onRecordFrame: Received a frame, length: " + (frame.capacity())) + " bytes"));
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d("NavigationDrawerFragment", "Begining activity for result");
    startActivityForResult(new android.content.Intent(getActivity(), ru.ifmo.md.lesson8.AddCity.class), REQUEST_ADD_CITY);
}

private void loadCategoryFragment() {
    android.support.v4.app.Fragment categoryFragment = new habit.duyle.habit.Fragments.CategoryMainFragment("display");
    replaceFragment(categoryFragment, R.id.category_container);
}

@java.lang.Override
protected void onHandleIntent(@android.support.annotation.Nullable
android.content.Intent intent) {
    byte[] in = intent.getByteArrayExtra("CRYPTO_FILE_INPUT");
    if ((in.length()) > 0)
        java.lang.System.out.println("Dekitaaaaaa");
    else
        java.lang.System.out.println("Dekinaiiiii");
    
}

@java.lang.Override
public void onWeatherError(com.survivingwithandroid.weather.lib.exception.WeatherLibException e) {
    textView2.setText("Weather Error - parsing data");
    e.printStackTrace();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.example.nguyennam.financialbook.utils.FileHelper.clearTempFile(context);
    setListData();
}

@java.lang.Override
public boolean onQueryTextSubmit(java.lang.String address) {
    android.util.Log.d("Search", "query text submit");
    geoCodeTypedAddress(address);
    mSearchSearchView.clearFocus();
    mLocationSearchView.clearFocus();
    return true;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putInt("CURRENT_LANG", this.language.getId());
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public com.sasd13.proadmin.android.service.ServiceResult<java.lang.Void> logOut() {
    sessionStorageService.clear();
    userStorageService.clear();
    return new com.sasd13.proadmin.android.service.ServiceResult(true, 200);
}

@java.lang.Override
public void run() {
    android.util.Log.d(org.physical_web.physicalweb.NearbyBeaconsFragment.TAG, "running second scan timeout");
    emptyGroupIdQueue();
    showListView();
    mSecondScanComplete = true;
}

public android.database.Cursor getSuggestionById(java.lang.String suggestionId) {
    android.database.Cursor c = getReadableDatabase().query(SuggestionsConstract.SuggestionEntry.TABLE_NAME, null, ((SuggestionsConstract.SuggestionEntry.ID) + " LIKE ?"), new java.lang.String[]{ suggestionId }, null, null, null);
    return c;
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.util.Log.d(com.concavenp.artistrymuse.services.UserAuthenticationService.TAG, "onStartCommand");
    mAuth.addAuthStateListener(this);
    return super.onStartCommand(intent, flags, startId);
}

@java.lang.Override
public void onClick(android.view.View v) {
    communicator.onDialogMessage("false");
    dismiss();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.i(DBG_TAG, "OnCreate()");
    savedInstance_ = this;
    requestRuntimePermission();
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL(DropTable);
    android.widget.Toast.makeText(context, "DB to Update", Toast.LENGTH_LONG).show();
    onCreate(db);
}

private void insertExamples(android.database.sqlite.SQLiteDatabase db) {
    db.beginTransaction();
    db.execSQL("insert into user (username,password ) values (\"yo mismo\",\"upcuo\"),(\"usuario369\",\"misuperpass\")");
    db.execSQL("insert into expense (exp_name,exp_amount,exp_paid) values(\"luz\",50,1),(\"agua\",60,1),(\"internet\",100,1),(\"otros gastos\",50,1),(\"modelo 130\",10,1)");
    db.execSQL("insert into purchase (pur_name,pur_strike) values(\"agua mineral\",0),(\"amor\",1),(\"chocolate\",0),(\"vino\",1),(\"un dragon de komodo\",1)");
    db.setTransactionSuccessful();
    db.endTransaction();
}

public static void showProfile(android.app.Fragment fragment, @android.support.annotation.Nullable
java.util.HashMap<java.lang.String, java.lang.String> extras) {
    com.airmap.airmapsdk.networking.services.AirMap.showProfile(fragment, com.airmap.airmapsdk.networking.services.AirMap.getUserId(), extras);
}

protected void selectSatisfied(android.view.View view) {
    sentimentIndex = 3;
    updateSentiments();
}

public void handleMessage(android.os.Message msg) {
    musiclist.setAdapter(((android.widget.ListAdapter) (new com.salt.saltmusic.Home.MusicListAdapter())));
}

@java.lang.Override
public void success(com.twitter.sdk.android.core.Result<com.twitter.sdk.android.core.TwitterSession> result) {
    handleSuccess(result);
}

@java.lang.Override
public void onBackPressed() {
    android.util.Log.i(TAG, "onBackPressed - start");
    savingModelInDb();
    setResult(com.modelingbrain.home.detailModel.RESULT_OK);
    super.onBackPressed();
    android.util.Log.i(TAG, "onBackPressed - finish");
}

public void bindType(nl.fhict.happynews.android.model.Post post) {
    this.post = post;
    if (nl.fhict.happynews.android.controller.ReadingHistoryController.getInstance().postIsRead(post)) {
        itemView.setAlpha(0.3F);
    }else {
        itemView.setAlpha(1.0F);
    }
}

public void setIsSelect(boolean selected) {
    android.util.Log.e("SELECTION", (selected + ""));
    if (selected)
        scaleAnimDrawable.expand(Gravity.START, ScaleAnimDrawable.AnimSide.BothSide);
    else
        scaleAnimDrawable.shrink(Gravity.START, ScaleAnimDrawable.AnimSide.BothSide);
    
}

@java.lang.Override
public boolean onPrepareOptionsMenu(android.view.Menu menu) {
    boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
    menu.findItem(R.id.action_details).setVisible((!drawerOpen));
    return super.onPrepareOptionsMenu(menu);
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    com.nexb.shopr4.FireBaseController.getI().setActiveShopListName(((android.widget.EditText) (v.findViewById(R.id.listNameEdit))).getText().toString());
    return false;
}

@java.lang.Override
public void onScroll(android.widget.AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
    if ((mVideoAd) != null) {
        mVideoAd.showAdIfItVisible(mCustomAdapter, mListView);
    }
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parent) {
    if ((chosenManufacturer) == 0) {
        android.support.design.widget.Snackbar.make(spinnerManufacturer.getRootView(), "Please choose your camera Manufacturer", Snackbar.LENGTH_LONG).show();
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    currentlyEditing = null;
    editingPosition = -1;
    doUnHighlighted(holder, comment, baseNode);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> view, android.view.View arg1, int arg2, long arg3) {
    locName = view.getSelectedItem().toString();
}

@java.lang.Override
public void onClick(android.view.View view) {
    io.intercom.android.sdk.Intercom.client().displayConversationsList();
}

@java.lang.Override
public void refreshData() {
    com.jwang.android.gymmate.task.media_task.RequestMediaByLocationId requestMediaByLocationId = new com.jwang.android.gymmate.task.media_task.RequestMediaByLocationId(getActivity());
    requestMediaByLocationId.execute(mLocationId, "");
}

public void update(com.google.android.gms.maps.Projection projection, com.google.android.gms.maps.model.CameraPosition cameraPosition) {
    scale = mapScaleModel.setProjection(projection, cameraPosition);
    invalidate();
}

public void setDrawable(android.graphics.drawable.Drawable drawable, io.doist.material.drawable.WrapperDrawable owner) {
    if ((mDrawable) != null) {
        mDrawable.setCallback(null);
    }
    mDrawable = drawable;
    mDrawable.setCallback(owner);
    mChildChangingConfigurations = mDrawable.getChangingConfigurations();
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    if (data.moveToFirst())
        mQuestionsAdapter.swapCursor(data);
    
}

public boolean onInterceptTouchEvent(android.view.MotionEvent event) {
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(android.content.ContentValues.TAG, drugClass);
    drugClassSearch(drugClass);
}

@java.lang.Override
public void onLocationChanged(android.location.Location loc) {
    if (null != loc) {
        setUserCurrentLocation(loc);
        plotRoute();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((clickListener) != null)
        clickListener.onClick(view, getAdapterPosition());
    
}

private void loadIcon(@android.support.annotation.NonNull
com.facebook.ads.NativeAd nativeAd) {
    if ((mIcon) == null)
        return ;
    
    com.mapswithme.util.UiUtils.show(mIcon);
    com.facebook.ads.NativeAd.Image icon = nativeAd.getAdIcon();
    com.facebook.ads.NativeAd.downloadAndDisplayImage(icon, mIcon);
}

public void showFragment(android.support.v4.app.Fragment fragment) {
    if (null != fragment) {
        fragmentTransaction = getSupportFragmentManager().beginTransaction();
        fragmentTransaction.show(fragment);
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.beginTransaction();
    com.czbix.v2ex.dao.NodeDAO.createTable(db);
    db.endTransaction();
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.util.Log.i("Map - pause", "Map activity paused, location updates stopped");
    if (isSetup)
        stopLocationUpdates();
    
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.util.List<com.example.kandoe.Model.Organisation>> call, java.lang.Throwable t) {
    java.lang.System.out.println(t.toString());
    android.widget.Toast.makeText(getActivity(), "FAIL ORGGGGGGGGG", Toast.LENGTH_LONG).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initFab();
    initRecyclerView();
    inAlphabeticalOrder = android.preference.PreferenceManager.getDefaultSharedPreferences(this).getBoolean("alphabetic", true);
}

public void onClick(android.view.View buttonView) {
    android.content.Intent myIntent = new android.content.Intent(buttonView.getContext(), activity.ctec.jbur0473.selfintroduction.SchoolScreen.class);
    startActivityForResult(myIntent, 0);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    chatRoomID = getArguments().getString(umd.cmsc436.cmsc436finalproject.UsersChatRoomFragment.ARG_CHATROOM_ID);
    chatRoomNAME = getArguments().getString(umd.cmsc436.cmsc436finalproject.UsersChatRoomFragment.ARG_CHATROOM_NAME);
}

public android.os.Handler getDecryptingThreadHandler() {
    if (null == (mDecryptingHandler)) {
        mDecryptingHandler = new android.os.Handler(mDecryptingHandlerThread.getLooper());
    }
    if (null == (mDecryptingHandler)) {
        return mUIHandler;
    }
    return mDecryptingHandler;
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.i(com.codecool.android.neightbrotaxi.view.MainActivity.TAG, "ACTIVITY RESUMED!");
    storageController.getStoredUser();
    getProfile();
}

private void attachPreDrawListener() {
    getViewTreeObserver().addOnPreDrawListener(new android.view.ViewTreeObserver.OnPreDrawListener() {
        @java.lang.Override
        public boolean onPreDraw() {
            getViewTreeObserver().removeOnPreDrawListener(this);
            setVisibility(View.GONE);
            setupAnimator();
            return true;
        }
    });
}

@java.lang.Override
public java.util.List<com.example.android.booklisting.Book> loadInBackground() {
    if ((mUrl) == null) {
        return null;
    }
    java.util.List<com.example.android.booklisting.Book> books = com.example.android.booklisting.QueryUtils.fetchBookData(mUrl);
    return books;
}

public void onLoadResource(android.webkit.WebView view, java.lang.String url) {
    log(("load resource - " + url));
}

@java.lang.Override
protected java.util.List<com.facebook.react.ReactPackage> getPackages() {
    return java.util.Arrays.<com.facebook.react.ReactPackage>asList(new com.facebook.react.shell.MainReactPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(com.suta.MainApplication.mCallbackManager), new com.imagepicker.ImagePickerPackage());
}

@java.lang.Override
protected java.util.List<com.facebook.react.ReactPackage> getPackages() {
    return java.util.Arrays.<com.facebook.react.ReactPackage>asList(new com.facebook.react.shell.MainReactPackage(), new io.jchat.android.JMessageReactPackage(com.sample.application.MainApplication.SHUTDOWN_TOAST), new com.honaf.dialog.MyDialogPackage(), new com.horcrux.svg.SvgPackage(), new com.sample.application.ReactIMUIPackage());
}

public void onClick(android.view.View view) {
    (portions)--;
    portionQuantity.setText(java.lang.String.valueOf(portions));
}

public void replaceFragment(int fragmentContainerResId, android.support.v4.app.Fragment fragment) {
    ((android.support.v4.app.FragmentActivity) (activity)).getSupportFragmentManager().beginTransaction().replace(fragmentContainerResId, fragment).commit();
}

public static AlertDialog.Builder generateDialog(android.content.Context context, java.lang.String title, java.lang.String message) {
    return new android.support.v7.app.AlertDialog.Builder(context, R.style.DialogTheme).setTitle(title).setMessage(message);
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkAnswer(true, getCurrentQuestion());
}

public void onRmsChanged(float rmsdB) {
    android.util.Log.d(uk.co.tstableford.p_brain.MainActivity.TAG, "onRmsChanged");
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivityForResult(new android.content.Intent(getActivity(), com.historicar.app.activity.InsertOrEditDriverActivity.class), Constants.REQUEST_FOR_CREATE_DRIVER);
}

@java.lang.Override
protected void onActivityResult(int aRequestCode, int aResultCode, android.content.Intent data) {
    am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing.getListingFromIntent(data);
    products.add(newListing);
    arrayAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.view.View view) {
    org.catrobat.catroid.ui.dialogs.NewVariableDialog dialog = new org.catrobat.catroid.ui.dialogs.NewVariableDialog();
    dialog.show(fragmentActivity.getSupportFragmentManager(), NewDataDialog.DIALOG_FRAGMENT_TAG);
}

@java.lang.Override
protected void onHandleIntent(android.content.Intent intent) {
    android.util.Log.i(LOG_TAG, "on handle intent");
    handleIntent(intent);
    startForeground(28373, buildForegroundNotification("Lankasri FM"));
}

public void restoreOriginalImage() {
    android.util.Log.d("PuzzleAdapter", ("Restoring image " + (this.imgId)));
    this.img = bitmapOriginalImage.copy(Bitmap.Config.ARGB_8888, true);
    isChanged = false;
}

public io.reactivex.Completable loadAsCompletable(final android.net.Uri sourceUri) {
    return loadAsCompletable(sourceUri, false);
}

@java.lang.Override
public void onDestroyActionMode(android.view.ActionMode mode) {
    android.widget.Toast.makeText(mContext, "this", Toast.LENGTH_SHORT).show();
    thumbnail.setColorFilter(android.graphics.Color.argb(0, 0, 0, 0));
}

public void btnAdd(android.view.View v) {
    this.holdDataOne = java.lang.Double.parseDouble(display.getText().toString());
    display.setText("");
    this.sign = "+";
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    pDialog = new android.app.ProgressDialog(getContext());
    pDialog.setMessage("Loading recent articles...");
    pDialog.setIndeterminate(false);
    pDialog.setCancelable(false);
    pDialog.show();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    switch (id) {
        case R.id.CaptureRawwithoutJpeg :
            com.yorku.mstew.camera2videoimage.SettingsActivity.CaptureRawwithJPEGBoolean = true;
            com.yorku.mstew.camera2videoimage.SettingsActivity.CaptureRawwithoutJPEGBoolean = false;
            break;
    }
    return true;
}

@java.lang.Override
public void onTick(long millisUntilFinished) {
    soundPool.setVolume(stream, volume, volume);
    volume = (volume) - (step);
    android.util.Log.d("1", ("volume = " + (volume)));
}

public void stopButtonAnimation() {
    android.view.animation.Animation anim = getAnimation();
    if (anim != null)
        clearAnimation();
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.util.Log.d("log works", "main");
}

public void done() {
    android.content.Intent intent = new android.content.Intent();
    intent.putExtra("imageArray", mImageArray);
    setResult(com.fonsecakarsten.audiobooky.RESULT_OK, intent);
    finish();
}

public static int ifmt(java.lang.String tag, java.lang.String fmt, java.lang.Object... args) {
    if (tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO) {
        java.lang.String msg = java.lang.String.format(java.util.Locale.US, fmt, args);
        return android.util.Log.i(tag, msg);
    }
    return 0;
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.idonans.acommon.util.SystemUtil.hideStatusBar(getActivity().getWindow());
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent newProfile = new android.content.Intent(v.getContext(), com.github.joey.mansbestfriend.Profile.class);
    startActivityForResult(newProfile, 3);
    finish();
}

public void setTokenFromMain(java.lang.String token) {
    android.util.Log.d(starace.learn.com.musicfilter.Song.SongListFragment.TAG_SONG_FRAG, ("THE TOKEN IS SET FROM MAIN " + token));
    this.token = token;
    android.util.Log.d(starace.learn.com.musicfilter.Song.SongListFragment.TAG_SONG_FRAG, ("THE TOKEN IS SET FROM MAIN IN THE FRAGMENT " + token));
}

@java.lang.Override
public void run() {
    android.view.inputmethod.InputMethodManager inputManager = ((android.view.inputmethod.InputMethodManager) (this.getSystemService(Context.INPUT_METHOD_SERVICE)));
    inputManager.showSoftInput(mActivityPlanDetailBinding.etPlanTitle, 0);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle bundle) {
    icepick.Icepick.saveInstanceState(this, bundle);
}

@java.lang.Override
public io.geeteshk.hyper.adapter.ProjectAdapter.MyViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    java.util.Arrays.sort(mObjects);
    android.view.View itemView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.item_project, parent, false);
    return new io.geeteshk.hyper.adapter.ProjectAdapter.MyViewHolder(itemView);
}

public com.android.volley.RequestQueue getRequestQueue() {
    if ((requestQueue) == null) {
        requestQueue = com.android.volley.toolbox.Volley.newRequestQueue(com.example.moreapp.App.getContext());
    }
    return requestQueue;
}

private void showSystemUI() {
    android.util.Log.d("BackEnd", "On method showSystemUI ");
    mDecorView.setSystemUiVisibility((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)));
}

public static android.content.Intent getIntent(android.content.Context context) {
    android.content.Intent intent = new android.content.Intent(context, com.singh.harsukh.redder.AccessActivity.class);
    return intent;
}

protected void bleServiceDiscovered(java.lang.String address) {
    android.content.Intent intent = new android.content.Intent(com.hypercryptic.bleware.BLEService.BLE_SERVICE_DISCOVERED);
    intent.putExtra(com.hypercryptic.bleware.BLEService.EXTRA_ADDR, address);
    sendBroadcast(intent);
    requestProcessed(address, RequestType.DISCOVER_SERVICE, true);
}

@java.lang.Override
public void onFailure(okhttp3.Call call, java.io.IOException e) {
    android.widget.Toast.makeText(getContext(), R.string.failed_performing_request, Toast.LENGTH_SHORT).show();
    ((com.watchtime.base.WatchTimeApplication) (getContext())).getDataChangeHandler().igniteListeners(OnDataChangeHandler.ALL);
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.d(com.lkworm.miniservice.MainActivity.TAG, "onPause");
    com.lkworm.miniservice.GPSTrackService.LogError(((com.lkworm.miniservice.MainActivity.TAG) + "onPause"));
}

private void setGrid() {
    layoutManager = new android.support.v7.widget.GridLayoutManager(activity, 2);
    recyclerView.setLayoutManager(layoutManager);
    com.rakesh.flickerproject.FlickerImageActivity.MyGridAdapter photoAdapter;
    photoAdapter = new com.rakesh.flickerproject.FlickerImageActivity.MyGridAdapter();
    recyclerView.setAdapter(photoAdapter);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.mobile.paolo.listaspesa.utility.GlobalValuesManager.getInstance(getContext()).saveIsUserCreatingShoppingList(true);
    showListCreationFragment();
}

public static void i(java.lang.String tag, java.lang.String msg) {
    if (android.text.TextUtils.isEmpty(msg)) {
        return ;
    }
    if (com.vinci.imageloader.core.util.MLog.DEBUG) {
        android.util.Log.i(tag, msg);
    }
}

private static java.lang.String getStringByFirstWord(java.lang.String firstWord) {
    java.lang.String ret = com.nanosic.stringup.DBController.getInstance(com.nanosic.stringup.StringGenerator.context).find(firstWord);
    android.util.Log.d(com.nanosic.stringup.StringGenerator.TAG, ("getStringByFirstWord: ret=" + ret));
    return ret;
}

public void attachToActivity(android.app.Activity activity, int slideStyle) {
    attachToActivity(activity, slideStyle, false);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mFScreenEventCallback.setHolder(holder);
    mXibaListPlayUtil.startFullScreen(url, position, holder.container, eventCallback, mFScreenEventCallback);
    eventCallback.bindHolder(holder, position);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (v.equals(register)) {
        startRegistration();
    }else
        if (v.equals(login)) {
        }
    
    startMenu();
}

@java.lang.Override
public void onUpdate(com.daimajia.swipe.SwipeLayout arg0, int arg1, int arg2) {
    android.util.Log.d("TimeFleeting", "onUpdate");
}

@java.lang.Override
protected void applyTransformation(float interpolatedTime, android.view.animation.Transformation t) {
    v.getLayoutParams().height = (interpolatedTime == 1) ? LinearLayout.LayoutParams.WRAP_CONTENT : ((int) (targetHeight * interpolatedTime));
    v.requestLayout();
}

@java.lang.Override
public void adReceived(com.applovin.sdk.AppLovinAd ad) {
    lastAd = ad;
    notifySuccess(((android.app.Activity) (context)), mListener);
}

public static java.lang.String getStringFromSharedPreferences(java.lang.String basic, java.lang.String key) {
    android.content.SharedPreferences sharedPreferences = com.byteshaft.waterassist.Helpers.getPreferenceManager();
    return sharedPreferences.getString(key, "");
}

@java.lang.Override
protected void initToolBar(android.view.View root) {
    super.initToolBar(root);
    toolbar.setTitle(R.string.local_title);
}

@java.lang.Override
public void notifyDataSetChanged() {
    if (!((mBaseAdapter) instanceof android.widget.ArrayAdapter<?>))
        mBaseAdapter.notifyDataSetChanged();
    
}

public void onClick(android.content.DialogInterface dialog, int id) {
    finish();
    java.lang.System.exit(0);
}

@java.lang.Override
public void playDefaultNotificationSound() {
    com.jdndeveloper.lifereminders.phone.Phone.notification = android.media.RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
    com.jdndeveloper.lifereminders.phone.Phone.r = android.media.RingtoneManager.getRingtone(com.jdndeveloper.lifereminders.phone.Phone.context, com.jdndeveloper.lifereminders.phone.Phone.notification);
    com.jdndeveloper.lifereminders.phone.Phone.r.play();
    com.jdndeveloper.lifereminders.phone.Phone.r.stop();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.support.v4.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.ab_refresh :
            this.refresh(null);
            return true;
        case R.id.ab_search :
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
    mAdapter = new me.li2.android.fiserv.smartmoney.ui.BankingOperationFragment.BankingOperationAdapter(getActivity(), createItems());
}

protected java.lang.CharSequence getStepDescription() {
    final android.widget.EditText editText = ((android.widget.EditText) (getView().findViewById(R.id.inputStepDescriptionView)));
    return editText.getText();
}

@java.lang.Override
public void onScrollingFinished(com.terrydr.pickerview.wheelview.WheelView wheel) {
    result = java.lang.String.valueOf(arrayWheelAdapter.getItemText(wheel.getCurrentItem()));
    android.util.Log.e(com.terrydr.pickerview.PickerView_Plugin_intent.TAG, ("scrollListenerResult:" + (result)));
}

@java.lang.Override
protected void setResource(android.graphics.Bitmap resource) {
    android.support.v4.graphics.drawable.RoundedBitmapDrawable drawable = android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory.create(context.getResources(), resource);
    drawable.setCircular(true);
    holder.sponsorimage.setImageDrawable(drawable);
}

public int getPlayBufferSize() {
    int minBufferSize = android.media.AudioTrack.getMinBufferSize(44100, AudioFormat.CHANNEL_OUT_MONO, AudioFormat.ENCODING_PCM_16BIT);
    return minBufferSize / 4;
}

public com.example.ddmeng.hellodialogfragment.MyCustomDialogFragment.Builder setNegativeButton(java.lang.String text, android.content.DialogInterface.OnClickListener listener) {
    this.negative = text;
    this.negativeListener = listener;
    return this;
}

public void showCompleteView() {
    android.util.Log.d("tianbin", "show complete view");
    controlsContainer.setVisibility(com.devbrackets.android.exomediademo.hotbody.GONE);
    mBtnReplay.setVisibility(com.devbrackets.android.exomediademo.hotbody.VISIBLE);
}

private static void launchIntent(java.lang.String activity, java.lang.Class clazz, android.content.Context context) {
    android.content.Intent intent = new android.content.Intent(context, clazz);
    edu.txstate.mobile.tracs.util.MenuController.configureBackstack(intent, context, activity);
    context.startActivity(intent);
}

public void run() {
    android.widget.Toast.makeText(this, (("Has: " + status) + "!!!!!"), Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onPageSelected(int page) {
    android.util.Log.d(de.blau.android.propertyeditor.PropertyEditor.DEBUG_TAG, ("onPageSelected " + page));
    if ((page == (tagFormFragmentPosition)) && ((tagFormFragment) != null)) {
        tagFormFragment.update();
    }
}

@java.lang.Override
protected final void onHandleIntent(android.content.Intent intent) {
    processIntent(intent);
    com.onesignal.GcmBroadcastReceiver.completeWakefulIntent(intent);
}

private void updateSize() {
    android.util.Log.d("updateSize", ((getHealth()) + " "));
    setSize(((float) ((health) * 0.025)));
}

android.view.View create(android.content.Context context, android.view.View convertView, android.view.ViewGroup parent, android.view.LayoutInflater inflater) {
}

private int dpToPx(int dp) {
    return ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, getResources().getDisplayMetrics())));
}

private void startAuthActivity(agency.tango.skald.core.AuthException authException) {
    agency.tango.skald.core.errors.AuthError authError = authException.getAuthError();
    if (authError.hasResolution()) {
        android.content.Intent intent = authError.getResolution();
        startActivityForResult(intent, com.spotify.sdk.android.authentication.LoginActivity.REQUEST_CODE);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    mUser = com.pratilipi.mobile.android.homescreen.profile.ProfileUtil.getLoggedInUser(activity);
    if ((mUser) != null) {
        if (isAddedToLibrary)
            removeFromLibraryRequest();
        else
            addToLibraryRequest();
        
    }else {
        startLoginActivity();
    }
}

@java.lang.Override
public void onFailure(java.lang.Throwable e) {
    android.util.Log.e("seyi", "farmer delete failed");
    android.util.Log.e("TAG", "failed to save event data", e);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.lta_setAudio_btn :
            chooseAudio();
            break;
        case R.id.aa_save_alarm :
            startAlarm();
            break;
        default :
            super.onClick(v);
    }
}

@java.lang.Override
public void onMapLongClick(final com.google.android.gms.maps.model.LatLng point) {
    android.widget.Toast.makeText(mContext, ("Long Press" + (point.toString())), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState, android.os.PersistableBundle outPersistentState) {
    super.onSaveInstanceState(outState, outPersistentState);
    outState.putString(com.gh4a.activities.IssueListActivity.STATE_KEY_SEARCH_QUERY, mSearchQuery);
    outState.putBoolean(com.gh4a.activities.IssueListActivity.STATE_KEY_SEARCH_MODE, mSearchMode);
}

private com.apptentive.android.sdk.RatingModule.RatingState getState(android.content.SharedPreferences prefs) {
    return com.apptentive.android.sdk.RatingModule.RatingState.valueOf(prefs.getString(Constants.PREF_KEY_RATING_STATE, com.apptentive.android.sdk.RatingModule.RatingState.START.toString()));
}

@java.lang.Override
public void onGetChannelMember(java.lang.String userId) {
    android.util.Log.d(com.toraysoft.qinjia_lib.QinjiaManager.TAG, ("onGetChannelMember " + userId));
    addUser(userId);
    mProxy.onGetChannelMember(userId);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_PICK, null);
    intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");
    startActivityForResult(android.content.Intent.createChooser(intent, "Select an Image."), rainvisitor.personal_assistant.DetailScheduleFragmet.AddFragment.Pick_Image_Request);
}

@java.lang.Override
protected android.os.Parcelable onSaveInstanceState() {
    android.os.Parcelable superState = super.onSaveInstanceState();
    return new com.andrognito.patternlockview.PatternLockView.SavedState(superState, com.andrognito.patternlockview.utils.PatternLockUtils.patternToString(mPattern), mPatternViewMode, mInputEnabled, mInStealthMode, mEnableHapticFeedback);
}

public static void setupAndroidNatures(org.eclipse.core.resources.IProject project, org.eclipse.core.runtime.IProgressMonitor monitor) throws org.eclipse.core.runtime.CoreException {
    com.android.ide.eclipse.adt.internal.project.AndroidNature.setupProjectNatures(project, monitor);
}

private void delayedHide(int delayMillis) {
    android.util.Log.d("BackEnd", ("On method delayedHide " + delayMillis));
    mHideHandler.removeMessages(0);
    mHideHandler.sendEmptyMessageDelayed(0, delayMillis);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (isNewClaim == true) {
        createDestinationButton(isNewClaim, Destination, newDestination, doNothing);
    }else {
        Destination = claim.getDestination();
        createDestinationButton(isNewClaim, Destination, editDestination, doNothing);
    }
}

public void onNothingSelected(android.widget.AdapterView<?> parent) {
    tipo_bebida = "";
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(TAG, "OnClick Call");
    if (mSQLiteManager.updateCheckStateInTodo(mDataList.get(position)._ID)) {
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setupBroadcastManagers();
    setProfileInformation();
    setContentView(R.layout.activity_main);
}

private int getParentVisibility() {
    android.view.View parentView = com.marvinlabs.widget.floatinglabel.FloatingLabelWidgetBase.getRootView().findViewById(((android.view.ViewGroup) (com.marvinlabs.widget.floatinglabel.FloatingLabelWidgetBase.getParent())).getId());
    return parentView != null ? parentView.getVisibility() : android.view.View.GONE;
}

@java.lang.SuppressWarnings(value = "ResourceType")
@java.lang.Override
public void onGenerated(android.support.v7.graphics.Palette palette) {
    int vibrantColor = palette.getVibrantColor(R.color.colorPrimary);
    int vibrantDarkColor = palette.getDarkVibrantColor(R.color.colorPrimary);
    collapsingToolbarLayout.setContentScrimColor(vibrantColor);
    collapsingToolbarLayout.setStatusBarScrimColor(vibrantDarkColor);
}

@java.lang.Override
protected void onPostExecute(com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException ex) {
    super.onPostExecute(ex);
    if (com.spjanson.restdemo.REST.mConnected) {
        com.spjanson.restdemo.REST.mConnCBs.onConnOK();
    }else {
        com.spjanson.restdemo.REST.mConnCBs.onConnFail((ex == null ? null : ex.getIntent()));
    }
}

@java.lang.Override
public void onRequestPermissionsResult(int requestCode, @android.support.annotation.NonNull
java.lang.String[] permissions, @android.support.annotation.NonNull
int[] results) {
    if ((results[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        determineCurrentLocation();
    }else {
    }
}

@java.lang.Override
public void onFinish() {
    de.greenrobot.event.EventBus.getDefault().postSticky(new com.sqvat.squat.events.RestFinished(position));
    android.media.MediaPlayer mPlayer = android.media.MediaPlayer.create(getActivity(), R.raw.timer_finish);
    mPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
    mPlayer.start();
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    mThumbnailThread.quit();
    android.util.Log.i(com.example.photogallery.PhotoGalleryFragment.TAG, "Background thread destroyed!");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_tingle);
    if (savedInstanceState == null) {
        setFragment();
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    android.util.Log.d(com.ripplex.fileobservertester.MainApplication.TAG, "onCreate()");
    manager = new com.ripplex.fileobservertester.FileObserverManager();
    manager.startWatch();
}

public void onDrawerClosed(android.view.View drawerView) {
    isOpened = 0;
}

@java.lang.Override
public void bind(android.content.Context context, java.lang.Object item) {
}

public void next() {
    (indexPointer)++;
    if ((indexPointer) > ((mSize) - 1)) {
        android.util.Log.d("ProgressDotBar", "Index overflow");
        return ;
    }
    updateDots();
}

@android.support.annotation.NonNull
public java.util.List<java.util.Map<java.lang.String, java.lang.String>> getLinks() {
    if ((links) == null)
        return java.util.Collections.emptyList();
    
    return links;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (existAccount())
        startActivity(new android.content.Intent(this, it.eternitywall.eternitywall.activity.DebugActivity.class));
    else
        dialogCreateAccount();
    
}

public static int getType(android.app.Activity activity) {
    com.easy.util.MeasureUtil.measure(activity);
    return com.easy.util.MeasureUtil.type;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((originalFile) != null) {
        mplayer.play(originalFile);
    }
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    if (camera) {
        mScannerView.stopCamera();
    }
    listView.setAdapter(null);
    android.widget.FrameLayout frameLayout = findViewById(R.id.content);
    frameLayout.removeAllViews();
}

private void loadImages() {
    if ((com.best_slopes.bestslopes.ImageAdapter.baseDir) == null)
        com.best_slopes.bestslopes.ImageAdapter.baseDir = android.os.Environment.getExternalStorageDirectory().getAbsolutePath();
    
    if (trail.isNew()) {
        getDebuggingImages();
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.d(com.solderbyte.openfit.NotificationService.LOG_TAG, "Stopping Service");
    stopSelf();
    unregisterReceiver(appsReceiver);
    unregisterReceiver(stopServiceReceiver);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.app.Activity activity = ((android.app.Activity) (v.getTag()));
    activity.startActivityForResult(android.content.Intent.createChooser(new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT).setType("image/*"), "Choose an image"), com.dreamfactory.sampleapp.activities.CreateContactActivity.CHOOSE_IMAGE_REQUEST);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent gallery = new android.content.Intent(android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI);
    gallery.setType("image/*");
    gallery.setAction(Intent.ACTION_GET_CONTENT);
    startActivityForResult(gallery, de.mpg.mpdl.www.datacollector.app.Workflow.WorkflowSectionFragment.INTENT_PICK_PHOTO);
    meta.setType("image");
}

public void close(android.view.View view) {
    mListener.closeThis(this);
}

protected android.support.v4.app.Fragment createFragment() {
    com.innovativetech.audio.audiobookmaster.AudioBook book = ((com.innovativetech.audio.audiobookmaster.AudioBook) (getIntent().getSerializableExtra(com.innovativetech.audio.audiobookmaster.AudioPlayerActivity.EXTRA_BOOK)));
    return com.innovativetech.audio.audiobookmaster.AudioPlayerFragment.newInstance(book);
}

protected void onPermissionResult(ext.android.permissions.ExtPermission permission, java.lang.Integer permissionResult) {
    if ((permission.isMandatory()) && (permissionResult != (android.content.pm.PackageManager.PERMISSION_GRANTED))) {
        requestPermissionHandler.onPermissionDenied();
    }
}

public void storeImage(java.lang.String completePath, android.net.Uri fileUri, android.content.Context context) {
    android.graphics.Bitmap bitmap = compressBitmap(fileUri, context);
    storeImage(completePath, bitmap);
}

@java.lang.Override
protected void onDestroy() {
    android.util.Log.d(edu.grinnell.kdic.MainActivity.TAG, "MainActivity Destroyed.");
    super.onDestroy();
}

public byte[] readFile(com.felhr.usbmassstorageforandroid.filesystems.VFSFile file) {
    fatHandler.stopCaching();
    byte[] data = fatHandler.readFile(file.getFileName());
    fatHandler.continueCaching();
    return data;
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader loader) {
    mCursorAdapter.getCursor().close();
    mCursorAdapter.swapCursor(null);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> adapterView, android.view.View view, int position, long l) {
    onItemSelectedMethod(position);
}

@java.lang.Override
public void onError(com.androidnetworking.error.ANError error) {
    android.util.Log.d("rgqergqe", error.toString());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((OnItemClickListener) != null) {
        int id = ((int) (v.getTag()));
        OnItemClickListener.onItemClick(id);
    }
}

@java.lang.Override
public void onError(com.androidnetworking.error.ANError anError) {
    android.util.Log.i(com.tpb.projects.data.Editor.TAG, ("onError: Card update: " + (anError.getErrorBody())));
    if (listener != null)
        listener.updateError(parseError(anError));
    
}

@android.annotation.RequiresPermission(value = Manifest.permission.BLUETOOTH)
public java.lang.String getAddress() {
    try {
        return com.oinux.android.ConfigLoader.getInstance(true).get(Config.BLUETOOTH_ADDRESS, mManagerService.getAddress());
    } catch (android.os.RemoteException e) {
        android.util.Log.e(android.bluetooth.BluetoothAdapter.TAG, "", e);
    }
    return null;
}

@java.lang.Override
public void bindView(android.view.View view, android.content.Context context, android.database.Cursor cursor) {
    com.markupartist.sthlmtraveling.provider.planner.JourneyQuery journeyQuery = com.markupartist.sthlmtraveling.PlannerActivity.getJourneyQuery(cursor);
    inflateView(view, journeyQuery, cursor);
}

@java.lang.Override
protected android.view.View initComponentHostView(android.content.Context context) {
    return new android.widget.TextView(context);
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    super.onPostExecute(result);
    android.util.Log.d("DownloadData", ("Result was : " + result));
}

public com.yalantis.ucrop.UCrop withMaxResultSize(@android.support.annotation.IntRange(from = 100)
int width, @android.support.annotation.IntRange(from = 100)
int height) {
    mCropOptionsBundle.putBoolean(com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_SET, true);
    mCropOptionsBundle.putInt(com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_X, width);
    mCropOptionsBundle.putInt(com.yalantis.ucrop.UCrop.EXTRA_MAX_SIZE_Y, height);
    return this;
}

protected com.android.internal.telephony.uicc.IccRecords getUiccRecords(int appFamily) {
    return mUiccController.getIccRecords(mPhone.getPhoneId(), appFamily);
}

@java.lang.Override
public void onClick(android.view.View view) {
    choiceA.setBackground(drw);
    choiceB.setBackgroundResource(0);
    choiceC.setBackgroundResource(0);
    answers[position] = 0;
}

protected net.sharkfw.protocols.Stub createWifiDirectStreamStub(net.sharkfw.asip.SharkStub kepStub) throws net.sharkfw.kep.SharkProtocolNotSupportedException {
    if ((currentStub) == null) {
        currentStub = new net.sharksystem.android.protocols.wifidirect.WifiDirectStreamStub(context, activityRef);
        currentStub.setHandler(((net.sharkfw.protocols.RequestHandler) (kepStub)));
    }
    return currentStub;
}

public void BackToBooking(android.view.View v) {
    android.content.Intent i = new android.content.Intent(getBaseContext(), team2beat.com.qrcodes.Staff_Bookings.class);
    this.startActivity(i);
}

public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int direction) {
    if (itemSelected) {
        showOptions(false);
    }else {
        mAdapter.onItemDismiss(viewHolder.getAdapterPosition());
        moving = true;
        updateUI();
    }
}

@java.lang.Override
public void destroyItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    container.removeView(((android.widget.RelativeLayout) (object)));
    com.squareup.picasso.Picasso.with(mMeFullScreenActivity).cancelRequest(mImageView);
}

public void decrease(android.view.View view) {
    android.widget.TextView tv = getTextView(R.id.quantity_text_view);
    numberOfCoffees = (numberOfCoffees) - 1;
    tv.setText(("" + (numberOfCoffees)));
}

@java.lang.Override
public void onRefresh() {
    refreshList();
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            swipeRefreshLayout.setRefreshing(false);
        }
    }, 1500);
}

@java.lang.Override
public void onPageScrollStateChanged(int state) {
    android.util.Log.i(TAG, ("onPageScrollStateChanged: " + state));
    if (state == 1) {
        slideByUser = true;
    }else
        if (state == 2) {
        }else {
            slideByUser = false;
        }
    
}

public static void setWidth(final android.view.View aView, final int aWidth) {
    final android.view.ViewGroup.LayoutParams params = aView.getLayoutParams();
    params.width = com.deepercreeper.vampireapp.util.ViewUtil.calcPx(aWidth, aView.getContext());
    aView.setLayoutParams(params);
}

@org.junit.After
public void tearDown() throws java.lang.Exception {
    android.util.Log.v(nl.sense_os.userdataapi.SenseUserDataAPITest.TAG, "Tearing Down SenseUserDataAPITest");
    clearUsersData();
}

private void maybeSwapSearchIcon(@android.annotation.NonNull
android.content.ComponentName assistComponent, boolean isService) {
    if ((mView) == null) {
        onConfigurationChanged();
    }
    replaceDrawable(mView.getOrb().getLogo(), assistComponent, com.android.systemui.assist.AssistManager.ASSIST_ICON_METADATA_NAME, isService);
}

private void clickCancel(android.content.DialogInterface dialog, int id) {
    dismiss();
}

@java.lang.Override
public synchronized boolean act(com.xengine.android.toolkit.sm.XAction action) {
    if ((mActionWorker) == null)
        return false;
    
    if (action == null) {
        return false;
    }
    return mActionQueue.offer(action);
}

private android.content.Intent createShareIntent() {
    android.content.Intent shareIntent = new android.content.Intent(android.content.Intent.ACTION_SEND);
    shareIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
    shareIntent.setType("text/plain");
    shareIntent.putExtra(Intent.EXTRA_TEXT, shareMessage);
    return shareIntent;
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    injectDependencies();
    mSettingsPresenter.setView(this);
}

private boolean isNotificationsEnabled() {
    return android.preference.PreferenceManager.getDefaultSharedPreferences(this).getBoolean(getString(R.string.pref_chat_notifications_key), false);
}

public static boolean checkIfPackageChanged(android.content.Context context) {
    return !(context.getPackageName().equals(((((ru.dante.scpfoundation.util.SecureUtils.ONE) + (ru.dante.scpfoundation.util.SecureUtils.TWO)) + (ru.dante.scpfoundation.util.SecureUtils.THREE)) + (ru.dante.scpfoundation.util.SecureUtils.FOUR))));
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        default :
            break;
    }
}

public void quitOnClick(android.view.View view) {
    finish();
}

public static com.flaredown.flaredownApp.Checkin.CheckinCatalogQFragment newInstance(com.flaredown.flaredownApp.Helpers.APIv2.EndPoints.CheckIns.TrackableType trackableType) {
    android.os.Bundle args = new android.os.Bundle();
    args.putSerializable(com.flaredown.flaredownApp.Checkin.CheckinCatalogQFragment.ARG_TRACKABLE_TYPE, trackableType);
    com.flaredown.flaredownApp.Checkin.CheckinCatalogQFragment fragment = new com.flaredown.flaredownApp.Checkin.CheckinCatalogQFragment();
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onPageScrollStateChanged(int state) {
    android.util.Log.e(com.gamecard.view.AppDescriptionActivity.TAG, "onPageScrolledStateChanged called");
}

public void setItemSize(int columnWidth) {
    if ((mItemSize) == columnWidth) {
        return ;
    }
    mItemSize = columnWidth;
    mItemLayoutParams = new android.widget.GridView.LayoutParams(mItemSize, mItemSize);
    notifyDataSetChanged();
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    mCamera.stopPreview();
    mCamera.release();
}

@java.lang.Override
public com.starlabs.h2o.adapter.ViewPurityReportsAdapter.CustomViewHolder onCreateViewHolder(android.view.ViewGroup viewGroup, int i) {
    android.view.View view = android.view.LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.adapter_purity_report, null);
    com.starlabs.h2o.adapter.ViewPurityReportsAdapter.CustomViewHolder viewHolder = new com.starlabs.h2o.adapter.ViewPurityReportsAdapter.CustomViewHolder(view);
    return viewHolder;
}

private static java.util.Locale getLocale(android.app.Activity activity) {
    return activity.getResources().getConfiguration().locale;
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    refreshSeekPosition(java.util.concurrent.TimeUnit.SECONDS.toMillis(seekBar.getProgress()), mMediaPlayer.getStreamDuration());
}

@java.lang.Override
public void onClick(android.view.View v) {
    addStarBook(mBook);
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    android.support.v7.widget.RecyclerView rv = ((android.support.v7.widget.RecyclerView) (view.findViewById(R.id.f1_recyclerview)));
    setupRecyclerView(rv);
    initiliazeYoutubeFragment();
}

@java.lang.Override
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    android.util.Log.e("map is ckicked", "true");
    openMapFull(requestCode);
}

@java.lang.Override
public void run() {
    callback.onSuccess(new org.matrix.androidsdk.crypto.MXCrypto.DoKeyDownloadForUsersResponse(usersDevicesInfoMap, failedUserIds));
}

@java.lang.Override
public void writeToParcel(android.os.Parcel parcel, int i) {
    parcel.writeString(this.name);
    parcel.writeInt(this.cant);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    java.lang.System.out.println("this is the change");
}

void setControls() {
    linFirstRun = ((android.widget.LinearLayout) (findViewById(R.id.linFirstRun)));
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (null != fileName) {
        this.onPlayButtonClick(playButton, fileName);
    }else {
        this.onPlayButtonClick(playButton, mCurrent.getFilePath());
    }
}

private void displayDatePicker(org.apache.cordova.CallbackContext callbackContext) {
    android.app.FragmentManager manager = cordova.getActivity().getFragmentManager();
    com.plugin.datepicker.MaterialDatePickerPlugin.DatePickerFragment dialog = new com.plugin.datepicker.MaterialDatePickerPlugin.DatePickerFragment();
    dialog.show(manager, com.plugin.datepicker.MaterialDatePickerPlugin.DIALOG_DATE);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return com.add.toeic.activity.DetailWordActivity.PlaceholderFragment.newInstance((position + 1), mArrayList, mGroupWord, mWord);
}

public void doneExpenseItem(android.view.View v) throws java.text.ParseException {
    if (createExpenseItem(v)) {
        finish();
    }
}

@java.lang.Override
public void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    if (intent.getAction().equals(Intent.ACTION_MAIN)) {
        fadeDateTime(1, 300);
        resetState();
    }
}

@java.lang.Override
public void onCreate() {
    org.nypl.simplified.app.Simplified.LOG.debug("starting app: pid {}", java.lang.Integer.valueOf(android.os.Process.myPid()));
    org.nypl.simplified.app.Simplified.INSTANCE = this;
    initBugsnag(org.nypl.simplified.app.Bugsnag.getApiToken(this.getAssets()));
}

public void on_click_logout(android.view.View view) {
    myDB.close();
    startActivity(new android.content.Intent(this, info.androidhive.materialtabs.activity.Login_Activity.class));
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.programmeerproject.PinboardActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.back_button :
            openDialog();
            break;
        case R.id.yesButton :
            goBack();
            break;
        default :
            break;
    }
}

@java.lang.Override
public void onLongClick(android.view.View view, int position) {
    android.widget.Toast.makeText(this, ("Long click, Position: " + position), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<java.util.ArrayList<com.jasonbutwell.popularmovies.Model.MovieItemBasic>> loader, java.util.ArrayList<com.jasonbutwell.popularmovies.Model.MovieItemBasic> movieData) {
    com.jasonbutwell.popularmovies.Ui.LoadingIndicator.show(mBinding, false);
    mListener.onTaskComplete(movieData);
    android.util.Log.i("LOADER", "END");
    com.jasonbutwell.popularmovies.BackgroundTask.TMDBLoader.isLoaded = true;
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int i, boolean b) {
    mCurrentTimeTV.setText(android.text.format.DateUtils.formatElapsedTime((i / 1000)));
}

@java.lang.Override
public android.content.Loader<java.util.List<fr.sims.coachingproject.model.Group>> onCreateLoader(int id, android.os.Bundle args) {
    return new fr.sims.coachingproject.loader.local.GroupLoader(getContext());
}

public static synchronized void initialize(final android.content.Context context) {
    com.udacity.stockhawk.sync.QuoteSyncJob.schedulePeriodic(context);
    com.udacity.stockhawk.sync.QuoteSyncJob.syncImmediately(context);
}

public void run() {
    if (!(org.hisp.dhis.android.sdk.network.managers.NetworkManager.hasInternetConnection()))
        onFinishSending(false);
    else
        sendTrackedEntityInstances();
    
}

public void setPermissions() {
    android.util.Log.i("XXX", "pasa por SetPermissions");
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) {
        android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.CAMERA , Manifest.permission.WRITE_EXTERNAL_STORAGE }, com.example.acedeno.customcamera.CustomCameraActivity.NOSCONECTA_CAMERA_PERMISSION);
    }
}

public void onClick(android.view.View v) {
    mPatternView.setPattern(mGenerator.getPattern());
    mPatternView.invalidate();
    if ((counter) != 0) {
        (counter)++;
    }
}

@java.lang.Override
public int getViewHorizontalDragRange(android.view.View child) {
    return (mViewWebGuide.getWidth()) | (mViewContent.getWidth());
}

@java.lang.Override
public void onClick(android.view.View v) {
    bankerSelect(3);
    bankerSelectNotify.dismiss();
}

private boolean isOnlineMode() {
    android.content.SharedPreferences settings = getSharedPreferences(com.computing.pervasive.myapplication.MainActivity.ONLINE_PREF, 0);
    boolean online = settings.getBoolean("ONLINE", false);
    return online;
}

public void shoot(android.view.View view) {
    if (!(started)) {
        started = true;
        unmark();
        startGame();
    }
    g.pShoot();
}

private void commitReset() {
    commitTyped(getCurrentInputConnection());
    charReset();
    if ((mCapsMode) == (org.nyanya.android.traditionalt9.TraditionalT9.CAPS_SINGLE)) {
        mCapsMode = org.nyanya.android.traditionalt9.TraditionalT9.CAPS_OFF;
    }
    updateShiftKeyState(getCurrentInputEditorInfo());
}

private java.lang.CharSequence getBathroomAddress() {
    java.lang.String text = "";
    java.lang.String address = mBathroom.getAddress();
    if (!(android.text.TextUtils.isEmpty(address))) {
        address = decodeString(address);
        text += address;
    }
    return text;
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    if (context instanceof com.usal.jorgeav.sportapp.MainActivityContract.ActionBarIconManagement) {
        mActionBarIconManagementListener = ((com.usal.jorgeav.sportapp.MainActivityContract.ActionBarIconManagement) (context));
        mFragmentManagementListener = ((com.usal.jorgeav.sportapp.MainActivityContract.FragmentManagement) (context));
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((getActivity()) instanceof net.osmand.plus.download.DownloadActivity) {
        ((net.osmand.plus.download.DownloadActivity) (getActivity())).setDownloadItem(null);
    }
    dismiss();
}

@java.lang.Override
public void onCancel(android.content.DialogInterface dialogInterface) {
    this.cancelDownload = true;
}

public void onReceivedError(android.webkit.WebView view, int errorCode, java.lang.String description, java.lang.String failingUrl) {
    super.onReceivedError(view, errorCode, description, failingUrl);
    browserEventSender.sendError(failingUrl, errorCode, description);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int i) {
    com.pwhitman.neonpasswordsafe.Password password = mPasswords.get(i);
    return com.pwhitman.neonpasswordsafe.PasswordFragment.newInstance(password.getId());
}

@java.lang.Override
public boolean isViewFromObject(android.view.View view, java.lang.Object object) {
    return view == ((android.widget.LinearLayout) (object));
}

@java.lang.Override
public void onResume() {
    super.onResume();
    mHumanMediaPlayer = android.media.MediaPlayer.create(getApplicationContext(), R.raw.x_sound);
    mAndroidMediaPlayer = android.media.MediaPlayer.create(getApplicationContext(), R.raw.o_sound);
}

public void onReceiveConnections(com.nutomic.syncthingandroid.model.Connections connections) {
    mConnections = com.google.common.base.Optional.of(connections);
    notifyDataSetChanged();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.pref_general);
    setHasOptionsMenu(true);
    com.example.antoine.settings.SettingsActivity.bindPreferenceSummaryToValueInt(findPreference("widget_color"));
}

@java.lang.Override
public void onClose(com.daimajia.swipe.SwipeLayout arg0) {
    android.util.Log.d("TimeFleeting", "onClose");
    isOpened = false;
}

protected android.graphics.drawable.LayerDrawable getLayersById(@android.support.annotation.DrawableRes
int id) {
    return ((android.graphics.drawable.LayerDrawable) (getDrawable(id).mutate()));
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    if ((callback) != null) {
        callback.onAnimationFinished();
    }
    ((android.view.ViewGroup) (getParent())).removeView(this);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    arudra.mycompany.com.assignment4.Search.fragmentNumber = position;
    return arudra.mycompany.com.assignment4.Search.PlaceholderFragment.newInstance((position + 1));
}

protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_test_p2);
    android.content.Intent intent = getIntent();
    long timeStamp = java.util.Calendar.getInstance().getTimeInMillis();
}

public static void switchOffSound(android.content.Context context) {
    android.widget.Toast.makeText(context, R.string.start_message, Toast.LENGTH_LONG).show();
    com.github.varepsilon.TempSwitcher.AlarmReceiver.setRingerMode(context, AudioManager.RINGER_MODE_VIBRATE);
}

@java.lang.Override
public void onMapLongClick(com.google.android.gms.maps.model.LatLng latLng) {
    markerPosition = latLng;
    drawnMarker.setPosition(latLng);
    drawnCircle.setCenter(latLng);
    map.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(markerPosition));
}

public void checkBlacklist(java.lang.Integer storeID, java.lang.String storeToken, appaloosa_store.com.appaloosa_android_tools.tools.interfaces.ApplicationAuthorizationActivity listeningActivity) {
    this.activity = listeningActivity;
    appaloosa_store.com.appaloosa_android_tools.tools.services.blacklist.CheckBlacklistService.checkBlacklist(storeID, storeToken, listeningActivity);
}

public static java.lang.Class<?> loadClass(android.content.Context context, java.lang.String str) throws java.lang.Exception {
    com.yalin.style.engine.classloader.WrapperClassLoader.init(context);
    try {
        return com.yalin.style.engine.classloader.WrapperClassLoader.classLoader.loadClass(str);
    } catch (java.lang.ClassNotFoundException e) {
        throw e;
    }
}

@java.lang.Override
public void onWindowFocusChanged(boolean hasFocus) {
    super.onWindowFocusChanged(hasFocus);
    android.util.Log.d("BackEnd", ("On method onWindowFocusChanged " + hasFocus));
    if (hasFocus) {
        delayedHide(com.example.app.jpegstreamming.MainActivity.INITIAL_HIDE_DELAY);
    }else {
        mHideHandler.removeMessages(0);
    }
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    if ((speech) != null) {
        speech.destroy();
        android.util.Log.i(LOG_TAG, "destroy");
    }
}

public void setMaxCharactersPerLine(int maxCharactersPerLine) {
    maxCharactersPerLine = maxCharactersPerLine;
    if (com.jp.androidlogger.AndroidLoggerFactory.EXTRA_LOGGING)
        android.util.Log.v(com.jp.androidlogger.AndroidLoggerFactory.TAG, ("setMaxCharactersPerLine: " + maxCharactersPerLine));
    
}

void restoreState(android.os.Bundle bundle) {
    if (bundle.containsKey(org.mozilla.focus.webview.FocusWebViewClient.STATE_KEY_CERTIFICATE)) {
        restoredUrl = bundle.getString(org.mozilla.focus.webview.FocusWebViewClient.STATE_KEY_URL);
        restoredCertificate = android.net.http.SslCertificate.restoreState(bundle.getBundle("client_last_certificate"));
    }
}

private static void getNews(@caplan.innovations.trendy.network.NewsNetwork.NewsType
int newsType) {
    android.content.Intent intent = new android.content.Intent(caplan.innovations.trendy.application.TrendyApplication.context(), caplan.innovations.trendy.services.NewsIntentService.class);
    intent.putExtra(caplan.innovations.trendy.services.NewsIntentService.KEY_NEWS_TYPE, NewsNetwork.NEWS_GOOGLE);
    caplan.innovations.trendy.application.TrendyApplication.getInstance().startService(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.btnSet :
            sjtu.dclab.smartcity.ui.MenuPopupWindow menuPopupWindow = new sjtu.dclab.smartcity.ui.MenuPopupWindow(this);
            menuPopupWindow.showPopupWindow(setButton);
            break;
        default :
            break;
    }
}

public static int getSpinnerLabelEmail(int type) {
    switch (type) {
        case com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.FIELD_TYPE_EMAIL_HOME :
            return com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.TYPE_INDEX_HOME;
        case com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.FIELD_TYPE_EMAIL_WORK :
            return com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.TYPE_INDEX_WORK;
        case com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.FIELD_TYPE_EMAIL_OTHER :
            return com.roberts.adrian.androidcodetestadrianroberts.ContactEditorActivity.TYPE_INDEX_OTHER;
        default :
            return 0;
    }
}

@com.facebook.react.bridge.ReactMethod
public void stopLocationHeartBeat(com.botree.locationheartbeat.Callback successCallback, com.botree.locationheartbeat.Callback errorCallback) {
    if ((receiver) != null) {
        android.content.Intent stopMonitorIntent = new android.content.Intent("STOP_MONITOR_LOCATION");
        getReactApplicationContext().sendBroadcast(stopMonitorIntent);
    }
}

private java.lang.String getLastModified(android.content.Context context) {
    android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
    return prefs.getString(((name) + "Last"), "");
}

public void onClick(android.view.View v) {
    deleteImageFromGallery();
    nextImage(0);
    updateBackgroundImage();
}

public void sketchesBtnOnClick(android.view.View view) {
    android.content.Intent sketchesIntent = new android.content.Intent(getBaseContext(), com.blackteam.dsketches.ui.SketchesActivity.class);
    sketchesIntent.putExtra(com.blackteam.dsketches.ui.MainMenuActivity.EXTRA_SKETCHES_DATA, getIntent().getExtras().getBundle(SketchesActivity.EXTRA_SKETCHES_DATA));
    startActivity(sketchesIntent);
}

@java.lang.Override
public void run() {
    UserInfo.userInfo = user;
    android.content.Intent homeIntent = new android.content.Intent(this, com.example.erikkjernlie.tdt4140project.Menu.class);
    startActivity(homeIntent);
    android.widget.Toast.makeText(this, "Successfully logged in!", Toast.LENGTH_SHORT).show();
    finish();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 1 :
            return mMetadataBlankFragment;
        case 2 :
            return itemFragment;
    }
    return itemFragment;
}

public void setTooltipPosition(android.view.View anchorView, it.tooltip.position.ToolTipPositionManager position) {
    tooltip.setToolTipPosition(anchorView, position);
}

public android.graphics.Paint currentStyle() {
    if (shouldErase) {
        return milespeele.canvas.paint.PaintStyles.eraserPaint(currentBackgroundColor, milespeele.canvas.view.ViewCanvas.STROKE_WIDTH);
    }else {
        shouldRedraw = false;
        return new android.graphics.Paint(curPaint);
    }
}

@java.lang.Override
public void onDisconnectedFromRoom(com.google.android.gms.games.multiplayer.realtime.Room room) {
    roomId = null;
    showGameError();
    finish();
}

public void connect(android.view.View view) {
    android.widget.EditText edip = ((android.widget.EditText) (findViewById(R.id.editTextIP)));
    cw = new com.example.message_streamer.connection_worker(this, edip.getText().toString(), "1234");
}

@java.lang.Override
public void onClick(android.view.View v) {
    final android.content.Intent syncServiceIntent = new android.content.Intent(getBaseContext(), com.nitdgp.arka.psync.SyncService.class);
    unbindService(syncServiceConnection);
    syncServiceBound = false;
    stopService(syncServiceIntent);
    stopPeerListUIThread();
}

public void login(android.view.View view) {
    switch (view.getId()) {
        case R.id.facebook :
            provider = com.microsoft.windowsazure.mobileservices.authentication.MobileServiceAuthenticationProvider.Facebook;
            break;
        case R.id.google :
            provider = com.microsoft.windowsazure.mobileservices.authentication.MobileServiceAuthenticationProvider.Google;
            break;
        default :
            break;
    }
    authenticate(false);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    mClient.connect();
    return mBinder;
}

@java.lang.Override
public void createDesire(@android.support.annotation.NonNull
de.fau.cs.mad.wanthavers.common.Desire desire, @android.support.annotation.NonNull
wanthavers.mad.cs.fau.de.wanthavers_android.data.source.desire.CreateDesireCallback callback) {
    try {
        de.fau.cs.mad.wanthavers.common.Desire ret = desireClient.createDesire(desire, null);
        callback.onDesireCreated(ret);
    } catch (java.lang.Throwable t) {
        callback.onCreateFailed();
    }
}

@java.lang.Override
public void onPostExecute(org.fruct.oss.getssupplement.Model.BasicResponse response) {
    deleteMarker(getCurrentSelectedMarker());
    android.widget.Toast.makeText(getApplicationContext(), "TODO: delete marker from API", Toast.LENGTH_SHORT).show();
}

public com.afollestad.materialdialogs.MaterialDialog.Builder titleColorRes(@android.support.annotation.ColorRes
int colorRes) {
    titleColor(android.support.v4.content.ContextCompat.getColor(this.context, colorRes));
    return this;
}

public void addToPictures(android.net.Uri picture) {
    if ((pictures) == null) {
        pictures = new java.util.ArrayList<android.net.Uri>();
        pictures.add(picture);
    }else {
        pictures.add(picture);
    }
}

@java.lang.Override
public void onResponse(com.example.vineetpatil.moviesearch.TitleRecord response) {
    android.util.Log.d(com.example.vineetpatil.moviesearch.SearchFragment.TAG, ("TitleRecordListener - onResponse : " + (response.toString())));
    addTitleRecord(response);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    mCurrentLocation = location;
    java.lang.System.out.println(location);
    java.lang.System.out.println("sidjfhsdhfsdkfqsdfqsdfsdqf");
}

public boolean removeAll() {
    android.content.SharedPreferences.Editor prefsWriter = cookiePrefs.edit();
    prefsWriter.clear();
    prefsWriter.apply();
    cookies.clear();
    return true;
}

public void onClick(android.view.View v) {
    playerStrawSelected = true;
    coinCycle = genRand(2);
    dialog.dismiss();
    spinCoin();
}

public android.support.v7.app.ActionBar getActionBar() {
    return ((android.support.v7.app.AppCompatActivity) (getActivity())).getSupportActionBar();
}

private void removeFavoriteUnwrapped(int tag) throws android.database.sqlite.SQLiteException {
    java.lang.String sql = "DELETE FROM favorites WHERE tag = " + tag;
    if (tag > 1) {
        com.khallware.apis.Datastore.logger.debug(("sql: " + sql));
        handle().execSQL(sql);
    }
}

boolean handleTag(boolean opening, java.lang.String tag, android.text.Editable output, org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener, android.content.Context context, org.xml.sax.Attributes attributes, int nestingLevel);

@java.lang.Override
public void onClick(android.view.View v) {
    setDrawer(mToolbar, this, itemMain, itemMap, itemSettings, headerResult, 2).openDrawer();
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    settingsListener.onInverseChecked();
}

public boolean initSessionWithData(android.net.Uri data, android.app.Activity activity) {
    boolean uriHandled = readAndStripParam(data, activity);
    initSession(((io.branch.referral.Branch.BranchReferralInitListener) (null)), activity);
    return uriHandled;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    if ((isGPSEnabled()) == true) {
        dialogInterface.dismiss();
    }else {
        this.startActivity(new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS));
    }
}

public android.view.View getView(int state) {
    android.view.View view = mStateViewArray.get(state);
    if (view == null) {
        throw new java.lang.NullPointerException("view is not inflate");
    }
    return view;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    ((de.meonwax.soundboard.MainActivity) (context)).removeSound(sound.getId());
}

@java.lang.Override
public void onInitializationSuccess(com.google.android.youtube.player.YouTubePlayer.Provider provider, com.google.android.youtube.player.YouTubePlayer youTubePlayer, boolean b) {
    if (!b) {
        maximbravo.com.topflix.TrailerActivity.youPlayer = youTubePlayer;
    }
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent intent) {
    android.util.Log.d(tag, ((("onActivityResult requestCode: " + requestCode) + " resultCode : ") + resultCode));
    super.onActivityResult(requestCode, resultCode, intent);
}

public void addConversation(uk.org.mattford.scoutlink.model.Conversation conv) {
    android.util.Log.d("SL", ("Adding " + (conv.getName())));
    conversations.put(conv.getName(), conv);
}

@java.lang.Override
protected void populateView(android.view.View view, java.lang.String s, int i) {
    android.widget.TextView text = ((android.widget.TextView) (view.findViewById(android.R.id.text1)));
    text.setText(s);
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    longitude = location.getLongitude();
    latitude = location.getLatitude();
    android.util.Log.e(TAG, "Change........");
}

@java.lang.Override
public void onClick(android.view.View v) {
    mListener.OnWallpaperSelected(imageResId, name, description, url);
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkAnswer(false);
}

public long getElapsedTime() {
    return (android.os.SystemClock.elapsedRealtime()) - (startTime);
}

@java.lang.Override
protected void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    nuclei3.notifications.NotificationManager manager = nuclei3.notifications.NotificationManager.getInstance();
    if (manager != null)
        manager.dismiss(intent);
    
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return com.labs.okey.oneride.myrides.GeneralMyRidesFragment.getInstance();
        case 1 :
            return com.labs.okey.oneride.myrides.RejectedMyRidesFragment.getInstance();
    }
    return null;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int selected_device) {
    rleblanc.ca.smokino.SmokinoApp app = ((rleblanc.ca.smokino.SmokinoApp) (v.getContext().getApplicationContext()));
    app.setRemoteDevice(deviceList.get(selected_device));
    app.connect();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    reinitTextureView(((android.view.TextureView) (findViewById(R.id.player_texture))));
    if ((ksyMediaPlayer) != null) {
        ksyMediaPlayer.start();
        mPause = false;
    }
}

@java.lang.Override
public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) {
    setupTextDetails(view);
    setupLoginButton(view);
}

@java.lang.Override
public void run() {
    android.util.Log.d(LOG_TAG, "loop");
    timer_init();
    Socket_init();
}

@com.facebook.react.bridge.ReactMethod
public void off(java.lang.String id) {
    com.homypiandroid.SocketListener listener = com.homypiandroid.SocketListener.findInList(com.homypiandroid.SocketConnection.jsEvents, id);
    if (listener != null)
        listener.unlink(socketService);
    
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (requestCode == (ubc.cpen391.testing.loginsignup.MainActivity.REQUEST_SIGNUP)) {
        if (resultCode == (RESULT_OK)) {
            android.widget.Toast.makeText(this, "Login Success", Toast.LENGTH_SHORT).show();
        }
    }
}

protected synchronized void clearAndAddToMap() {
    if ((mMap) != null) {
        android.util.Log.d("stop_add_buses", buses.toString());
        stopTimer();
        addBuses();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    mButton.setText(R.string.start_listening);
    com.afollestad.digitus.Digitus.get().openSecuritySettings();
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    super.onDraw(canvas);
    if (isInEditMode())
        return ;
    
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.util.Log.d(com.playxiangqi.hoxchess.MainActivity.PlaceholderFragment.TAG, "onCreateView...");
    android.view.View rootView = inflater.inflate(R.layout.fragment_main, container, false);
    return rootView;
}

public static byte[] bitmapToByteArray(android.graphics.Bitmap image) {
    java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
    image.compress(Bitmap.CompressFormat.JPEG, 70, bos);
    return bos.toByteArray();
}

@java.lang.Override
public void onResume() {
    super.onResume();
    displayCards();
    android.util.Log.e("111", "displayCards() called by onResume()");
}

public void error(java.lang.String msg) {
    if (com.yourtion.httpdns.Debug.isshow)
        android.util.Log.e(((com.yourtion.httpdns.Debug.PREFIX) + (this.name)), msg);
    
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    ((android.widget.TextView) (parent.getSelectedView())).setTextColor(getResources().getColor(R.color.ColorWhite));
}

@java.lang.Override
protected void onPostExecute(com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException exception) {
    android.content.Intent intent = exception.getIntent();
    this.startActivityForResult(intent, com.tylerrockwood.software.cam2pdf.MainActivity.REQUEST_AUTHORIZATION);
}

private void performLoadChatsSuccessAction(android.os.Bundle bundle) {
    hideSnackBar();
    isDialogLoading = false;
}

@java.lang.Override
public void onNext(com.scala.exp.android.sdk.model.SearchResults<com.scala.exp.android.sdk.model.ContentNode> contentNodes) {
    android.util.Log.e("Response", contentNodes.toString());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_map1844);
    whereClause = getIntent().getStringExtra("where");
    setUpMapIfNeeded(currentMap);
}

public void onRemoveClicked(android.view.View view) {
    cbpos1989.com.sqlitedatabase.DBHandler dbHandler = new cbpos1989.com.sqlitedatabase.DBHandler(getApplicationContext());
    dbHandler.removePerson(person.getId());
    setResult(1);
    finish();
}

@java.lang.Override
public void onStop() {
    android.util.Log.e(rocks.throw20.funwithcountries.GameActivityFragment.LOG_TAG, ("onStop " + true));
    cancelGame();
    super.onStop();
}

@java.lang.Override
public boolean onInterceptTouchEvent(android.view.MotionEvent ev) {
    try {
        return super.onInterceptTouchEvent(ev);
    } catch (java.lang.IllegalArgumentException e) {
        e.printStackTrace();
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        e.printStackTrace();
    }
    return false;
}

public android.support.v4.app.Fragment getFragment(ir.rasen.charsoo.view.fragment.search.FragmentSearch.SearchType searchType) {
    switch (searchType) {
        case PRODUCTS :
            return fragmentSearchProduct;
        case BUSINESSES :
            return fragmentSearchBusiness;
        case USERS :
            return fragmentSearchUser;
        default :
            return null;
    }
}

protected android.content.Context getContext() {
    return es.javocsoft.android.lib.toolbox.gcm.NotificationModule.APPLICATION_CONTEXT;
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent event) {
    data = event.values;
    if ((event.sensor.getType()) == 1) {
        android.util.Log.d("kuuntelija", ("voi ei!" + (randomi)));
    }
}

@java.lang.Override
public void onNetworkConnected() {
    android.util.Log.e("Network", "Network CONNNNNECTED");
    android.widget.Toast.makeText(this, "Connected", Toast.LENGTH_SHORT).show();
    sendLocation();
}

public void filter(java.lang.String searchTerm) {
    for (android.support.v4.app.Fragment currentFragment : fragments) {
        de.fhws.campusapp.fragment.ModuleListFragment moduleFragment = ((de.fhws.campusapp.fragment.ModuleListFragment) (currentFragment));
        if (moduleFragment.isVisible()) {
            moduleFragment.filter(searchTerm);
        }
    }
}

void onItemClicked(int mPosition, com.gnest.remember.data.SelectableMemo mMemo, android.widget.TextView mTextView);

protected void removeFilter(com.raizlabs.android.coreutils.functions.Predicate<T> filter) {
    this.filters.removePredicate(filter);
    update();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    se.chalmers.projektgrupplp4.studentlivinggbg.AccommodationRecyclerViewAdapter recyclerViewAdapter = new se.chalmers.projektgrupplp4.studentlivinggbg.AccommodationRecyclerViewAdapter(se.chalmers.projektgrupplp4.studentlivinggbg.model.accommodation.Accommodation.getFavorites(), getApplicationContext());
    new se.chalmers.projektgrupplp4.studentlivinggbg.view.FavoritesView(this, recyclerViewAdapter);
    new se.chalmers.projektgrupplp4.studentlivinggbg.controller.FavoritesController(this, recyclerViewAdapter);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    TAG = com.boun.swe.wawwe.App.getInstance().getString(R.string.title_menu_menuDetail);
}

java.lang.String[] parsingDate(java.lang.String nextEpisodedate) {
    java.lang.String[] date = nextEpisodedate.split("-");
    android.util.Log.d("CALENDAR", ("ParseDate: " + date));
    return date;
}

public com.afollestad.bridge.Config requestConverter(@android.support.annotation.NonNull
java.lang.String contentType, @android.support.annotation.Nullable
com.afollestad.bridge.conversion.base.RequestConverter converter) {
    if (converter == null)
        mRequestConverters.remove(contentType);
    else
        mRequestConverters.put(contentType, converter);
    
    return this;
}

public void initialize() {
    btnFind = ((android.widget.Button) (findViewById(R.id.btn_find)));
    btnFind.setOnClickListener(this);
    textOut = ((android.widget.TextView) (findViewById(R.id.textView2)));
}

@java.lang.Override
public void onDetach() {
    super.onDetach();
    _plot1.clear();
    _plot1 = null;
    android.util.Log.i(com.produce.ciro.bchart4.OrderBookFragment.TAG, "on detach");
}

@java.lang.Override
public void onDetach() {
    super.onDetach();
    android.util.Log.d(udacity.nanodegree.android.p2.model.movie.MoviesFragment.TAG, "onDetach: ");
    onMovieSelectedListener = OnMovieSelectedListener.EMPTY;
}

@java.lang.Override
public void onCameraUnavailable(@android.support.annotation.NonNull
java.lang.String cameraId) {
    super.onCameraUnavailable(cameraId);
    if (proto.ttt.cds.green_data.Class.SequencePictureTaker.DEBUG)
        android.util.Log.d(proto.ttt.cds.green_data.Class.SequencePictureTaker.TAG, ("onCameraUnavailable, id = " + cameraId));
    
    updateUnavailableCameras(("" + cameraId), true);
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.ICE_CREAM_SANDWICH)
private void selectItem(final int position) {
    mDrawerLayout.closeDrawer(mDrawerList);
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            onPostClosed(position);
        }
    }, 200);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((negativeListener) == null) {
        dismiss();
    }else {
        negativeListener.onClick(this, DialogInterface.BUTTON_NEGATIVE);
    }
}

@java.lang.Override
public void onNext(java.util.List<com.ayuget.redface.data.api.model.Category> categories) {
    android.util.Log.d(com.ayuget.redface.ui.BaseDrawerActivity.LOG_TAG, "onNext loadCategories ===");
    populateNavDrawerCategories(categories);
    onCategoriesLoaded();
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.util.Log.d("QR Fragment", "Pausing");
    mScannerView.stopCamera();
}

public void setDockIcon(java.lang.String packageName, java.lang.String componentName, android.widget.ImageView place) {
    setIconImpl(packageName, componentName, place, com.inipage.homelylauncher.icons.IconCache.DOCK_TASK);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    nl.mpcjanssen.simpletask.TodoApplication app = ((nl.mpcjanssen.simpletask.TodoApplication) (getApplication()));
    setTheme(app.getActiveTheme());
    setTheme(app.getActiveFont());
    super.onCreate(savedInstanceState);
}

@java.lang.Override
public void onClick(android.view.View view) {
    publishNextWord();
    enableTranslationAndNotSubmittionButtons(true);
    questionnaire.markKnown(currentTranslation);
}

@java.lang.Override
public void onClick(android.view.View v) {
    ((android.widget.TextView) (getActivity().findViewById(R.id.textToChange))).setText(("New text. And now, here's a number: " + (new java.util.Random().nextInt(100))));
}

@java.lang.Override
public void onError(java.lang.Throwable t) {
    android.util.Log.i(org.almende.proheal.MainActivity.TAG, "error: ", t);
    onConnectionError();
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    android.widget.Toast.makeText(getApplicationContext(), (((getString(R.string.location)) + (com.assignment.doormint.common.Constants.ST_COLON)) + location), Toast.LENGTH_SHORT).show();
    return true;
}

@java.lang.Override
protected void onMyLocationChanged(android.location.Location myLocationNew) {
    super.onMyLocationChanged(myLocationNew);
    if ((screenStatus) == (Const.MainUserStatus.START_TRIP)) {
        drawRoute(Const.DrawRouteUserTypes.STARTED_DRIVE, acceptedOrder, 100);
    }
}

@java.lang.Override
public android.view.WindowInsets onApplyWindowInsets(android.view.View view, android.view.WindowInsets windowInsets) {
    view.onApplyWindowInsets(windowInsets);
    mTopInset = windowInsets.getSystemWindowInsetTop();
    mUpButtonContainer.setTranslationY(mTopInset);
    updateUpButtonPosition();
    return windowInsets;
}

@android.annotation.TargetApi(value = 11)
private void setUpCameraGingerbread(final android.hardware.Camera camera) {
    try {
        mRenderer.setUpSurfaceTexture(camera);
        camera.setPreviewTexture(new android.graphics.SurfaceTexture(0));
    } catch (java.io.IOException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
protected void onStart() {
    attachDatabaseReadListenerDeliveryStatus();
    attachDatabaseReadListenertoListView();
    super.onStart();
    com.george.getreadychat.UserToUserMessageNotification.isActiveNotification = true;
    android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE)));
    notificationManager.cancel(UserDetails.UserChatsWith, 1);
}

public void start_payment_activity(java.lang.String recipient_info, java.lang.String amount, java.lang.String note) {
    android.content.Intent venmoIntent = com.example.h.mogo.VenmoLibrary.openVenmoPayment("2843", "Mogo", recipient_info, amount, note, "pay");
    startActivityForResult(venmoIntent, 1);
    return ;
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    android.util.Log.e("UTIL", "stop");
    saveData();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.example.mzwee.randrestaurant.YelpQuery.class);
    intent.putExtra("category", "mediterranean");
    startActivity(intent);
}

private void showMessage(android.os.Bundle args) {
    com.edulectronics.tinycircuit.Views.Message dialogFragment = new com.edulectronics.tinycircuit.Views.Message();
    dialogFragment.setArguments(args);
    dialogFragment.show(fragmentManager, "");
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    android.location.Location mCurrentLocation = location;
    android.widget.Toast.makeText(this, ("Point2 :" + (mCurrentLocation.getLatitude())), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onDestroy() {
    stopService(new android.content.Intent(this, techkids.com.android9_hackathon2_breakworkout.BroadcastService.class));
    android.util.Log.i(techkids.com.android9_hackathon2_breakworkout.views.AlarmScene.TAG, "Stopped service");
    super.onDestroy();
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.util.List<de.dominikwieners.androidhive.model.Post>> call, java.lang.Throwable t) {
    progressDoalog.dismiss();
    android.util.Log.d("RetrofitResponse", "Error");
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    android.content.Intent takePictureIntent = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    startActivityForResult(takePictureIntent, nl.hu.fed.actortemplateapp.activity.CreatePerson.TAKE_PHOTO);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_search_results);
    db = new com.example.raqib.instadate.DatabaseTableForSearch(this);
    android.util.Log.e("Hello", "Search Is Working1");
    handleIntent(getIntent());
}

@java.lang.Override
public void attachView(android.view.View header, int i) {
    mParent.attachView(header, i);
}

@java.lang.Override
public void onClick(android.view.View v) {
    assignmentsLayoutManager.scrollToPositionWithOffset(getCurrentDayIndex(), 0);
    edu.byu.dtaylor.homeworknotifier.notifications.AlarmReceiver ar = new edu.byu.dtaylor.homeworknotifier.notifications.AlarmReceiver();
    ar.onReceive(this, null);
}

@java.lang.Override
public void onDestroyActionMode(android.view.ActionMode mode) {
    mListView.clearChoices();
    deselectAll();
    mSelectedMap.clear();
    mActionMode = null;
}

@java.lang.Override
public void onLoginFailure(java.lang.String msg) {
    android.util.Log.d(com.curiosity.mycalendar.sysinfo.presenter.LoginPresenter.TAG, "onLoginFailure: ");
    mLoginView.showProgress(false);
    mLoginView.onLoginFailed();
    mLoginView.makeToast(msg);
}

private void setupViewPager(android.support.v4.view.ViewPager viewPager) {
    com.skywindow.app.tamed.MainActivity.ViewPagerAdapter adapter = new com.skywindow.app.tamed.MainActivity.ViewPagerAdapter(getSupportFragmentManager());
    adapter.addFragment(new com.skywindow.app.tamed.DogFragment(this), "DOG");
    viewPager.setAdapter(adapter);
}

public void onDrawerClosed(android.view.View drawerView) {
    updateBufferRead();
    updateBufferRead();
    ((com.iskrembilen.quasseldroid.gui.fragments.BufferFragment) (manager.bufferFragment)).finishActionMode();
    setTitleAndMenu();
}

@java.lang.Override
public void onLeScan(android.bluetooth.BluetoothDevice device, int rssi, byte[] scanRecord) {
    java.util.List<java.util.UUID> records = parseUuids(scanRecord);
    if (records.contains(serviceUUID))
        handleNewlyScannedDevice(device);
    else
        timber.log.Timber.d("Got advertisement which did not include target service");
    
}

@java.lang.Override
public void onNewIntent(android.content.Intent intent) {
    log("got a new intent");
    setIntent(intent);
}

private void applyClickEvents(com.linked_sys.hasatraining.adapters.TeacherAttendProgramsAdapter.MyViewHolder holder, final int position) {
    holder.courseRow.setOnClickListener(new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View view) {
            listener.onProgramRowClicked(position);
        }
    });
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setHasOptionsMenu(true);
    mSymbol = getArguments().getString(Constants.SYMBOL_BUNDLE_KEY).toUpperCase();
}

@java.lang.Override
public void draw(android.graphics.Canvas canvas) {
    canvas.save();
    drawBackground(canvas, mPaint);
    drawCenterDrawable(canvas, mDrawableCenter);
}

@java.lang.Override
public void onLoadMore() {
    android.util.Log.i(com.enthusiast94.reddit_reader.app.fragments.PostsFragment.TAG, "onLoadMore");
    loadPosts(subreddit, sort, after);
}

@java.lang.Override
public java.lang.Boolean call(java.util.List<com.ladwa.aditya.offlinefirstapp.data.local.models.Post> posts) {
    android.util.Log.d("Repo", posts.get(0).getTitle());
    return posts != null;
}

@java.lang.Override
public void onCaldroidViewCreated() {
    if ((caldroidFragment.getLeftArrowButton()) != null) {
        android.widget.Toast.makeText(getActivity().getApplicationContext(), "Caldroid view is created", Toast.LENGTH_SHORT).show();
    }
}

private void cancelAlarmManager() {
    android.util.Log.i(com.example.sifat.gobar.LOG_TAG_TAXIPOSITIONSERVICE, "cancelAlarmManager");
    android.content.Context context = getBaseContext();
    alarmManager.cancel(pendingIntent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (view == (btnSignUp)) {
        registerUser();
    }
    if (view == (btnLogInPrompt)) {
        finish();
        startActivity(new android.content.Intent(this, com.sarahrobinson.finalyearproject.activities.LoginActivity.class));
    }
}

@java.lang.Deprecated
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, com.github.aistech.orp.activities.ORPActivity thisActivity) {
    super.onCreate(savedInstanceState);
    initializingParsing(savedInstanceState);
}

@java.lang.Override
public void onClick(android.view.View v) {
    apiTest(com.awingcorsair.simpleweather.activity.ShowWeatherActivity.countyName);
    showWeather();
    android.widget.Toast.makeText(this, "更新完成", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    android.media.MediaPlayer.create(getApplicationContext(), R.raw.highway_info);
    delayedHide(100);
}

public void setData(java.lang.Object c, final android.content.Context context) {
    setData(c, context, View.GONE);
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas c) {
    b.setCanvas(c, getWidth(), getHeight());
    if ((board) != null)
        board.paint(b);
    
}

@java.lang.Override
public void onAudioTrackEvent(java.lang.String callerPackage, int event) throws android.os.RemoteException {
    device.onAudioTrackEvent(callerPackage, event);
    showToast(((callerPackage + ": AudioTrack ") + (audioTrackStateName(event))));
}

public double answerForQ5() {
    android.widget.RadioButton radioButton = ((android.widget.RadioButton) (findViewById(R.id.five_radio_button)));
    if (radioButton.isSelected()) {
        overallScore += 1;
    }
    return overallScore;
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    com.wpam.scrabble.mobile.bt.BluetoothManager.getInstance().startDiscovery();
    com.wpam.scrabble.mobile.bt.BluetoothManager.getInstance().cancelDiscovery();
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB)
@java.lang.Override
public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.HONEYCOMB))
        return ;
    
    int color;
}

private void getCamera() {
    if ((myCamera) == null) {
        try {
            myCamera = android.hardware.Camera.open();
            myParameters = myCamera.getParameters();
        } catch (java.lang.RuntimeException e) {
            throw e;
        }
    }
}

@java.lang.Override
public void onResume() {
    getActivity().registerReceiver(mConnectivityReceiver, new android.content.IntentFilter(android.net.ConnectivityManager.CONNECTIVITY_ACTION));
    getLocalBroadcastManager().registerReceiver(mBroadcastReceiver, getIntentFilter());
    super.onResume();
    updateUI();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, ca.ualberta.cs.cmput301w15t12.NewAccountActivity.class);
    intent.putExtra("username", name);
    startActivity(intent);
}

@java.lang.Override
public barqsoft.footballscores.widget.RemoteViewsFactory onGetViewFactory(final android.content.Intent intent) {
    android.util.Log.e("RemoteService", "onGetViewFactory");
    return new barqsoft.footballscores.widget.WidgetFactory(this.getApplicationContext(), intent);
}

private void connectToGoogleClientAPIandSendMessage() {
    if (!(mResolvingError)) {
        mGoogleApiClient.connect();
        android.widget.Toast.makeText(this, "connecting", Toast.LENGTH_SHORT).show();
    }
}

public static boolean getBoolean(android.content.Context context, java.lang.String name) {
    android.content.SharedPreferences settings = context.getSharedPreferences(duxeye.com.entourage.Utility.Utility.ENTOURAGE_DATA, 0);
    return settings.getBoolean(name, false);
}

@java.lang.Override
public void onAppWidgetOptionsChanged(android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int appWidgetId, android.os.Bundle newOptions) {
    context.startService(new android.content.Intent(context, kamini.app.moviecollection.widget.MovieWidgetIntentService.class));
}

private void showSnackbar(@android.support.annotation.StringRes
int messageId) {
    android.support.design.widget.Snackbar.make(getView().getRootView(), messageId, Snackbar.LENGTH_SHORT).show();
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    android.util.Log.d(fyp.qian3.lib.srv.PedoEventService.TAG, "Srv onBind()");
    updateDatabase();
    return mBinder;
}

public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putFloat(com.idonans.app.DoodleActionPanel.EXTRA_SIZE, mSize);
    outState.putInt(com.idonans.app.DoodleActionPanel.EXTRA_ALPHA, mAlpha);
    outState.putInt(com.idonans.app.DoodleActionPanel.EXTRA_COLOR, mColor);
    outState.putInt(com.idonans.app.DoodleActionPanel.EXTRA_BRUSH_TYPE, mBrushType);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mListener.onListItemSelectedListener(getName);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    de.beacon.tom.viibenav_radiomapper.model.BluetoothScan.getBtScan(this).onResumeOperation();
    init();
    android.util.Log.d(de.beacon.tom.viibenav_radiomapper.controller.InfoActivity.TAG, "RESUMING IN INFO");
}

@java.lang.Override
public void onPixelUnselected() {
    pixelColorView.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFFFF"));
    pixelColorSeekbar.setProgress(0);
    pixelColorNumber.setText("");
    pixelXText.setText("");
    pixelYText.setText("");
}

private void setAnswerShownResult(boolean isAnswerShown) {
    android.content.Intent data = new android.content.Intent();
    data.putExtra(com.microlands.android.geoquiz.CheatActivity.EXTRA_ANSWER_SHOWN, isAnswerShown);
    mIsAnswerShown = isAnswerShown;
    setResult(com.microlands.android.geoquiz.RESULT_OK, data);
}

public void setSubtitle(java.lang.String title) {
    this.title = title;
    android.support.v7.app.ActionBar actionBar = ((ua.boberproduction.floristx.MainActivity) (getActivity())).getSupportActionBar();
    if (actionBar != null) {
        actionBar.setSubtitle(title);
    }
}

private void checkPermissions() {
    java.lang.String[] requestPermissions = getPermissionsRequestArray(io.straas.android.sdk.streaming.demo.ScreencastSettingsActivity.STREAM_PERMISSIONS);
    if ((requestPermissions.length) != 0) {
        android.support.v4.app.ActivityCompat.requestPermissions(this, requestPermissions, io.straas.android.sdk.streaming.demo.ScreencastSettingsActivity.STREAM_PERMISSION_REQUEST);
    }
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent ev) {
    return (gestureDetector.onTouchEvent(ev)) || (super.onTouchEvent(ev));
}

public void labelTouch(android.view.View v) {
    if (mResolutionLayoutVisible) {
        return ;
    }
    finishWithResult("label");
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    if ((mItemAdapter) != null) {
        outState.putString(com.muqdd.iuob2.features.schedule_builder.SectionsFilterActivity.SECTIONS_LIST, new com.google.gson.Gson().toJson(mItemAdapter.getAdapterItems(), com.muqdd.iuob2.features.schedule_builder.SectionsFilterActivity.SECTIONS_LIST_TYPE));
    }
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onClick(android.view.View view) {
    showImageMetadata(image1, "image1");
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    currentLocation = LocationServices.FusedLocationApi.getLastLocation(mApiClient);
    if ((currentLocation) != null) {
        animateCamera(currentLocation.getLatitude(), currentLocation.getLongitude());
    }
}

@java.lang.Override
public void onLoginSuccess(studios.codelight.smartloginlibrary.users.SmartUser user) {
    android.widget.Toast.makeText(this, user.toString(), Toast.LENGTH_SHORT).show();
    refreshLayout();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_camera_activity2);
    android.content.Intent intent = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra("android.intent.extras.CAMERA_FACING", 1);
    startActivityForResult(intent, com.toogooddesign.selfiesmash.CameraActivity2.request_image_capture);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mPluginManager = org.cobaltians.cobalt.plugin.CobaltPluginManager.getInstance(mContext);
    setRetainInstance(true);
    mAllowCommit = true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    currentLocationButton.setEnabled(false);
    android.widget.Toast.makeText(getActivity(), getResources().getString(R.string.fetching_data), Toast.LENGTH_SHORT).show();
    new com.sanchez.geoopposite.MainFragment.LaunchMapTask().execute();
}

private void setupRecyclerView() {
    gridView.setLayoutManager(new android.support.v7.widget.GridLayoutManager(this, gridSize));
    adapter = new mobile.theopenvoicefactory.org.theopenvoicefactory.adapter.GridAdapter(this, mGrid);
    gridView.setAdapter(adapter);
}

@java.lang.Override
public java.lang.Boolean call(java.lang.CharSequence username, java.lang.CharSequence pwd, java.lang.Boolean isChecked) {
    return ((!(com.alibaba.android.arouter.utils.TextUtils.isEmpty(username))) && (!(com.alibaba.android.arouter.utils.TextUtils.isEmpty(username)))) && isChecked;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    com.snapsigns.utilities.FireBaseUtility fireBaseUtility = new com.snapsigns.utilities.FireBaseUtility(this);
    myImageSigns = fireBaseUtility.getUserSigns();
    sendBroadcast(fireBaseUtility.mySignsIntent);
    startLocationUpdates();
}

@java.lang.Override
public void onClick(android.view.View view) {
    crossfade(findViewById(R.id.content_main_id), findViewById(R.id.content_add_date_id), getResources().getInteger(android.R.integer.config_mediumAnimTime));
}

java.util.ArrayList<java.lang.String> getArrayStringFromAssets(android.app.Activity activity) {
    android.content.res.AssetManager am = activity.getAssets();
    return convertStreamToArrayString(activity);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_list, container, false);
    timesTxt = ((android.widget.TextView) (view.findViewById(R.id.listTimes)));
    return view;
}

public void onNewApiaryFragmentInteraction(android.net.Uri uri);

@java.lang.Override
public void onHandshakeResponse(java.lang.String reply) {
    if (!(reply.startsWith("ERROR"))) {
        android.util.Log.d(edu.mtu.cs3421.voto.MainActivity.TAG, "Handshake Recieved");
        startSession();
    }
}

public void updateDayBrief(com.android.egg.dreamnote.basetype.DayBrief dayBrief) {
    mContext.getContentResolver().update(NoteProvider.CONTENT_URI_DB_DAY_BRIEF, dayBrief.toContentValues(true), (((com.android.egg.dreamnote.storage.NoteDatabaseHelper.DB_TBL_DAY_BRIEF_TIME_OFST) + "=") + (dayBrief.getTimeOffset())), null);
}

private void setCurrentLocation(android.location.Location loc) {
    if (isBetterLocation(loc, currentBestLocation)) {
        currentBestLocation = loc;
        locationsCount += 1;
    }
}

@butterknife.OnClick(value = R.id.btn_scan)
private void openQrScanner() {
    android.content.Intent intent = new android.content.Intent(this, com.inveitix.android.clue.scanner.BarcodeCaptureActivity.class);
    intent.putExtra(BarcodeCaptureActivity.AutoFocus, true);
    intent.putExtra(BarcodeCaptureActivity.UseFlash, false);
    startActivityForResult(intent, com.inveitix.android.clue.ui.MapActivity.RC_BARCODE_CAPTURE);
}

private void addAllOptionToSets() {
    com.example.android.absolutmixr.AdvSearch.allTastes.add("-All Drinks-");
    com.example.android.absolutmixr.AdvSearch.allSkills.add("-All Drinks-");
    com.example.android.absolutmixr.AdvSearch.allGlasses.add("-All Drinks-");
    com.example.android.absolutmixr.AdvSearch.allTimes.add("-All Drinks-");
    com.example.android.absolutmixr.AdvSearch.allAlcoholic.add("-All Drinks-");
}

protected void showLoadingDialog(android.content.Context context) {
    com.yanxing.util.LoadDialogUtil.showLoadingDialog(context, null);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    int sum = setIt(1, 2, 3, 5, 7);
}

@java.lang.Override
public boolean onNavigationItemSelected(android.view.MenuItem item) {
    android.support.design.widget.Snackbar.make(activityContent, item.getTitle(), Snackbar.LENGTH_LONG).show();
    activityContainer.closeDrawer(GravityCompat.START);
    return onOptionsItemSelected(item);
}

public static chevalierx.kiwapp.models.DAO.DAOBase getInstance(android.content.Context context) {
    if ((chevalierx.kiwapp.models.DAO.DAOBase.mInstance) == null) {
        chevalierx.kiwapp.models.DAO.DAOBase.mInstance = new chevalierx.kiwapp.models.DAO.DAOBase(context.getApplicationContext());
    }
    return chevalierx.kiwapp.models.DAO.DAOBase.mInstance;
}

@java.lang.Override
public void tasksLoadedFromServer(java.util.List<org.grassroot.android.models.TaskModel> tasks) {
    handleTaskLoaded(tasks, group);
}

@java.lang.Override
public boolean onIconLongClicked(android.view.View v) {
    return false;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    conn.Open();
    listBill = conn.getListBill();
    conn.Close();
}

private void toggleMediaControlsVisiblity() {
    android.util.Log.i(TAG, "toggleMediaControlsVisibility");
    if (mMediaController.isShowing()) {
        mMediaController.hide();
    }else {
        mMediaController.show();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    init();
    mPresenter = new ru.android.vkapp.presenter.MainPresenter(this, getLoaderManager(), this);
    mPresenter.initVKSdk(this);
}

@java.lang.Override
public boolean onCreateActionMode(android.support.v7.view.ActionMode mode, android.view.Menu menu) {
    mode.getMenuInflater().inflate(R.menu.action_mode, menu);
    mode.setTitle((1 + " items selected"));
    return true;
}

@android.support.annotation.Nullable
public static com.github.umeshkrpatel.growthmonitor.data.GrowthDataProvider get() {
    return com.github.umeshkrpatel.growthmonitor.data.GrowthDataProvider.instance;
}

public abstract void initView(android.view.View rootView);

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase sqLiteDatabase) {
    android.util.Log.d(com.bogucki.router.database.dbHelper.TAG, ("onCreate: DB CREATED WITH FOLLOWING SCRIPT:" + (com.bogucki.router.database.dbHelper.CREATE_DATABASE)));
    getWritableDatabase().execSQL(com.bogucki.router.database.dbHelper.CREATE_DATABASE);
}

@java.lang.Override
public void onServiceDisconnected(android.content.ComponentName name) {
    android.util.Log.i(com.example.dscs.StartFragment.TAG, "Service is disconnected.");
    mBinder = null;
    refreshButtonState(false);
}

public void setStartTitle(java.lang.String startTitle) {
    android.widget.TabHost.TabSpec startDatePage = tabHost.newTabSpec("start");
    startDatePage.setIndicator(startTitle);
}

@java.lang.Override
public boolean tryCaptureView(android.view.View child, int pointerId) {
    if (mIsUnableToDrag) {
        return false;
    }
    return child == (mSlideableView);
}

public void setRegistrationUrl(java.lang.String registrationUrl) {
    android.util.Log.i(com.ngusta.cupassist.domain.Tournament.TAG, ((("Trying to set reg url to: " + registrationUrl) + " Old value: ") + (this.registrationUrl)));
    if (registrationUrl != null) {
        this.registrationUrl = registrationUrl;
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    mItemClickListener.onItemClick(viewHolder, mDatas.get(position), position);
}

@java.lang.Override
public void onSuccess(com.facebook.login.LoginResult loginResult) {
    android.content.Intent intent = new android.content.Intent(getActivity(), com.sujan.mykitaab.MainActivity.class);
    startActivity(intent);
    myKitabPresenter.onSuccess(loginResult);
}

public void freeze() {
    if ((mBuilderPtr) == 0) {
        throw new java.lang.IllegalStateException("This FontFamily is already frozen");
    }
    mNativePtr = android.graphics.FontFamily.nCreateFamily(mBuilderPtr);
    mBuilderPtr = 0;
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    mp.release();
    mp = null;
    player = null;
    isPlaying = false;
    mediaPlayerCallback.onFinishedPlaying();
}

@java.lang.Override
public void onError(java.lang.String errorMsg) {
    android.widget.Toast.makeText(ctx, errorMsg, Toast.LENGTH_SHORT).show();
    nr = new com.example.ishaandhamija.zinder.Utils.NearbyRestaurants(ctx, area, latitude, longitude, rvList, activity, getResponse);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    android.util.Log.d(com.example.sunsai.mymusicplayer.PlayerActivity.TAG, "onProgressChanged");
}

@java.lang.Override
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    com.chriscartland.octaviastreethilton.auth.AuthManager.getInstance(this).onActivityResult(requestCode, resultCode, data);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    if (enterAmount_editText.getText().toString().equals("")) {
        clear_Button.performClick();
    }else
        calculateBill();
    
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    syncronizeChannels(true);
}

@java.lang.Override
public android.graphics.RectF getGridClippingRect() {
    mGridClippingRect.set(mViewPortHandler.getContentRect());
    mGridClippingRect.inset(0.0F, ((-(mAxis.getGridLineWidth())) / 2.0F));
    return mGridClippingRect;
}

@java.lang.Override
public void onClick(android.view.View view) {
    switch (view.getId()) {
        case R.id.field_report_button :
            fieldReportButtonPressed(view);
            break;
        case R.id.complete_button :
            submitListener();
            break;
        default :
            break;
    }
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation arg0) {
    viewHolder.swipeLayout.removeAllViews();
    notifyItemChanged(viewType);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(hasPermissionInManifest(getContext(), android.Manifest.permission.CAMERA.toString()))) {
        requestPermissions(new java.lang.String[]{ android.Manifest.permission.CAMERA }, tvao.mmad.itu.tingle.Controller.Fragments.ThingDetailFragment.REQUEST_PHOTO);
    }
    startActivityForResult(captureImage, tvao.mmad.itu.tingle.Controller.Fragments.ThingDetailFragment.REQUEST_PHOTO);
}

@java.lang.Override
public void onTick(long millisUntilFinished) {
    java.lang.String time = timeFormatter(millisUntilFinished);
    android.util.Log.d("waleola", "called onTick");
    updateTextViewTime(time);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.dotua.goldendictbridge.SharedFunction.sendMessage(sendString);
}

@java.lang.Override
public boolean onMove(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, android.support.v7.widget.RecyclerView.ViewHolder target) {
    return false;
}

public android.database.Cursor getCursor() {
    java.lang.System.out.println(("GET CURSOR: " + (mCursor.getColumnCount())));
    return mCursor;
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    return (mDrawerToggle.onOptionsItemSelected(item)) || (super.onOptionsItemSelected(item));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.example.user.timekeeper.StatusActivity.class);
    startActivity(intent);
    if (checkIns.isEmpty()) {
    }
}

@java.lang.Override
protected void onReceiveResult(int resultCode, android.os.Bundle resultData) {
    if (resultCode == 100) {
        runOnUiThread(new test.maps.app.MapsActivity.UpdateUI(resultData.getDouble("latitude"), resultData.getDouble("longitude")));
    }else {
    }
}

@java.lang.Override
public void setTypeface(final android.graphics.Typeface tf) {
    _paint.setTypeface(tf);
    adjustTextSize();
    super.setTypeface(tf);
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.example.mypulz.UICore.Detail.FindDoctorFragment dFragment = new com.example.mypulz.UICore.Detail.FindDoctorFragment();
    new Common.CommonFunction().changeFragment(dFragment, dFragment.getFragmentManager());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    m_toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.create_game_toolbar)));
    setSupportActionBar(m_toolbar);
    getSupportActionBar().setDisplayShowTitleEnabled(false);
}

@android.support.annotation.NonNull
@java.lang.Override
protected com.aniruddhfichadia.presentable.Registry getRegistry() {
    return ((com.aniruddhfichadia.presentableexample.DemoApplication) (getApplication())).getRegistry();
}

private android.media.AudioTrack getAudioTrack(int bufferSize) {
    android.media.AudioTrack audioTrack = new android.media.AudioTrack(android.media.AudioManager.STREAM_MUSIC, 44100, android.media.AudioFormat.CHANNEL_OUT_MONO, android.media.AudioFormat.ENCODING_PCM_16BIT, bufferSize, android.media.AudioTrack.MODE_STATIC);
    return audioTrack;
}

@java.lang.Override
public void onButtonClickListener(int position, java.lang.String value) {
    android.widget.Toast.makeText(getContext(), ("Button click " + value), Toast.LENGTH_SHORT).show();
    onDeleteButtonClicked(position, value);
}

public static org.bbt.kiakoa.model.LoanLists getInstance() {
    if ((org.bbt.kiakoa.model.LoanLists.instance) == null) {
        android.util.Log.i(org.bbt.kiakoa.model.LoanLists.TAG, "getInstance: Creating instance");
        org.bbt.kiakoa.model.LoanLists.setInstance(new org.bbt.kiakoa.model.LoanLists());
    }
    return org.bbt.kiakoa.model.LoanLists.instance;
}

@java.lang.Override
public boolean onClose() {
    list.search(this, "");
    listAdapter.notifyDataSetChanged();
    android.util.Log.d(diy.uigeneric.sample.SampleListActivity.TAG, "search stop");
    return false;
}

@java.lang.Override
public void post() {
    fetchMessages();
    android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (getContext().getSystemService(Context.NOTIFICATION_SERVICE)));
    notificationManager.cancel(0);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.main, menu);
    menu.findItem(R.id.action_delete).setVisible(true);
    return true;
}

@java.lang.Override
protected void onPreExecute() {
    android.util.Log.d(finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment.TAG, "AnimateDealerCards");
    android.transition.TransitionManager.beginDelayedTransition(group, new android.transition.Explode());
    finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment.toggleVisibility(dealer_left_slot, dealer_right_slot);
    changeAllButtonStates(false, false, false, false);
}

@java.lang.Override
public void onScrolled(android.support.v7.widget.RecyclerView recyclerView, int dx, int dy) {
    super.onScrolled(recyclerView, dx, dy);
    mRecyclerViewScrollY += dy;
    stickHeaderViewPagerManager.onRecyclerViewScroll(recyclerView, mRecyclerViewScrollY, position);
}

@java.lang.Override
public void onClick(android.view.View v) {
    cancleOrder();
    cancleOrder.setEnabled(false);
    sureSendGoods.setEnabled(false);
}

public void onClick(android.view.View v) {
    if ((v.getId()) == (R.id.blogimage)) {
        imageView.setImageResource(R.drawable.blog2);
        thread.start();
    }
}

protected void onActivityResult(int requestCode, int resultCode, android.content.Intent intent) {
    super.onActivityResult(requestCode, resultCode, intent);
    showPlayShareDialog();
}

@java.lang.Override
public void onConnectionSuspended(int i) {
    android.util.Log.d(com.airbitz.objects.PlayLocationManager.TAG, "Suspended. Please re-connect.");
    if ((mObservers.size()) != 0) {
        attemptConnection();
    }
}

@com.taobao.weex.ui.component.WXComponentProp(name = Constant.Name.FILL_COLOR)
public void setFillColor(java.lang.String param) {
    mFillColor = android.graphics.Color.parseColor(param);
    mPolygon.setStrokeColor(mFillColor);
}

public static java.io.InputStream getInputStreamFromUrl(java.lang.String imageUrl, int readTimeOutMillis) {
    return cn.trinea.android.common.util.ImageUtils.getInputStreamFromUrl(imageUrl, readTimeOutMillis, null);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    java.util.List<org.mixare.sectionedlist.Item> list;
    list = createList();
    sectionedListAdapter = new org.mixare.SectionedListAdapter(this.getActivity(), this.getActivity(), 0, list);
}

@java.lang.Override
public android.os.Parcelable onSaveInstanceState() {
    android.os.Bundle bundle = new android.os.Bundle();
    bundle.putCharSequence(net.xpece.material.floatinglabel.FloatingLabelView.SAVED_ORIGINAL_HINT, mOriginalHint);
    bundle.putInt(net.xpece.material.floatinglabel.FloatingLabelView.SAVED_COLOR_ACTIVATED, mColorActivated);
    return super.onSaveInstanceState();
}

@java.lang.Override
public void onActivityCreated(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    getLoaderManager().initLoader(net.brightron.jayaneetha.visitmihinthale.DetailFragment.DETAIL_LOADER, null, this);
    super.onActivityCreated(savedInstanceState);
}

private boolean isExternalStorageWritable() {
    java.lang.String state = android.os.Environment.getExternalStorageState();
    if (Environment.MEDIA_MOUNTED.equals(state)) {
        return true;
    }
    return false;
}

@java.lang.Override
public void onAddPokemonClick() {
    loadFragment(valjevac.kresimir.homework3.fragments.AddPokemonFragment.newInstance(), valjevac.kresimir.homework3.activities.PokemonListActivity.ADD_POKEMON_FRAGMENT_TAG, null);
    android.util.Log.e("OPENING ADD POKEMON", "Add pokemon");
}

@java.lang.Override
public void onPositive(com.afollestad.materialdialogs.MaterialDialog dialog) {
    deleteItem(id);
    android.widget.Toast.makeText(getActivity(), "Item deleted", Toast.LENGTH_SHORT).show();
    content = "";
    getActivity().getSupportFragmentManager().popBackStack("editor", FragmentManager.POP_BACK_STACK_INCLUSIVE);
}

public static int readKeyboardColor(final android.content.SharedPreferences prefs, final android.content.Context context) {
    int color = prefs.getInt(rkr.simplekeyboard.inputmethod.latin.settings.Settings.PREF_KEYBOARD_COLOR, rkr.simplekeyboard.inputmethod.latin.settings.Settings.UNDEFINED_PREFERENCE_VALUE_INT);
    return color == (rkr.simplekeyboard.inputmethod.latin.settings.Settings.UNDEFINED_PREFERENCE_VALUE_INT) ? rkr.simplekeyboard.inputmethod.latin.settings.Settings.readKeyboardDefaultColor(context) : color;
}

@java.lang.Override
public void onQueryReturned(java.util.List<com.criptext.monkeychatandroid.models.conversation.ConversationItem> conversationPage) {
    getState().conversations.setHasReachedEnd(true);
    getState().conversations.insertConversations(conversationPage, ((conversationPage.size()) == 0));
}

@java.lang.Override
public void onCreate() {
    com.facebook.drawee.backends.pipeline.Fresco.initialize(this, com.merlin.androidtest.FImageLoaderConfig.getImagePipelineConfig(this));
    com.merlin.network.NetworkMgr.getInstance().init(this, true);
    super.onCreate();
}

public static com.edu.bit.nemare.todoapp.data.source.TasksRepository provideTasksRepository(@android.support.annotation.NonNull
android.content.Context context) {
    com.google.common.base.Preconditions.checkNotNull(context);
    return com.edu.bit.nemare.todoapp.data.source.TasksRepository.getInstance(com.edu.bit.nemare.todoapp.data.source.local.TasksLocalDataSource.getInstance(context), com.edu.bit.nemare.todoapp.data.source.remote.TasksRemoteDataSource.getInstance());
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    android.util.Log.d(com.example.checkmeet.view.AddGuestsActivity.TAG, "BACK PRESS");
    super.onBackPressed();
    getIntent().putExtra("List_of_Names", guestList);
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    train1.setSpeed(progress);
    java.lang.String text = train1.GetSpeedTxt();
    setSpeed(progress, train1);
}

public void checkedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    switch (buttonView.getId()) {
        case R.id.imperialMetricSwitch :
            setUseImperial(isChecked);
            break;
        case R.id.aebSwitch :
            setAebPhotoMode(isChecked);
    }
    if (isChecked) {
    }else {
    }
}

@java.lang.Override
public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    super.onPageFinished(view, url);
    mProgress.setVisibility(View.GONE);
}

@java.lang.Override
public boolean onSingleTapUp(android.view.MotionEvent e) {
    android.widget.Toast.makeText(main.getApplicationContext(), "tap", Toast.LENGTH_SHORT).show();
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    list.remove(position);
    notifyDataSetChanged();
    tattoo.tags = list;
    com.tattood.tattood.Server.updateTattoo(context, token, tattoo);
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    updateList(this.searchString);
}

void onTrackSelected(int trackPos, android.view.View mediaListItemView);

public static void newOutMessage(android.content.Context ctx, org.spinsuite.sync.content.SyncMessage message) {
    org.spinsuite.bchat.model.SPS_BC_Message.newMessage(ctx, message, MQTTDefaultValues.TYPE_OUT);
}

private void attemptLogin() {
    if ((mAuthTask) != null) {
        return ;
    }else {
        dbAdapter.isUser();
        android.widget.Toast.makeText(this, "Login gia' effettuato", Toast.LENGTH_SHORT).show();
    }
    showProgress(true);
}

@java.lang.Override
protected void onPreExecute() {
    isUserInLD = false;
    android.view.View container = bhApp.mainActivity.findViewById(R.id.weeklyLdUserRL);
    container.setVisibility(View.GONE);
}

public static com.tudarmstadt.barrierefreiesrouting.datacollectionapp.ui.fragments.ObstacleDetailsFragment newInstance(bp.common.model.Obstacle obstacle) {
    com.tudarmstadt.barrierefreiesrouting.datacollectionapp.ui.fragments.ObstacleDetailsFragment fragment = new com.tudarmstadt.barrierefreiesrouting.datacollectionapp.ui.fragments.ObstacleDetailsFragment();
    android.os.Bundle args = new android.os.Bundle();
    fragment.obstacleToEdit = obstacle;
    fragment.setArguments(args);
    return fragment;
}

private void setResultAndFinish() {
    android.content.Intent resultValue = new android.content.Intent();
    resultValue.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, mAppWidgetId);
    setResult(Activity.RESULT_OK, resultValue);
    finish();
}

@android.support.annotation.UiThread
void showPdf(java.io.File pdfFile) {
    getSupportFragmentManager().beginTransaction().add(R.id.content, com.github.gfx.android.tinypdfreader.PdfViewerFragment.newInstance(pdfFile)).commit();
}

public void onDrawerOpened(android.view.View drawerView) {
    getSupportActionBar().setTitle(buildStyledString(mDrawerTitle));
    supportInvalidateOptionsMenu();
}

public void run() {
    android.support.v4.app.FragmentTransaction tr = Data.mainAct.getFragmentManager().beginTransaction();
    tr.replace(R.id.content_frame, map.minimap.mainActivityComponents.LobbyFragment.newInstance("a", "b"));
    tr.commit();
}

@java.lang.Override
protected void onRestart() {
    super.onRestart();
    if (!(isLoggedIn()))
        startActivity(new android.content.Intent(getApplicationContext(), com.becker.nolan.mileagelog.LoginActivity.class));
    
    finish();
}

@java.lang.Override
public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) {
    int rackId = ((int) (marker.getTag()));
    launchDetailActivity(rackId);
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    (cards)++;
    updateValues();
}

private static void updateTriggerIndicator(android.view.View trigger) {
    if ((com.ceco.lollipop.gravitybox.ModPieControls.mCenterTrigger) && (com.ceco.lollipop.gravitybox.ModPieControls.mTrigindEnabled)) {
        trigger.setVisibility(View.VISIBLE);
        trigger.setBackgroundColor(com.ceco.lollipop.gravitybox.ModPieControls.mTrigindColor);
    }else {
        trigger.setVisibility(View.GONE);
    }
}

public void setOnItemViewClickedListener(android.support.v17.leanback.widget.OnItemViewClickedListener listener) {
    mOnItemViewClickedListener = listener;
    if (mViewsCreated) {
        throw new java.lang.IllegalStateException("Item clicked listener must be set before views are created");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.DialogFragment newFragment = new pl.dom133.dzwonek.TimePickerFragment(((android.widget.EditText) (deleteDialog.findViewById(R.id.od_time))), ts, "od");
    newFragment.show(getSupportFragmentManager(), "timePicker");
}

public void onClick(android.view.View v) {
    v.performHapticFeedback(HapticFeedbackConstants.CONTEXT_CLICK);
    dispatchTakePictureIntent();
}

@java.lang.Override
public void onReject() {
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), fr.pchab.androidrtc.MainActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
    startActivity(intent);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu, menu);
    menu.findItem(R.id.alerts).setVisible(false);
    return super.onCreateOptionsMenu(menu);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_about :
            openAbout();
        case android.R.id.home :
            android.support.v4.app.NavUtils.navigateUpFromSameTask(this);
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void run() {
    enterBarcode.requestFocus();
    android.view.inputmethod.InputMethodManager inputMethodManager = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE)));
    inputMethodManager.showSoftInput(enterBarcode, InputMethodManager.SHOW_IMPLICIT);
}

public void setEmpty(int res) {
    android.view.View view = getView();
    if (view == null)
        return ;
    
    ((android.widget.TextView) (view.findViewById(R.id.empty))).setText(res);
}

public static boolean skipPage(android.content.Context context) {
    return ((com.cyanogenmod.account.setup.PersonalizationPage.hideWhisperPush(context)) && (com.cyanogenmod.account.setup.PersonalizationPage.hideThemeSwitch(context))) && (com.cyanogenmod.account.setup.PersonalizationPage.hideKeyDisabler());
}

@java.lang.Override
public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    android.util.Log.i(com.kimkevin.android.MainActivity.TAG, ((("onPageScrolled : " + position) + " , ") + positionOffsetPixels));
    mFadeImageSwitcher.showImage(position, positionOffsetPixels);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra(MediaStore.EXTRA_OUTPUT, generateFileUri());
    startActivityForResult(intent, REQUEST_CODE_PHOTO);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((currentTask) != null) {
        currentTask = stopTask(activity);
    }else {
        currentTask = startTask(activity);
    }
}

com.heaven7.android.dragflowlayout.DragAdapter getDragAdapter() {
    return mCallback.getDragAdapter();
}

public static java.lang.Boolean parseBoolean(final android.content.Intent intent, final java.lang.String key) {
    android.os.Bundle b = intent.getExtras();
    if (b == null) {
        return java.lang.Boolean.FALSE;
    }
    return org.deviceconnect.android.profile.DConnectProfile.parseBoolean(b.get(key));
}

public void onclick_exit(android.view.View view) {
    android.content.Intent i = new android.content.Intent(this, info.androidhive.materialtabs.activity.MapsActivity.class);
    i.putExtra("EnterOrExit", "Exit");
    myDB.close();
    startActivity(i);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    super.onDismiss(dialog);
    if (mFinishActivity) {
        android.widget.Toast.makeText(getActivity(), R.string.permission_required_toast, Toast.LENGTH_SHORT).show();
        getActivity().finish();
    }
}

@java.lang.Override
protected void onPostExecute(com.info.weather.Weather weather) {
    com.info.weather.WeatherWidget.mWeather = com.info.weather.WeatherWidget.setWeather(weather);
    onUpdate(context, android.appwidget.AppWidgetManager.getInstance(context), intent.getExtras().getIntArray(AppWidgetManager.EXTRA_APPWIDGET_IDS));
}

@java.lang.Override
public void getItemOffsets(android.graphics.Rect outRect, android.view.View view, android.support.v7.widget.RecyclerView parent, android.support.v7.widget.RecyclerView.State state) {
    if (shouldDrawDividerAbove(view, parent)) {
        outRect.top = mDividerHeight;
    }
    if (shouldDrawDividerBelow(view, parent)) {
        outRect.bottom = mDividerHeight;
    }
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initRetrofit();
    initializeData();
}

@java.lang.Override
public void transfer(hs_mannheim.gestureframework.model.Packet packet) {
    android.util.Log.d(TAG, ("Sending " + packet));
    if (isConnected()) {
        this.mConnectionThread.write(packet);
    }
}

@org.springframework.web.bind.annotation.RequestMapping(value = "page", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = "application/json")
public ru.android_studio.pages.entities.Page pageById(java.lang.Long id) {
    ru.android_studio.pages.entities.Page page = pageService.findById(id);
    if (page != null) {
        return page;
    }else {
        throw new ru.android_studio.pages.controllers.EntityNotFoundException("There is no page with given id");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    user.setIsDelete(true);
    holder.mImgBtnDelete.setSelected(true);
    mPosition = position;
    dialog.show();
    dialog.setUser(user);
}

@java.lang.Override
public void onClick(android.view.View view) {
    context.loadImage(url, viewHolder, areaClickHelper);
}

public static final void v(java.lang.Object tag, java.lang.String msg) {
    if (com.llxx.socket.loger.Ll_Loger.LOGED)
        android.util.Log.v(tag.getClass().getSimpleName(), ((com.llxx.socket.loger.Ll_Loger.LOG_BUILD) + msg));
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    parentView = getLayoutInflater().inflate(R.layout.activity_selectimg, null);
    hyzk.smartkeydevice.app.ActivityList.getInstance().addActivity(this);
    setContentView(parentView);
    Init();
}

@java.lang.Override
public void onDoneButtonClick(android.support.v4.app.DialogFragment dialog) {
    android.content.Intent intent = new android.content.Intent(this, com.tonyblake.songmojo.Home.class);
    intent.putExtra("firstName", user);
    intent.putExtra("getRecentActivity", true);
    startActivity(intent);
}

@java.lang.Override
public void addTextChangedListener(android.text.TextWatcher watcher) {
    if (watcher.equals(mTextWatcher)) {
        super.addTextChangedListener(watcher);
    }else {
        mTextWatchers.add(watcher);
    }
}

public static synchronized com.smartdevicelink.transport.MultiplexBluetoothTransport getBluetoothSerialServerInstance(android.os.Handler handler, boolean keepSocketAlive) {
    if ((com.smartdevicelink.transport.MultiplexBluetoothTransport.serverInstance) == null) {
        com.smartdevicelink.transport.MultiplexBluetoothTransport.serverInstance = new com.smartdevicelink.transport.MultiplexBluetoothTransport(handler);
    }
    com.smartdevicelink.transport.MultiplexBluetoothTransport.keepSocketAlive = keepSocketAlive;
    return com.smartdevicelink.transport.MultiplexBluetoothTransport.serverInstance;
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    final android.content.Context context = v.getContext();
    makeQuickAction(context, v, indexInItineraryList, position, mDataset.get(position));
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    at.fhooe.mc.conconii.MainActivity.testFinished = true;
    mDistance = 0;
    java.lang.System.runFinalization();
    java.lang.System.exit(0);
}

protected void onChildViewAttachedToWindow(android.view.View view, int adapterPosition, int layoutPosition) {
    com.angcyo.library.utils.L.d(((((("call: onChildViewAttachedToWindow -> " + adapterPosition) + " ") + layoutPosition) + " ") + view));
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initialisePresenter((savedInstanceState == null));
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(context, "트위터 링크로 이동", Toast.LENGTH_SHORT).show();
    init_twitter_data(2);
}

private void sendRefreshRequest() {
    android.content.Intent serviceIntent = new android.content.Intent(com.scottlindley.mobliezombie.MainActivity.REQUEST_REFRESH_INTENT);
    sendBroadcast(serviceIntent);
    android.content.Intent fragmentIntent = new android.content.Intent(com.scottlindley.mobliezombie.MainActivity.ACTIVITY_TO_FRAGMENT_REFRESH);
    sendBroadcast(fragmentIntent);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return pl.poznan.put.fc.antipaymentGuard.fragments.PayCardDetailsFragment.newInstance(payCard);
        case 1 :
            return pl.poznan.put.fc.antipaymentGuard.fragments.TransactionsListFragment.newInstance(payCard.getId());
    }
    return null;
}

public boolean isStarted(com.o3dr.services.android.lib.model.IDroneApi droneApi) {
    return (droneApi != null) && (droneApi.asBinder().pingBinder());
}

public static double multiply(double x, double y) {
    android.util.Log.d("TAG", "MULTIPLY");
    return x + y;
}

@java.lang.Override
public void onConnectionSuspended(int i) {
    showMessage((("onConnectionSuspended(" + i) + ")"));
    android.util.Log.w(name.chadschultz.nearbyapidemo.MainActivity.TAG, (("onConnectionSuspended(" + i) + ")"));
}

public static boolean createBond(android.bluetooth.BluetoothDevice device) {
    if (io.relayr.ble.DeviceCompatibilityUtils.isSdk19())
        io.relayr.ble.DeviceCompatibilityUtils.doCreateBond(device);
    
    return io.relayr.ble.DeviceCompatibilityUtils.callMethod(device, "createBond");
}

@java.lang.Override
public void onClick(android.view.View v) {
    AnimationSupport.Reveal.openFromLeft(LLcontainerSBvolume, new com.android.simplemusic.Support.AnimationSupport.Reveal.AnimationAction() {
        @java.lang.Override
        public void onPrepare() {
            RFLcontainerSBvolume.setVisibility(View.VISIBLE);
        }

        @java.lang.Override
        public void onStart() {
        }
    });
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    initView();
    initListener();
    android.util.Log.i("yuan", "now ! start !");
}

@java.lang.Override
public void onPrepareOptionsMenu(android.view.Menu menu) {
    this.menu = menu;
    if (!(showTick))
        menu.getItem(0).setEnabled(false);
    else
        menu.getItem(0).setEnabled(true);
    
}

@java.lang.Override
public void onNestedPreScroll(android.support.design.widget.CoordinatorLayout coordinatorLayout, android.support.design.widget.AppBarLayout child, android.view.View target, int dx, int dy, int[] consumed) {
    super.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed);
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    try {
        dest.writeSerializable(object);
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
}

public void recognizeSpeech(java.lang.String startMessage) {
    android.content.Intent i = new android.content.Intent();
    startPrompt = startMessage;
    sr.startListening(i);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    mProgress = progress;
    setTimeMovie();
}

@java.lang.Override
public void showError(final java.lang.String error) {
    getActivity().runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            android.widget.Toast.makeText(getContext(), error, Toast.LENGTH_SHORT).show();
        }
    });
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_daily_spells);
    android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.my_toolbar)));
    setSupportActionBar(toolbar);
    tomi.piipposoft.blankspellbook.DrawerHelper.createDrawer(this, toolbar);
}

public void initializeFragment(android.content.SharedPreferences sharedPreferences) {
    _sharedPreferences = sharedPreferences;
    android.content.res.AssetManager assets = getActivity().getAssets();
    quizData.initializeRound(sharedPreferences);
    loadRoundGuessRows(sharedPreferences);
    modifyQuizFont(sharedPreferences);
    modifyBackgroundColor(sharedPreferences);
    resetRound();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.util.Log.v("Rotate", "MainActivity onCreate Called!");
    validateLogin();
    bindEvent();
}

public static by.istin.android.xcore.source.DataSourceRequest fromBundle(android.os.Bundle bundle) {
    by.istin.android.xcore.source.DataSourceRequest data = new by.istin.android.xcore.source.DataSourceRequest();
    android.os.Bundle dataSourceFromBundle = by.istin.android.xcore.provider.ModelContract.getDataSourceFromBundle(bundle);
    if (dataSourceFromBundle != null) {
        data.mBundle = dataSourceFromBundle;
    }
    return data;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    org.brandroid.utils.Logger.LogDebug(("<-onCreate - " + (getClassName())));
}

public static float getDensity(android.content.Context context) {
    context.getApplicationContext().getResources().getConfiguration().orientation = $missing$;
    return context.getApplicationContext().getResources().getDisplayMetrics().density;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    android.widget.Toast.makeText(this, "onSaveInstanceState", Toast.LENGTH_SHORT).show();
    com.ci.marcopolo.EditPictureActivity.lineListBackup = drawer.getLineList();
}

@java.lang.Override
public void onBackPressed() {
    super.onBackPressed();
    setResult(eic.beike.projectx.android.activities.RESULT_CANCELED);
    startActivity(new android.content.Intent(this, eic.beike.projectx.android.activities.MenuActivity.class));
    finish();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    changesManager.deleteUpdates(fileNameWithoutExtension);
    changesManager.removeRegionUpdateReferences(fileNameWithoutExtension);
    net.osmand.plus.liveupdates.LiveUpdatesHelper.preferenceLastCheck(localIndexInfo, getMyApplication().getSettings()).resetToDefault();
}

@java.lang.Override
public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) {
    java.lang.String URL = dataSnapshot.getValue(java.lang.String.class);
    android.util.Log.d("find the URL", URL);
    new cs48.project.com.parl.ui.fragments.SettingFragment.DownloadImageTask().execute(URL);
}

@com.wq.android.lightannotation.annotations.OnKey(value = R.id.edit_text)
private void onKey(android.view.View v, int keyCode, android.view.KeyEvent event) {
    toast("OnKey");
}

@java.lang.Override
public void onTimeout(net.named_data.jndn.Interest interest) {
    (callbackCount)++;
    android.util.Log.i(com.example.cb.sn_android.NDN_service.TAG, ("Time out for interest" + (interest.getName().toUri())));
    android.util.Log.i(com.example.cb.sn_android.NDN_service.TAG, "register in gateway failed!");
}

public boolean isGoogleSigned(android.content.pm.PackageManager pm, java.lang.String packageName) {
    return false;
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    if (location != null) {
        java.lang.Double lon = location.getLongitude();
        java.lang.Double lat = location.getLatitude();
    }
}

public android.util.Pair<byte[], byte[]> readOutOfBandData() {
    if ((getState()) != (android.bluetooth.BluetoothAdapter.STATE_ON))
        return null;
    
    return null;
}

public com.raizlabs.android.dbflow.sql.builder.Condition collate(com.raizlabs.android.dbflow.annotation.Collate collation) {
    if (collation.equals(Collate.NONE)) {
        mPostArgument = null;
    }else {
        mPostArgument = collation.name();
    }
    return this;
}

public void logout(android.view.View view) {
    getSharedPreferences(com.github.oryanmat.trellowidget.TrelloWidget.INTERNAL_PREFS, Context.MODE_PRIVATE).edit().remove(TrelloAPIUtil.TOKEN_PREF_KEY).commit();
    replaceFragment(new com.github.oryanmat.trellowidget.activity.LoginFragment());
}

public void onClick_btnStartChallenge(android.view.View view) {
    mBattleshipBoardManager.saveGameBoard();
    android.content.Intent intent = new android.content.Intent(this, com.cognitutor.cognistudyapp.Activities.ChallengeActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public java.lang.Void proceed(final android.content.Intent intent) {
    run(intent);
    return null;
}

public static com.afollestad.materialdialogs.MaterialDialog buildOpenImageProgressDialog(android.app.Activity activity) {
    return new com.afollestad.materialdialogs.MaterialDialog.Builder(activity).title(R.string.open_image_progress_dialog_title).content(R.string.open_image_progress_dialog_content).progress(true, 0).cancelable(false).show();
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    android.view.View delete = itemView.findViewById(R.id.xlist_delete_button);
    delete.setVisibility(View.INVISIBLE);
    itemView.animate().setListener(null);
}

@java.lang.Override
public void onSuccess(com.google.firebase.auth.AuthResult authResult) {
    finish(com.firebase.ui.auth.ui.RESULT_OK, new android.content.Intent());
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    java.lang.Object data = getDataProvider().get(position);
    onItemClick(data);
}

public static de.struckmeierfliesen.ds.micromanagement.Food cursorToFood(android.database.Cursor cursor, int type) {
    return de.struckmeierfliesen.ds.micromanagement.sqlite.DatabaseConnection.cursorToFood(cursor, type, true);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    new swim.swimmom.RumbleAction(view);
    return ;
}

private void cancelBrowseToTask() {
    if ((browseToTask) != null) {
        android.util.Log.d(de.qabel.qabelbox.fragments.FilesFragment.TAG, "Found a running browseToTask");
        browseToTask.cancel(true);
        android.util.Log.d(de.qabel.qabelbox.fragments.FilesFragment.TAG, "Canceled browserToTask");
    }
}

public com.ludoscity.findmybikes.StationItem getSelected() {
    com.ludoscity.findmybikes.StationItem toReturn = null;
    if ((mSelectedPos) != (android.support.v7.widget.RecyclerView.NO_POSITION))
        toReturn = mStationList.get(mSelectedPos);
    
    return toReturn;
}

public void scheduledRecordingStarted() {
    android.util.Log.d(com.danielkim.soundrecorder.fragments.RecordFragment.TAG, "RecordFragment - scheduledRecordingStarted");
    updateUI(true);
    isRecording = true;
}

void setPrefs(final de.blau.android.prefs.Preferences prefs) {
    this.prefs = prefs;
    de.blau.android.resources.DataStyle.setAntiAliasing(prefs.isAntiAliasingEnabled());
    map.invalidate();
}

public void replaceFragmentWithSelected(android.support.v4.app.Fragment fragment) {
    android.support.v4.app.FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
    fragmentTransaction.replace(R.id.frame_content, fragment);
    fragmentTransaction.addToBackStack(null);
    fragmentTransaction.commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.justaudio.utils.CustomDialog.showMoreRemoveDialog(parent, mData);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    if (onAnimationEnd != null) {
        onAnimationEnd.run();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    switchToRoomConfig(type, id);
    finish();
}

private static java.util.Map<java.lang.String, java.lang.String> getCustomIdentityValues(android.os.Bundle options) {
    final java.util.Map<java.lang.String, java.lang.String> map = com.salesforce.androidsdk.util.MapUtil.addBundleToMap(options, com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance().getCustomIdentityKeys(), null);
    return map;
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    if (com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.DEBUG)
        android.util.Log.d(com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.TAG, "onStop -- ");
    
    if (com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.mGoogleApiClient.isConnected()) {
        com.vibejukebox.jukebox.activities.VibeJukeboxMainActivity.mGoogleApiClient.disconnect();
    }
}

@java.lang.Override
public void fling(int velocityY) {
    super.fling(velocityY);
    handler.removeCallbacks(mSnapRunner);
    android.util.Log.d("SCROLLVIEW", "Fling");
    mIsFling = true;
}

@java.lang.Override
public synchronized void onResume() {
    super.onResume();
    com.topodroid.DistoX.TDLog.Debug("device activity on resume");
    registerReceiver(mPairReceiver, new android.content.IntentFilter(android.bluetooth.BluetoothDevice.ACTION_BOND_STATE_CHANGED));
    mApp.resumeComm();
    mApp.mDeviceActivityVisible = true;
    com.topodroid.DistoX.TDLog.Debug("device activity on resume done");
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    client = com.codepath.apps.mysimpletweets.TwitterApplication.getRestClient();
    populateTimeline(0);
}

public void setDefaultSelector(android.graphics.drawable.Drawable d) {
    mDefaultBackground = d;
    if (!(mStacked))
        setStacked(true, true);
    
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.cancel();
    java.lang.System.arraycopy(tmpCheckedItems, 0, Appl.selectedCategories, 0, Appl.selectedCategories.length);
    mListener.onFilterDialogNegativeClick(this);
}

@java.lang.Override
protected void onStatusOk(net.datafans.android.common.data.service.BaseResponse response, java.lang.Class<?> type) {
    super.onStatusOk(response, type);
    onEnd();
}

@java.lang.Override
public void attach(android.hardware.Camera camera) throws java.io.IOException {
    android.util.Log.w(org.thoughtcrime.securesms.components.camera.TexturePreviewStrategy.TAG, "attach(Camera)");
    camera.setPreviewTexture(surface);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mFragment.setSetSupportToolbarCallBack(new io.innofang.autosms.base.BaseFragment.SetSupportToolbarCallBack() {
        @java.lang.Override
        public void setSupportToolbar(android.support.v7.widget.Toolbar toolbar) {
            io.innofang.autosms.module.edit_message.EditMessageActivity.this.setSupportActionBar(toolbar);
        }
    });
}

public boolean initSession(io.branch.referral.Branch.BranchUniversalReferralInitListener callback, boolean isReferrable, android.app.Activity activity) {
    initUserSessionInternal(callback, activity, isReferrable);
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    placeBid();
    android.widget.Toast bidplaced = android.widget.Toast.makeText(getApplicationContext(), "Your bid has been placed", Toast.LENGTH_SHORT);
    bidplaced.show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    sendStopTalkingMessage();
    sendCancelRoutineMessage();
    android.content.Intent intent = new android.content.Intent(this, com.sxnwlfkk.dailyroutines.views.profileActivity.ProfileActivity.class);
    intent.setData(mCurrentUri);
    startActivity(intent);
    finish();
}

public void assignSim(java.lang.String id, int state, java.lang.String link) {
    if ((type) == (com.android.internal.telephony.HardwareConfig.DEV_HARDWARE_TYPE_SIM)) {
        uuid = id;
        modemUuid = link;
        state = state;
    }
}

private android.view.View getCordovaView() {
    cordova.getActivity().getWindow().getDecorView();
}

@java.lang.Override
public android.view.View getView(int i, android.view.View view, android.view.ViewGroup viewGroup) {
    if ((this.itemList.get(i)) == null) {
        setList();
    }
    return this.itemList.get(i);
}

@java.lang.Override
public boolean onQueryTextChange(java.lang.String newText) {
    setCitiesList(newText);
    android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getActivity().getSystemService(Context.INPUT_METHOD_SERVICE)));
    imm.hideSoftInputFromWindow(searchView.getWindowToken(), 0);
    return true;
}

@java.lang.Override
public void run() {
    try {
        c = new frontend.Connection();
    } catch (java.io.IOException e) {
        android.widget.Toast.makeText(this, "Error occurred while loading page", Toast.LENGTH_SHORT).show();
        noConnection = false;
        finish();
    }
}

@java.lang.Override
public com.glacial.p0x4.adapters.AddPlayersAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View v = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_new_player, parent, false);
    return new com.glacial.p0x4.adapters.AddPlayersAdapter.ViewHolder(v, game);
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    int themeMode = com.zzzmode.appopsx.ui.core.SpHelper.getThemeMode(this);
    if (themeMode != (android.support.v7.app.AppCompatDelegate.MODE_NIGHT_AUTO)) {
        android.support.v7.app.AppCompatDelegate.setDefaultNightMode(themeMode);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    int adapterPosition = getAdapterPosition();
    java.lang.String selectedMovie = movies[adapterPosition].getOriginalTitle();
    movieClickHandler.onClick(selectedMovie);
}

public static java.lang.String escape(java.lang.String str) {
    str = java.text.Normalizer.normalize(str, java.text.Normalizer.Form.NFD);
    str = str.replaceAll("[^\\x00-\\x7F]", "");
    return android.database.DatabaseUtils.sqlEscapeString(str);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int i) {
    initThread();
    mCommand += "-aoa";
    mThread.start();
    mDialog.showDialog(R.raw.decompress);
    mDialog.changeTitle(mContext.getResources().getString(R.string.compress_info));
}

@java.lang.Override
public void onDialogBtnClicked(android.content.Intent data, int whichBtn, int result, int requestCode) {
    switch (requestCode) {
        case com.ndhunju.dailyjournal.controller.HomeActivity.REQUEST_CODE_BACKUP_DIR_PRINTABLE :
            com.ndhunju.dailyjournal.controller.ToolsActivity.onBackUpDirForPrintableSelected(getContext(), data, whichBtn, result);
            break;
    }
}

public void updatedSelectedItem(java.lang.Object o) {
    com.kimeeo.kandroid.sample.model.SampleModel data = ((com.kimeeo.kandroid.sample.model.SampleModel) (o));
    textView.setText(data.name);
    textView.setTextColor(textView.getContext().getResources().getColor(R.color.actionBarBackgroundStart));
}

public static void gaussianBlur(android.graphics.Bitmap bitmap, int radius) {
    org.quenlen.magic.MagicImage.nGaussianBlur(bitmap, radius);
}

void checkPermission() {
    if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        fetchNotesQuery();
    }else {
        android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, 1);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(getApplicationContext(), com.clintonmedbery.rajawalibasicproject.SightActivity.class));
    finish();
    renderer.pleaseStop();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    eventItemRow.getEvent().setStatus(Event.STATUS_DELETED);
    eventItemRow.getEvent().save();
    dialog.dismiss();
}

@java.lang.Override
protected void onRestart() {
    if (cybrilla.musicplayer.util.MusicPlayerHelper.getInstance().getMediaPlayer().isPlaying()) {
        android.util.Log.e("Song Detail Activity", "Pause button being set");
        detailController.setImageResource(android.R.drawable.ic_media_pause);
    }
    super.onRestart();
}

public void tellJoke(android.view.View view) {
    new com.alvarosantisteban.joketellingapp.EndpointsAsyncTask().execute(this);
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    progressBar = ((android.widget.ProgressBar) (activity.findViewById(R.id.mainProgressBar)));
    progressBar.setVisibility(ProgressBar.VISIBLE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.amap.api.maps2d.CameraUpdate update = com.amap.api.maps2d.CameraUpdateFactory.changeLatLng(myLocation);
    mAMap.animateCamera(update);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    boolean result = super.onCreateOptionsMenu(menu);
    menu.add(0, com.android.demo.notepad1.Notepadv1.INSERT_ID, 0, R.string.menu_insert);
    return result;
}

private boolean shouldShowBoxAndPagesAnimation() {
    return (getPostListType().isTagType()) || ((getPostListType()) == (org.wordpress.android.ui.reader.ReaderTypes.ReaderPostListType.SEARCH_RESULTS));
}

@java.lang.Override
public void onEnabled(android.content.Context context) {
    android.util.Log.i(org.thecosmicfrog.luasataglance.widget.StopForecastWidget.LOG_TAG, "Widget first created.");
    org.thecosmicfrog.luasataglance.widget.StopForecastWidget.localeDefault = java.util.Locale.getDefault().toString();
}

private void handleFirstRun() {
    if (com.darkrockstudios.iot.adventurephotoframe.Settings.getFirstRun(this)) {
        com.darkrockstudios.iot.adventurephotoframe.Settings.setFirstRunDone(this);
        startActivity(new android.content.Intent(this, com.darkrockstudios.iot.adventurephotoframe.WelcomeActivity.class));
    }
}

public static layout.StreamFragment newInstance(java.lang.String value) {
    layout.StreamFragment fragment = new layout.StreamFragment();
    android.os.Bundle args = new android.os.Bundle();
    args.putString("key", value);
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onDestroy() {
    if ((startIntent) != null) {
        android.support.v4.content.WakefulBroadcastReceiver.completeWakefulIntent(startIntent);
        startIntent = null;
    }
    super.onDestroy();
    de.skycoder42.seasonproxer.SeasonProxerService.quitApp();
}

private int getPageCount() {
    android.util.Log.d(com.bjss.plugin.PdfRendererPlugin.LOG_TAG, "getPageCount");
    if ((renderer) == null)
        return 0;
    
    return renderer.getPageCount();
}

private android.view.View bindUI(android.view.View root) {
    listView = ((android.widget.ListView) (root.findViewById(R.id.PXForm_linearPanel)));
    setToolbarNavigationOnClickListener(mainActivityHomeButton);
    setToolbarNavigationDisplayHomeAsUpEnabled();
    return root;
}

@com.mindorks.placeholderview.annotations.swipe.SwipeCancelState
private void onSwipeCancelState() {
    android.util.Log.d("EVENT", "onSwipeCancelState");
}

public static rx.Observable<java.lang.Boolean> createObservable(android.app.Activity ctx, com.google.android.gms.location.LocationRequest locationRequest) {
    return rx.Observable.create(new pl.charmas.android.reactivelocation.observables.location.LocationSettingsObservable(ctx, locationRequest));
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (AudioListActivity.audioListIsActive)
        finish();
    else {
        android.content.Intent intent = new android.content.Intent(getApplicationContext(), me.samuki.musicandspeed.AudioListActivity.class);
        startActivity(intent);
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    booster.mingliu.boostertest.models.QuestionModelManager.getsInstance().setCurOption(finalPos);
    org.greenrobot.eventbus.EventBus.getDefault().post(new booster.mingliu.boostertest.events.QuestionCheckedEvent());
}

public void onClick(android.content.DialogInterface dialog, int id) {
    delete = true;
    dialog.cancel();
}

private void initPaint() {
    mPaint = new android.graphics.Paint();
    mPaint.setAntiAlias(true);
    mPaint.setTextAlign(Paint.Align.CENTER);
    mPaint.setColor(this.mTextColor);
    mPaint.setTextSize(mTextSize);
}

@org.greenrobot.eventbus.Subscribe(threadMode = org.greenrobot.eventbus.ThreadMode.MAIN)
public void onPoisAndNotesDownloadedEvent(io.mapsquare.osmcontributor.core.events.PoisAndNotesDownloadedEvent event) {
    android.util.Log.i(io.mapsquare.osmcontributor.map.MapFragmentPresenter.class.getSimpleName(), "onPoisAndNotesDownloadedEvent: ");
    mapFragment.showProgressBar(false);
    forceRefreshPoi = true;
    loadPoisIfNeeded();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    view = inflater.inflate(R.layout.fragment_goals, container, false);
    initializeGUI();
    setInitialValues();
    updateValues();
    finalizeGUI();
    return view;
}

public void showSimpleSnackbar(int mainTextResource, boolean shortLength) {
    android.view.View root = findViewById(R.id.root_layout);
    showSnackbar(mainTextResource, shortLength, (-1), null, root);
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    if ((com.google.android.exoplayer2.util.Util.SDK_INT) > 23) {
        videosAdapter.releasePlayers();
    }
}

private java.lang.String getSQL() {
    return androidSQLiteSt.toString().substring("SQLiteProgram: ".length());
}

@android.support.annotation.Nullable
public java.lang.String getSupervisor(int i) {
    for (com.nmakademija.nmaakademija.entity.Section section : sections)
        if ((section.getId()) == i)
            return section.getSupervisor();
        
    
    return null;
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    outState.putParcelable(com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS, org.parceler.Parcels.wrap(placeLocateResults));
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onClick(android.view.View v) {
    org.thecosmicfrog.luasataglance.util.StopForecastUtil.showNotifyTimeDialog(rootView, spinnerCardView.getSpinnerStops().getSelectedItem().toString(), inboundStopForecastCardView.getTextViewStopTimes(), index);
}

@java.lang.Override
public boolean onPrepareActionMode(android.support.v7.view.ActionMode actionMode, android.view.Menu menu) {
    actionMode.setTitle("Test");
    return true;
}

public void onSavedInstanceState(android.os.Bundle saveInstanceState) {
    super.onSaveInstanceState(saveInstanceState);
    saveInstanceState.putBoolean(geoquiz.android.bignerdranch.com.geoquiz.CheatActivity.EXTRA_ANSWER_SHOWN, mIsCheater);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.main_activity_actions, menu);
    boolean bool = super.onCreateOptionsMenu(menu);
    return bool;
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    com.vijay.jsonwizard.widgets.TreeViewFactory.changeEditTextValue(editText, "");
    return true;
}

public void glUniform1(int location, java.nio.IntBuffer value) {
    com.jme3.renderer.android.AndroidGL.checkPosition(value);
    android.opengl.GLES20.glUniform1iv(location, com.jme3.renderer.android.AndroidGL.getLimitCount(value, 1), value);
}

@java.lang.Override
protected void onPreExecute() {
    progDailog = new android.app.ProgressDialog(this);
    progDailog.setMessage("Chargement des fiches...");
    progDailog.setIndeterminate(false);
    progDailog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
    progDailog.setCancelable(true);
    progDailog.show();
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    onActivityShareResult(requestCode, resultCode, data);
}

@java.lang.Override
public void onTap(org.osmdroid.views.overlay.OverlayItem item, android.content.ContentValues values) {
    markItem(values, false);
    if ((mListener) != null) {
        mListener.onShowDetail(this, values);
    }
}

public void setInnerXML(android.view.ViewGroup parentView, java.lang.String parentClassName, java.lang.String markup, android.view.View viewRef) {
    setInnerXMLInsertPageFragment(parentView, parentClassName, markup, viewRef);
}

public void run() {
    android.widget.Toast.makeText(getApplicationContext(), getString(R.string.connection_failed), Toast.LENGTH_LONG).show();
    mDevice = null;
    mService = null;
    mIDevice = null;
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    float second = ((float) (msg.obj));
    youTubeListener.onCurrentSecond(second);
}

@java.lang.Override
public void onLocationFailed() {
    android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), "Make sure you have google play services installed", Snackbar.LENGTH_LONG).show();
}

@java.lang.Override
public void onResourceReady(android.graphics.Bitmap resource, com.bumptech.glide.request.animation.GlideAnimation<? super android.graphics.Bitmap> glideAnimation) {
    mBitmaps.put(i, resource);
    refresh(((mBitmaps.size()) - 1));
}

@java.lang.Override
public void onClick(android.view.View v) {
    imageViewResult4.setBackgroundColor(getResources().getColor(R.color.Brown));
    band4 = 10;
    doCalc();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    ch.bailu.aat.helpers.AppLog.i(this, ch.bailu.aat.helpers.AppBroadcaster.getFile(intent));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (co.smartreceipts.android.BuildConfig.DEBUG) {
        android.util.Log.d(co.smartreceipts.android.fragments.ReceiptsFragment.TAG, "onCreate");
    }
    setHasOptionsMenu(true);
    mCurrentTrip = getArguments().getParcelable(Trip.PARCEL_KEY);
}

private void initUI() {
    setSupportActionBar(toolbar);
    listview.setAdapter(adapter);
    listview.setLayoutManager(new android.support.v7.widget.GridLayoutManager(this, 3));
    listview.addItemDecoration(decoration);
}

private void showOpen311ProblemFragment(edu.usf.cutr.open311client.models.Service service, org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo) {
    org.onebusaway.android.report.ui.Open311ProblemFragment.show(this, R.id.ri_report_stop_problem, mOpen311, service, obaArrivalInfo, mAgencyName, this);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d("valdoc", ("login :" + "button click action"));
    attemptLogin();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if ((receiveDataService) != null) {
        if (intent.getAction().equals(ReceiveDataService.DATA_RECEIVED_ACTION)) {
            onReceivingData();
        }else {
        }
    }
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    adapter.filter(s.toString());
    addFooterHandler(s.toString());
}

public android.graphics.drawable.Drawable weatherIcon() {
    return self.edu.blueaproncodechallenge.Forecast.drawableForWeatherIconID(weatherIconID);
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.drive.DriveFolder.DriveFileResult result) {
    if (!(result.getStatus().isSuccess())) {
        showMessage("Error while trying to create the file");
        return ;
    }
    showMessage("Backup Success!");
    finish();
}

@butterknife.OnClick(value = R.id.tipDialog)
public void tipDialog(android.view.View v) {
    com.bryan.lib.dialog.FastDialog.ShowTipDialog(context, "提示", "你今天的抢购名额已用完~", true, new com.flyco.dialog.listener.OnBtnClickL() {
        @java.lang.Override
        public void onBtnClick() {
            com.bryan.lib.util.T.showShort(context, "确定");
        }
    });
}

@java.lang.Override
protected void onStart() {
    android.util.Log.d(com.mixey69.roulettevideochat.MainActivity.LOG_TAG, "onStart");
    super.onStart();
    mConnectionManager.startWebServiceCoordinator();
}

@java.lang.Override
@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB)
public void onBuildHeaders(java.util.List<com.example.abhijeetsinghkgp.popularmovies.Header> target) {
    loadHeadersFromResource(R.xml.pref_headers, target);
    setContentView(R.layout.settings);
    android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar)));
    setSupportActionBar(toolbar);
    setupActionBar();
}

public void onClick(android.view.View v) {
    this.changeExpress(ivLike, ivDislike, tvLikeCount, true, true, llLikeAnimator);
}

@java.lang.Override
public boolean onJsAlert(android.webkit.WebView view, java.lang.String url, java.lang.String message, android.webkit.JsResult result) {
    return mWebChromeClient.onJsAlert(view, url, message, result);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.widget.Toast.makeText(context, "트위터 링크로 이동", Toast.LENGTH_SHORT).show();
    init_twitter_data(1);
}

private void removeSubForm() {
    formLayout.setVisibility(com.auth0.android.lock.views.VISIBLE);
    showSignUpTerms((!(keyboardIsOpen)));
    if ((this.subForm) != null) {
        removeView(this.subForm);
        this.subForm = null;
    }
}

private void holdButtonEndTouch(android.view.View view) {
    if ((buttonPressCountDown) != null) {
        buttonPressCountDown.cancel();
    }
    blockButton(currentTeamCapture);
}

@java.lang.Override
protected void populateView(android.view.View view, com.travelersdiary.models.Travel travel, int position) {
    super.populateView(view, travel, position);
    ((android.widget.TextView) (view.findViewById(android.R.id.text1))).setText(travel.getTitle());
}

private static java.lang.String getApplicationStorageRootPath() {
    return ((android.os.Environment.getExternalStorageDirectory().getPath()) + "/") + (com.fezrestia.android.localcheckpointscheduler.storage.StorageController.ROOT_DIR_PATH);
}

public void onClick(android.view.View v) {
    android.content.Intent intentSubmitSMS = new android.content.Intent(v.getContext(), com.example.yugch.projectepsilon.Home.class);
    startActivity(com.example.yugch.projectepsilon.Home);
}

public static void play(android.content.Context context, int resource) {
    aditi.hangman.Music.stop(context);
    android.util.Log.v(aditi.hangman.Music.TAG, "playing music");
    aditi.hangman.Music.mp = android.media.MediaPlayer.create(context, resource);
    aditi.hangman.Music.mp.start();
}

@java.lang.Override
public boolean onMyLocationButtonClick() {
    android.widget.Toast.makeText(this, "MyLocation button clicked", Toast.LENGTH_SHORT).show();
    return false;
}

@retrofit2.http.GET(value = "/repos/{owner}/{repo}/contents/{path}")
rx.Observable<java.lang.String> getFileContent(@android.support.annotation.Nullable
@retrofit2.http.Header(value = "Accept")
java.lang.String acc, @retrofit2.http.Header(value = "Authorization")
java.lang.String auth, @retrofit2.http.Path(value = "owner")
java.lang.String owner, @retrofit2.http.Path(value = "repo")
java.lang.String repo, @retrofit2.http.Path(value = "path")
java.lang.String path);

@java.lang.Override
public void onTextChanged(java.lang.CharSequence s, int start, int before, int count) {
    android.content.SharedPreferences.Editor editor = preferences.edit();
    editor.putString("max_runtime", s.toString());
    editor.commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    mDbAdapter.resetWordStatus(id);
    mCursorAdapter.changeCursor(mDbAdapter.fetchWordsByTrained(null, java.lang.Integer.MAX_VALUE, java.lang.Integer.MAX_VALUE));
    dialog.dismiss();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    startMediaUploadService();
    startMediaDeleteService(null);
    org.wordpress.android.ui.ActivityId.trackLastActivity(ActivityId.MEDIA);
}

@java.lang.Override
protected android.support.v4.app.Fragment createFragment() {
    uk.co.ribot.androidboilerplate.ui.fragment.SearchFragment searchFragment = new uk.co.ribot.androidboilerplate.ui.fragment.SearchFragment();
    return searchFragment;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if ((getArguments()) != null) {
        mParam = getArguments().getString(de.th_nuernberg.harwedu.labcert.fragment.AddStudentFragment.ARG_PARAM);
    }
}

@java.lang.Override
public void onSuccess(int statusCode, cz.msebera.android.httpclient.Header[] headers, byte[] responseBody) {
    com.adsamcik.signalcollector.DataStore.deleteFile(name);
    com.adsamcik.signalcollector.services.TrackerService.approxSize -= size;
    android.util.Log.d(com.adsamcik.signalcollector.DataStore.TAG, ("Successfully uploaded " + name));
}

@java.lang.Override
protected java.lang.String doInBackground(java.lang.String... urls) {
    android.util.Log.d("Rest", "doinbackground");
    java.lang.String response = "";
    for (java.lang.String url : urls) {
        response = edu.ubbcluj.canvasAndroid.backend.repository.restApi.RestInformationDAO.putData(url);
    }
    return response;
}

private void regresaInicio() {
    android.content.Intent myIntent = new android.content.Intent(this, com.team.android.MenuActivity.class);
    startActivity(myIntent);
}

private void initializeMediaPlayer() {
    if ((leMediaPlayer) != null) {
        leMediaPlayer = new android.media.MediaPlayer();
    }else {
        leMediaPlayer.reset();
    }
    playerStatus = !(leMediaPlayer.equals(null));
}

@java.lang.Override
public void onFailure(int reasonCode) {
    android.widget.Toast.makeText(getActivity(), ("Discovery Failed : " + reasonCode), Toast.LENGTH_SHORT).show();
    com.alanddev.gmscall.fragment.WifiDirectFragment.time_scan_fails = java.lang.System.currentTimeMillis();
    (com.alanddev.gmscall.fragment.WifiDirectFragment.number_scan_fails)++;
}

public void morphIntoFab(android.view.View fab, long hideSheetDuration, long hideSheetColorDuration, com.gordonwong.materialsheetfab.animations.AnimationListener listener) {
    revealSheetWithFab(getSheetRevealRadius(), getFabRevealRadius(fab), hideSheetDuration, sheetColor, fabColor, hideSheetColorDuration, listener);
}

@java.lang.Override
public void onLoaded(java.util.List<net.ltfc.chinaartgallery.base.model.entities.Painting> paintingList) {
    android.util.Log.d("onLoaded", ("category:" + (category)));
    paintingListAdapter.setPaintingList(paintingList);
    swipeRefresh.setRefreshing(false);
}

public static com.google.android.gms.common.api.PendingResult<com.google.android.gms.common.api.Status> removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient googleApiClient, com.google.android.gms.location.LocationListener locationListener) {
    return null;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.e(com.peets.socialplay.TreasureHuntRestActivity.TAG, "buttons[1] OnClick");
    buttons[1].setText(R.string.connecting);
    participantAccount = accountArray.get(1).getAccountId();
    disableButtons();
    inviteToPlay();
}

public void draw(android.graphics.Canvas canvas, android.graphics.Rect destination) {
    if (!(isPlaying)) {
        return ;
    }
    scaleRect(destination);
    canvas.drawBitmap(frames[frameIndex], null, destination, null);
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    android.widget.Toast.makeText(getActivity(), getString(R.string.UnfinishedFeatureText), Toast.LENGTH_SHORT).show();
    return true;
}

public static synchronized fast.simple.download.DownloadManager getInstance(android.content.Context context) {
    if (null == (fast.simple.download.DownloadManager.mInstance)) {
        fast.simple.download.DownloadManager.mInstance = new fast.simple.download.DownloadManager(context.getApplicationContext());
    }
    return fast.simple.download.DownloadManager.mInstance;
}

public void listQuestion(int surveyId) {
    android.content.Intent intent = new android.content.Intent(this, survey.shakya.sugan.surveyapp.activity.ListQuestionForSurveyerActivity.class);
    intent.putExtra("SURVEY_ID", surveyId);
    finish();
    this.startActivity(intent);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    if (co.smartreceipts.android.BuildConfig.DEBUG) {
        android.util.Log.d(co.smartreceipts.android.fragments.ReceiptsFragment.TAG, "onResume");
    }
}

public void onClick(android.content.DialogInterface arg0, int arg1) {
    this.saveRecipes();
    finish();
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.util.Log.e("aman", "saving scores");
    if (!(intentional_end))
        endQuiz();
    else
        intentional_end = false;
    
}

public void onDialogPositiveClick(android.app.DialogFragment dialog, java.lang.String recipeUrl);

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    android.util.Log.i("Response", result);
}

public void onCreate() {
    super.onCreate();
    android.os.HandlerThread thread = new android.os.HandlerThread("DownloadService");
    thread.start();
    mServiceLooper = thread.getLooper();
    mServiceHandler = new edu.vuum.mocca.DownloadService.ServiceHandler(mServiceLooper, this);
}

@java.lang.Override
public void onClick(android.view.View v) {
    readTextFromEditText();
    if (isAllValid()) {
        com.example.a2017.mentoring.Model.Register register = new com.example.a2017.mentoring.Model.Register(_email, _first_password, _first_name, _last_name, _type, _phone_number);
        sendRegisterToServer(register);
    }
}

@java.lang.Override
public void onUpdateScrollBarBounds(android.graphics.Rect barBounds) {
    xyz.danoz.recyclerviewfastscroller.calculation.VerticalScrollBoundsProvider boundsProvider = new xyz.danoz.recyclerviewfastscroller.calculation.VerticalScrollBoundsProvider(0, barBounds.height());
    mIndicatorOffset = (-(xyz.danoz.recyclerviewfastscroller.sectionindicator.AbsSectionIndicator.getHeight())) + (barBounds.top);
    mScreenPositionCalculator = new xyz.danoz.recyclerviewfastscroller.calculation.position.VerticalScreenPositionCalculator(boundsProvider);
}

private java.util.ArrayList<android.support.v4.app.Fragment> getPlayerPages() {
    java.util.ArrayList<android.support.v4.app.Fragment> pages = new java.util.ArrayList<>();
    pages.add(slim.body.spring.fragment.AdviceFragment.newInstance());
    pages.add(slim.body.spring.fragment.PlayerFragment.newInstance(mTracks));
    return pages;
}

@java.lang.Override
public void onClick(android.view.View v) {
    notifyReadOnlineBackupsFailed();
    dlg.dismiss();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    mainActivity.setFinish_activity(false);
    android.support.v4.app.ActivityCompat.requestPermissions(mainActivity, new java.lang.String[]{ Manifest.permission.WRITE_CONTACTS }, org.dbhatt.d_deleted_contact.Deleted_contact.REQUEST_WRITE_EXTERNAL_STORAGE);
}

@java.lang.Override
public void onClick(int position) {
    android.util.Log.e("Position", (position + ""));
    android.content.Intent intent = new android.content.Intent(this, com.example.yukinohara.accuweather.ui.base.DetailsActivity.class);
    intent.putExtra("INDEX", position);
    startActivity(intent);
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle state) {
    super.onRestoreInstanceState(state);
    recipe = state.getParcelable(com.example.floating.bakingapp.ui.RecipeListActivity.RECIPE_LIST);
    com.example.floating.bakingapp.ui.RecipeListActivity.ingredientsList = recipe.getIngredients();
    stepsListState = state.getParcelable(com.example.floating.bakingapp.ui.RecipeListActivity.STEPS_LIST_KEY);
}

public void deleteTrend(java.lang.String sdetails) {
    android.database.sqlite.SQLiteDatabase db = getWritableDatabase();
    db.delete(android.internest.com.internest.MyDBHandler.TABLE_TRENDS, ((((android.internest.com.internest.MyDBHandler.SCANNED_COLUMN_DETAILS) + " = \'") + sdetails) + "\'"), null);
}

public static java.lang.String getBatteryLevelRequest(android.content.Context context, java.lang.String requestRecipient) {
    return context.getResources().getString(R.string.battery_level_message, org.addhen.smssync.util.Util.getBatteryLevel(context));
}

@java.lang.Override
public void unscheduleDrawable(android.graphics.drawable.Drawable drawable, java.lang.Runnable runnable) {
    android.util.Log.e("CALL BACK", "UN SCH");
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    github.johnnysc.testappintech.MainActivity.positionOfItem = position;
    github.johnnysc.testappintech.MainActivity.myView = view;
    android.content.Intent intent = new android.content.Intent(this, github.johnnysc.testappintech.PlayerActivity.class);
    startActivityForResult(intent, 0);
}

@java.lang.Override
public boolean apply(java.lang.String input) {
    android.util.Log.d("SnappyRepo", ("Filtering " + input));
    return (input.split(":").length) == 2;
}

public void createInstance(android.view.View v) {
    this.progressDialogWaitStop.show();
    new org.stackdroid.activities.ServersActivity.AsyncTaskOSListImages().execute();
    this.manageInstanceDialog.dismiss();
}

public static boolean isFirstRun(android.content.Context context) {
    android.content.SharedPreferences sharedPreferences = ((Build.VERSION.SDK_INT) > 19) ? android.preference.PreferenceManager.getDefaultSharedPreferences(context) : context.getSharedPreferences("general_settings", Context.MODE_PRIVATE);
    return sharedPreferences.getBoolean(tz.co.wadau.calenderapp.InitialSettingsActivity.IS_FIRST_RUN, true);
}

public static void e(final java.lang.String logTag, final java.lang.String msg, final java.lang.Exception e) {
    if (com.stanko.tools.Log.isDebuggable)
        android.util.Log.e(logTag, msg, e);
    
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.mervesimsek.vehicleapp.common.CommonObjectManager.Status = com.example.mervesimsek.vehicleapp.common.CommonObjectManager.OperationStatus.detail;
    com.example.mervesimsek.vehicleapp.common.CommonObjectManager.VehicleListSelectedRowModel = holder.vehicleViewHolder;
    showVehicleDetailActivityController(currentContext);
}

@android.support.annotation.CallSuper
protected void onBackground() {
    superCalled = true;
    mActivityState = com.smartdevicelink.api.SdlActivity.SdlActivityState.BACKGROUND;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    superOnBackPressed();
    if (!(newFileName.isEmpty())) {
        deletePicRef(newPicRef);
    }
}

@java.lang.Override
protected void onCreate(final android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    handleIntent(getIntent());
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.content.SharedPreferences.Editor editor = getSharedPreferences(com.ferit.dfundak.georeminder.MainActivity.MY_PREFS_NAME, com.ferit.dfundak.georeminder.MODE_PRIVATE).edit();
    editor.putBoolean("fromNotification", false);
    editor.commit();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.widget.ListView listView = ((android.widget.ListView) (parent));
    java.lang.String item = ((java.lang.String) (listView.getItemAtPosition(position)));
}

public void update() {
    data = com.wagner.marcel.ManagedSettings.Generaldata.Modeprocessing.ModeFactory.getModeListArray(getContext());
    adapter = new android.widget.ArrayAdapter<java.lang.String>(getActivity(), android.R.layout.simple_list_item_1, data);
    listView.setAdapter(adapter);
    getActivity().recreate();
}

public void onItemClick(android.view.View view, int position) {
    de.oerntec.votenote.MainDialogHelper.showChangeLessonDialog(((de.oerntec.votenote.MainActivity) (getActivity())), mSubjectId, ((java.lang.Integer) (view.getTag())));
}

@java.lang.Override
public void onCharacteristicWrite(android.bluetooth.BluetoothGatt gatt, android.bluetooth.BluetoothGattCharacteristic characteristic, int status) {
    android.util.Log.w(org.three1one.simplegui.RBLService.TAG, "Written ");
    sendingContinuePacket(characteristic);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_report);
    initializeWidgets();
    initializeHelpers();
    initializeGoogleApiClient();
}

private void setPlayButton(boolean command) {
    if (command) {
        android.util.Log.d("control", "setPlayButton—play button set to pause");
        playButton.setImageResource(R.drawable.ic_pause_black_48dp);
    }else {
        android.util.Log.d("control", "setPlayButton-play button set to play");
        playButton.setImageResource(R.drawable.ic_play_arrow_black_48dp);
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.os.Bundle bundle = intent.getExtras();
    if ((gridView) != null)
        gridViewUser.hideRequestAnnouncement();
    
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            android.support.v4.app.NavUtils.navigateUpFromSameTask(this);
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onAdFailedToLoad(int error) {
    android.util.Log.d(com.samcodes.admob.InterstitialListener.TAG, ("onInterstitialFailedToLoad: " + (com.samcodes.admob.AdMobExtension.getErrorReason(error))));
    com.samcodes.admob.AdMobExtension.callHaxe("onInterstitialFailedToLoad", new java.lang.Object[]{ id });
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    mClearMapLimit = true;
    mPage = 0;
    refreshActiveFilters();
    loadObservations();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View v, int position, long id) {
    mAction = mAdapter.getItem(position);
    updateListToShowCurrentAction();
    return ;
}

@java.lang.Override
public long getItemId(int position) {
    if (position < (mResults.size())) {
        mResults.get(position).getDateAdded();
    }
    return android.support.v7.widget.RecyclerView.NO_ID;
}

@java.lang.Override
public void onTagSelected(prada.lab.android.pingo.model.Tag tag, boolean selected) {
    mRootVm.find(tag.getType()).updateTagState(tag, selected);
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    android.util.Log.i(LOG_TAG, (((this.getClass().getSimpleName()) + (getId())) + ".onSaveInstanceState()"));
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    if (key.equals(app.program.SettingsActivity.SettingsFragment.KEY_PREF_LANGUAGE)) {
        android.widget.Toast.makeText(getActivity(), "Changed", Toast.LENGTH_SHORT).show();
    }
}

public static com.github.xzwj87.todolist.schedule.observer.ScheduleDataObserver getInstance() {
    if ((com.github.xzwj87.todolist.schedule.observer.ScheduleDataObserver.mInstance) == null) {
        com.github.xzwj87.todolist.schedule.observer.ScheduleDataObserver.mInstance = new com.github.xzwj87.todolist.schedule.observer.ScheduleDataObserver(new android.os.Handler());
    }
    return com.github.xzwj87.todolist.schedule.observer.ScheduleDataObserver.mInstance;
}

private void clearPreviousView(android.widget.TextView previousView) {
    if (previousView != null) {
        previousView.setText("");
        android.util.Log.d("rollCredits", ("Previous view being cleared down: " + (previousView.toString())));
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Context activity = null;
    android.content.Intent intent = new android.content.Intent(activity, com.slavyanin.example.loginpasswordform.LoginPasswordActivity.class);
    startActivity(intent);
}

@java.lang.Override
public android.support.design.widget.TextInputLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext context) {
    android.support.design.widget.TextInputLayout textInputLayout = new android.support.design.widget.TextInputLayout(context);
    textInputLayout.setHintAnimationEnabled(true);
    return textInputLayout;
}

private void log(@android.support.annotation.NonNull
java.lang.String message) {
    android.util.Log.d(com.github.florent37.materialviewpager.views.MaskableFrameLayout.TAG, message);
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.test_layout);
    initView();
    initListener();
    for (int i = 0; i < 1; i++) {
        testPaoMaDeng();
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.sensorberg.SensorbergApplicationBootstrapper.getComponent().inject(this);
    Logger.log.logServiceState("onCreate");
    net.danlew.android.joda.JodaTimeAndroid.init(this);
}

public void init() {
    android.os.HandlerThread handlerThread = new android.os.HandlerThread("zz_handler_thread");
    android.os.Looper looper = handlerThread.getLooper();
    mHandler = new android.os.Handler(looper);
}

private void deleteSensorFromDB(com.example.ludvig.sens.SensorDBItem sensor, android.database.sqlite.SQLiteDatabase db) {
    nl.qbusict.cupboard.CupboardFactory.cupboard().withDatabase(db).delete(sensor);
}

void onClick(int rowIndex, int numberGuessedCorrectly, com.example.android.mastermind.LineOfCirclesViewHolder viewHolder);

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(getContext().getApplicationContext(), com.owncloud.android.utils.ErrorMessageAdapter.getErrorCauseMessage(result, null, getContext().getResources()), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onLoadItem(int position, com.github.yuqilin.qmediaplayerapp.media.MediaWrapper video) {
    mHandler.sendMessage(android.os.Message.obtain(mHandler, com.github.yuqilin.qmediaplayerapp.gui.video.VideoFragment.SCAN_ADD_ITEM, position, 0, video));
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if ((intent.getAction().equals(WifiManager.WIFI_STATE_CHANGED_ACTION)) && (mWifiHelper.isConnectedToWifi())) {
        stop(false);
    }
}

private void requestDeparture() {
    android.util.Log.d(getClass().toString(), "requestDeparture()");
    mDepList.clear();
    journeyPlanner.getDepartureBoard(this, java.util.Calendar.getInstance(), stopLocation);
    departureSwipeRefreshLayout.setRefreshing(true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    editText.clearFocus();
    onChipInteraction(this, translateIdToConst(v));
}

@java.lang.Override
public void onClick(android.view.View view) {
    adapter.triggerRowChecked(view);
    restartApp();
}

private int getContactID(android.database.Cursor contactLookupCursor) {
    int phoneContactID = -1;
    if (contactLookupCursor.moveToFirst()) {
        phoneContactID = contactLookupCursor.getInt(contactLookupCursor.getColumnIndexOrThrow(ContactsContract.PhoneLookup._ID));
    }
    return phoneContactID;
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    if ((listView) != null) {
        listView.setAdapter(mCardArrayAdapter);
    }
}

@java.lang.Override
public boolean onCreate() {
    com.example.android.fitnessapp.database.ExerciseOpenHelper mDBhelper;
    return true;
}

@java.lang.Override
public void onAdError(com.google.ads.interactivemedia.v3.api.AdErrorEvent adErrorEvent) {
    android.util.Log.e(TAG, ("Ad Error: " + (adErrorEvent.getError().getMessage())));
    mVideoPlayer.setPlayWhenReady(true);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    mProgressBar = ((com.antonzorin.dottedprogressbar.DottedProgressBar) (findViewById(R.id.progress)));
    mProgressBar.setClockWiseDots(false);
    mProgressBar.setBaseColor(R.color.colorGreen);
}

@java.lang.Override
public boolean onAnimationEnd(android.view.View view) {
    if ((mSearchViewListener) != null) {
        mSearchViewListener.onSearchViewClosed();
    }
    setVisibility(com.radiationpressure.mickhardins.mtgrecall.searchview.GONE);
    return false;
}

@java.lang.Override
public void delete() {
    executeTransaction(new com.raizlabs.android.dbflow.structure.database.transaction.ProcessModelTransaction.Builder<>(new com.raizlabs.android.dbflow.structure.database.transaction.ProcessModelTransaction.ProcessModel<com.raizlabs.android.dbflow.structure.TModel>() {
        @java.lang.Override
        public void processModel(com.raizlabs.android.dbflow.structure.TModel model) {
            model.delete();
        }
    }).build());
}

public void run() {
    android.app.Fragment currentFragment = fm.findFragmentByTag(MainActivity.MAP_FRAGMENT_TAG);
    if (currentFragment instanceof lk.steps.breakdownassist.Fragments.GmapFragment) {
        lk.steps.breakdownassist.Fragments.GmapFragment GmapFrag = ((lk.steps.breakdownassist.Fragments.GmapFragment) (currentFragment));
        GmapFrag.FocusBreakdown(BreakdonwList.get(listPossition));
    }
}

public static void destroyInstance() {
    com.android_project.grocery.controller.database.models.UserGroceryListsModel.instance.destroy();
    com.android_project.grocery.controller.database.models.UserGroceryListsModel.instance = null;
}

@java.lang.Override
public void onCreate(final android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (getArguments().containsKey(nl.adaptivity.process.ui.model.ProcessModelDetailFragment.ARG_ITEM_ID)) {
        getLoaderManager().initLoader(nl.adaptivity.process.ui.model.ProcessModelDetailFragment.LOADER_ITEM, getArguments(), this);
    }
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.back_arrow_image :
            finish();
            break;
        case R.id.focused_action_fab :
            addEventView(_coordinatesModel);
            break;
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    final java.lang.String action = intent.getAction();
    if ((action.equals(Intent.ACTION_TIME_CHANGED)) || (action.equals(Intent.ACTION_TIMEZONE_CHANGED))) {
        updateDesktopClock();
    }
}

public abstract void bind(android.content.Context context, M item);

@java.lang.Override
public void onClick(android.view.View v) {
    itemClickListener.onItemClick(null, itemView, getLayoutPosition(), 0);
}

public boolean checkPermission() {
    if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, com.duyuan.photoview.PhotoActivity.PERMISSIONS[0])) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) {
        android.support.v4.app.ActivityCompat.requestPermissions(this, com.duyuan.photoview.PhotoActivity.PERMISSIONS, com.duyuan.photoview.PhotoActivity.PERMISSION_CODE);
    }
    return true;
}

protected android.content.Intent addDestinationIntent(java.lang.String name, java.lang.String reason, com.indragie.cmput301as1.Destination destination) {
    android.content.Intent intent = new android.content.Intent();
    intent.putExtra(com.indragie.cmput301as1.DestinationAddActivity.EXTRA_DESTINATION, destination);
    return intent;
}

public void setEmptyView(boolean isHeadAndEmpty, android.view.View emptyView) {
    mHeadAndEmptyEnable = isHeadAndEmpty;
    mEmptyView = emptyView;
    mEmptyEnable = true;
}

protected void setView(android.widget.ImageView imageView, int image_loading, int image_error) {
    mImageView = imageView;
    if ((mLoadingImage) != 0)
        mLoadingImage = image_loading;
    
    if ((mErrorImage) != 0)
        mErrorImage = image_error;
    
}

@java.lang.Override
public void onStartFailure(int errorCode) {
    if (errorCode != (ADVERTISE_FAILED_ALREADY_STARTED)) {
        java.lang.String msg = "Service failed to start: " + errorCode;
        mHandler.sendMessage(android.os.Message.obtain(null, 0, msg));
    }else {
        restartAdvertising();
    }
}

public void exoPlayerPlay() {
    if ((isPlaying()) == false) {
        play();
    }else {
        android.widget.Toast.makeText(mContext, "You are already play", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
protected int sizeOf(java.lang.String key, android.graphics.Bitmap bitmap) {
    int count = bitmap.getByteCount();
    return count;
}

@java.lang.Override
protected void onDestroy() {
    android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
    prefs.unregisterOnSharedPreferenceChangeListener(this);
    super.onDestroy();
}

private com.kontakt.sdk.android.ble.configuration.ScanPeriod getScanPeriod(java.lang.String mode, com.facebook.react.bridge.Promise promise) throws java.lang.Exception {
    switch (mode) {
        case "RANGING" :
            return com.kontakt.sdk.android.ble.configuration.ScanPeriod.RANGING;
        case "MONITORING" :
            return com.kontakt.sdk.android.ble.configuration.ScanPeriod.MONITORING;
        default :
            throw new java.lang.Exception("scanPeriod default value has to be either RANGING or MONITORING");
    }
}

private void saveNewBestTime(long newBestTime) {
    android.content.SharedPreferences sharedPref = getSharedPreferences("Runner", com.runrmby.runner.MODE_PRIVATE);
    android.content.SharedPreferences.Editor prefEditor = sharedPref.edit();
    prefEditor.putLong("bestTime", newBestTime);
    prefEditor.commit();
}

@java.lang.Override
public void onLeScan(final android.bluetooth.BluetoothDevice device, final int rssi, byte[] scanRecord) {
    activity.runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            addDevice(device, rssi);
        }
    });
}

@java.lang.Override
public void onCompleted(java.lang.Exception e, android.widget.ImageView result) {
    loaded = true;
    progressbar.setVisibility(View.GONE);
    attacher = new uk.co.senab.photoview.PhotoViewAttacher(imageView);
    attacher.setMaximumScale(25);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    initContainer(savedInstanceState);
}

@java.lang.Override
public void onEnabled(android.content.Context context) {
    android.widget.Toast.makeText(context, "onEnabled()", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    onItemClickListener.onItemClick(getAdapterPosition());
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.util.Log.i(TAG, "MainActivity.onCreateOptionsMenu()");
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu_main, menu);
    mMenu = menu;
    setStartMenuItem();
    return true;
}

private android.app.Dialog selectPgnFileDialog() {
    return selectFileDialog(org.mdc.chess.MDChess.pgnDir, R.string.select_pgn_file, R.string.no_pgn_files, "currentPGNFile", new org.mdc.chess.MDChess.Loader() {
        @java.lang.Override
        public void load(java.lang.String pathName) {
            loadPGNFromFile(pathName);
        }
    });
}

@java.lang.Override
public boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout coordinatorLayout, android.support.design.widget.AppBarLayout child, android.view.View directTargetChild, android.view.View target, int nestedScrollAxes) {
    mLastDyConsumed = 0;
    if ((mAnimator) != null)
        mAnimator.cancel();
    
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(getApplication(), heartware.com.heartware_master.ViewWorkout.class);
    intent.putExtra(DBAdapter.PROFILE_ID, mCurrentProfileId);
    startActivityForResult(intent, heartware.com.heartware_master.RESULT_OK);
    android.util.Log.d(heartware.com.heartware_master.WorkoutsActivity.TAG, "Creating a New Workout.");
}

private void showHint(java.lang.String message) {
    if (message != null) {
        android.widget.Toast.makeText(this, message, Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    butterknife.ButterKnife.bind(this, view);
}

public boolean isValiable() {
    if ((((id) < (org.droidplanner.android.ruan.RcConfigParam.mRcCount)) && ((id) > 0)) && (valiable)) {
        return true;
    }else {
        return false;
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.RadioGroup radioGroup, int i) {
    typeID = (radioGroup.indexOfChild(findViewById(i))) + 1;
}

public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL("DROP TABLE IF EXITS MONAN");
    db.execSQL("DROP TABLE IF EXITS QUANAN");
    db.execSQL("DROP TABLE IF EXISTS USER");
    onCreate(db);
}

@java.lang.Override
public void onProviderDisabled(java.lang.String provider) {
    android.widget.Toast.makeText(getApplicationContext(), "Please Enable Location", Toast.LENGTH_LONG).show();
    actionBarMenu.findItem(R.id.action_park).setVisible(false);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if (intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED)) {
        context.startService(new android.content.Intent(context, com.ganet.catfish.ganet_service.GaNetService.class));
    }
    throw new java.lang.UnsupportedOperationException("Not yet implemented");
}

@java.lang.Override
public void onDrawerOpened(android.view.View drawerView) {
    super.onDrawerOpened(drawerView);
    getActivity().supportInvalidateOptionsMenu();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    this.requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_sign_in);
    setUpButtons();
    setUpGoogleStuff();
}

@java.lang.Override
public void onClick(android.view.View view) {
    new com.example.android.popularmoviesstagetwo.tasks.ManageFavouritesAsyncTask(getActivity(), favouriteButton, movieDetails, false).execute();
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    org.brandroid.utils.Logger.LogDebug(("->onDestroy - " + (getClassName())));
}

public static boolean canUseToken(android.content.Context context, int instance) {
    return (github.daneren2005.dsub.domain.ServerInfo.isStockSubsonic(context, instance)) && (github.daneren2005.dsub.domain.ServerInfo.checkServerVersion(context, "1.13", instance));
}

@java.lang.Override
public int getColour(java.lang.String markerName) throws android.os.RemoteException {
    return markers.get(markerName).getColour();
}

@java.lang.Override
public novoda.lib.sqliteprovider.util.Constraint parseRow(android.database.Cursor cursor) {
    int isUnique = cursor.getInt(2);
    if (isUnique == 1) {
        java.lang.String indexName = cursor.getString(1);
        return getConstraintFromIndex(indexName);
    }
}

public void onDashboarButtonClick(android.view.View v);

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.util.Log.i("tagD", (("deleting tag with " + (tag.getTasks().size())) + " days"));
    com.example.portable.firebasetests.network.FirebaseUtils.getInstance().deleteTag(tag);
}

public com.brouding.simpledialog.SimpleDialog.Builder setGuideImage(@android.support.annotation.DrawableRes
int imageId) {
    this.guideImageId = imageId;
    return this;
}

public static android.graphics.Bitmap decodeBase64(java.lang.String input) {
    input = input.replace("~", "/");
    byte[] decodedBytes = android.util.Base64.decode(input, Base64.NO_WRAP);
    android.graphics.BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker view, int year, int month, int dayOfMonth) {
    ((com.example.user.worktime.TimeTablePagerFragment) (getParentFragment())).changeSelectedDate(new org.joda.time.LocalDate(year, month, dayOfMonth));
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    sendBroadcast(new android.content.Intent("com.udacity.gradle.builditbigger.showprogress"));
}

@java.lang.Override
public void onResult(com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult) {
    ru.avb.iremember.G.Log("On result");
    ru.avb.iremember.Google.handleSignInResult(this, googleSignInResult);
    ru.avb.iremember.DB.setDbName();
}

@java.lang.Override
public void run() {
    com.nordman.big.life.GridView theGrid = mGridView.get();
    android.util.Log.d("LOG", "...handle message...");
    if ((theGrid.currentMode) == (com.nordman.big.life.GridView.RUNNING)) {
        theGrid.update();
        theGrid.invalidate();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(this, com.cg.historicalfiguresquiz.CategoriesActivity.class));
    this.finish();
}

@java.lang.Override
public void onConnectionFailed(com.google.android.gms.common.ConnectionResult connectionResult) {
    android.util.Log.d(com.andela.motustracker.model.ActivityRecognitionScan.TAG, "onConnectionFailed");
}

@java.lang.Override
public void onNotificationPosted(android.service.notification.StatusBarNotification sbn) {
    super.onNotificationPosted(sbn);
    new a2dp.Vol.NotificationCatcher.Readit().execute(sbn);
}

@java.lang.Override
public void run() {
    if ((client) == null) {
        android.util.Log.v(TDDatabase.TAG, "cannot notify client, client is null");
    }else {
        android.util.Log.v(TDDatabase.TAG, "about to notify client");
        copy.changeTrackerReceivedChange(change);
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent indent = new android.content.Intent(this, rray.me.androidresume.EducationEditActivity.class);
    startActivityForResult(indent, rray.me.androidresume.MainActivity.REQ_CODE_EDUCATION_EDIT);
}

@java.lang.Override
public void onResponse(retrofit2.Call<okhttp3.ResponseBody> call, retrofit2.Response<okhttp3.ResponseBody> response) {
    android.util.Log.d("RESPONSE", "Feed Remove");
    mFeedList.remove(position);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked)
        cb_veg.setChecked(false);
    else
        if (!(cb_nveg.isChecked()))
            cb_nveg.setChecked(true);
        
    
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    super.onDraw(canvas);
    this.setWidth(width);
    this.setHeight(height);
}

@java.lang.Override
public com.claimant.dev.wheresmybus.adapter.PlatformGridRecyclerViewAdapter.ItemViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemView = null;
    itemView = android.view.LayoutInflater.from(mContext).inflate(R.layout.item_platform_grid, parent, false);
    return new com.claimant.dev.wheresmybus.adapter.PlatformGridRecyclerViewAdapter.ItemViewHolder(itemView);
}

public void addCheckbox(@android.support.annotation.StringRes
int titleId, @android.support.annotation.StringRes
int commentId, java.lang.String property, android.view.View.OnClickListener listener) {
    addModel(com.kaliturin.blacklist.adapters.SettingsArrayAdapter.Model.CHECKBOX, titleId, commentId, property, listener);
}

@java.lang.Override
protected final void onPostExecute(java.lang.Boolean success) {
    super.onPostExecute(success);
    mProgress.setVisibility(View.INVISIBLE);
    if (success) {
        android.util.Log.d("postexe", "edit schedule complete");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    selectedSkill = EnumFile.SkillsEnum.PUNCH;
    showTargets(checkSkillTime());
    android.util.Log.d(askim.eratactics.activities.TacticsGame.TAG, "Punch clicked");
}

public void setDrawable(android.graphics.drawable.Drawable drawable) {
    if (drawable == null) {
        mIsFailed = true;
        return ;
    }
    mDrawable = drawable;
    setBounds(mDrawable.getBounds());
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.widget.ArrayAdapter<T> adapter = new android.widget.ArrayAdapter(uk.co.yellowsquid.flashcards.fragments.SimpleListFragment.getActivity(), R.layout.list_item, items);
    setListAdapter(adapter);
    uk.co.yellowsquid.flashcards.fragments.SimpleListFragment.setRetainInstance(true);
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker datePicker, int year, int month, int day) {
    etBeginDate.setText(com.codepath.nytquest.utils.DateHelper.getFormatteDate(year, (month + 1), day));
}

public android.database.Cursor fetchAllFromReminderInfo() {
    return mDb.query(Remindersinfo.TABLE_NAME, new java.lang.String[]{ in.mobme.tvticker.database.Models.Remindersinfo.ROW_ID , in.mobme.tvticker.database.Models.Remindersinfo.MEDIA_ID , in.mobme.tvticker.database.Models.Remindersinfo.IS_FAVORITE_FLAG , in.mobme.tvticker.database.Models.Remindersinfo.REMINDER_ENABLED }, null, null, null, null, null);
}

public void setItem(@android.support.annotation.NonNull
com.layer.sdk.messaging.Conversation conversation, @android.support.annotation.NonNull
com.layer.sdk.messaging.Identity authenticatedUser) {
    setItem(conversation);
    mParticipantsMinusAuthenticatedUser.clear();
    mParticipantsMinusAuthenticatedUser.addAll(conversation.getParticipants());
    mParticipantsMinusAuthenticatedUser.remove(authenticatedUser);
    mAuthenticatedUser = authenticatedUser;
    notifyChange();
}

@java.lang.Override
public void onClick(android.view.View v) {
    HideTaskInformer();
    map.setInfoWindowAdapter(handle);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    mListener.onModelChangedCallback(mCrime.getId().toString());
    returnResult();
}

@java.lang.Override
public void onScrolled(android.support.v7.widget.RecyclerView recyclerView, int dx, int dy) {
    super.onScrolled(recyclerView, dx, dy);
    mRecyclerViewScrollY += dy;
    onRecyclerViewScroll(recyclerView, mRecyclerViewScrollY, 0);
}

@java.lang.Override
public void onError(java.lang.String message) {
    android.util.Log.e(net.nitroshare.android.transfer.TransferService.TAG, java.lang.String.format("transfer %d failed: %s", transferId, message));
    showErrorNotification(transferId, device, message);
}

@android.support.annotation.Nullable
public static java.io.InputStream getHttpInputStream(java.lang.String stringUrl, java.io.PrintWriter logWriter) throws java.io.IOException {
    return com.gelakinetic.mtgfam.FamiliarActivity.getHttpInputStream(stringUrl, logWriter, 0);
}

public static void loadImageFromRemoteServerIntoImageView(android.content.Context context, java.lang.String imageURL, android.widget.ImageView imageView) {
    com.squareup.picasso.Picasso.with(context).load(imageURL).fit().into(imageView);
}

@java.lang.Override
public void onClick(android.view.View v) {
    getCamera();
    if (FlashOn) {
        TurnOffFlash();
    }else {
        TurnOnFlash();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (datacare.ekvoice.MainActivity.isInternetConnected(getApplicationContext())) {
        onlineSpeech.promptOnlineSpeechInput();
    }else {
        android.widget.Toast.makeText(getApplicationContext(), "No Internet", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onMenuItemReselect(@android.support.annotation.IdRes
final int itemId, final int position) {
}

public static com.example.johnta.homeworkappv2.firebase.FirebaseWrapper getInstance(android.content.Context activity) {
    if ((com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance) == null)
        com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance = new com.example.johnta.homeworkappv2.firebase.FirebaseWrapper(context);
    
    com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance.setContext(context);
    return com.example.johnta.homeworkappv2.firebase.FirebaseWrapper.instance;
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    onTagTextEntryListener.onTextEntry(this, s.toString());
}

private void showDialog() {
    java.lang.String psd = site.yanhui.mobilesafe.utils.SpUtils.getString(this, ConstantValue.MOBILE_SAFE_PSD, "");
    if (android.text.TextUtils.isEmpty(psd)) {
        showSetPsdDialog();
    }else {
        showConfirmPsdDialog();
    }
}

public void removeMargins() {
    android.widget.LinearLayout.LayoutParams lp = new android.widget.LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);
    lp.setMargins(0, 0, 0, 0);
    cardImage.setLayoutParams(lp);
}

@org.jetbrains.annotations.NotNull
private com.taobao.android.builder.tools.proguard.domain.ClazzInfo getClazzInfo(java.lang.String clazzName) {
    com.taobao.android.builder.tools.proguard.domain.ClazzInfo clazzInfo = clazzInfoMap.get(clazzName);
    if (null == clazzInfo) {
        clazzInfo = new com.taobao.android.builder.tools.proguard.domain.ClazzInfo(clazzName);
        clazzInfoMap.put(clazzName, clazzInfo);
    }
    return clazzInfo;
}

public org.wordpress.android.fluxc.model.SiteModel getSelectedSite() {
    if ((getActivity()) instanceof org.wordpress.android.ui.main.WPMainActivity) {
        org.wordpress.android.ui.main.WPMainActivity mainActivity = ((org.wordpress.android.ui.main.WPMainActivity) (getActivity()));
        mainActivity.getSelectedSite();
    }
    return null;
}

@java.lang.Override
public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) {
    mBirthday.setText(((((dayOfMonth + "-") + monthOfYear) + "-") + year));
}

public static android.content.Intent newIntent(android.content.Context packageContext, java.lang.String question, java.lang.String answer) {
    android.content.Intent intent = new android.content.Intent(packageContext, com.example.eddiethuo.simplesignin.AnswerActivity.class);
    intent.putExtra(com.example.eddiethuo.simplesignin.AnswerActivity.EXTRA_ANSWER, answer);
    intent.putExtra(com.example.eddiethuo.simplesignin.AnswerActivity.EXTRA_QUESTION, question);
    return intent;
}

private void releaseCamera() {
    if ((mCamera) != null) {
        mCamera.stopPreview();
        mCamera.release();
        mCamera = null;
        stopBackgroundThread();
        android.util.Log.d(TAG, "releaseCamera -- done");
    }
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse) {
    android.util.Log.d("TwitterClient", errorResponse.toString());
    onReceiveResponce();
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    mSurfaceWidth = width;
    mSurfaceHeight = height;
}

public static android.content.Intent newIntent(android.content.Context context, org.hl7.fhir.dstu3.model.Contract contract, ch.usz.c3pro.c3_pro_android_framework.pyromaniac.logic.consent.ConsentTaskOptions options) {
    org.researchstack.backbone.task.Task task = ch.usz.c3pro.c3_pro_android_framework.pyromaniac.Pyro.getContractAsTask(context, contract, new ch.usz.c3pro.c3_pro_android_framework.pyromaniac.logic.consent.ConsentTaskOptions());
    return ch.usz.c3pro.c3_pro_android_framework.consent.ViewConsentTaskActivity.newIntent(context, task);
}

@java.lang.Override
public com.benjaminearley.mysubs.BottomSheetAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.LayoutInflater inflater = android.view.LayoutInflater.from(parent.getContext());
    android.view.View view = inflater.inflate(R.layout.bottom_sheet_fragment_dialog_item, null);
    return new com.benjaminearley.mysubs.BottomSheetAdapter.ViewHolder(view);
}

public it.jaschke.alexandria.utils.SupportMethod getSupportMethodInstance(android.content.Context context) {
    if ((it.jaschke.alexandria.utils.SupportMethod.supportMethodInstance) == null) {
        it.jaschke.alexandria.utils.SupportMethod.supportMethodInstance = new it.jaschke.alexandria.utils.SupportMethod(context);
    }
    return it.jaschke.alexandria.utils.SupportMethod.supportMethodInstance;
}

public static boolean isNetworkConnected() {
    android.net.ConnectivityManager cm = ((android.net.ConnectivityManager) (getSystemService(Context.CONNECTIVITY_SERVICE)));
    return (cm.getActiveNetworkInfo()) != null;
}

public static void showToast(android.content.Context context, java.lang.String text, int duration) {
    android.widget.Toast.makeText(context, text, duration).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (showBusStop.isSelected()) {
        showBusStop.setSelected(false);
        setAllNormalPinsVisibility(popBusStationPins, false);
    }else {
        showBusStop.setSelected(true);
        setAllNormalPinsVisibility(popBusStationPins, false);
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.support.v4.view.MenuItemCompat.expandActionView(searchMenuItem);
    appbar.setExpanded(true);
}

private void log(com.noveogroup.android.log.Logger.Level level, java.lang.String format, java.lang.Object... arguments) {
    logger.print(level, org.slf4j.helpers.MessageFormatter.arrayFormat(format, arguments).getMessage(), null);
}

void silenceRingers() {
    for (com.android.server.telecom.Call call : mRingingCalls) {
        call.silence();
    }
    mRingingCalls.clear();
    mRinger.stopRinging();
    mRinger.stopCallWaiting();
    mCallAudioModeStateMachine.sendMessageWithArgs(CallAudioModeStateMachine.NO_MORE_RINGING_CALLS, makeArgsForModeStateMachine());
}

@java.lang.Override
public void startActivity(android.content.Intent intent) {
    super.startActivity(intent);
    if ((drawer) != null)
        drawer.closeDrawer();
    
    overridePendingTransition(R.anim.pull_in_right, R.anim.push_out_left);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    this.requestWindowFeature(Window.FEATURE_NO_TITLE);
    ivan.slavka.utils.LoggingUtils.addIgnoreClass(ivan.slavka.beans.WonderBean.class);
    this.setContentView(new ivan.slavka.StartGameView(this, this));
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    android.util.Log.d(yandex.muratov.translator.ui.bookmarks.BasePageFragment.TAG, java.lang.String.format("in bar: adapter=%d, list=%d", adapter.hashCode(), listOfElements.hashCode()));
    requestList(s);
}

private android.graphics.drawable.Drawable getUserPic() {
    try {
        return menuService.findUserByEmail(getIntent().getStringExtra(userId)).getImageRounded(getResources());
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
    return null;
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    android.location.Location mLastLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
    onLocationConnected(new com.google.android.gms.maps.model.LatLng(mLastLocation.getLatitude(), mLastLocation.getLongitude()));
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    java.lang.String query = "";
    switch (newVersion) {
        case 3 :
            query = "ALTER TABLE Students ADD COLUMN photo_path TEXT";
            db.execSQL(query);
    }
}

@java.lang.Override
public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture texture, int width, int height) {
    configureTransform(width, height);
}

@java.lang.Override
public int bindService(android.os.IBinder caller, android.os.IBinder token, android.content.Intent service, java.lang.String resolvedType, android.app.IServiceConnection connection, int flags) {
    return bindServiceAsUser(caller, token, service, resolvedType, connection, flags, com.lody.virtual.os.VUserHandle.getCallingUserId());
}

public java.lang.String getMacAddress() {
    return com.oinux.android.ConfigLoader.getInstance(true).get(Config.MAC_ADDRESS, mMacAddress);
}

public static void setResultBitmap(android.graphics.Bitmap bitmap) {
    com.framgia.photoalbum.util.CommonUtils.recycleBitmap(com.framgia.photoalbum.ui.activity.EditActivity.sResultBitmap);
    com.framgia.photoalbum.ui.activity.EditActivity.sResultBitmap = bitmap;
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    mSyncSubscription.unsubscribe();
    android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(mRefreshReceiver);
}

@java.lang.Override
public void onPause() {
    super.onPause();
    if ((com.google.android.exoplayer2.util.Util.SDK_INT) <= 23) {
        videosAdapter.releasePlayers();
    }
}

public int collide(ch.aplu.android.Actor actor1, ch.aplu.android.Actor actor2) {
    ch.aplu.android.L.v(((("collision between " + actor1) + " and ") + actor2));
    ((ph.sm.sliceIt.Fruit) (actor1)).splatter();
    return 1000;
}

public void resumeGame(android.view.ViewGroup boardLayout) {
    this.mBoardLayout = boardLayout;
    mBoard = new com.tevinjeffrey.tictactoe.game.board.impl.ThreeBoard(mBoardCallback, boardLayout);
    evaluateGameState();
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    if (org.odk.collect.android.database.FormRelationsDb.LOCAL_LOG) {
        android.util.Log.d(org.odk.collect.android.database.FormRelationsDb.TAG, "onCreate. Created relations table.");
    }
    db.execSQL(FormRelations.CREATE_TABLE);
}

public void onDestroy() {
    super.onDestroy();
    if ((isFinishing()) && ((this.patternDetector) != null)) {
        android.util.Log.d("destroy", "destroy");
    }
}

private static void handleViewFocused(android.view.accessibility.AccessibilityEvent event, android.view.accessibility.AccessibilityNodeInfo view) {
    if (view != null) {
        if (!(view.isFocused())) {
            org.nbp.b2g.ui.ScreenMonitor.setCurrentNode(event);
        }
    }
}

@android.support.annotation.Nullable
public final M getSelectedItem() {
    if ((selectedItems.size()) > 0) {
        return dataList.get(0);
    }
    return null;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.util.Log.d(com.jtquang.raven.MapViewActivity.TAG, "DialogInterface.OnClickListener:onClick");
    if (((mSelectedRadius) != 0) && ((mGeoQuery) != null)) {
        mGeoQuery.setRadius(mSelectedRadius);
    }
}

@android.support.annotation.CallSuper
public void onBindViewHolder(de.aw.awlib.recyclerview.AWLibViewHolder holder, int position) {
    onPreBindViewHolder(holder, position);
}

@java.lang.Override
public void onClick(android.view.View view) {
    com.example.eltonxue.rehearseit.RehearseIt.stopRecording();
    com.example.eltonxue.rehearseit.RehearseIt.startPlaying();
    RehearseIt.recording = !(RehearseIt.recording);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    stopPlaying();
    fine = false;
    android.widget.Toast.makeText(this, "Inform Emergency Services", Toast.LENGTH_SHORT).show();
}

void userFavorites(com.dreamdigitizers.androidbaselibrary.utilities.UtilsDialog.IRetryAction pRetryAction, int pId, int pLinkedPartitioning, int pLimit, java.lang.String pOffset);

public void setClickHighlightingColor(@android.support.annotation.IntRange(from = 0, to = 100)
int alpha, @android.support.annotation.ColorInt
int highlightingColor) {
    if ((roundedDrawableParams) != null) {
        roundedDrawableParams.setClickHighlightingColor(alpha, highlightingColor);
    }
    updateRoundedDrawableParameters(drawable);
    invalidate();
}

@java.lang.Override
public void onClick(android.view.View v) {
    page0.setVisibility(View.INVISIBLE);
    page2.setVisibility(View.INVISIBLE);
    powerupTable.setVisibility(View.INVISIBLE);
    page1.setVisibility(View.VISIBLE);
}

@java.lang.Override
public void onCancel() {
    if ((pendingAction) != (map.minimap.LoginActivity.PendingAction.NONE)) {
        showAlert();
        pendingAction = map.minimap.LoginActivity.PendingAction.NONE;
    }
    android.util.Log.v(LOG_TAG, "Cancelled");
    updateUI();
}

public void close(boolean closeSocket) {
    if (!(mIsClosed)) {
        mBluetoothSocketIoThread.close(closeSocket);
        android.util.Log.d(org.thaliproject.nativetest.app.model.Connection.TAG, "close: Closed");
        mIsClosed = true;
    }
}

@java.lang.Override
public void activateTask(@android.support.annotation.NonNull
com.example.android.architecture.blueprints.todoapp.data.Task activeTask) {
    com.google.common.base.Preconditions.checkNotNull(activeTask, "activeTask cannot be null!");
    mTasksRepository.activateTask(activeTask);
    mTasksView.showTaskMarkedActive();
    loadTasks(false, false);
}

public android.content.Intent getIntent() {
    if ((intentOpenAntivirus) == null) {
        return isPlayStoreAvailable() ? intentGetAntivirus : null;
    }
}

@java.lang.Override
public void run() {
    try {
        c = new frontend.Connection();
    } catch (java.io.IOException e) {
        android.widget.Toast.makeText(this, "Error occurred while loading page", Toast.LENGTH_SHORT).show();
        noConnection = true;
        finish();
    }
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.net.ConnectivityManager connMgr = ((android.net.ConnectivityManager) (getActivity().getSystemService(Context.CONNECTIVITY_SERVICE)));
    android.net.NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    UiChangeListener();
    set_pref();
    refresh();
    drop_and_refresh();
}

@java.lang.Override
public void onLoadMore() {
    android.util.Log.i(ru.kuchanov.tproger.fragment.FragmentCategory.LOG, "OnLoadMore called!");
    (currentPageToLoad)++;
    performRequest(currentPageToLoad, false);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    if (position == 0) {
        return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment.newInstance(new android.os.Bundle());
    }else {
        return samurai.geeft.android.geeft.fragments.TabGeeftFragment.newInstance(false);
    }
}

@java.lang.Override
public void setContentView(@android.support.annotation.LayoutRes
int layoutResID) {
    super.setContentView(layoutResID);
    butterknife.ButterKnife.bind(this);
    setupToolbar();
    setupNavDrawer();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.cancel();
    clearCheckedScenesAndEnableButtons();
}

public void startMapFragment() {
    com.google.android.gms.maps.MapFragment mapFragment = new com.google.android.gms.maps.MapFragment();
    getFragmentManager().beginTransaction().add(R.id.fragment_container, mapFragment).commit();
    mapFragment.getMapAsync(this);
}

public static boolean isNetworkUp(android.content.Context context) {
    return dev.ukanth.ufirewall.InterfaceTracker.getInterfaceDetails(context, true).netEnabled;
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL("DROP TABLE Pokemon");
    onCreate(db);
    android.widget.Toast.makeText(context, "onUpgrade called", Toast.LENGTH_SHORT).show();
}

public void onClick(android.view.View arg0) {
    if (kioskMode) {
        startIntent(org.fourdnest.androidclient.ui.NewEggActivity.CAMERA_VIDEO_REQUEST);
    }
    showDialog(org.fourdnest.androidclient.ui.NewEggActivity.DIALOG_ASK_VIDEO);
}

@java.lang.Override
public void finish() {
    android.content.Intent sendIntent = new android.content.Intent();
    sendIntent.putExtra("event", event);
    setResult(fr.insapp.insapp.activities.RESULT_OK, sendIntent);
    super.finish();
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parent) {
    android.widget.Toast.makeText(this, "Nothing Selected", Toast.LENGTH_SHORT).show();
}

public static android.widget.TextView setTextWithFormat(android.widget.TextView textView, java.lang.Object value) {
    return com.dhy.xintent.XCommon.setTextWithFormat(textView, value, false);
}

@java.lang.Override
protected void onClick(android.view.View v, int id) {
    if ((R.id.item_root) == id) {
        com.syberos.yixuntong.client.AttachmentDetailActivity.showDetailList(summary.consid, attachmentInfos, true);
    }
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    me.dacol.marco.mancala.logging.Logger.v(me.dacol.marco.mancala.gameUI.board.BoardFragment.LOG_TAG, "CreateView");
    mBoardTextViewRepresentation = null;
    mStartingPlayerName = null;
    android.view.View rootView = inflater.inflate(R.layout.fragment_board, container, false);
    return rootView;
}

private void setupSearchView(android.view.MenuItem searchItem) {
    android.support.v7.widget.SearchView searchView = ((android.support.v7.widget.SearchView) (android.support.v4.view.MenuItemCompat.getActionView(searchItem)));
    searchView.setOnQueryTextListener(this);
    searchView.setSubmitButtonEnabled(false);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    getFragmentManager().beginTransaction().replace(R.id.container, new ru.wilix.device.geekbracelet.MainFragment()).addToBackStack("main").commit();
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    setLocationEnabled(locationEnabled);
    setLocation(null);
    android.util.Log.i(io.github.fvasco.pinpoi.MainActivity.class.getSimpleName(), ("locationACG.status " + (locationEnabled)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    setAnimation(holder.flipRl, holder.imageView, holder.dataLayout);
}

private void startProcessDialog() {
    pDialog.setTitle("Loading map");
    pDialog.setMessage("Please wait...");
    try {
        pDialog.show();
    } catch (android.view.WindowManager e) {
        com.gmail.mkounal.places.Enviroment.Logging.log(Logging.enumLoggingLevel.e, TAG, "activity is not running");
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    if (valuesChanged) {
        if (isNewNote)
            handleAction(com.codepath.preassignment.todoapp.fragments.dialogs.ToDoListFullScreenDialogFragment.DialogAction.ADD);
        else
            handleAction(com.codepath.preassignment.todoapp.fragments.dialogs.ToDoListFullScreenDialogFragment.DialogAction.EDIT);
        
    }
    dismiss();
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    int w = fixedWidth;
    int h = fixedHeight;
    android.os.Bundle bundle = msg.getData();
    pictureData = bundle.getByteArray("pictureData");
    sendData();
}

@java.lang.Override
public void onSuccess(com.android.volley.NetworkResponse response) {
    mUi.showProgressBarLoading(true);
    mUi.onUnfollowSuccess();
}

@java.lang.Override
public void disconnect(android.bluetooth.BluetoothDevice device) {
    mBluetoothGatt.disconnect();
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse) {
    android.util.Log.e(TAG, errorResponse.toString());
    listener.sendReportPoliceError();
}

public void periodicSync(int minutes) {
    context.getContentResolver();
    android.content.ContentResolver.addPeriodicSync(mAccount, AUTHORITY, Bundle.EMPTY, (minutes * 3600));
}

private void showToast(java.lang.String text) {
    if ((mToast) != null)
        mToast.cancel();
    
    mToast = android.widget.Toast.makeText(this, text, Toast.LENGTH_LONG);
    mToast.show();
}

public synchronized void add(com.box.androidsdk.content.models.BoxItem item) {
    mItems.add(item);
    mItemsPositionMap.put(item.getId(), ((mItems.size()) - 1));
}

public com.brouding.simpledialog.SimpleDialog.Builder setBtnPermanentCheckText(@android.support.annotation.NonNull
java.lang.String message) {
    this.permanentCheckText = message;
    this.isPermanentTextBold = false;
    return this;
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    switch (actionId) {
        case android.view.inputmethod.EditorInfo.IME_ACTION_UNSPECIFIED :
        case android.view.inputmethod.EditorInfo.IME_ACTION_DONE :
        case android.view.inputmethod.EditorInfo.IME_ACTION_NEXT :
            savePerson();
            return true;
    }
    return false;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    checkLocationPermission();
    if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) {
        checkLocationPermission();
    }
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    if (args.getBoolean(de.aw.awlibrary.MainActivity.DETAILCONTAINERVISIBILITY)) {
        android.view.View detailContainer = findViewById(de.aw.awlibrary.MainActivity.layoutDetailcontainer);
        detailContainer.setVisibility(View.VISIBLE);
    }
}

public void increment(android.view.View view) {
    android.util.Log.d("CounterFrag", "Incremented Count");
    ++(count);
    updateFieldFromCount();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if ((getArguments()) != null) {
        scheduleItems = getArguments().getParcelableArrayList(com.digzdigital.hebronradio.fragment.ScheduleDetails.ARG_PARAM1);
    }
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.content.Intent intent = new android.content.Intent(this, com.example.ksusha.tetris.GameOver.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    this.finish();
    startActivity(intent);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_compose_message, menu);
    if ((Build.VERSION.SDK_INT) < 11) {
        android.view.MenuItem copyUrl = menu.findItem(R.id.menu_copy_url);
        copyUrl.setVisible(false);
    }
    return true;
}

public void Start() {
    android.util.Log.d("SOUND", "START");
    isRecording = true;
}

@java.lang.Override
public boolean onSingleTapConfirmed(android.view.MotionEvent e) {
    android.util.Log.d("DEBUG_TAG", "On SingleTapConfirmed OscMode Event!");
    mOscilloscopeFragmentController.butOscModeOnSingleTapConfirmed();
    butOscMode.setBackgroundColor(2201331);
    return super.onSingleTapConfirmed(e);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.atomhacks.Main.setLogin(true);
    android.content.Intent projectList = new android.content.Intent(this, com.example.atomhacks.Main.class);
    startActivity(projectList);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mCamera.takePicture(null, null, jpegCallBack);
    if ((firstPicTaken) == false) {
        zeroAzimuth = azimuth;
        firstPicTaken = true;
    }
    mCamera.startPreview();
}

private void registerEmailPw(android.view.View view) {
    android.content.Intent regEmail = new android.content.Intent(this, com.example.friends.fitfriend.RegisterWithEmailAndPwActivity.class);
    startActivity(regEmail);
    this.finish();
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    try {
        play();
    } catch (java.io.IOException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
protected android.support.v4.app.Fragment createFragment() {
    java.util.UUID taskId = ((java.util.UUID) (getIntent().getSerializableExtra(com.codepath.preassignment.todoapp.activity.ToDoListActivity.EXTRA_TASK_ID)));
    if (taskId != null) {
        return com.codepath.preassignment.todoapp.fragments.ToDoListFragment.newInstance(taskId);
    }
    return com.codepath.preassignment.todoapp.fragments.ToDoListFragment.newInstance();
}

protected void closeApp(android.view.View view) {
    finish();
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    setContentView(R.layout.activity_geofence);
}

public com.android.volley.RequestQueue getRequestQueue() {
    if ((mRequestQueue) == null) {
        mRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue(com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx.getApplicationContext());
    }
    return mRequestQueue;
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    if (mp == (mPlayer)) {
        mPlayer.start();
    }
}

public void add(com.example.felipe.androidchat.entities.ChatMessage msg) {
    if (!(alreadyInAdapter(msg))) {
        this.chatMessages.add(msg);
        this.notifyDataSetChanged();
    }
}

@java.lang.Override
public void run() {
    android.util.Log.i("HIPSTER", "LOGIN SUCCESSFUL");
    android.content.Intent intent = new android.content.Intent(this, net.ilexiconn.hipster.MainActivity.class);
    intent.putExtra("magister", magister);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.assistant_check :
            {
                checkAccount.setEnabled(false);
                accountCreator.isAccountActivated();
                break;
            }
    }
}

@java.lang.Override
protected void setupUI(android.view.View rootLayout) {
    rootLayout.findViewById(R.id.btnExportForProject).setOnClickListener(this);
    exportFragment = addChild(R.id.frgExportOnTabContainer, new uk.ac.ucl.excites.sapelli.collector.fragments.ExportFragment(getOwner().getCurrentProject(true)));
}

@java.lang.Override
public void onCategoryIncomeClick(com.zhan.budget.Model.Category category) {
    android.widget.Toast.makeText(getApplicationContext(), ("clicked on income category : " + (category.getName())), Toast.LENGTH_SHORT).show();
    selectedIncomeCategory = category;
}

public void disable() {
    android.util.Log.d("Reverb", "Disabled Reverb effect");
    if ((effect) != null) {
        effect.setEnabled(false);
    }
    isActive = false;
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    outState.putParcelableArrayList("movies", movies);
    super.onSaveInstanceState(outState);
}

public void launch(android.view.View v, java.lang.String uid) {
    android.content.Intent login = new android.content.Intent(this, com.cultivate.juniordesign.cultivate.LoginActivity.class);
    login.putExtra("uid", uid);
    startActivity(login);
}

@java.lang.Override
public void onGeolocationPermissionsShowPrompt(java.lang.String origin, android.webkit.GeolocationPermissions.Callback callback) {
    callback.invoke(origin, true, false);
}

@java.lang.Override
public void onMapReady(final com.google.android.gms.maps.GoogleMap googleMap) {
    android.util.Log.i(net.roughdesign.canyoufeedme.activities.CountryOverviewActivity.TAG, "GoogleMap is ready");
    setupGoogleMaps(googleMap);
    net.roughdesign.canyoufeedme.activities.CountryOverviewActivity.CountryIdentifier countryIdentifier = new net.roughdesign.canyoufeedme.activities.CountryOverviewActivity.CountryIdentifier();
    countryIdentifier.countryId = 1;
    countryIdentifier.year = 2000;
    new net.roughdesign.canyoufeedme.activities.CountryOverviewActivity.GetCountryDetailsAsyncTask().execute(countryIdentifier);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View viewClicked, int position, long id) {
    edu.kit.pse.client.goapp.datamodels.User clickedUser = users.get(position);
    java.lang.String message = clickedUser.getName();
    edu.kit.pse.client.goapp.activity.GroupMemberActivity.start(this);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    callback.invoke(okTitle_f);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.add :
            add();
            break;
        case R.id.pushUpdate :
            pushUpdate();
            break;
    }
    return super.onOptionsItemSelected(item);
}

public void onClick(android.view.View v) {
    dbHandler.deleteItem(buttonName);
    android.util.Log.d("android:HELP", buttonName);
    linearLayout.removeView(button);
}

public void getAllUsers() {
    android.util.Log.i(LOG_TAG, "Requesting all users");
    if (connected) {
        out.println("getAllUsers");
        return ;
    }else {
        android.util.Log.e(LOG_TAG, "getAllUsers() failed!");
    }
}

public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    printToastDialog(bl.Attend(appData.get_userToken(), currEvent.getId(), isChecked));
    appData.set_userEventList(bl.getUserEvents(appData.get_userToken()));
}

@java.lang.Override
public void showDetails(android.net.wifi.p2p.WifiP2pDevice device) {
    android.util.Log.d("details", "details-wifi-direct");
    com.swipetogive.wifidirect.DeviceDetailFragment fragment = ((com.swipetogive.wifidirect.DeviceDetailFragment) (getFragmentManager().findFragmentById(R.id.frag_detail)));
    fragment.showDetails(device);
}

@java.lang.Override
public void onClick(android.view.View v) {
    MainActivity.tm.deleteCompletedTask(cTaskList);
    cm.startTaskMenu();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    mediaSessionConn = buildMediaSession();
    dataSourceFactory = buildDataSource();
    extractorFactory = buildExtractorFactory();
    playList = new java.util.ArrayList<>();
    initPlayListRemoveObserver();
    return START_STICKY;
}

public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.layout_contact_designer);
    getTitleFromIntent(this.getIntent());
    initActionBar();
    initTabHost();
    initListView();
}

@java.lang.Override
public void showNotificationCallback(org.adblockplus.libadblockplus.Notification notification) {
    android.util.Log.d(org.adblockplus.libadblockplus.tests.NotificationTest.TAG, ((((this) + " received [") + notification) + "]"));
    retValue = notification;
}

@java.lang.Override
public void failure(retrofit.RetrofitError error) {
    android.util.Log.d(getClass().toString(), "Failed to fetch trailers");
    reviewTextView.setText(getResources().getString(R.string.no_trailers));
    trailerExpandButton.setVisibility(View.INVISIBLE);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (com.fashare.activitytracker.AccessibilityUtil.checkAccessibility(this)) {
        com.fashare.activitytracker.Tile.instance.onClick();
        finish();
    }
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return new com.guanyf.appmanager.Tab1();
        case 1 :
            return new com.guanyf.appmanager.Tab2();
        case 2 :
            return new com.guanyf.appmanager.Tab3();
    }
    return null;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    com.CMPUT301W15T02.teamtoapp.Model.Claim claim = adapter.getItem(position);
    claimListController.removeClaim(claim);
    if ((mSelectedItems.size()) > 0) {
        setUpFilteredAdapter();
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if (id == (R.id.action_settings)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mCropImageView.getCroppedImageAsync();
    ((com.comp.iitb.vialogue.activity.CropMainActivity) (getActivity())).done(currentBitmap);
}

private void setupGridView(com.tonykazanjian.codenamescompanion.LinearLayoutAbsListView gridPanel, com.tonykazanjian.codenamescompanion.main.GamePresenter gamePresenter, android.widget.GridView gridView) {
    gridPanel.setOnDragListener(new com.tonykazanjian.codenamescompanion.listeners.ViewDragListener(gamePresenter));
    gridPanel.setAbsListView(gridView);
    gridView.setOnItemLongClickListener(new com.tonykazanjian.codenamescompanion.listeners.GridItemLongClickListener(gamePresenter));
}

@java.lang.Override
public void surfaceCreated(android.view.SurfaceHolder holder) {
    try {
        mCamera.setPreviewDisplay(holder);
        mCamera.startPreview();
    } catch (java.io.IOException e) {
    }
}

@java.lang.Override
public void onAuthStateChanged(@android.support.annotation.NonNull
com.google.firebase.auth.FirebaseAuth firebaseAuth) {
    com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser();
    if (user != null) {
        login(user.getEmail(), user.getDisplayName());
        progressDialog.dismiss();
    }
}

public static void validateMovieCursor(java.lang.String error, android.database.Cursor valueCursor, android.content.ContentValues expectedValues) {
    junit.framework.Assert.assertTrue(("Cursor should have records" + error), valueCursor.moveToFirst());
    com.franktan.popularmovies.data.DataTestUtilities.validateMovieRecordUnderCursor(error, valueCursor, expectedValues);
    valueCursor.close();
}

@java.lang.Override
public void setImageResource(@android.support.annotation.DrawableRes
int resId) {
    super.setImageResource(resId);
    if ((mImageHelper) != null) {
        mImageHelper.applySkin();
    }
}

@java.lang.Override
public void onPageScrollStateChanged(int state) {
    if (state == (android.support.v4.view.ViewPager.SCROLL_STATE_SETTLING))
        swipeSave = true;
    
}

@java.lang.Override
public void run() {
    violationSyncHandler.post(violationSync);
    android.util.Log.d("ViolationSyncTask:", "started");
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parentView, android.view.View selectedItemView, int position, long id) {
    mGradientSource = position;
    if ((mTrackSegments.size()) != 0) {
        mCustomMapFragment.plotRoute(mTrackSegments, mGradientSource);
    }
}

public static nju.com.piece.database.helpers.PeriodDBHelper instance(android.content.Context context) {
    return new nju.com.piece.database.helpers.PeriodDBHelper(context, nju.com.piece.database.helpers.PeriodDBHelper.DATABASE_NAME, null, DATABASE_VERSION);
}

@java.lang.Override
public void onSuccess() {
    android.util.Log.i(nl.dobots.crownstone.gui.control.ControlMainFragment.TAG, "relay off success");
    updateLightBulb(false);
    done();
}

@java.lang.Override
public void onError(java.lang.Throwable e) {
    android.widget.Toast.makeText(mContext, "onError()!", Toast.LENGTH_SHORT).show();
    e.printStackTrace();
    mIBlibiliFragment.hideProgressbar();
    mIBlibiliFragment.showError(e.getMessage());
}

void startVector(android.content.Context mContext, java.lang.String mimetype, java.lang.String vectorData, java.lang.String vectorName);

private void showMainActivity() {
    android.content.Intent mainIntent = new android.content.Intent(getApplicationContext(), com.farfromsober.ffs.activities.MainActivity.class);
    startActivity(mainIntent);
    this.finish();
}

public void switchActivity() {
    android.util.Log.d("alex", "aex");
    android.content.Intent intent = new android.content.Intent(this, com.echopen.asso.echopen.ListImagesActivity.class);
    startActivity(intent);
}

public void enter(@android.support.annotation.NonNull
android.widget.ImageView from, boolean withAnimation) {
    mImageFrom = from;
    mIsOpen = true;
    mAnimator.init(from, this);
    setImageDrawable(from.getDrawable());
    mAnimator.enter(withAnimation);
}

public static void setEnv(final android.content.Context p) {
    net.sourceforge.clonekeenplus.Settings.SdcardAppPath.get().setEnvInternal(p);
}

@java.lang.Override
public void onChildRemoved(com.google.firebase.database.DataSnapshot snapshot) {
    com.eclipsesource.tabris.android.RemoteObject remoteObject = tabrisContext.getObjectRegistry().getRemoteObjectForObject(this);
    remoteObject.notify("onChildRemoved", "child", snapshot.getValue());
}

private java.lang.String getSampleType(java.lang.String SAK) {
    java.lang.String unknownTypeString = "Unknown type";
    android.util.Log.e(palarax.e_key_card.NFC_Tag_Tech.nfcATag.TAG, "getting sample");
    return palarax.e_key_card.NFC_Tag_Tech.SampleTagAttributes.lookup(SAK, unknownTypeString);
}

void e(java.lang.String message) {
    if (should(com.otaliastudios.zoom.ZoomLogger.LEVEL_ERROR)) {
        android.util.Log.w(mTag, message);
        com.otaliastudios.zoom.ZoomLogger.lastMessage = message;
        com.otaliastudios.zoom.ZoomLogger.lastTag = mTag;
    }
}

public void spinWheel(android.view.View v) {
    v.setEnabled(false);
    java.util.Random random = new java.util.Random();
    dialer.setEnabled(false);
    dialer.post(new com.concon.talkabout.talkabout.SpinWheelGameplay.FlingRunnable(random.nextInt(1500), v));
}

@java.lang.Override
public com.podgpavel.yal_task1.Adapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemLayoutView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.photo_layout, null);
    com.podgpavel.yal_task1.Adapter.ViewHolder viewHolder = new com.podgpavel.yal_task1.Adapter.ViewHolder(itemLayoutView);
    return viewHolder;
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
}

@java.lang.Override
public void onCameraChange(com.google.android.gms.maps.model.CameraPosition cameraPosition) {
    android.util.Log.d("m", "=====================camera move=====================");
    java.lang.System.out.println(getBoundedMarkers(markerArray));
}

@java.lang.Override
public void onDestroyActionMode(android.support.v7.view.ActionMode mode) {
    enableSelectionMode(false);
    getView().findViewById(R.id.DescriptionText).setVisibility(View.GONE);
    runSelection(false);
    listAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.support.v13.app.FragmentCompat.requestPermissions(parent, new java.lang.String[]{ Manifest.permission.CAMERA , Manifest.permission.INTERNET }, com.tapifolti.emotiondetection.EmotionDetectionFragment.REQUEST_APP_PERMISSION);
}

@java.lang.Override
public void onShowCollaborators(com.box.androidsdk.content.models.BoxIteratorCollaborations collaborations) {
    android.content.Intent collabsIntent = com.box.androidsdk.share.activities.BoxCollaborationsActivity.getLaunchIntent(this, ((com.box.androidsdk.content.models.BoxFolder) (mShareItem)), mSession);
    startActivity(collabsIntent);
}

@java.lang.Override
public void onCustomerRetrieved(@android.support.annotation.NonNull
com.stripe.android.model.Customer customer) {
    mCustomer = customer;
    removeError();
    createListFromCustomerSources();
}

@java.lang.Override
public void messageReceived(de.mhid.android.timerecordingforpebble.PebbleMessenger msgr, com.getpebble.android.kit.util.PebbleDictionary dict) {
    evtRequestStatus(firstTimelineUpdate, true, false);
    firstTimelineUpdate = false;
}

private void onLocation(android.location.Location location) {
    for (int i = 0; i < (_locationListeners.size()); i++) {
        _locationListeners.get(i).onLocation(location);
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    mContext.startActivity(new android.content.Intent("com.android.settings.POWERMANAGER_SETTINGS").addFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))));
    this.dismiss();
}

@java.lang.Override
public void onAnimationUpdate(android.animation.ValueAnimator animation) {
    android.util.Log.d("Animate", ((animation.getAnimatedValue()) + ""));
    animateAlpha = 255 - ((java.lang.Integer) (animation.getAnimatedValue()));
    invalidate();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapter, android.view.View v, int position) {
    android.content.Intent intent = new android.content.Intent(this, com.kingsley.android.kupsfood.activities.FoodDescriptionActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void start(android.app.Activity activity, com.auth0.identity.IdentityProviderRequest request, com.auth0.core.Application application) {
    checkPermissions(activity, request.getServiceName());
}

private void checkQuestionTwoAnswers() {
    android.widget.RadioButton radioButtonBruce = ((android.widget.RadioButton) (findViewById(R.id.radio_bruce)));
    boolean isRadioButtonBruceChecked = radioButtonBruce.isChecked();
    if (isRadioButtonBruceChecked) {
        correctAnswers += 1;
    }
}

@java.lang.Override
public void setTTYMode(int ttyMode, android.os.Message onComplete) {
    super.setTTYMode(ttyMode, onComplete);
    mCT.setTtyMode(ttyMode);
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    android.util.Log.d(com.beccap.weathervane.WeatherListFragment.TAG, "onConnected");
    refreshLocationAndWeather();
}

@com.squareup.otto.Subscribe
public void onAuthFail(cz.kovar.petr.homevoice.bus.events.AuthEvent.Fail event) {
    android.util.Log.v(cz.kovar.petr.homevoice.frontend.FragmentPlan.LOG_TAG, "Auth Failed!");
    clearButtons();
}

@java.lang.Override
public void onClick(android.view.View v) {
    int pos = getAdapterPosition();
    com.android.summer.csula.foodvoter.yelpApi.models.Business business = mChoiceData.get(pos).getBusiness();
    mOnClickListener.onListItemClick(business);
}

public org.osmdroid.views.overlay.OverlayItem putMarkerAt(org.osmdroid.util.GeoPoint p, android.graphics.drawable.Drawable markerDrawable) {
    org.osmdroid.views.overlay.OverlayItem markerItem = makeMarker(p, markerDrawable);
    markersOverlay.addItem(markerItem);
    map.invalidate();
    return markerItem;
}

@java.lang.Override
public void onLoadingFailed(java.lang.String imageUri, android.view.View view, ir.rasen.charsoo.controller.image_loader.core.assist.FailReason failReason) {
    if ((imageType == (Image_M.ImageType.BUSINESS)) && (imageSize == 1))
        imageView.setImageBitmap(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.drawable.default_user_image));
    
}

@java.lang.Override
public void onClick(@android.support.annotation.NonNull
com.spilgames.spilsdk.utils.permissions.dialog.MaterialDialog materialDialog, @android.support.annotation.NonNull
com.spilgames.spilsdk.utils.permissions.dialog.internal.DialogAction dialogAction) {
    com.spilgames.spilsdk.SpilSdk.getInstance(context).getSocialCallbacks().RequestLogin();
    materialDialog.dismiss();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getQiushiData();
    mAdapter = new com.hp.qiushibaike.adapter.QiushiAdapter(mQiushiBriefs);
}

public static boolean doesDeviceHaveSecuritySetup(org.apache.cordova.devicesecurity.Context context) {
    android.app.KeyguardManager keyguardManager = ((android.app.KeyguardManager) (context.getSystemService(Context.KEYGUARD_SERVICE)));
    return keyguardManager.isKeyguardSecure();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent captureImage = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
    android.net.Uri uri = android.net.Uri.fromFile(mPhotoFile);
    captureImage.putExtra(MediaStore.EXTRA_OUTPUT, uri);
    startActivityForResult(new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE), com.example.suren.criminalintent.CrimeFragment.REQUEST_PHOTO);
}

@java.lang.Override
protected void onBeforeClusterItemRendered(org.ecomap.android.app.Problem problem, com.google.android.gms.maps.model.MarkerOptions markerOptions) {
    markerOptions.icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(problem.res_id)).title(problem.getTitle());
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.view.View childView = new android.view.View(getActivity());
    childView.setBackgroundColor(colorItems[new java.util.Random().nextInt(colorItems.length)]);
    layout.addView(childView);
}

@java.lang.Override
public void onRebind(android.content.Intent intent) {
    android.util.Log.v(unipd.dei.ESP1415.falldetector.FallService.LOG_TAG, "in onRebind");
    super.onRebind(intent);
}

public org.openobservatory.measurement_kit.android.IntentRouter emit_intent(java.lang.String event, android.content.Intent intent) {
    lbm.sendBroadcast(intent);
    return this;
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<android.database.Cursor> loader) {
    android.util.Log.i("Inside onLoaderReset", "Swapped the Cursor");
    mMovieCursorAdapter.notifyDataSetChanged();
    mMovieCursorAdapter.swapCursor(null);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mMapFragment.showAllFloors();
    mMapFragment.showMarkersForSpecificFloor(1);
}

public static void setSeen(android.content.Context c, java.lang.String key) {
    c.getSharedPreferences("Kantidroid", Context.MODE_PRIVATE).edit().putBoolean("key", true).commit();
}

@java.lang.Override
public void onClick(android.view.View v) {
    location_data.push_data();
    android.content.Intent intent = new android.content.Intent(this, tcss450.gps_app_phase_i.MovementData.class);
    startActivity(intent);
}

public static void startCrashlytics(android.content.Context context) {
    if (!(com.musenkishi.wally.BuildConfig.DEBUG)) {
        com.crashlytics.android.Crashlytics.start(context);
    }
}

@java.lang.Override
public void onDownloadCompleted() {
    android.util.Log.d(com.wolfpakapp.wolfpak2.camera.editor.PictureEditorLayout.TAG, "Download Completed");
    if (!(com.wolfpakapp.wolfpak2.camera.editor.PictureEditorLayout.isImage)) {
        mVideoView.resume();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    knowSwipe(prefs, knowToCContainer);
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.spatialdev.osm.model.OSMNode node = osmMap.addNode();
    toggleNodeMode();
    node.select();
    identifyOSMFeature(node);
}

public void setRecyclerViewAdapter() {
    adapter = new ambiesoft.start.utility.RecyclerViewAdapter(ambiesoft.start.fragment.HomeFragment.filteredPerformances, getContext());
    recyclerView.setAdapter(adapter);
    recyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getContext()));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(com.app.kent.volume.Main.TAG, ((("addDynamicButton onClick(): " + (v.getId())) + "name = ") + buttonName));
    customSetVolume(buttonName);
}

@java.lang.Override
public void onSuccess(com.google.firebase.storage.UploadTask.TaskSnapshot taskSnapshot) {
    java.lang.String downloadUrl = taskSnapshot.getDownloadUrl().toString();
    android.util.Log.i(com.google.codeu.chatme.presenter.CreateGroupPresenter.TAG, ("uploadGroupPicture:success:downloadUrl " + downloadUrl));
    updateGroupPhotoUrl(downloadUrl, conversationId);
    view.openMessageActivity();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    java.lang.System.out.println("yoooo");
    addPreferencesFromResource(R.xml.preferences);
    update_remove_interest_values();
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.support.v4.app.ActivityCompat.requestPermissions(mActivity, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE }, org.y20k.transistor.MainActivityFragment.PERMISSION_REQUEST_READ_EXTERNAL_STORAGE);
}

@java.lang.Override
public void onGeolocationPermissionsShowPrompt(java.lang.String origin, android.webkit.GeolocationPermissions.Callback callback) {
    mWebChromeClient.onGeolocationPermissionsShowPrompt(origin, callback);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_chart);
    getSupportActionBar().setDisplayShowTitleEnabled(false);
    initFragments();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.login_help :
    }
    return false;
}

@java.lang.Override
public void afterDelivered(int smsId) {
    android.widget.Toast.makeText(this, "afterDelivered!", Toast.LENGTH_SHORT).show();
}

@org.junit.Test
public void shouldRenderZierIDTextView() {
    android.widget.TextView textView = ((android.widget.TextView) (activity.findViewById(R.id.idforclient)));
    junit.framework.Assert.assertNotNull(textView);
}

private void parseResTable() {
    this.table = new com.chris.pkg.manager.bean.android.resource.bean.ResChunkTable();
    parseResTableHeader();
    parseResPkg();
}

private void addLoadMore(android.support.v7.widget.RecyclerView.ViewHolder holder) {
    if (isLoadMore()) {
        mLoadingMoreEnable = true;
        mRequestLoadMoreListener.onLoadMoreRequested();
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    takePhoto();
    meta.setType("image");
}

public static void applyRegistered(android.content.Context context, boolean isRegistered) {
    io.soramitsu.iroha.IrohaApplication.getSharedPreferences(context).edit().putBoolean(io.soramitsu.iroha.IrohaApplication.SHARED_PREF_REGISTERED_KEY, isRegistered).apply();
}

@java.lang.Override
public void onFailure(int reasonCode) {
    android.widget.Toast.makeText(getApplicationContext(), "Peer Discovery not ready", Toast.LENGTH_SHORT).show();
    android.util.Log.d("WiFiDBC", "Peer Discovery not ready");
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    POIpath.setText("");
    POIpath.setHint(("Lägg till punkt nr " + ((listOfPath.size()) + 1)));
    addNewPOI();
}

@java.lang.Override
public void onLinkDisconnected() {
    if ((compListener) != null)
        compListener.onDisconnected();
    
    if (!(org.droidplanner.services.android.BuildConfig.SITL_DEBUG)) {
        controllerLinkManager.stop();
    }
    soloLinkMgr.stop();
}

@java.lang.Override
protected boolean onPostLight(final android.content.Intent request, final android.content.Intent response, final java.lang.String serviceId, final java.lang.String lightId, final java.lang.Integer color, final java.lang.Double brightness, final long[] flashing) {
    return sendLightRequest(serviceId, "POST", response);
}

private void initDependencyInjection() {
    component = com.wisdomlanna.www.dagger2_mvp_example.DaggerApplicationComponent.builder().androidModule(new com.wisdomlanna.www.dagger2_mvp_example.AndroidModule(this)).utilModule(new com.wisdomlanna.www.dagger2_mvp_example.UtilModule()).build();
    getComponent().inject(this);
}

public static final void e(java.lang.Object tag, java.lang.String msg) {
    android.util.Log.e(tag.getClass().getSimpleName(), ((com.llxx.socket.loger.Ll_Loger.LOG_BUILD) + msg));
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    android.util.Log.d(TAG, error.toString());
    handler.onError(error.getMessage());
    progress.hide();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    org.eyeseetea.malariacare.database.utils.PreferencesState.getInstance().setContext(getApplicationContext());
    com.raizlabs.android.dbflow.config.FlowManager.init(this);
}

@java.lang.Override
protected void onPostExecute(java.util.ArrayList<fastrackm.nanodegree.udacity.abhis.popularmovies_s2.models.Movie> movieData) {
    if (movieData != null) {
        mAdapter.setMovieData(movieData);
    }else {
        android.util.Log.d(fastrackm.nanodegree.udacity.abhis.popularmovies_s2.MainActivity.TAG, "this failed terribly");
    }
}

public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance(android.content.Context context) {
    if ((taskr.se.taskr.repository.TaskRContentProviderImpl.instance) == null) {
        taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl(context, new taskr.se.taskr.repository.RefreshItemsListener() {
            @java.lang.Override
            public void refreshItems() {
            }
        });
    }
    return taskr.se.taskr.repository.TaskRContentProviderImpl.instance;
}

@java.lang.Override
public void onStopNestedScroll(android.view.View child) {
    super.onStopNestedScroll(child);
    if ((java.lang.Math.abs(swipeDistance)) >= (nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER)) {
        swipeBack();
    }else {
        reset();
    }
}

public void getRouteSegment(android.location.net.osmand.Location loc, net.osmand.ResultMatcher<net.osmand.binary.RouteDataObject> result) {
    currentPositionHelper.getLastKnownRouteSegment(loc, result);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mRscpService.getSupportedFeature();
    mStateProgressBar.setVisibility(View.VISIBLE);
    mStateTextView.setText(com.example.android.bluetoothlegatt.RSCPActivity.EXEC);
}

@java.lang.Override
public harman.musicplayer.SongsAdapter.DataObjectHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.song_item, parent, false);
    harman.musicplayer.SongsAdapter.DataObjectHolder dataObjectHolder = new harman.musicplayer.SongsAdapter.DataObjectHolder(view);
    return dataObjectHolder;
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    if (mCellIsMobile)
        return ;
    
    mAboveItemId = INVALID_ID;
    mMobileItemId = INVALID_ID;
    mBelowItemId = INVALID_ID;
    mobileView.setVisibility(com.juztoss.dancemaker.views.VISIBLE);
    mHoverCell = null;
    setEnabled(true);
    invalidate();
}

public java.util.List<org.jraf.androidcontentprovidergenerator.model.Field> getFieldsIncludingJoins() {
    return getFieldsIncludingJoins(false, "");
}

public void onUpdate(boolean root, com.jecelyin.android.file_explorer.io.JecFile path);

@java.lang.Override
public void tearDown() throws java.lang.Exception {
    bbct.android.common.test.DatabaseUtil dbUtil = new bbct.android.common.test.DatabaseUtil(this.inst.getTargetContext());
    dbUtil.clearDatabase();
    super.tearDown();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.content.ContentValues headers = new android.content.ContentValues();
    headers.put("Authorization", "09703443d12cf0adf39e49f8048ea692dc3da55da2e6377dded3204dca6cc939895fd01cccdec573");
    com.gjuddy.easyhttprequest.GjuddyRequest.getInstance().setPersistentHeaders(headers);
}

public com.allen.library.LayoutParams getParams(com.allen.library.LayoutParams params) {
    if (params == null) {
        params = new android.widget.LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
    }
    return params;
}

private void checkPreview() {
    if (android.provider.Settings.canDrawOverlays(this))
        preview.setChecked(true);
    else
        preview.setOnTouchListener(this);
    
}

protected void initLoader(android.os.Bundle bundle) {
    onStartLoading();
    au.com.pactera.pacterapulse.core.BaseFragment.getLoaderManager().initLoader(this.hashCode(), bundle, this);
}

@java.lang.Override
public void onClick(android.view.View v) {
    viewPager.imageClick((position - 1));
}

@java.lang.Override
public void onResume() {
    android.util.Log.e("mainActivityFragment", "onResume :: start");
    mMoviesAdapter.notifyDataSetChanged();
    super.onResume();
}

protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initDB();
    initParse();
    getLocalHighscore();
    setupUI();
    getScoreList();
}

private void setUpMapIfNeeded() {
    if ((mMap) == null) {
        mMap = ((com.google.android.gms.maps.MapFragment) (getFragmentManager().findFragmentById(R.id.map))).getMap();
    }
    setUpMap();
}

public void updateRecyclerAdapter(com.ringsterz.androidtextreader.db.DBHelper.PhraseCursor phraseCursor) {
    java.util.ArrayList<com.ringsterz.androidtextreader.model.Phrase> phrases = com.ringsterz.androidtextreader.util.CursorToListUtil.getPhraseList(phraseCursor);
    recyclerAdapter = new com.ringsterz.androidtextreader.adapter.RecyclerViewAdapter(phrases);
    recyclerView.setAdapter(recyclerAdapter);
}

@java.lang.Override
protected void onPostExecute(java.lang.Void result) {
    android.util.Log.e("inside do PostExecute", ("before if" + (trails.get(i).getDownlImage())));
    picture.setImageBitmap(trails.get(i).getDownlImage());
}

@java.lang.Override
public void onClick(android.view.View v) {
    drawView.setPaintMode(true);
    drawView.setEraseMode(true);
    v.setBackgroundResource(R.mipmap.ic_eraser_pressed);
    mPaintButton.setBackgroundColor(Color.TRANSPARENT);
    mHandButton.setBackgroundResource(R.mipmap.ic_hand);
}

@java.lang.Override
public void setAdapter(android.widget.Adapter adapter) {
    mAdapter = adapter;
    mCurrent = 0;
    requestLayout();
}

public static void notifyChanged() {
    for (pom.poly.com.tabatatimer.Utility.Observer observer : pom.poly.com.tabatatimer.ContentProvider.Eventinf.observers) {
        try {
            observer.update();
        } catch (java.lang.Exception exp) {
            android.util.Log.d("Eventinf.notifyChanged", exp.toString());
        }
    }
}

public com.amaze.filemanager.fragments.TabFragment getTabFragment() {
    android.support.v4.app.Fragment fragment = getContentFrameFragment();
    if ((fragment == null) || (!(fragment instanceof com.amaze.filemanager.fragments.TabFragment)))
        return null;
    else
        return ((com.amaze.filemanager.fragments.TabFragment) (fragment));
    
}

private void onLogInFailed() {
    android.widget.Toast.makeText(com.example.damian.projektgrupowy.App.getAppContext(), R.string.wrong_login_data, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onPrepareOptionsMenu(android.view.Menu menu) {
    super.onPrepareOptionsMenu(menu);
    android.view.MenuItem menuItem = menu.findItem(R.id.action_day_view);
    menuItem.setChecked(true);
}

public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    if ((mCamera) != null) {
        mCamera.stopPreview();
        mCamera.release();
    }
}

@java.lang.Override
public void onHostResume() {
    final android.app.Activity activity = getCurrentActivity();
    assert activity != null;
    activity.registerReceiver(receiver, new com.github.yamill.orientation.IntentFilter("onConfigurationChanged"));
}

@java.lang.Override
public void updateConversation(@org.jetbrains.annotations.NotNull
com.criptext.monkeykitui.conversation.MonkeyConversation conversation) {
    com.criptext.monkeychatandroid.models.ConversationItem conversationItem = ((com.criptext.monkeychatandroid.models.ConversationItem) (conversation));
    conversationItem.lastOpen = lastOpen;
    activeConversationItem.setTotalNewMessage(0);
    activeConversationItem.setSecondaryText(lastMessageText);
}

public void ocEODBack(android.view.View v) {
    popupWindow.dismiss();
    android.util.Log.i("Finished", tech.travis.poolpos.MainActivity.getMethodName());
}

public void onClick(final android.content.DialogInterface dialog, final int which) {
    _actMain.PrepareMediaPlayer(localurl);
}

public static com.hitec16.hiteshdemo.fragment.ListOfNews getInstance(java.lang.String tag) {
    com.hitec16.hiteshdemo.fragment.ListOfNews fragment = new com.hitec16.hiteshdemo.fragment.ListOfNews();
    android.os.Bundle args = new android.os.Bundle();
    args.putString(com.hitec16.hiteshdemo.fragment.ListOfNews.TAG, tag);
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dm.delete(allFiles[index]);
    updateFiles();
    dialog.dismiss();
    mDialog.dismiss();
}

public void onClick(com.example.utente.calcolaorauscita.DialogInterface dialog, int which) {
    if (which == (DialogInterface.BUTTON_POSITIVE)) {
        timePickerChoseTime = true;
        android.util.Log.v("", "Impostato il timepicker");
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    switch (item.getItemId()) {
        case R.id.action_settings :
            settingsActivity();
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

public void appendMsg(java.lang.String msg) {
    android.util.Log.i(TAG, (("MainActivity.appendMsg(" + msg) + ")"));
    mTextView.setText((((mTextView.getText()) + "\n") + msg));
}

public void updateData() {
    android.widget.GridView gridView = ((android.widget.GridView) (findViewById(R.id.gridview)));
    Adapter = new com.onelio.myuacloud.Apps.AdAdapter(getBaseContext(), data);
    gridView.setVisibility(View.VISIBLE);
    gridView.setAdapter(Adapter);
}

@java.lang.Override
public nanodegree.android.com.popularmoviesapp.model.Trailer getItem(int position) {
    return this.trailers.get((position + 1));
}

@android.support.annotation.CheckResult
com.oasisfeng.hack.Hack.HackInvocation<R, C, T1, T2, T3> invoke(A1 arg);

public android.database.Cursor fetchAllUnCommonNames() {
    return database.query(balu.android.database.UnCommonNamesAdapter.DATABASE_TABLE_2, new java.lang.String[]{ balu.android.database.UnCommonNamesAdapter.UN_COMMON_NAME_ROWID , balu.android.database.UnCommonNamesAdapter.UN_COMMON_NAME , balu.android.database.UnCommonNamesAdapter.UN_COMMON_NAME_MEANING }, null, null, null, null, null);
}

private void onError(java.lang.String message) {
    android.util.Log.d(com.juztoss.rhythmo.audio.AdvancedMediaPlayer.class.toString(), "onErrorCalled");
    if ((mOnErrorListener) != null)
        mOnErrorListener.onError(message);
    
}

@java.lang.Override
public void onDidLoadView() {
    com.android.debug.hv.ViewServer.get(this).addWindow(this);
    setFullScreen();
    initMenu();
    initContentView();
    refreshListDataFromNet();
}

@java.lang.Override
public void onBackPressed() {
    this.finish();
    startActivity(new android.content.Intent(this, fuelfinder.mann.Activity.MapsActivity.class));
    return ;
}

@java.lang.Override
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height) {
    com.liangmayong.qrcode.view.DecodeScanView.setCameraDisplayOrientation(activity, com.liangmayong.qrcode.camera.CameraManager.get().getCamera());
}

protected void onClosestAlertUpdate(android.location.Location currentLocation, put.sailhero.model.Alert alert) {
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) {
        if (context instanceof android.app.Activity) {
            doAttach(((android.app.Activity) (context)));
        }
    }
}

@com.squareup.otto.Subscribe
public void onCurrentLocation(today.gacha.android.services.GachaLocationService.CurrentLocationEvent event) {
    if (event.isSuccess()) {
        animateGoogleMapCamera(event.getLocation());
        return ;
    }
    android.util.Log.w(today.gacha.android.ui.MapsActivity.TAG, ("Request current location failed - " + (event.getThrowableMessage())));
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference anon, java.lang.Object val) {
    java.lang.Boolean disable = ((java.lang.Boolean) (val));
    if (disable.booleanValue()) {
        setTheme(R.style.AppTheme_Dark);
    }else {
        setTheme(R.style.anonTheme);
    }
    return false;
}

@java.lang.Override
public void done(java.util.List<com.royalplate.royalplate.data.KidsMenuParse> kidsItems, com.parse.ParseException e) {
    kidsmenuAdapter = new com.royalplate.royalplate.adapter.KidsMenuAdapter(this, kidsItems);
    android.util.Log.e("name", " pass kidsItem");
    listview.setAdapter(kidsmenuAdapter);
}

private void initView() {
    mRecyclerView = ((android.support.v7.widget.RecyclerView) (findViewById(R.id.recycler_view)));
    mPresenter = new com.lxy.stock.presenter.StockPresenter();
}

public void seeAll(android.view.View view) {
    intent = new android.content.Intent(this, com.example.android.week05rachell.SecondActivity.class);
    intent.putExtra("avatar", avatar);
    intent.putExtra("BlogPosts", blogPostArrayList);
    startActivity(intent);
}

@java.lang.Override
public void onReadyForSpeech(android.os.Bundle params) {
    android.util.Log.d(com.shaedar.virtualclient.VoiceEngine.GoogleRecognizer.TAG, "onReadyForSpeech");
    m_listener.onBeginningOfSpeech();
}

@java.lang.Override
public void run() {
    android.util.Log.i("EVENT :", "당겨서 새로고침 중...");
    scrap_folder_recyclerrefreshview.pullRefreshComplete();
    scrapfolderListAdapter.set_ScrapFolderList(scrapfolderData);
    init_scrap_folder_list();
    get_ScrapFolder_Data();
    scrap_folder_recyclerview.removeHeaderView(headerview);
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    try {
        this.listener = ((com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener) (activity));
    } catch (java.lang.ClassCastException e) {
        throw new java.lang.IllegalStateException(("Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface."));
    }
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    inflater.inflate(R.menu.card_template_editor, menu);
    if (isStandardModel()) {
        menu.findItem(R.id.action_delete).setVisible(false);
    }
    super.onCreateOptionsMenu(menu, inflater);
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    butterknife.ButterKnife.bind(this);
    setContentView(R.layout.user_registration);
    timber.log.Timber.v("Registration OnCreate");
}

@java.lang.Override
public void onClick(android.view.View view) {
    saveLostGameIfNecessary(layout);
    numberOfDigits = 2;
    reset(layout);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return com.hanani.android.drawer.FragmentFourOne.newInstance((position + 1));
        case 1 :
            return com.hanani.android.drawer.FragmentFourTwo.newInstance(position);
    }
    return null;
}

private void getFabricList() {
    mFabrics = com.geekeclectic.android.stashcache.StashData.get(this).getStashFabricList();
}

public void run() {
    android.util.Log.v(net.hokiegeek.android.dondeestas.data.Model.TAG, "Executor retrieving Following");
    new net.hokiegeek.android.dondeestas.data.Model.GetFollowingTask().execute(user.getFollowing());
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(this, tda367.myapplication.controller.ActivityInfo.class));
    learnJava.setCurrentLevel(getLevelId(v));
    java.lang.System.out.println((" " + (getLevelId(v))));
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    com.nosideracing.rchipremote.RemoteMain.json.deauthenticate();
    alarm.cancel(CheckMessagesPendingIntent);
    android.util.Log.d(Consts.LOG_TAG, "onDestroy: rchip");
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View rootView = inflater.inflate(R.layout.fragment_stream, container, false);
    butterknife.ButterKnife.inject(app.rackdon.com.securitycam.StreamActivity.class, rootView);
    return rootView;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    switch (which) {
        case 0 :
            com.cusnews.app.activities.TopicListActivity.showInstance(this);
            break;
        case 1 :
            com.cusnews.app.activities.CustomizedTopicsActivity.showInstance(this);
            break;
    }
    dialog.dismiss();
}

protected boolean onUndo(android.view.View view) {
    com.google.engedu.wordstack.LetterTile tile = placedTiles.pop();
    tile.moveToViewGroup(stackedLayout);
    return true;
}

@java.lang.Override
public boolean onItemLongClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    showDeleteReminderDialog(position);
    return false;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.premiss);
    setContentView(R.layout.main);
    login = new com.androk.Login();
    android.view.View loginButton = findViewById(R.id.login_button);
    loginButton.setOnClickListener(this);
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.example.rj.cryptodisplay.model.Hourly> call, java.lang.Throwable t) {
    android.util.Log.d("HELP", "ONFAILURE");
}

public void initLocation(android.location.Location location) {
    this.location = location;
    if (isResumed())
        setup();
    
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    retrieveDataFromLocalDatabase();
    setHasOptionsMenu(true);
    setRetainInstance(true);
}

private static net.sourceforge.clonekeenplus.Settings.SdcardAppPath get() {
    if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.KITKAT))
        return net.sourceforge.clonekeenplus.Settings.SdcardAppPath.Kitkat.Holder.sInstance;
    else
        if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.FROYO))
            return net.sourceforge.clonekeenplus.Settings.SdcardAppPath.Froyo.Holder.sInstance;
        else
            return net.sourceforge.clonekeenplus.Settings.SdcardAppPath.Dummy.Holder.sInstance;
        
    
}

@java.lang.Override
protected void onStop() {
    android.util.Log.i(softwarepoets.stldroid.STLView.TAG, "STLView onStop called.");
    mesh = null;
    super.onStop();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((getOnItemClickListener()) != null) {
        getOnItemClickListener().onItemClick(this, v, ((baseViewHolder.getLayoutPosition()) - (getHeaderLayoutCount())));
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.millennialmedia.android.MMSDK.initialize(this);
    setContentView(R.layout.activity_main);
    new com.skyweather.MainActivity.CallApi().execute();
}

public void addHeaderView(android.view.View header) {
    if (header == null) {
        throw new java.lang.RuntimeException("header is null");
    }
    this.mHeaderView = header;
    this.notifyDataSetChanged();
}

@java.lang.Override
public void onCaptureDone(int requestId) {
    com.fezrestia.android.viewfinderanywhere.control.OverlayViewFinderController.getInstance().getCurrentState().onStillCaptureDone();
}

@java.lang.SuppressWarnings(value = "unchecked")
@java.lang.Override
public void onServiceConnected(final android.content.ComponentName name, final android.os.IBinder service) {
    mService = ((diplom.jodoapp.LocalBinder<diplom.jodoapp.XMPPServiceConnection>) (service)).getService();
    mBounded = true;
    android.util.Log.d(diplom.jodoapp.LoginActivity.TAG, "onServiceConnected");
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    finish();
    java.lang.System.exit(0);
}

@java.lang.Override
protected void setInternalArguments(android.os.Bundle args) {
    super.setInternalArguments(args);
    args.putParcelable(de.aw.reports.DBDEFINITION, de.aw.reports.ReportSimpleDetails.tbd);
    args.putString(de.aw.reports.SELECTION, de.aw.reports.ReportSimpleDetails.selection);
    args.putIntArray(de.aw.reports.FROMRESIDS, fromResIDs);
}

@java.lang.Override
public void didEnterRegion(org.altbeacon.beacon.Region region) {
    android.util.Log.i(com.liferay.ldxdemo.app.ShopApplication.TAG, "I just saw an beacon for the first time!");
    com.liferay.ldxdemo.beacon.NotificationUtil.sendNotification(getApplicationContext());
}

@java.lang.Override
public void onBufferingUpdate(io.vov.vitamio.MediaPlayer mp, int percent) {
    android.util.Log.e(com.infthink.flintreceiver.receiver.MediaPlayerActivity.TAG, (("onBufferingUpdate:percent[" + percent) + "]"));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.yourowndecisionlayout);
    this.getResources().openRawResource(R.raw.decisiontreexml);
    setStartOverBtn();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.util.Log.d(Config.TAG, "BroadcastReceiver.onReceive()");
    android.support.v4.content.LocalBroadcastManager.getInstance(getContext()).unregisterReceiver(this);
    mLastErrorCode = intent.getIntExtra(ApiRequestService.EXTENDED_ERROR_CODE, ErrorCode.NO_ERROR);
    onContentChanged();
}

public void updateAfterSingIn(net.brainas.android.app.infrustructure.UserAccount userAccount) {
    tasksManager = new net.brainas.android.app.domain.helpers.TasksManager(taskDbHelper, accountsManager.getCurrentAccountId());
}

@java.lang.Override
public void onLocationFound(android.location.Location location) {
    android.widget.Toast.makeText(getApplicationContext(), ("Latitude - " + (location.getLatitude())), Toast.LENGTH_SHORT).show();
}

@com.google.gwt.uibinder.client.UiHandler(value = "closeIpadBtn")
public void onIpadCloseClick(com.google.gwt.event.dom.client.ClickEvent clickEvent) {
    ipadSectiondiv.setVisible(false);
    androidSectiondiv.setVisible(false);
    org.ednovo.gooru.shared.util.StringUtil.IPAD_MESSAGE_Close_Click = true;
    org.ednovo.gooru.client.mvp.play.collection.body.CollectionPlayerMetadataView.onClosingAndriodorIpaddiv();
    org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.onClosingAndriodorIpaddiv();
}

public retrofit2.Call<java.util.List<kis.agh.edu.pl.childrensupervisiorandroid.database.Task>> getTasksCall() {
    retrofit2.Call<java.util.List<kis.agh.edu.pl.childrensupervisiorandroid.database.Task>> tasksCall = service.getTasks(parentName, childName);
    java.util.List<kis.agh.edu.pl.childrensupervisiorandroid.database.Task> tasks = null;
    return tasksCall;
}

@com.squareup.otto.Subscribe
public void subscribe(today.gacha.android.services.GachaLocationService.LastLocationEvent event) {
    assertFalse(event.isSuccess());
    assertNull(event.getLocation());
    latch.countDown();
}

@java.lang.Override
public boolean onKey(android.content.DialogInterface dialog, int keyCode, android.view.KeyEvent event) {
    if (keyCode == (android.view.KeyEvent.KEYCODE_BACK)) {
        getFragmentManager().popBackStack();
    }
    return false;
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    mDrawerToggle.onConfigurationChanged(newConfig);
    if ((newConfig.orientation) != (prevOrientation)) {
        rotated = true;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.util.Log.d("*******", "*******************");
    onCreateProductList();
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    android.widget.Toast.makeText(context, ("you clicl on" + prefName), Toast.LENGTH_SHORT).show();
    return false;
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.widget.ListView listView = ((android.widget.ListView) (parent));
    java.lang.String item = ((java.lang.String) (listView.getSelectedItem()));
}

private void putHomeFragmentInTop(boolean back) {
    headertextview.setText(getResources().getString(R.string.principaltext).toUpperCase());
    selectFragment(com.udl.android.bloodpressuremonitor.fragments.HomeFragment.getNewInstace(), true, back);
}

void datainicial() {
    values = filmData.getAllFilmstitol();
    listViewAdapter = new android.widget.ArrayAdapter<com.example.pr_idi.movierecord.Film>(getActivity().getApplicationContext(), R.layout.list_item, R.id.txtitem, values);
    listView.setAdapter(listViewAdapter);
}

public android.database.Cursor radomDateQuery() {
    java.lang.String dateOfDay = com.example.huiweidong.Reminder.DateOfDay.getDateOfDay();
    android.database.sqlite.SQLiteDatabase db = getReadableDatabase();
    android.database.Cursor c = db.rawQuery("SELECT _id, CONTACT_PERSON,REPEATSNR,REPEATSINTERVAL,UNSHARPENNR,RADOMDATE FROM Reminder_tabledb WHERE RADOMDATE = ?", new java.lang.String[]{ dateOfDay });
    return c;
}

private void open(android.app.Fragment fragment, java.lang.String tag) {
    if ((fragmentManager) != null) {
        fragmentManager.beginTransaction().add(R.id.main_container, fragment).addToBackStack(tag).commit();
    }
}

public void pauseAtCurrentLocation() {
    com.o3dr.android.client.apis.ControlApi.getApi(this).pauseAtCurrentLocation();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    android.util.Log.i("GEOFENCE MONITORING", "onLocationChanged ");
    mLastLocation = location;
    tellFragmentLocationChanged();
    requestAllGeofences();
}

@java.lang.Override
public void onSuccess(java.lang.Void aVoid) {
    android.widget.Toast.makeText(this, "Geofences added", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    listener.onAnimationEnd(view);
    view.setVisibility(View.GONE);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((checkbox.getVisibility()) == (android.view.View.VISIBLE)) {
        return ;
    }
    org.catrobat.catroid.ui.fragment.FormulaEditorFragment.showFragment(view, this, getFormulaWithBrickField(BrickField.ROBOME_MOVE_CYCLES));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((onItemClickListener) != null) {
        onItemClickListener.onItemClick(holder.itemView, position);
    }
}

@java.lang.Override
public boolean dispatchTouchEvent(android.view.MotionEvent event) {
    this.onTouchEvent(event);
    return true;
}

public int getFriendListVersion() {
    android.content.SharedPreferences sharedPreferences = context.getSharedPreferences(preferenceFileName, Context.MODE_PRIVATE);
    return sharedPreferences.getInt("friendListVersion", 0);
}

protected void visitComponent(@android.support.annotation.NonNull
com.oakonell.dndcharacter.model.character.BaseCharacterComponent component) {
    result.addAll(component.getFeatures());
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    it.bsdsoftware.library.BSDImage image = adapter.getItem(position);
    it.bsdsoftware.library.BSDUtility.handleClickItem(getActivity(), image, gallery);
}

@java.lang.Override
public void onDeined(java.lang.String[] dinedPermissions) {
    android.widget.Toast.makeText(this, "无法获取所有权限", Toast.LENGTH_SHORT).show();
    for (java.lang.String permission : dinedPermissions) {
        android.util.Log.e("ss", ("被拒绝的权限:" + permission));
    }
}

@java.lang.Override
protected void doOnCreated(android.os.Bundle savedInstanceState) {
    android.util.Log.d("TEST", "IMPOSSIBLE");
    mainPresenter.setupView();
}

public boolean loadCategories(android.view.MenuItem menuItem) {
    java.lang.System.out.println("------> Attempt to reload categories!");
    listAdapter.setItemCategories(categoryManager.getAllCategories());
    java.lang.System.out.println(("------> Item Categories: " + (categoryManager.getAllCategories())));
    expListView.collapseGroup(0);
    return true;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    in[0] = langList.get(position);
    validate();
}

@java.lang.Override
public void onLayoutChildren(android.support.v7.widget.RecyclerView.Recycler recycler, android.support.v7.widget.RecyclerView.State state) {
    super.onLayoutChildren(recycler, state);
    if ((getOrientation()) == (HORIZONTAL)) {
        detachAndScrapAttachedViews(recycler);
        fill(recycler);
        mAncorPos = 0;
    }
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    com.mintminter.simplelockscreen.Util.putValue(this, Common.KEY_COUNTER, i);
}

public void setClickThreshold(float clickThreshold) {
    if ((clickThreshold < 0) || (clickThreshold > 1.0F))
        android.util.Log.e(TAG, "clickThreshold must range from 0...1.0f inclusive");
    else
        this.clickThreshold = clickThreshold;
    
}

public void getHashtag(java.lang.String name, com.google.firebase.database.ValueEventListener listener) {
    android.util.Log.d("___", name);
    com.google.firebase.database.DatabaseReference dataRef = ref.child("Hashtags").child(name);
    dataRef.addValueEventListener(listener);
}

private void startScan(android.view.View v) {
    btScan.setText(getString(R.string.stop));
    resultContainer.removeAllViewsInLayout();
    showStartNotification();
    presenter.startScan();
}

private void showJoke(java.lang.String jokeString) {
    android.content.Intent jokeViewIntent = new android.content.Intent(this, com.example.eamon.jokeviewer.JokeViewActivity.class);
    jokeViewIntent.putExtra(JokeViewActivity.EXTRA_JOKE, com.example.JokeWizard.getJoke());
    this.startActivity(jokeViewIntent);
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    android.util.Log.i("onDestroy: ", "called");
}

@java.lang.Override
protected void onDraw(android.graphics.Canvas canvas) {
    canvas.drawColor(Color.BLACK);
    note.update(canvas);
}

@java.lang.Override
public void onClick(android.view.View v) {
    mIndexView.readyGoForResult(com.android.yzd.memo.mvp.ui.activity.EditActivity.class);
}

private void signOut() {
    Auth.GoogleSignInApi.signOut(mGoogleApiClient).setResultCallback(new com.google.android.gms.common.api.ResultCallback<com.google.android.gms.common.api.Status>() {
        @java.lang.Override
        public void onResult(com.google.android.gms.common.api.Status status) {
            updateUI(false);
        }
    });
}

protected android.location.Location getBusLocation() {
    return cl.smartcities.isci.transportinspector.positionProvider.PositionProvider.getInstance().getLastKnownLocation();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int which) {
    dialog.dismiss();
}

@java.lang.Override
protected void onPostCreate(android.os.Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    if ((mAlbumType) != (com.loopeer.android.librarys.imagegroupview.activity.AlbumActivity.TAKE_PHOTO))
        getSupportLoaderManager().initLoader(com.loopeer.android.librarys.imagegroupview.activity.AlbumActivity.LOADER_ID_FOLDER, null, this);
    
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.pref_general);
    bindPreferenceSummaryToValue(findPreference(getString(R.string.pref_sort_key)));
    getActionBar().setDisplayHomeAsUpEnabled(true);
}

public static android.graphics.drawable.Drawable getImageResourceByName(android.app.Activity context, java.lang.String imageName) {
    java.lang.String packageName = context.getPackageName();
    int resId = context.getResources().getIdentifier(imageName, "drawable", packageName);
    return context.getDrawable(resId);
}

private int getApplicationVersionCode() {
    try {
        return this.getPackageManager().getPackageInfo(getPackageName(), 0).versionCode;
    } catch (android.content.pm.PackageManager e) {
        throw new java.lang.RuntimeException(e.getMessage());
    }
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    mCurrentLocation = location;
    mLastUpdateTime = java.text.DateFormat.getTimeInstance().format(new java.util.Date());
    android.widget.Toast.makeText(this, "Location Updated", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onChange(io.realm.RealmResults<com.zhan.budget.Model.Realm.Account> element) {
    element.removeChangeListener(this);
    android.util.Log.d(com.zhan.budget.Fragment.AccountFragment.TAG, "there's a change in results account ");
    accountList = myRealm.copyFromRealm(element);
    accountRecyclerAdapter.setAccountList(accountList);
    populateAccountWithInfo(true);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    A.db.setTransactionSuccessful();
    A.db.endTransaction();
    dialog.cancel();
    act.goHome();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return new com.busao.gyn.stops.list.StopListFragment();
        case 1 :
            return com.busao.gyn.stops.map.BusaoMapFragment.newInstance();
    }
    return null;
}

public void onClick(android.content.DialogInterface dialog, int which) {
    bound.disconnectAll(true, false);
    waitingForDisconnectAll = false;
    setIntent(new android.content.Intent());
    if (closeOnDisconnectAll) {
        finish();
    }
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> l, android.view.View v, int position, long id) {
    adapter.changeSelection(position);
}

public static boolean optionsItemSelected(com.gcode.notes.activities.compose.list.ComposeListActivity composeListActivity, android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_settings :
            return true;
        case android.R.id.home :
            com.gcode.notes.activities.helpers.compose.list.ComposeListSaveHelper.saveList(composeListActivity);
            composeListActivity.finish();
    }
    return false;
}

public static void i(java.lang.String tag, java.lang.String m) {
    android.util.Log.d(tag, m);
    com.newsblur.util.Log.add(com.newsblur.util.Log.I, tag, m, null);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (moviePlayer.isPlaying()) {
        moviePlayer.pause();
    }else {
        try {
            moviePlayer.play();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
    }
}

@java.lang.Override
public void adapterrefresh(java.util.List<dev.eyesless.simple_weather_for_fishermans.weather_response_classes.Datum> mylist, boolean isdatanew) {
    cfinterface.adapterrefresh(mylist, isdatanew);
    android.util.Log.e("MY_TAG", ("refreshing adapter on presenter " + isdatanew));
}

@java.lang.Override
public void run() {
    io.kuzzle.demo.demo_android.BlinkingMarker marker = markerList.get(userId);
    if (marker != null)
        marker.stopBlinking().removeMarker();
    
}

@java.lang.Override
public void onItemCheckedStateChanged(android.view.ActionMode mode, int position, long id, boolean checked) {
    customImageSelectAdapter.toggleSelection(position, checked);
    mode.setTitle(((java.lang.String.valueOf(customImageSelectAdapter.getCountSelected())) + " selected"));
}

public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case android.R.id.home :
            android.support.v4.app.NavUtils.navigateUpFromSameTask(this);
            overridePendingTransition(R.anim.slide_out_left_to_right, R.anim.slide_in_left_to_right);
            return true;
    }
    return super.onOptionsItemSelected(item);
}

public void setAnswerShownResult(boolean isAnswerShown) {
    android.content.Intent data = new android.content.Intent();
    data.putExtra(com.akimov.android.geoquiz.CheatActivity.EXTRA_ANSWER_IS_SHOWN, isAnswerShown);
    setResult(com.akimov.android.geoquiz.RESULT_OK, data);
}

public static long readLongPreference(android.content.Context context, java.lang.String preferenceToRead) {
    android.content.SharedPreferences preferences = context.getSharedPreferences(context.getString(R.string.shared_prefs_name), Context.MODE_PRIVATE);
    long preference = preferences.getLong(preferenceToRead, java.lang.System.currentTimeMillis());
    return preference;
}

@java.lang.Override
public void onError(@android.support.annotation.NonNull
android.hardware.camera2.CameraDevice camera, int error) {
    cameraDevice.close();
    cameraDevice = null;
}

private void emptyEntries() {
    java.lang.String deleteQuery = "DELETE FROM " + (Data.RSDBhandler.TABLE_NAME);
    android.database.sqlite.SQLiteDatabase db = this.getReadableDatabase();
    db.execSQL(deleteQuery);
}

@java.lang.Override
public void onStart() {
    android.util.Log.d(TAG, "onStart - start");
    super.onStart();
    linLayout.removeAllViews();
    createInterface();
    android.util.Log.d(TAG, "onStart - finish");
}

@java.lang.Override
public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    boolean retry = true;
    while (retry) {
        try {
            thread.join();
            retry = false;
        } catch (java.lang.InterruptedException e) {
        }
    } 
}

@java.lang.Override
public void onClick(android.view.View v) {
    for (int i = 0; i < (children.priorSels.length); i++) {
        children.priorSels[i] = -1;
    }
    children.priorSels[childPosition] = 1;
    notifyItemChanged(groupPosition);
}

public void measureCurrentView(android.view.View currentView) {
    mCurrentView = currentView;
    this.post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            requestLayout();
        }
    });
}

@java.lang.Override
public void onResult(com.google.android.gms.common.api.Status status) {
    java.lang.System.out.print("email: ");
    android.content.Intent intent = new android.content.Intent(this, com.example.mrides.MainActivity.class);
    startActivity(intent);
}

public static void showText(android.content.Context context, java.lang.String message) {
    android.widget.Toast.makeText(context.getApplicationContext(), message, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void run() {
    saveCallRecord(1);
    android.view.animation.Animation animation = new android.view.animation.AlphaAnimation(1.0F, 0.0F);
    animation.setDuration(800);
    rootContainer.startAnimation(animation);
    finish();
}

@java.lang.Override
protected void onPostExecute(byte[] result) {
    mProgressDialog.dismiss();
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), luc.edu.neuroscienceapp.activities.ImageChannelConversionActivity.class);
    luc.edu.neuroscienceapp.entities.Global.bytesBitmap = result;
    startActivity(intent);
}

@butterknife.OnClick(value = R.id.reload_text)
public void reloadTextViewClick(android.widget.Button button) {
    refreshData();
}

@java.lang.Override
public void onError() {
    android.util.Log.d(be.ugent.zeus.hydra.viewpager.ImagePagerAdapter.TAG, "Image error");
    progressBar.setVisibility(View.GONE);
}

@java.lang.Override
public int compare(android.hardware.Camera.Size a, android.hardware.Camera.Size b) {
    return ((b.width) * (b.height)) - ((a.width) * (a.height));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.util.Log.d(com.example.vincentmonot.rpgmanager.CharacterSheetActivity.TAG, "Cancelling");
    dialog.cancel();
}

public void getRandomUser(android.view.View view) {
    getRandomJSON();
    nameTV.setText(com.example.test2w3.MainActivity.NAME);
    addressTV.setText(com.example.test2w3.MainActivity.ADDRESS);
    emailTV.setText(com.example.test2w3.MainActivity.EMAIL);
    getImageFromURL();
}

public android.view.View findViewByCard(com.example.james.cardsuite.Card card) {
    for (android.widget.ImageView view : cardViews) {
        if (view.getTag().equals(card))
            return view;
        
    }
    return null;
}

@android.support.annotation.NonNull
public android.content.Intent getFeedbackEmailIntent(@android.support.annotation.NonNull
final java.lang.String[] emailAddresses, @android.support.annotation.NonNull
final java.lang.String emailSubjectLine, @android.support.annotation.NonNull
final android.net.Uri screenshotUri) {
    final android.content.Intent emailIntent = getBaseFeedbackEmailIntent(emailAddresses, emailSubjectLine);
    emailIntent.putExtra(Intent.EXTRA_STREAM, screenshotUri);
    emailIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
    return emailIntent;
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.String rejectedReason = editTextRejectedReason.getText().toString();
    requisition.setRemarks(rejectedReason);
    finish();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    com.example.microfan.tag_emulation.FragmentObject2.instance = this;
    android.view.View rootView = inflater.inflate(R.layout.write_tag_fragment, container, false);
    mainView = rootView;
    SetDefaultText(rootView);
    SetOnClickListeners(rootView);
    return rootView;
}

public static void showLogin(android.app.Fragment fragment, int requestCode) {
    android.content.Intent intent = new android.content.Intent(fragment.getContext(), com.airmap.airmapsdk.ui.activities.LoginActivity.class);
    fragment.startActivityForResult(intent, requestCode);
}

public boolean isReady() {
    com.raizlabs.android.dbflow.data.Blob form = tracingFormDao.getTracingForm().getForm();
    return form != null;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.widget.Toast.makeText(getApplicationContext(), "Deixar na base para continuar depois", Toast.LENGTH_SHORT).show();
    finish();
}

@java.lang.Override
public void onPurchaseHistoryRestored() {
    android.widget.Toast.makeText(this, "restore previous purchase", Toast.LENGTH_SHORT).show();
    ADS_REMOVED = isRemoveAdsPurchased();
}

public cs.android.viewbase.CSView<T> text(int resId, java.lang.Object... formatArgs) {
    asTextView().setText(cs.java.lang.Lang.format(cs.android.viewbase.CSView.getStringResource(resId), formatArgs));
    return this;
}

@android.support.annotation.NonNull
@java.lang.Override
public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) {
    presenter.onCreateView();
    preCreateView();
    android.app.Dialog result = createDialog(savedInstanceState);
    postCreateView(result, savedInstanceState);
    return result;
}

@java.lang.Override
public void onClick(android.view.View view) {
    hostWillingness = 15;
    mServiceBroadcastingHandler.postDelayed(mServiceBroadcastingRunnable, com.semaphore_soft.apps.cypher.MainActivity.SERVICE_BROADCASTING_INTERVAL);
    discoverService();
}

public void onClick(android.content.DialogInterface dialog, int id) {
    android.app.FragmentTransaction fm = getFragmentManager().beginTransaction();
    fm.replace(R.id.fragment_container, new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment());
    fm.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
    fm.commit();
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    d.onTouchEvent(event);
    return false;
}

public void setEmptyView(android.view.View emptyView) {
    mEmptyView = emptyView;
    addView(mEmptyView, new com.dexafree.materialList.view.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
    checkIfEmpty();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(mobileoak.volleyballtracker.adapter.RosterAdapter.TAG, ("Got a click on " + (player.getName())));
    if ((mListener) != null) {
        mListener.rowSelected(player);
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    questionAnswerAdapter.setShowAnswer(true);
    submitButton.setText(R.string.finish);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    android.widget.CheckBox randomCheckBox = ((android.widget.CheckBox) (findViewById(R.id.random)));
    randomCheckBox.setChecked(random);
}

@java.lang.Override
public void beforeTextChanged(java.lang.CharSequence s, int start, int count, int after) {
    android.util.Log.d(com.lukedeighton.wheelsample.AttendantActivity.TAG, ("beforeTextChanged:" + s));
}

public void setOnItemClickListener(final com.loyalium.cpuloyal.tipcalc.models.TipRecord element, final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener) {
    itemView.setOnClickListener(new android.view.View.OnClickListener() {
        @java.lang.Override
        public void onClick(android.view.View view) {
            if (onItemClickListener != null) {
                onItemClickListener.onItemClick(element);
            }
        }
    });
}

public void stopService() {
    android.util.Log.d(com.github.pires.obd.reader.io.MockObdGatewayService.TAG, "Stopping service..");
    notificationManager.cancel(com.github.pires.obd.reader.io.NOTIFICATION_ID);
    jobsQueue.clear();
    isRunning = false;
    stopSelf();
}

public void onClick(android.view.View v) {
    com.mun.minh_minhh.interlac.Server.writeReview(new com.mun.minh_minhh.interlac.Review("john", "lol,shit", 0, 2));
}

public static com.idevicesinc.sweetblue.utils.BluetoothEnabler.BluetoothEnablerListener.Please doNextWithRequestCode(android.content.Context context, int requestCode) {
    return new com.idevicesinc.sweetblue.utils.BluetoothEnabler.BluetoothEnablerListener.Please(context, com.idevicesinc.sweetblue.utils.BluetoothEnabler.BluetoothEnablerListener.Please.DO_NEXT_WITH_REQUEST_CODE, requestCode);
}

public void deleteFood() {
    int rowsDeleted = databaseAdapter.deleteFood(foodId);
    if (rowsDeleted == 1) {
        android.widget.Toast.makeText(getActivity(), "Food deleted", Toast.LENGTH_SHORT).show();
        onFoodSaved.onFoodSavedSuccessfully();
    }
}

private int getReplyTo() {
    android.util.Log.i(logTag, ("returning replyto " + (radioReplyTo.indexOfChild(findViewById(radioReplyTo.getCheckedRadioButtonId())))));
    return radioReplyTo.indexOfChild(findViewById(radioReplyTo.getCheckedRadioButtonId()));
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return mRallyActive ? new onl.deepspace.zoorallye.fragments.MapFragment() : new onl.deepspace.zoorallye.fragments.StartRallyFragment();
        case 1 :
            return mRallyActive ? new onl.deepspace.zoorallye.fragments.MapFragment() : new onl.deepspace.zoorallye.fragments.InfoFragment();
    }
    return null;
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    if (((mediaPlayer) != null) && fromUser) {
        mediaPlayer.seekTo(progress);
    }
}

@java.lang.Override
public boolean onTouchEvent(android.view.MotionEvent event) {
    if (!(gestureDetector.onTouchEvent(event))) {
        return super.onTouchEvent(event);
    }
    return true;
}

@java.lang.Override
public void onClick(android.view.View view) {
    net.kyouko.cloudier.CloudierApplication.getBus().post(new net.kyouko.cloudier.event.CommentTweetEvent(tweet, tweet.nickname, content.getText().toString(), this));
}

@java.lang.Override
public void onGameMessageReceived(java.lang.String playerId, org.json.JSONObject message) {
    android.util.Log.d(com.example.mirko.custombuttonexample.miniGameFragments.ShakeMinigame.TAG, ("onGameMessageReceived: " + message));
    if (message.has("startGame")) {
        mSensorManager.registerListener(mShakeDetector, mAccelerometer, SensorManager.SENSOR_DELAY_GAME);
    }
}

protected void startLocationUpdates() {
    android.widget.Toast.makeText(context, "startLocationUpdates", Toast.LENGTH_SHORT).show();
    LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this);
}

@java.lang.Override
public void onSelection(com.afollestad.materialdialogs.MaterialDialog dialog, android.view.View itemView, int position, java.lang.CharSequence text) {
    mPriority = position + 1;
    android.util.Log.d(de.grau.organizer.activities.EditorActivity.DEBUG_TAG, ("User Priority Dialog Result = " + (mPriority)));
    setPriorityButton();
}

@java.lang.Override
public void onCancel() {
    showProgressDialog();
    android.widget.Toast.makeText(this, "FaceBook Sign in cancelled", Toast.LENGTH_SHORT).show();
    updateUI(null);
}

private android.app.AlertDialog getAutoCheckinDialog(android.app.Activity activity, android.content.DialogInterface... checkinListeners) {
    if ((autoCheckinDialog) == null) {
        createAutoCheckinAlertDialog(activity, checkinListeners);
    }
    return autoCheckinDialog;
}

private boolean isRemoteVideoPlaying() {
    timber.log.Timber.d("VideoDetailsFragment : isRemoteVideoPlaying()");
    if ((castSession) != null) {
        com.google.android.gms.cast.framework.media.RemoteMediaClient remoteMediaClient = castSession.getRemoteMediaClient();
        return remoteMediaClient.isPlaying();
    }
    return false;
}

public void onClick(android.content.DialogInterface dialog, int which) {
    mEmailView.setText("");
    mPasswordView.setText("");
    mUsernameView.setText("");
    mNameView.setText("");
    mPhoneView.setText("");
}

private void initView() {
    if ((mView) instanceof me.tikitoo.androiddemo.view.ObjView) {
    }
}

@java.lang.Override
public void onContactEntrySaveChanges(edu.pdx.ece558_fall15.alex_elizabeth.businesscardcontact.ContactEntry ce) {
    android.util.Log.d(edu.pdx.ece558_fall15.alex_elizabeth.businesscardcontact.ContactEditDetailActivity.TAG, "onContactEntrySaveChanges");
    mContactEntry = ce;
    finishActivity();
}

static void syncOpenUrlWhenUninstall(java.lang.String dirStr, java.lang.String openUrl) {
    cn.hiroz.uninstallfeedback.FeedbackUtils.init(0, dirStr, "com.android.browser/com.android.browser.BrowserActivity", "android.intent.action.VIEW", openUrl, Build.BRAND);
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    audioVisualization.linkTo(DbmHandler.Factory.newVisualizerHandler(getContext(), 0));
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    viewPager.removeAllViews();
    fillViewPager();
    getLocation();
    lat = location.getLatitude();
    lng = location.getLongitude();
}

@java.lang.Override
public java.util.Map<java.lang.String, java.lang.String> getHeaders() throws com.android.volley.AuthFailureError {
    java.util.HashMap<java.lang.String, java.lang.String> headers = new java.util.HashMap<>();
    headers.put("User-agent", java.lang.System.getProperty("http.agent"));
    return headers;
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    connectGoogleApiClient();
    com.taibah.busservice.utils.DriverService.driverLocationReportingServiceIsRunning = true;
    new com.taibah.busservice.utils.UpdateRouteStatus(getApplicationContext()).execute("status=1");
    return START_STICKY;
}

private void showGlobalContextActionBar() {
    android.app.ActionBar actionBar = getActivity().getActionBar();
    actionBar.setDisplayShowTitleEnabled(true);
    actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
}

@java.lang.Override
public void onAnimationEnd(android.view.View view) {
    super.onAnimationEnd(view);
    getFloatingToolbar().setVisibility(View.INVISIBLE);
    android.support.v4.view.ViewCompat.animate(getFloatingToolbar()).setListener(null);
    getAnimationListener().onAnimationFinished();
}

protected static void sendMsg(java.lang.String number, java.lang.String message) {
    android.telephony.SmsManager smsManager = android.telephony.SmsManager.getDefault();
    smsManager.sendTextMessage(number, null, message, null, null);
}

@java.lang.Override
public void removeOverlay(android.view.ViewGroup sceneRoot, android.view.View overlayView) {
    android.transitions.everywhere.utils.ViewOverlayPreJellybean viewOverlay = android.transitions.everywhere.utils.ViewOverlayPreJellybean.getOverlay(sceneRoot);
    viewOverlay.removeView(overlayView);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return com.wole.story.ui.fragment.TestFragment.newInstance(categorys.get(position).getType());
}

@java.lang.Override
public void onResume() {
    super.onResume();
    org.opencv.android.OpenCVLoader.initAsync(OpenCVLoader.OPENCV_VERSION_2_4_9, this, mLoaderCallback);
}

@java.lang.Override
public com.github.geekarist.mine.list.StuffViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View view = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_view_stuff_item, parent);
    return new com.github.geekarist.mine.list.StuffViewHolder(view);
}

@java.lang.Override
public void onDestroyView() {
    super.onDestroyView();
    for (android.os.AsyncTask task : tasks) {
        task.cancel(true);
    }
    bitmap.recycle();
    bitmap = null;
}

@java.lang.Override
public void showAuthenticationUI(java.lang.String url, com.ge.predix.mobile.core.AuthHandlerCallback authHandlerCallback) {
    android.content.Intent intent = new android.content.Intent(parentActivity, predix.ge.com.referenceapplication.AuthenticationActivity.class);
    intent.putExtra("url", url);
    parentActivity.startActivityForResult(intent, 999);
}

private void checkInternetConnection() {
    if (!(it.jaschke.alexandria.MainActivity.isNetworkAvailable(this))) {
        android.widget.Toast.makeText(this, R.string.noNetwork_connection, Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = new android.content.Intent();
    setResult(RESULT_NEXT, i);
    overridePendingTransition(0, 0);
    finish();
    java.lang.System.out.println("onBackPressed1");
    overridePendingTransition(0, 0);
}

public void run(android.view.View view) {
    wireController.redrawWires();
    circuitController.run(this);
    ((android.widget.GridView) (findViewById(R.id.circuit))).invalidateViews();
    checkScenarioComplete();
}

@java.lang.Override
public int getCalculatedPreferredNetworkType() {
    enforceReadPermission();
    return com.android.internal.telephony.PhoneFactory.calculatePreferredNetworkType(mPhone.getContext());
}

@java.lang.Override
public void updateBus() {
    android.util.Log.i(com.ikardwynne.wheresthatbus.MainActivity.TAG, "Updating the location of the bus");
    action = null;
    mapFrag = getMapFragment(true);
    getFragmentManager().beginTransaction().replace(R.id.container, mapFrag).commit();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.rndapp.mtamap.SubwayApplication.mInstance = this;
    com.rndapp.mtamap.SubwayApplication.mRequestQueue = com.android.volley.toolbox.Volley.newRequestQueue(this);
    io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics());
    com.rndapp.mtamap.Analytics.init(this);
}

@java.lang.Override
public void onConnectionFailed(com.google.android.gms.common.ConnectionResult connectionResult) {
    android.util.Log.wtf(com.agrass.coffeemap.MapsActivity.TAG, ("onConnectionFailed" + connectionResult));
}

private android.database.Cursor getAllUsers() {
    android.database.sqlite.SQLiteDatabase db = this.getReadableDatabase();
    return db.query("USER", null, null, null, null, null, null, "20");
}

public void resumeRing() {
    if (com.android.phone.Ringer.DBG)
        com.android.phone.Ringer.log("resumeRing()...");
    
    getRingHandler().sendEmptyMessage(com.android.phone.Ringer.RingHandler.MSG_RESUME);
}

@java.lang.Override
public void onPause() {
    super.onPause();
    selectedTabPosition = tabLayout.getSelectedTabPosition();
    android.util.Log.d("TabId: ", java.lang.String.valueOf(selectedTabPosition));
}

android.arch.lifecycle.LiveData<com.hanihashemi.dictionary.network.Resource<com.hanihashemi.dictionary.model.Word>> getDefinition(java.lang.String word) {
    if (shouldCreateNewInstance(definition))
        definition = dictionaryRepository.definition(word);
    
    return definition;
}

@org.junit.Test(expected = java.lang.IllegalArgumentException.class)
public void test_crash_if_not_aa() {
    io.nlopez.smartadapters.builders.AABindableLayoutBuilder builder = new io.nlopez.smartadapters.builders.AABindableLayoutBuilder();
    int viewType = io.nlopez.smartadapters.utils.Mapper.viewTypeFromViewClass(builder.viewType(mockModel, 0, mapper));
    android.view.View bindableLayout = builder.build(parent, viewType, mockModel, mapper);
}

@java.lang.Override
public void onError(com.facebook.FacebookException error) {
    showProgressDialog();
    android.widget.Toast.makeText(this, "FaceBook Sign in Failed", Toast.LENGTH_SHORT).show();
    updateUI(null);
}

private void takePhoto(java.lang.String tag) {
    assertNotNull(activity.findViewById(ca.ualberta.CMPUT301W15T06.R.id.takephoto));
    ((android.view.View) (activity.findViewById(ca.ualberta.CMPUT301W15T06.R.id.takephoto))).performClick();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((listener) != null) {
        if (listener.onGroupClick(getAdapterPosition())) {
            expand();
        }else {
            collapse();
        }
    }
}

@java.lang.Override
public void onLoadFinished(android.content.Loader<java.util.List<com.chiragawale.folinsight.entity.Follower>> loader, java.util.List<com.chiragawale.folinsight.entity.Follower> data) {
    android.util.Log.w("LOADER FINSIHED LOADING", "");
    mFollowerAdapter.clear();
    mFollowerAdapter.addAll(data);
    progressBar.setVisibility(View.INVISIBLE);
}

void showWaitingRoom(com.google.android.gms.games.multiplayer.realtime.Room room) {
    android.util.Log.e("#####", "F: SHOW WAITING ROOM");
    android.content.Intent intent = Games.RealTimeMultiplayer.getWaitingRoomIntent(mGoogleApiClient, room, com.seankelly001.assassin.MainActivity.MIN_PLAYERS);
    mRoom = room;
    startActivityForResult(intent, com.seankelly001.assassin.MainActivity.RC_WAITING_ROOM);
}

@java.lang.Override
public void onLoaderReset(android.support.v4.content.Loader<java.util.List<com.example.rev.pocketglobe.data.Article>> loader) {
    mArticles.clear();
    mAdapter.notifyDataSetChanged();
}

private void initSwipeRefreshLayout() {
    mSwipeRefreshLayout = ((android.support.v4.widget.SwipeRefreshLayout) (getActivity().findViewById(R.id.swiperefreshlayout)));
    mSwipeRefreshLayout.setColorSchemeResources(R.color.colorBlue, R.color.colorPrimaryDark, R.color.colorPrimary);
    mSwipeRefreshLayout.setOnRefreshListener(this);
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    saveInstanceStateForFields(outState, getInstance(), getInstance().getClass());
}

public void showMeaning(android.view.View view) {
    android.widget.LinearLayout mLayout = ((android.widget.LinearLayout) (view));
    mLayout.setVisibility(View.GONE);
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    ((com.qtao.kaoyanknowledge.ui.MainActivity) (activity)).getFadingActionBarHelper().setActionBarAlpha(255);
}

@android.support.annotation.Nullable
public static java.lang.Double getDouble(@android.support.annotation.NonNull
java.lang.String key, @android.support.annotation.Nullable
java.lang.Double defaultValue) {
    long start = java.lang.System.currentTimeMillis();
    return java.lang.Double.valueOf(com.pepperonas.aesprefs.AesPrefs.get(key, java.lang.String.valueOf(defaultValue)));
}

public void initColorTheme(android.widget.FrameLayout statusBar, java.lang.String name, int color) {
    this.setWindowTop(name, color);
    this.initStatusBar(statusBar);
}

@java.lang.Override
public void onStatusChanged(java.lang.String s, int i, android.os.Bundle bundle) {
    android.util.Log.e(com.theah64.pigeon.services.LocationReporterService.X, ("Status changed " + s));
}

@java.lang.Override
protected void onStart() {
    android.content.Intent intent = new android.content.Intent(this, com.android.grabhouse.GPSTracker.class);
    bindService(intent, connection, Context.BIND_AUTO_CREATE);
    super.onStart();
}

public static final com.google.android.gms.maps.model.MarkerOptions PersonToMarkerOption(net.hokiegeek.android.dondeestas.data.Person p) {
    return new com.google.android.gms.maps.model.MarkerOptions().position(net.hokiegeek.android.dondeestas.Util.PositionToLatLng(p.getPosition())).title(p.getId());
}

public android.graphics.Bitmap loadFavicon(com.example.jose.updated.model.Page page) {
    webView.loadData(page.getContents(), "text/html", null);
    webView.setActivated(false);
    return webView.getFavicon();
}

@java.lang.Override
public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) {
    android.content.Intent intent = new android.content.Intent(this, com.app.scope.myapplication.MainActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(com.rut0.sqllistsync.DbHelper.CREATE_TABLE);
    database = db;
}

public void setRightIcon5(int drawableRes) {
    rightIcon5View = ((android.widget.ImageButton) (rightIcon5ViewStub.inflate()));
    rightIcon5View.setImageResource(drawableRes);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_open :
            openFile(FILENAME);
            return true;
        case R.id.action_save :
            saveFile(FILENAME);
            return true;
        default :
            return true;
    }
}

public android.support.v4.content.Loader<android.database.Cursor> onCreateLoader(int id, android.os.Bundle args) {
    return new android.support.v4.content.CursorLoader(mContext, SongContract.SongData.CONTENT_URI, co.songliao.guitvi.ListFragment.projection, null, null, null);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    android.util.Log.v("onResume", "-------onResume");
    mainContentRVAdapter.readDataFromDB(readListContent());
    rv_main_content.setAdapter(mainContentRVAdapter);
}

public void run() {
    android.content.Intent i = new android.content.Intent();
    android.os.Bundle b = new android.os.Bundle();
    i.setClass(this, utc_4910.screenActivities.CreateBucketActivity.class);
    finish();
    startActivity(i);
}

@java.lang.Override
public void onBufferingUpdate(android.media.MediaPlayer mp, int percent) {
    android.util.Log.d(com.github.rtoshiro.view.video.FullscreenVideoView.TAG, ("onBufferingUpdate = " + percent));
    if ((this.bufferingUpdateListener) != null)
        this.bufferingUpdateListener.onBufferingUpdate(mp, percent);
    
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d(com.example.xyzreader.ui.ArticleListActivity.TAG, "snack clicked!!!!!!!!");
    if (!(mIsRefreshing)) {
        mIsRefreshing = true;
        refresh();
        updateRefreshingUI();
    }
}

public io.reactivex.Observable<info.blockchain.wallet.payload.data.Wallet> createHdWallet(java.lang.String password, java.lang.String walletName, java.lang.String email) {
    return rxPinning.call(() -> payloadService.createHdWallet(walletName, email, password)).compose(piuk.blockchain.android.data.rxjava.RxUtil.applySchedulersToObservable());
}

@java.lang.Override
public void onClick(android.view.View v) {
    expressionListener("2");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (com.quickblox.sample.chat.utils.SharedPreferencesUtil.hasQbUser()) {
        proceedToTheNextActivityWithDelay();
        return ;
    }
    proceedToTheNextActivity();
}

public boolean contains(java.lang.String key) {
    android.content.SharedPreferences prefs = getSharedPreferences();
    boolean found = prefs.contains(key);
    return found;
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progresValue, boolean fromUser) {
    progress = progresValue;
    sunView.redraw(progress);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    super.onDismiss(dialog);
    if (mFinishActivity) {
        android.widget.Toast.makeText(getActivity(), "จำเป็นต้องได้รับอนุญาตในการเข้าถึงข้อมูลตำแหน่งของคุณ", Toast.LENGTH_SHORT).show();
        getActivity().finish();
    }
}

protected void setBits(android.graphics.Bitmap[] bits) {
    BackgroundImage = bits[0];
    thread.setRunning(true);
}

@java.lang.Override
public void onPhotoStoreReady(int requestId, byte[] data) {
    mStorageController.storePicture(data);
    com.fezrestia.android.viewfinderanywhere.control.OverlayViewFinderController.getInstance().getCurrentState().onPhotoStoreReady(data);
}

public void decrement(android.view.View view) {
    quantity = (quantity) - 1;
    display(quantity);
}

@android.support.annotation.CallSuper
@java.lang.Override
public void doLoadItems() {
    isLoading = true;
    if ((adapter) != null) {
        adapter.showLoadingState(true);
    }
    onDoLoadItems();
    timber.log.Timber.d("Loading items ...");
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((gem.com.support_client.screen.feedback.listfeedback.FeedbackAdapter.mListener) != null) {
        gem.com.support_client.screen.feedback.listfeedback.FeedbackAdapter.mListener.onRecyclerViewClick(getLayoutPosition().sgit);
    }
}

public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    v = inflater.inflate(R.layout.blueprint_layout, container, false);
    new com.connorboyle.elitetools.GetModulesTask(this).execute(com.connorboyle.elitetools.BlueprintsActivity.MODULES_JSON_URL);
    setupControls();
    return v;
}

@java.lang.Override
public void onSuccess(org.deviceconnect.android.deviceplugin.fplug.fplug.FPLUGResponse response) {
    updateText(root, R.id.init_res, getString(R.string.success));
}

protected void populateView(android.view.View v, T model, int position) {
    populateView(v, model);
}

protected final android.view.accessibility.AccessibilityNodeInfo findNodeByText(java.lang.String id, int index) {
    return findNodeById(id, index, 0);
}

private void setUpTest() {
    android.content.Intent intent = getIntent();
    if (intent.hasExtra(TestActivity.CURRENT_TEST))
        mTest = ((io.mdevlab.ocatraining.model.Test) (intent.getParcelableExtra(TestActivity.CURRENT_TEST)));
    
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    int progress = (seekBar.getProgress()) * 1000;
    seekTo(progress);
    android.util.Log.d(com.github.rtoshiro.view.video.FullscreenVideoLayout.TAG, "onStopTrackingTouch");
}

@java.lang.Override
public void onClick(android.view.View v) {
    checkBox.performClick();
    if (!(mSelectFiles.contains(file))) {
        mSelectFiles.add(file);
    }else
        mSelectFiles.remove(file);
    
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.pref_general);
    setHasOptionsMenu(true);
    com.cogn.wifirecord.SettingsActivity.bindPreferenceSummaryToValue(findPreference("example_text"));
    com.cogn.wifirecord.SettingsActivity.bindPreferenceSummaryToValue(findPreference(getString(R.string.key_number_of_scans)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    finish();
    startActivity(new android.content.Intent(this, powerup.systers.com.StartActivity.class));
}

public void ListenButtonClick(final android.view.View view) {
    this.AIService.startListening();
}

public void updateNumConnectedOutput(android.view.View view) {
    java.lang.String a = "" + (hub.getNumConnected());
    if ((hub) != null)
        numConnectedOutput.setText(a);
    
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    try {
        java.security.Security.insertProviderAt(new org.spongycastle.jce.provider.BouncyCastleProvider(), 1);
    } catch (java.lang.NoClassDefFoundError e) {
        android.util.Log.w(com.tananaev.passportreader.MainApplication.class.getSimpleName(), e);
    }
}

@java.lang.Override
public void push(android.os.Bundle UpdateSnapshot) {
    UpdateContent = UpdateSnapshot;
    ViewUpdate.post(this);
}

public void setFeedPartners(org.esn.mobilit.utils.parser.RSSFeed feedPartners) {
    android.util.Log.d(org.esn.mobilit.fragments.MyFragmentPagerAdapter.class.getSimpleName(), ("Partners feed count : " + (feedPartners.getItemCount())));
    this.feedPartners = feedPartners;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    upLloadUserToServer();
    dialog.dismiss();
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mediaPlayer, int i, int i1) {
    android.util.Log.d(App.TAG, "onError");
    if ((callbacksRef.get()) != null)
        callbacksRef.get().onError();
    
    return false;
}

public void postStartActivityDismissingKeyguard(final android.app.PendingIntent intent) {
    mHandler.post(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            startPendingIntentDismissingKeyguard(intent);
        }
    });
}

private android.view.View createView(android.view.ViewGroup parent) {
    android.view.LayoutInflater layoutInflater = ((android.view.LayoutInflater) (getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE)));
    android.view.View view = layoutInflater.inflate(layout, parent, false);
    return view;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    setContentView(R.layout.activity_main);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.view.MenuInflater menuInflater = getMenuInflater();
    menuInflater.inflate(R.menu.menu, menu);
    android.view.MenuInflater menuInflater = getMenuInflater();
    menuInflater.inflate(R.menu.menu, menu);
    return true;
}

@java.lang.Override
public void run() {
    com.squareup.picasso.Picasso.with(getApplicationContext()).load(imageInfo.getUrl()).into(t);
    android.widget.Toast.makeText(this, "Wallpaper set", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.content.Intent realIntent = intent.getParcelableExtra("_VA_|_intent_");
    if (realIntent != null) {
        startService(realIntent);
    }
    stopSelf();
    return START_NOT_STICKY;
}

public void setPackageName(java.lang.String packageName) {
    android.content.SharedPreferences.Editor editor = getPrefs().edit();
    editor.putString(net.oldev.aDictOnCopy.DictionaryOnCopyService.SettingsModel.PREFS_PACKAGE_NAME, packageName);
    editor.apply();
    fireChangeEvent();
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialogInterface) {
    ((com.door43.translationstudio.MainActivity) (getActivity())).closeKeyboard();
}

private void launchMain() {
    shutdown();
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.mad.utsstudcentre.Controller.MainActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onAnimationStart(android.animation.Animator animation) {
    onAnimationEnd(animation);
    topSearch.setVisibility(View.VISIBLE);
}

@java.lang.Override
public void onTick(long millisUntilFinished) {
    android.util.Log.d(ru.ifmo.geoquiz.GameScreen.LOG_TAG, "Tick...");
}

@android.annotation.SuppressLint(value = "NewApi")
public void start() {
    uk.digitalsquid.netspoofer.misc.AsyncTaskHelper.execute(launchTask);
}

@java.lang.Override
public boolean apply(com.android.volley.Request<?> request) {
    return (request.getTag()) == tag;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((editroomName) != null) {
        add();
    }else {
        android.widget.Toast.makeText(this, "請輸入房間名稱", Toast.LENGTH_SHORT).show();
    }
}

@java.lang.Override
public void onRestoreInstanceState(android.os.Parcelable state) {
    com.nearit.ui_bindings.feedback.views.NearItUIRatingBar.SavedState savedState = ((com.nearit.ui_bindings.feedback.views.NearItUIRatingBar.SavedState) (state));
    super.onRestoreInstanceState(savedState.getSuperState());
    setRating(savedState.rating);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, net.biospherecorp.microdoro.MyPreferenceActivity.class);
    intent.putExtra("orientation", getRequestedOrientation());
    startActivityForResult(intent, 1);
}

@java.lang.Override
public void onClick(android.view.View v) {
    isReadFolder = true;
    openBooksLayout.setVisibility(View.GONE);
    listBookLayout.setVisibility(View.VISIBLE);
    handleChooseFileLayout.setVisibility(View.VISIBLE);
    getDirectory(rootDirectory);
    showFileOptionButton(2);
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    inflater.inflate(R.menu.detailfragment, menu);
    android.view.MenuItem menuItem = menu.findItem(R.id.action_share);
    android.widget.ShareActionProvider mShareActionProvider = ((android.widget.ShareActionProvider) (android.view.MenuItem.getActionProvider(menuItem)));
}

public boolean onItemLongClick(android.widget.AdapterView parent, android.view.View view, int position, long id) {
    latLongList.remove(position);
    latLongList.clear();
    mAdapter.notifyDataSetChanged();
    saveData();
    return true;
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.home, menu);
    setTitle(mtitle);
    return true;
}

@java.lang.Override
public void addDataListeningObject(de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer) {
    if (this.dataListenings.isEmpty()) {
        this.contactsDataManager.addObserver(this);
    }
    this.dataListenings.add(observer);
}

private void startReadRequest() {
    android.util.Log.i(net.fishandwhistle.openpos.BarcodeReaderActivity.TAG, ("Launching read request " + (currentReadRequest)));
    currentReadRequest = java.lang.System.currentTimeMillis();
    enableScanning = true;
}

@org.junit.Test
public void validateEditText() {
    android.support.test.espresso.Espresso.onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.locationEditText)).perform(android.support.test.espresso.action.ViewActions.typeText("Portland")).check(android.support.test.espresso.assertion.ViewAssertions.matches(android.support.test.espresso.matcher.ViewMatchers.withText("Portland")));
}

@java.lang.Override
public synchronized void setLayoutAlgorithm(android.webkit.LayoutAlgorithm l) {
    if (l == (LayoutAlgorithm.TEXT_AUTOSIZING)) {
        throw new java.lang.IllegalArgumentException("WebViewClassic does not support TEXT_AUTOSIZING layout mode");
    }
    if ((mLayoutAlgorithm) != l) {
        mLayoutAlgorithm = l;
        postSync();
    }
}

public void run() {
    android.util.Log.v(li.zeitgeist.android.GalleryAdapter.TAG, ("NOTIFY DATASET CHANGED : " + (java.lang.String.valueOf(getCount()))));
    galleryActivity.hideProgressDialog();
    notifyDataSetChanged();
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean event) {
    if (!event) {
        this.validateCreditCardNumber(true);
    }
}

public void newEvent() {
    android.content.Intent intent = new android.content.Intent(this, com.parse.starter.EventViewerActivity.class);
    intent.putExtra("EVENT_ID", "");
    startActivity(intent);
}

private void setUpNavigationDrawer() {
    android.content.Context context = getApplicationContext();
    drawerAdapter = new com.blstream.studybox.components.DrawerAdapter(navigationView, drawerLayout, toolbar, context);
    drawerAdapter.attachDrawer();
}

@java.lang.Override
public void onCameraChange(com.google.android.gms.maps.model.CameraPosition arg0) {
    if (ignoreNextChange) {
        ignoreNextChange = false;
    }else {
        centerOnMylocation = false;
        ignoreNextChange = false;
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    int index = model.removeGroceryItem(groceryId);
    if (index > 0) {
        adapter.notifyItemRemoved(index);
    }
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progressValue, boolean fromUser) {
    User = fromUser;
    progress = ((int) (java.util.concurrent.TimeUnit.MILLISECONDS.toSeconds(progressValue)));
}

@android.support.annotation.Nullable
@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    android.util.Log.d(com.concavenp.artistrymuse.services.UserAuthenticationService.TAG, "onBind");
    return mBinder;
}

public void getDistance(android.view.View view) {
    coor1 = null;
    coor2 = null;
    com.example.kygrykhon.knownuggettrial.MainActivity.dialog = android.app.ProgressDialog.show(getApplicationContext(), "Getting distance..", "Please wait while we fetch coordinates..", true);
    acquireCoordinate();
    acquireCoordinate();
}

@java.lang.Override
public void onClick(android.view.View view) {
    isInUpdateMode = false;
    saveSubject("", false, "", false, 0);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    return super.onCreateOptionsMenu(menu);
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    mDrawerToggle.onConfigurationChanged(newConfig);
    if ((newConfig.orientation) != (prevOrientation)) {
        prevOrientation = newConfig.orientation;
        rotated = true;
    }
}

@java.lang.Override
public void onResume() {
    edu.berkeley.cs.amplab.carat.android.CaratApplication.setActionList(this);
    refresh();
    super.onResume();
}

public void onAddNewAmountClick(android.view.View view) {
    if ((adapter) == null)
        adapter = new com.sarahehabm.carbcalculator.item.view.AddNewItemAmountsAdapter();
    
    adapter.addItem();
    validQuantities = adapter.isValidAmounts();
    supportInvalidateOptionsMenu();
    invalidateOptionsMenu();
}

@java.lang.Override
public void onPlaybackError(java.lang.Error error) {
    android.util.Log.e(agency.tango.skald.spotify.player.callbacks.SpotifyNotificationCallback.TAG, java.lang.String.format("PlaybackError occurred %s", error.toString()));
    for (agency.tango.skald.core.listeners.OnPlaybackListener onPlaybackListener : onPlaybackListeners) {
        onPlaybackListener.onError(new agency.tango.skald.core.errors.PlaybackError());
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    button7.setText(((mark) + ""));
    placeMarkOnBoard(2, 0);
    button7.setEnabled(false);
    changeCurrentPlayer();
    checkForWinOrDraw();
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent event) {
    android.app.Activity c = ((android.app.Activity) (getContext()));
    return c.onKeyDown(keyCode, event);
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMultiplayer.LoadMatchResult result) {
    mCurrentMatch = result.getMatch();
    takeTurn();
    mEditor.putString(Constants.PREFERENCES_MATCH_ID, mCurrentMatchId);
    mEditor.commit();
}

@java.lang.Override
protected synchronized void onLayout(boolean changed, int left, int top, int right, int bottom) {
    if (changed) {
        dst = new android.graphics.Rect(0, 0, getWidth(), getHeight());
    }
}

@java.lang.Override
public void onSubmissionClick(com.example.android.grader.models.Submission submission, java.lang.String assignmentTitle) {
    com.example.android.grader.fragments.SubmissionDetailFragment submissionDetailFragment = com.example.android.grader.fragments.SubmissionDetailFragment.newInstance(submission, assignmentTitle);
    fragmentManager.beginTransaction().replace(R.id.fragmentContainer, submissionDetailFragment, com.example.android.grader.activities.MainActivity.SUBMISSION_DETAIL_FRAGMENT).addToBackStack(null).commit();
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent intent) {
    super.onActivityResult(requestCode, resultCode, intent);
    com.example.whatsmymood.AddMoodController.processResult(requestCode, resultCode, intent);
}

public static void showUnderDevelopmentDialog(android.content.Context context) {
    new android.app.AlertDialog.Builder(context).setMessage(R.string.under_development_message).setPositiveButton(context.getResources().getString(R.string.ok), null).show();
}

@java.lang.Override
public boolean onCreateActionMode(android.view.ActionMode mode, android.view.Menu menu) {
    android.view.MenuInflater inflater = mode.getMenuInflater();
    inflater.inflate(R.menu.menu_main, menu);
    return true;
}

@java.lang.Override
public void protocolDidReceiveCustomData(int[] data, int length) {
    android.util.Log.e(TAG, ("protocolDidReceiveCustomData: " + data));
}

private void onFavoritesChanged() {
    android.database.Cursor c = getActivity().getContentResolver().query(MovieContract.MovieEntry.CONTENT_URI, null, null, null, null);
    mAdapter.swapCursor(c);
}

private com.example.caxidy.proyectojuego.Bola crearSprite(int res) {
    android.graphics.Bitmap bmp = android.graphics.BitmapFactory.decodeResource(getResources(), res);
    return new com.example.caxidy.proyectojuego.Bola(this, bmp);
}

protected static <F extends ru.kazantsev.template.fragments.BaseFragment> F show(ru.kazantsev.template.util.FragmentBuilder builder, @android.support.annotation.IdRes
int container, java.lang.Class<F> fragmentClass) {
    return builder.newFragment().addToBackStack().replaceFragment(container, fragmentClass);
}

@java.lang.Override
public void onCreateContextMenu(android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo) {
    super.onCreateContextMenu(menu, v, menuInfo);
    getActivity().getMenuInflater().inflate(R.menu.em_delete_message, menu);
}

@java.lang.Override
protected void onPostExecute(byte[] bytes) {
    super.onPostExecute(bytes);
    reliUser.setAvatar(bytes);
    android.util.Log.w("LIOR", "Finished with avatar!");
}

protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    saveState();
    outState.putSerializable(TodoDatabaseAdapter.KEY_ROWID, mRowId);
}

@org.junit.Before
public void BeforeRunTest() throws java.lang.Exception {
    ctx = android.support.test.InstrumentationRegistry.getTargetContext();
    android.util.Log.e(com.example.boba.lookapplication.TestWriteFile.TAG, ("----------------------Own context2: " + (java.lang.String.valueOf(ctx))));
}

private void newFieldValueSelected(int position, com.example.willpassidomo.androidcomponents.FieldValue newQuestion) {
    com.example.willpassidomo.androidcomponents.FieldValue newQ = out.get(position);
    out.remove(position);
    in.add(in.size(), newQuestion);
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    mMovieCursorAdapter.notifyDataSetChanged();
    mMovieCursorAdapter.swapCursor(data);
}

public void restoreInstanceState(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState) {
}

public void success(com.bopr.android.smailer.MailMessage message) {
    com.bopr.android.smailer.ActivityLogItem item = new com.bopr.android.smailer.ActivityLogItem(com.bopr.android.smailer.ActivityLog.LEVEL_INFO);
    item.setMessage(formatMessage(message, R.string.activity_log_message_send_email_success));
    add(item);
}

public static android.net.Uri appendLimit(@android.support.annotation.NonNull
final android.net.Uri uri, @android.support.annotation.NonNull
final java.lang.String limit) {
    if (uri == null) {
        throw new java.lang.IllegalArgumentException("Uri can't be null");
    }
    return uri.buildUpon().appendQueryParameter(AbstractContentProviderProcessor.QUERY_PARAMETER_LIMIT, limit).build();
}

public boolean changeApplicationBluetoothState(boolean on, android.bluetooth.BluetoothAdapter.BluetoothStateChangeCallback callback) {
    if (callback == null)
        return false;
    
    return false;
}

private boolean onTouchEvent(android.view.View v, android.view.MotionEvent e) {
    if (!(mClickDetector.onTouchEvent(v, e))) {
        return false;
    }
    return super.onTouchEvent(e);
}

public static com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer getPlayer() {
    if ((com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.singletone) == null) {
        android.util.Log.e(com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.TAG, "getPlayer: Creating a new AlertPlayer");
        com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.singletone = new com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer();
    }else {
        android.util.Log.e("tag", "getPlayer: Using existing AlertPlayer");
    }
    return com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.singletone;
}

public static void startUpdate(android.content.Context context, boolean force) {
    org.omnirom.omnijaws.WeatherService.start(context, org.omnirom.omnijaws.WeatherService.ACTION_UPDATE, force);
}

@android.support.annotation.RequiresApi(value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1)
@java.lang.Override
public void sendBroadcastAsUser(final android.content.Intent intent, final android.os.UserHandle user) {
    mCondom.proceedBroadcast(intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure() {
        @java.lang.Override
        public void run(final android.content.Intent intent) {
            com.oasisfeng.condom.CondomContext.super.sendBroadcastAsUser(intent, user);
        }
    });
}

public void handleSetUp() throws java.lang.InterruptedException {
    android.content.Intent intent = new android.content.Intent(this, mobilegroup1.npcgenerator.HubActivity.class);
    mobilegroup1.npcgenerator.Singleton.getInstance();
    wait(5000);
    startActivity(intent);
}

public void moveView(int from, int to) {
    android.view.View view = getChildAt(from);
    removeViewAt(from);
    addView(view, to);
}

public static int dp2px(android.content.Context context, float dp) {
    android.content.res.Resources r = context.getResources();
    float px = android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, r.getDisplayMetrics());
    return ((int) (px));
}

@java.lang.Override
public void onClick(android.view.View v) {
    startActivity(new android.content.Intent(context, luizventurote.minhagrana.MovimentacaoFinanceiraActivity.class));
    finish();
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) {
    if (!(net.anei.cadpage.ManagePreferences.checkNoShowInCall(((android.preference.CheckBoxPreference) (preference)), ((java.lang.Boolean) (newValue)))))
        return false;
    
    return true;
}

public static java.lang.Double convertToBitcoinFromCurrency(android.content.Context ctx, java.lang.Double currency) {
    java.lang.Double bitcoin;
    bitcoin = currency / (ctx.getSharedPreferences(Constant.PREF_CURRENT_USER, Context.MODE_PRIVATE).getFloat(Constant.CURRENCY_VALUE, 1.0F));
    return bitcoin;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d(starace.learn.com.musicfilter.Song.SongListAdapter.TAG_SONG_ADAPTER, ("This item has been clicked " + position));
    starace.learn.com.musicfilter.Song.SongListAdapter.RecyclerClickEvent clickEvent = new starace.learn.com.musicfilter.Song.SongListFragment();
    clickEvent.handleRecyclerClickEvent(curSong.getUri());
}

@java.lang.Override
public boolean onKeyDown(int keyCode, android.view.KeyEvent msg) {
    if (keyCode == (android.view.KeyEvent.KEYCODE_BACK)) {
        this.finish();
        startActivity(new android.content.Intent(this, com.voidcode.diasporawebclient.MainActivity.class));
        return false;
    }else {
        return true;
    }
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    android.util.Log.d(com.example.android.quakereport.EarthquakeActivity.TAG, "Inside onPreExecute() in main...");
    earthquakeListView.setVisibility(View.GONE);
    reloadButton.setVisibility(View.GONE);
    progressBar.setVisibility(View.VISIBLE);
    textView.setVisibility(View.VISIBLE);
}

private android.support.v7.widget.PopupMenu createPopupMenu(android.view.View view) {
    android.support.v7.widget.PopupMenu popup = new android.support.v7.widget.PopupMenu(getContext(), view);
    popup.getMenuInflater().inflate(R.menu.popup, popup.getMenu());
    return popup;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    brickType = R.id.twoSix;
    bufferSize = android.media.AudioRecord.getMinBufferSize(sampleRate, audioFormat, AudioFormat.ENCODING_PCM_16BIT);
    checkPermissions();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    if ((com.example.rapid.MainActivity.authenticated) == false) {
        loginProcess();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((onItemClickListener) != null)
        onItemClickListener.onItemClick(v, getAdapterPosition());
    
}

@java.lang.Override
public void onSuccess(com.owsega.hellotractorsample.model.FarmerEntity[] results) {
    android.util.Log.e("seyi", ("farmer fetch successful " + (results.length)));
    com.owsega.hellotractorsample.model.Farmer.saveFarmers(results);
}

public void sendData(java.lang.String data) {
    android.util.Log.d("SIMPLEBT", ("Sending data: " + data));
    bluetoothUtility.sendData(data);
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    if (iFragment.useEventBus())
        org.simple.eventbus.EventBus.getDefault().register(mFragment);
    
    this.iPresenter = iFragment.obtainPresenter();
    iFragment.setPresenter(iPresenter);
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    mService.onCommand(MediaService.ACTION_SETTIME, java.lang.String.valueOf((((float) (seekBar.getProgress())) / 1000)), 0);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    if ((item.getItemId()) == (R.id.action_refresh)) {
        mWeatherTextView.setText("");
        loadWeatherData();
        return true;
    }
    return false;
}

@java.lang.Override
public void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession session, android.hardware.camera2.CaptureRequest request, android.hardware.camera2.CaptureResult partialResult) {
    process(partialResult);
}

@java.lang.Override
public void onFailure(retrofit2.Call<java.util.List<com.cit.abakar.application.ExampleClasses.Equipment>> call, java.lang.Throwable t) {
    android.widget.Toast.makeText(this, "Нет соединения", Toast.LENGTH_SHORT);
    progressBar.setVisibility(View.GONE);
}

public void onDestroy() {
    android.util.Log.d(App.TAG, "onDestroy");
    mediaPlayer.stop();
    model.setInvalidState(false);
}

@java.lang.Override
public olx.com.olxapp1.category.CategoryListAdapterLevelOne.ItemViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemLayoutView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.category_adapter_level_one, null);
    android.util.Log.d("dd", "VIEW POPULATED FOR after product adapter");
    return new olx.com.olxapp1.category.CategoryListAdapterLevelOne.ItemViewHolder(itemLayoutView);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        bottomNavigationViewFixed.setVisibility(View.INVISIBLE);
        bottomNavigationViewShifting.setVisibility(View.VISIBLE);
        bottomNavigationViewShifting.setTranslucentNavigationBar(me.timbals.materialdesigncomponents.BotttomNavigationActivity.hasNavBar(getWindowManager()));
    }
}

@java.lang.Override
public void onPlay() {
    android.util.Log.d(io.welle.welle.DabService.TAG, "play");
    handlePlayRequest();
}

@java.lang.Override
public android.support.v4.content.Loader<com.expidev.gcmapp.model.Assignment> onCreateLoader(final int id, @android.support.annotation.Nullable
final android.os.Bundle args) {
    switch (id) {
        case com.expidev.gcmapp.MeasurementDetailsActivity.LOADER_CURRENT_ASSIGNMENT :
            return new com.expidev.gcmapp.support.v4.content.CurrentAssignmentLoader(this);
        default :
            return null;
    }
}

private static void showMessagePopup(android.content.Context context, java.lang.String message, android.content.DialogInterface.OnClickListener listener) {
    new android.app.AlertDialog.Builder(context).setMessage(message).setCancelable(false).setNegativeButton(R.string.ok, listener).show();
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    if (showTargetArc) {
        addArcAnimation(activity);
    }else {
        addPathAnimation(activity);
    }
}

@java.lang.Override
public com.softdesign.devintensive.ui.adapters.UsersAdapter.UserViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    mContext = parent.getContext();
    android.view.View converView = android.view.LayoutInflater.from(mContext).inflate(R.layout.item_user_list, parent, false);
    return new com.softdesign.devintensive.ui.adapters.UsersAdapter.UserViewHolder(converView, mListener);
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    inflater.inflate(R.menu.menu_main, menu);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    saveStopwatchTime();
    mGame.setmCompleted(true);
    updateGameInDatabase();
    startActivity(mHomeIntent);
}

private void updatePickers() {
    android.util.Log.d("KG: updatePickers:", "");
    for (com.hornet.dateconverter.DatePicker.DatePickerDialog.OnDateChangedListener listener : mListeners)
        listener.onDateChanged();
    
}

private void openSocket(int port) throws java.lang.Exception {
    socket = new java.net.Socket(IP, port);
    android.util.Log.d("openSocket", "openSocket");
}

public static void nullSafeAppend(android.widget.TextView textView, java.util.Date date, java.text.DateFormat dateFormat) {
    if (date == null) {
        return ;
    }else {
        textView.append(dateFormat.format(date));
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_camera :
            selectImage();
            break;
    }
    return true;
}

@dagger.Provides
@com.tomeokin.lspush.injection.scope.PerActivity
public com.tomeokin.lspush.biz.usercase.SendCaptchaAction provideSendCaptchaAction(@com.tomeokin.lspush.injection.qualifier.ActivityContext
android.content.Context context, com.tomeokin.lspush.data.remote.LsPushService lsPushService, com.tomeokin.lspush.common.SMSCaptchaUtils smsCaptchaUtils) {
    return new com.tomeokin.lspush.biz.usercase.SendCaptchaAction(context.getResources(), lsPushService, smsCaptchaUtils);
}

public static long getSelectedStoryPageSecondary(android.content.Context context) {
    return android.preference.PreferenceManager.getDefaultSharedPreferences(context).getLong(utils.UWPreferenceManager.STORY_PAGE_SECONDARY, (-1));
}

@java.lang.Override
public void onActivityStarted(android.app.Activity activity) {
    android.util.Log.i("BACKGROUND", "started");
    ++(start);
}

@android.support.annotation.NonNull
@java.lang.Override
public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) {
    android.app.Dialog dialog = super.onCreateDialog(savedInstanceState);
    dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE);
    android.util.Log.d("KhSY", " 2");
    return dialog;
}

@java.lang.Override
public void unfriend(com.android.summer.csula.foodvoter.models.User user) {
    foodVoterFirebaseDb.unfriendUser(userId, user);
}

public static boolean requestActivity(@android.support.annotation.NonNull
android.content.Context context, @android.support.annotation.NonNull
java.lang.Class tClass, int updateRate) {
    return com.adsamcik.signalcollector.services.ActivityService.requestActivity(context, tClass.hashCode(), updateRate);
}

@java.lang.Override
public void onClick(android.view.View v) {
    twenty.setBackgroundColor(Color.LTGRAY);
    ten.setBackgroundColor(Color.GREEN);
    fifteen.setBackgroundColor(Color.LTGRAY);
    calculate(0.1);
}

@java.lang.Override
public void onMenuItemSelect(@android.support.annotation.IdRes
final int itemId, final int position) {
    setCurrentFragment(position);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    stopService(de.jamsk.mrx.MrXMap.startMrXService);
    de.jamsk.mrx.MrXMap.gameFinished.show();
    new de.jamsk.mrx.MrXMap.endGame().execute(((de.jamsk.mrx.MrXMap.Token) + ",endGame"));
    dialog.cancel();
}

private void setHeadline(java.lang.String clickedItem) {
    java.lang.String headlineText = clickedItem;
    android.widget.TextView headline = ((android.widget.TextView) (findViewById(R.id.header)));
    headline.setText(clickedItem);
}

@java.lang.Override
protected void onDestroy() {
    super.onDestroy();
    com.android.debug.hv.ViewServer.get(this).removeWindow(this);
}

@java.lang.Override
public void onClick(android.view.View v) {
    dismiss();
    if ((onSaveListener) != null) {
        onSaveListener.onSave(mEditText.getText().toString(), task);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstance) {
    super.onCreate(savedInstance);
    com.duck.owlcctv.databinding.ActivityAuthLoginBinding binding = android.databinding.DataBindingUtil.setContentView(this, R.layout.activity_auth_login);
    binding.setViewModel(viewModel);
    android.util.Log.d(com.duck.owlcctv.activity.AuthLoginActivity.TAG, "onCreate finished");
}

private boolean tienePermiso(java.lang.String permissionName) {
    return (android.support.v4.content.ContextCompat.checkSelfPermission(this, permissionName)) != (android.content.pm.PackageManager.PERMISSION_GRANTED);
}

public android.graphics.Bitmap crop(android.graphics.Bitmap _bm) {
    return tungt.demo.camera.processimage.ImageProcess.squareCropv2(_bm);
}

@java.lang.Override
public void onCheckedChanged(android.widget.RadioGroup group, int checkedId) {
    element.setValue((checkedId == (R.id.yes) ? 1 : -1));
}

private void showWarning(int errorTitle, int errorMessage) {
    new android.support.v7.app.AlertDialog.Builder(getContext()).setTitle(errorTitle).setMessage(errorMessage).setPositiveButton(R.string.OK, null).create().show();
}

@java.lang.Override
public boolean onClusterItemClick(com.bridge.soom.Model.ProviderBasic providerBasic) {
    android.widget.Toast.makeText(this, "onClusterItemClick --down", Toast.LENGTH_LONG).show();
    return false;
}

@java.lang.Override
public void fragmentItemViewDismiss() {
    this.instantiableViewControllerRequestsDismissal(itemViewFragment.instance);
    if ((itemViewFragment) != null) {
        android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
        fm.popBackStackImmediate();
    }
}

@java.lang.Override
public void onPositiveButtonClicked() {
    net.somethingdreadful.MAL.account.AccountService.clearData(true);
    startActivity(new android.content.Intent(this, net.somethingdreadful.MAL.FirstTimeInit.class));
    finish();
}

@java.lang.Override
public android.graphics.Bitmap getBitmap(java.lang.String key) {
    return this.images.get(key);
}

public java.lang.String getRoomDescription() {
    android.util.Log.i("teng DROOOfbdfbgr222", roomDescript);
    if ((roomDescript) == "") {
        return backUpRoomDescription;
    }
    return roomDescript;
}

public static void removeStock(android.content.Context context, java.lang.String symbol) {
    com.udacity.stockhawk.data.PrefUtils.editStockPref(context, symbol, false);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(this, "Presionó botón Creditos", Toast.LENGTH_SHORT).show();
    olimpiadas.sena.com.olimpiadasmath.util.DialogHelper.showCopyRightDialog(v.getContext());
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    binder = new nya.miku.wishmaster.ui.posting.PostingService.PostingServiceBinder();
    notificationManager = ((android.app.NotificationManager) (getSystemService(nya.miku.wishmaster.ui.posting.NOTIFICATION_SERVICE)));
    nya.miku.wishmaster.common.Logger.d(nya.miku.wishmaster.ui.posting.PostingService.TAG, "created posting service");
}

protected void removeHandler(android.os.Handler handler) {
    handler.removeCallbacksAndMessages(null);
    io.realm.BaseRealm.handlers.remove(handler);
    this.handler = null;
}

public void initialData() {
    com.android.frankthirteen.timetracker.model.TrackerItem t1;
    com.android.frankthirteen.timetracker.model.TrackerItem t2;
    t1 = new com.android.frankthirteen.timetracker.model.TrackerItem(getActivity());
    t1.setmTitle("ta ");
    com.android.frankthirteen.timetracker.model.TrackerItemLab.getsTrackerItemLab(getContext()).addTrackItem(t1);
}

public static boolean isBrowseable(@android.support.annotation.NonNull
java.lang.String mediaID) {
    return (mediaID.indexOf(com.kabouzeid.gramophone.auto.MediaIDHelper.LEAF_SEPARATOR)) < 0;
}

public void createNewRunningProtocol(java.lang.String userId, java.lang.String farmId, java.lang.String protocolId, java.util.ArrayList<com.vetoquinol.vetosynch.AnimalEntry> animals, java.util.Date dateToStart, android.content.Context context) {
    new com.vetoquinol.vetosynch.RunningProtocolModel.CreateRunningProtocolThread(userId, farmId, protocolId, animals, dateToStart, context).start();
}

public void onClick(android.content.DialogInterface dialog, int pPosition) {
    mDisplayMainList.add(passedPosition, input.getText().toString());
    ((android.widget.BaseAdapter) (mListView.getAdapter())).notifyDataSetChanged();
}

@java.lang.Override
protected void onPause() {
    android.util.Log.i(com.hydraproductions.cicada.PhoneStatus.TAG, "ON PAUSE");
    telephonyManager.listen(phoneStateListener, PhoneStateListener.LISTEN_NONE);
}

public void accessError() {
    android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.accessErorr), Toast.LENGTH_LONG).show();
}

@android.support.annotation.Nullable
public static iris_view.com.msgqueue.LooperTest myLooper() {
    iris_view.com.msgqueue.LooperTest.chechkLooper();
    return iris_view.com.msgqueue.LooperTest.looperTest;
}

@java.lang.Override
public void onClick(android.view.View v) {
    spp.sppMessage("SCN DOWN\r");
    setFrequency("___._");
    setRDS("");
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d("PROCESS!!", "updateButton.setOnClickListener");
    com.onettm.directions.DirectionsApplication.getInstance().getLocationsManager().invalidate();
}

@java.lang.Override
public void onViewCreated(@android.support.annotation.Nullable
android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    this.bankTransactionSupplier.addDataListeningObject(this);
    this.bankTransactionSupplier.onResume();
    updateCalendar();
}

@java.lang.Override
public void save() {
    executeTransaction(new com.raizlabs.android.dbflow.structure.database.transaction.ProcessModelTransaction.Builder<>(new com.raizlabs.android.dbflow.structure.database.transaction.ProcessModelTransaction.ProcessModel<com.raizlabs.android.dbflow.structure.TModel>() {
        @java.lang.Override
        public void processModel(com.raizlabs.android.dbflow.structure.TModel model) {
            model.save();
        }
    }).build());
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    if (!(com.android.internal.util.cm.ScreenType.isTablet(this))) {
        getListView().setPadding(0, 0, 0, 0);
    }
}

abstract void run(android.content.Intent intent);

@java.lang.Override
public void onClick(android.view.View v) {
    mCamera = mPreview.changeCamera();
    flashMode = mCamera.getParameters().getFlashMode();
    if ((flashMode) == null) {
        flashEnabled = false;
        flashButton.setSelected(flashEnabled);
    }
}

public void onClick(android.content.DialogInterface dialog, int id) {
    isSaved = true;
    recordedFilename = saveFile(finalFrom, finalToTemp, suggestedFilename);
    filenameView.setText(suggestedFilename);
    finalTo.delete();
    finalToTemp.renameTo(finalTo);
}

public static int i(java.lang.String tag, java.lang.String msg) {
    if (tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO) {
        return android.util.Log.i(tag, msg);
    }
    return 0;
}

public static void storeAppInstalled(android.content.Context context, java.lang.String appInstalled) {
    android.content.SharedPreferences sharedPreferences = com.silverpop.engage.config.EngageConfig.getConfigSharedPrefs(context);
    sharedPreferences.edit().putString(com.silverpop.engage.config.EngageConfig.SharedProperties.APP_INSTALLED.toString(), appInstalled).commit();
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    if ((player.getCurrentPosition()) > 0) {
        player.reset();
        playNext();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    java.lang.String[] compliments = getResources().getStringArray(R.array.compliments_arr);
    com.example.helloworld.ComplimentService.initialize(this, compliments);
    setContentView(R.layout.activity_main);
}

@java.lang.Override
public boolean onLoadMore(int page, int totalItemsCount) {
    com.loopj.android.http.RequestParams params = new com.loopj.android.http.RequestParams();
    params.put("count", 25);
    params.put("max_id", com.walmartlabs.classwork.tweets.activities.TimelineActivity.maxId);
    fetchAndPopulateTimeline(params);
    return true;
}

@java.lang.Override
public void onActivityResumed(android.app.Activity activity) {
    com.gigigo.ggglogger.GGGLogImpl.log("CloudRecognitionActivityLifeCycleCallBack.onActivityResumed");
    if (com.gigigo.vuforiacore.sdkimagerecognition.icloudrecognition.CloudRecognitionActivityLifeCycleCallBack.mActivity.equals(activity))
        this.mCloudReco.on_Resume();
    
}

@java.lang.Override
public void onClick(android.view.View view) {
    switch (composerType) {
        case net.kyouko.cloudier.ui.activity.ComposerActivity.TYPE_NEW :
        default :
            sendTweet();
        case net.kyouko.cloudier.ui.activity.ComposerActivity.TYPE_COMMENT :
            comment();
        case net.kyouko.cloudier.ui.activity.ComposerActivity.TYPE_RETWEET :
            retweet();
    }
}

@java.lang.Override
public void onCancel() {
    android.util.Log.d(com.example.gek.firebaseauth.MyFaceBookActivity.TAG, "facebook:onCancel");
    updateUI(null);
}

@android.support.annotation.WorkerThread
@java.lang.Override
public void run() {
    com.github.miao1007.animewallpaper.support.GlobalContext.startThirdFrameWork();
    repo = com.github.miao1007.animewallpaper.utils.SquareUtils.getRetrofit(DanbooruAPI.KONACHAN).create(com.github.miao1007.animewallpaper.support.api.konachan.DanbooruAPI.class);
    runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            onRefresh();
        }
    });
}

public void setItemList(@android.support.annotation.NonNull
java.util.ArrayList<T> itemList) {
    this.itemList = itemList;
    org.bbt.kiakoa.tools.ListItemClickRecyclerAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void onPlay() {
    super.onPlay();
    android.util.Log.d(com.vpaliy.melophile.playback.PlaybackManager.TAG, "onPlay");
    handlePlayRequest(queueManager.current());
}

public static void recordAlert(int resid) {
    org.json.JSONObject jmessage = new org.json.JSONObject();
    de.xavaro.android.common.Json.put(jmessage, "message", de.xavaro.android.common.Simple.getTrans(resid));
    de.xavaro.android.common.ActivityManager.recordAlert(jmessage);
}

@java.lang.SuppressWarnings(value = "deprecation")
@java.lang.Override
public void onShowCustomView(android.view.View view, int requestedOrientation, acr.browser.lightning.view.CustomViewCallback callback) {
    mUIController.onShowCustomView(view, callback);
    super.onShowCustomView(view, requestedOrientation, callback);
}

public static boolean isPlaying() {
    return com.hustunique.parsingplayer.player.media.ParsingMediaManager.getInstance(android.support.test.InstrumentationRegistry.getTargetContext()).isPlaying();
}

public void restoreActionBar() {
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    if (actionBar != null) {
        actionBar.setDisplayShowTitleEnabled(true);
        setTitle(mTitle);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    supportRequestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    setContentView(R.layout.activity_main);
    this.fetchContactsWrapper();
    this.fetchSMSWrapper();
}

public static android.location.Location locFromLatLng(com.google.android.gms.maps.model.LatLng input) {
    android.location.Location res = new android.location.Location("", (result = new android.location.Location("")));
    result.setLatitude(input.latitude);
    result.setLongitude(input.longitude);
    return result;
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    valueEmail = authEmail.getText().toString();
    valuePassword = authPassword.getText().toString();
    dialog.dismiss();
    return ;
}

@java.lang.Override
public void onClick(android.view.View v) {
    clickSpace(boardImages.get(j));
}

@java.lang.Override
public void run() {
    if (!(mScanning))
        return ;
    
    mScanning = false;
    android.util.Log.e(com.nordicid.nurapi.NurDeviceScanner.TAG, "Scanning STOP BLE");
    mBluetoothAdapter.stopLeScan(mLeScanCallback);
    mListener.onScanFinished();
}

public com.azzarcher.colormanager.ColorManager setStatusBarColor(android.view.Window window, int statusBarColor) {
    window.setStatusBarColor(mStatusBarColor);
    mWindow = window;
    mStatusBarColor = statusBarColor;
    return this;
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((mListener) != null) {
        mListener.onSearchItemClick(view, getLayoutPosition());
    }
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    android.util.Log.i(Constants.APP_NAME, "onActivityCreated: to initLoader");
    getLoaderManager().initLoader(com.franktan.popularmovies.MoviesGridFragment.MOVIE_LOADER_ID, null, this);
    super.onActivityCreated(savedInstanceState);
}

@retrofit2.http.Multipart
@retrofit2.http.POST(value = "upload/")
retrofit2.Call<com.androidbuts.api.response.Result> uploadFile(@retrofit2.http.Part
okhttp3.MultipartBody.Part file, @retrofit2.http.Part(value = "description")
okhttp3.RequestBody name);

public void rescheduleAlarms(android.content.Context context) {
    loadAlarmList(context);
    for (int i = 0; i < (alarmList.size()); i++) {
        createNewAlarm(context, alarmList.get(i));
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.content.Intent sendIntent = new android.content.Intent(context, com.example.android.popularmovies.service.MovieService.class);
    sendIntent.putExtra(com.example.android.popularmovies.service.MovieService.MOIVE_QUERY_CRITERIA, intent.getStringExtra(com.example.android.popularmovies.service.MovieService.MOIVE_QUERY_CRITERIA));
    context.startService(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_PICK);
    intent.setType("image/*");
    getActivity().startActivityForResult(intent, com.example.nobell.project3.ui.FriendAddFragment.EditButtonListener.SELECT_PHOTO);
}

@java.lang.Override
public void onClick(android.view.View view) {
    super.onClick(view);
    if (!(getSelectMode())) {
        final com.gelakinetic.mtgfam.helpers.DecklistHelpers.CompressedDecklistInfo item = mItems.get(getAdapterPosition());
        showDialog(DecklistDialogFragment.DIALOG_UPDATE_CARD, item.mCard.mName, item.mIsSideboard);
    }
}

private void createShortToast(java.lang.String message) {
    android.widget.Toast.makeText(super.getActivity(), message, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((listener) != null)
        listener.onClick(v, datas.get(position));
    
}

public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) {
    mEdittext.setText(url);
    return _handleRedirect(url);
}

public static void stop(android.content.Context context) {
    tranquvis.simplesmsremote.Services.SmsReceiver.SMSReceiverService.setStatus(context, ReceiverStatus.Stopped);
    context.stopService(new android.content.Intent(context, tranquvis.simplesmsremote.Services.SmsReceiver.SMSReceiverService.class));
}

@butterknife.OnClick(value = R.id.button_sign_in)
void signIn() {
    android.content.Intent signIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
    startActivityForResult(signIntent, com.learnera.app.LoginActivity.RC_SIGN_IN);
}

public void logMetricsAndFinishDelayed(int delayMs) {
    android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
    handler.postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            logMetricsAndFinish();
        }
    }, 3000);
}

public void insere(br.com.marco.agenda.model.Aluno aluno) {
    android.database.sqlite.SQLiteDatabase database = getWritableDatabase();
    android.content.ContentValues dados = getDados(aluno);
    long idAluno = database.insert("Alunos", null, dados);
    aluno.setId(idAluno);
}

private void setupFeed() {
    android.support.v7.widget.LinearLayoutManager linearLayoutManager = new android.support.v7.widget.LinearLayoutManager(getActivity()) {
        @java.lang.Override
        protected int getExtraLayoutSpace(android.support.v7.widget.RecyclerView.State state) {
            return 300;
        }
    };
    rvFeed.setLayoutManager(linearLayoutManager);
    updateRecyclerView();
}

@java.lang.Override
public void onAdFailedToLoad(int errorCode) {
    super.onAdFailedToLoad(errorCode);
    com.crashlytics.android.Crashlytics.log(("Banner Failed To Load: " + errorCode));
}

public void onClick(android.view.View v) {
    if (buttonName.equals("Restart")) {
        dialog.dismiss();
        activity.finish();
    }else {
        dialog.dismiss();
    }
}

public boolean getHideCompleted() {
    android.os.Bundle arguments = getArguments();
    if ((cbHideCompleted) == null) {
        return !(arguments.getBoolean(ActiveFilter.INTENT_HIDE_COMPLETED_FILTER, false));
    }else {
        return !(cbHideCompleted.isChecked());
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);
    com.parse.Parse.enableLocalDatastore(this);
    com.parse.Parse.initialize(this, "FHwTc8y140hzykJ9bRRf5rcQAx9fIWENsF5Og9Xh", "98T1AS8768nb2UAMiaaGL1SuecHaYooPZo4w8IH5");
    parse = new com.parse.ParseObject("ParseObj");
}

private void makeFullScreen() {
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    actionBar.hide();
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    mIsTracking = false;
    mMediaController.getTransportControls().seekTo(getProgress());
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return new cn.ucai.fulicenter.fragments.NewGoodsFragment();
        case 1 :
            return new cn.ucai.fulicenter.fragments.BoutiqueFragment();
        case 2 :
            return new cn.ucai.fulicenter.fragments.CategoryFragment();
    }
    return new cn.ucai.fulicenter.fragments.NewGoodsFragment();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.maxspahn.studentbnb.TimePickerFragment newFragment = new com.example.maxspahn.studentbnb.TimePickerFragment();
    newFragment.show(getFragmentManager(), "timePicker");
    newFragment.setActivity(initdateButton, true);
}

@java.lang.Override
public void onClick(android.view.View view) {
    lb.startLoading();
    sucBtn.setEnabled(true);
    failedBtn.setEnabled(true);
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.widget.Toast.makeText(this, (("Service is stopped " + (timeInMilliseconds)) + " miliseconds"), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setupLocationClient();
    mPointQuadTree = new com.google.maps.android.quadtree.PointQuadTree<com.fabiendem.defib68.models.defibrillator.DefibrillatorClusterItem>(com.fabiendem.defib68.utils.HautRhinUtils.LEFT_BOUND, com.fabiendem.defib68.utils.HautRhinUtils.RIGHT_BOUND, com.fabiendem.defib68.utils.HautRhinUtils.BOTTOM_BOUND, com.fabiendem.defib68.utils.HautRhinUtils.TOP_BOUND);
    mMapDefibrillators = new java.util.HashMap<java.lang.String, com.fabiendem.defib68.models.defibrillator.DefibrillatorModel>();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    android.widget.Toast.makeText(getBaseContext(), "Canceled", Toast.LENGTH_LONG).show();
    filter.setSelection(com.youber.cmput301f16t15.youber.gui.DriverSearchListActivity.adapter.getCount());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((tracker) != null)
        tracker.resetTree();
    
    importMindMap();
}

@java.lang.Override
public void onItemDeleteClick(android.view.View view, int position) {
    deleteItem((position - 1));
}

public void onEndOfSpeech() {
    android.util.Log.i(uk.co.tstableford.p_brain.MainActivity.TAG, "end of speech");
}

private void loadListViewFragment(java.lang.String title) {
    android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
    android.support.v4.app.Fragment fragment = valdes.cindyslist.ListViewFragment.newInstance(title);
    fragmentManager.beginTransaction().add(R.id.list_view_activity_fragment_container, fragment).commit();
}

protected void createLocationRequest() {
    mLocationRequest = new com.google.android.gms.location.LocationRequest();
    mLocationRequest.setInterval(treadsetters.bikesmart.LocationService.UPDATE_INTERVAL_IN_MILLISECONDS);
    mLocationRequest.setFastestInterval(treadsetters.bikesmart.LocationService.FASTEST_UPDATE_INTERVAL_IN_MILLISECONDS);
    mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
    mLocationRequest.setSmallestDisplacement(2);
}

public void aboutAuthor(android.view.View view) {
    go2Activity(com.ice1000.alpd.AboutMeActivity.class, true);
}

private void toast(int text) {
    android.widget.Toast.makeText(this, text, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    butterknife.ButterKnife.bind(this);
    setContentView(R.layout.activity_main);
    setSupportActionBar(toolbar);
}

public static android.support.v4.app.Fragment newInstance(java.lang.String shippingName) {
    com.kosbrother.mongmongwoo.fragments.PurchaseFragment4 fragment = new com.kosbrother.mongmongwoo.fragments.PurchaseFragment4();
    android.os.Bundle args = new android.os.Bundle();
    args.putString(com.kosbrother.mongmongwoo.fragments.PurchaseFragment4.ARG_SHIPPING_NAME, shippingName);
    fragment.setArguments(args);
    return fragment;
}

@java.lang.Override
public android.os.ParcelFileDescriptor openFile(android.net.Uri uri, java.lang.String mode) throws java.io.FileNotFoundException {
    android.util.Log.i("Hier", "open");
    return super.openFile(uri, mode);
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    android.util.Log.d(org.buildmlearn.toolkit.activity.TemplateEditor.TAG, "onCreateOptionsMenu");
    return true;
}

boolean pixelWithinArea(com.example.m.divis.Shape s, android.graphics.Point px) {
    return pixelWithinArea(s.center, s.radius, px);
}

public static int getCacheKey() {
    int weekOfYear = de.atomfrede.android.mensa.ubi.util.Util.getWeekOfYear();
    int year = de.atomfrede.android.mensa.ubi.util.Util.getYear();
    int cacheKey = year + weekOfYear;
    return cacheKey;
}

@java.lang.Override
public boolean dispatchTouchEvent(android.view.MotionEvent event) {
    java.lang.System.out.println("-------dispatchTouchEvent");
    if ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) {
    }
    return super.dispatchTouchEvent(event);
}

private boolean isNetworkAvailable() {
    android.net.ConnectivityManager connectivityManager = ((android.net.ConnectivityManager) (mContext.getSystemService(Context.CONNECTIVITY_SERVICE)));
    android.net.NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();
    return (activeNetworkInfo != null) && (activeNetworkInfo.isConnected());
}

@java.lang.Override
public void onViewRecycled(android.support.v7.widget.RecyclerView.ViewHolder holder) {
    super.onViewRecycled(holder);
    lifecycleSubject.onNext(null);
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    if ((bfv.enemyThread) != null) {
        bfv.enemyThread.paused = true;
    }
    android.util.Log.i("Stop--", "OnStop");
}

private void gPlusSignOut() {
    revokeAccess();
    Auth.GoogleSignInApi.signOut(mGoogleApiClient).setResultCallback(new com.google.android.gms.common.api.ResultCallback<com.google.android.gms.common.api.Status>() {
        @java.lang.Override
        public void onResult(com.google.android.gms.common.api.Status status) {
        }
    });
}

private boolean hasViewReorderEnabled(android.view.View v) {
    return (v != null) && (true != (v.getTag(org.askerov.dynamicgrid.DynamicGridView.TAG_REORDER_DISABLED)));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    gamercompanion.src.activities.controlling.ActivityController.set_activeContext(this);
    gamercompanion.src.activities.controlling.ActivityController.set_activeActivity(this);
}

@java.lang.Override
public void run() {
    final android.content.Intent mainIntent = new android.content.Intent(this, com.sierisimo.idareyoutobeawesome.MainActivity.class);
    startActivity(mainIntent);
    finish();
}

@java.lang.SuppressWarnings(value = "unused")
public void onRouteUnselected(android.support.v7.media.MediaRouter router, int type, android.support.v7.media.MediaRouter.RouteInfo route) {
    updatePresentation();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    android.widget.Toast.makeText(this, "Service Started", Toast.LENGTH_LONG).show();
    return START_STICKY;
}

public static void initialize(android.content.Context c) {
    com.adsamcik.signalcollector.Extensions.telephonyManager = ((android.telephony.TelephonyManager) (c.getSystemService(Context.TELEPHONY_SERVICE)));
    com.adsamcik.signalcollector.Extensions.connectivityManager = ((android.net.ConnectivityManager) (c.getSystemService(Context.CONNECTIVITY_SERVICE)));
    context = c;
}

@java.lang.Override
public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) {
    android.util.Log.d("woo", "data change");
    edu.rosehulman.punttj.rosebuckets.model.SubItem item = dataSnapshot.getValue(edu.rosehulman.punttj.rosebuckets.model.SubItem.class);
    onSubItemSelected(item);
}

public static int get(final java.lang.String key) {
    if (!(com.ninetwozero.bf4intel.resources.maps.weapons.WeaponImageMap.map.containsKey(key)))
        android.util.Log.e("WeaponImageMap", key);
    
    return com.ninetwozero.bf4intel.resources.maps.weapons.WeaponImageMap.map.containsKey(key) ? com.ninetwozero.bf4intel.resources.maps.weapons.WeaponImageMap.map.get(key) : R.drawable.acc_none;
}

public void onMediaScannerConnected() {
    android.util.Log.v("onMediaScannerConnected", "the execution made it here...");
}

@java.lang.Override
public android.support.v4.util.Pair<java.lang.Integer, java.lang.Integer> call(java.lang.Integer completed, java.lang.Integer active) {
    return android.support.v4.util.Pair.create(completed, active);
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    track = trackUtil.getLastTrack();
    io.github.data4all.logger.Log.d(io.github.data4all.service.GPSservice.TAG, "onStartCommand");
    return START_STICKY;
}

public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    int width = plot.getWidth();
    return false;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    doCallCropActivity(uri, dispSize, wpWidth, wpHeight);
}

@java.lang.Override
public void onAnimationRepeat(android.animation.Animator animator) {
    if (repeated) {
        current_instance.setText(com.example.cesarsk.say_it.Utility.getRandomWord(((android.app.Activity) (current_instance.getContext()))));
    }
    repeated = !(repeated);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent Carnetintent = new android.content.Intent(this, fr.diabhelp.diabhelp.Core.CoreActivity.class);
    this.startActivity(Carnetintent);
    this.finish();
}

public void clearPager() {
    android.util.Log.d("* SearchResultFrag *", "clearPager");
    mViewPager.setAdapter(null);
    mViewPager.removeAllViews();
}

@java.lang.Override
protected com.shadark.android.react.amaps.mapview.AMapView createViewInstance(com.facebook.react.uimanager.ThemedReactContext reactContext) {
    android.util.Log.d(com.shadark.android.react.amaps.mapview.AMapManager.TAG, "AMapView");
    com.amap.api.maps.AMapOptions options = new com.amap.api.maps.AMapOptions();
    options.zoomControlsEnabled(false);
    return new com.shadark.android.react.amaps.mapview.AMapView(reactContext, mAppContext, this, options);
}

@java.lang.Override
protected void getSaveInstanceState(android.os.Bundle savedInstanceState) {
    onViewStateRestored(savedInstanceState);
}

public static android.graphics.Bitmap getEmptyBitmap() {
    if ((com.androidquery.callback.BitmapAjaxCallback.empty) == null) {
        com.androidquery.callback.BitmapAjaxCallback.empty = android.graphics.Bitmap.createBitmap(1, 1, Bitmap.Config.ALPHA_8);
    }
    return com.androidquery.callback.BitmapAjaxCallback.empty;
}

private static synchronized void stopVibrate() {
    android.util.Log.d(org.catrobat.catroid.utils.VibratorUtil.TAG, "stopVibrate()");
    org.catrobat.catroid.utils.VibratorUtil.vibrator.cancel();
}

@java.lang.Override
public boolean onPreferenceClick(android.preference.Preference preference) {
    if (preference == (this)) {
        android.util.Log.d(de.grau.organizer.settings.DeleteCategoriePreference.DEBUG_TAG, "Clicked deleteDialog");
        setValues();
    }
    return true;
}

public void execute(final org.wordpress.android.ui.accounts.helpers.FetchBlogListAbstract.Callback callback) {
    mCallback = callback;
    new java.lang.Thread() {
        @java.lang.Override
        public void run() {
            fetchBlogList(callback);
        }
    }.start();
}

@org.junit.Test
public void startActivityWithDefaultIntentAndDefaultCategoryWithOptionalArgs() {
    io.appium.java_client.android.IntentTest.driver.startActivity("com.prgguru.android", ".GreetingActivity", "android.intent.action.MAIN", "android.intent.category.DEFAULT", "0x4000000", "--es \"USERNAME\" \"AppiumIntentTest\" -t \"text/plain\"");
    org.junit.Assert.assertEquals(io.appium.java_client.android.IntentTest.driver.findElementById("com.prgguru.android:id/textView1").getText(), "Welcome AppiumIntentTest");
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    listener.onAnimationRepeat(null);
}

public void signinOnClick(android.view.View v1) {
    android.content.Intent myIntent = new android.content.Intent(this, com.example.parthdoshi.articleshub.SignupPage.class);
    this.startActivity(myIntent);
    finish();
}

private void selectItem(int position) {
    switch (position) {
        case 0 :
            {
                android.content.Intent intent = new android.content.Intent(activity, com.columbasms.columbasms.activity.UserProfileActivity.class);
                startActivity(intent);
                break;
            }
        default :
            break;
    }
    mDrawerLayout.closeDrawer(mDrawerList);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    mFrame = ((android.widget.FrameLayout) (findViewById(R.id.fullscreen_camera)));
    Globals.lastImageTaken = null;
    newCamera();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    inflater.inflate(R.layout.article_fragment_layout, container);
    return super.onCreateView(inflater, container, savedInstanceState);
}

@butterknife.OnEditorAction
boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_DONE)) {
        return true;
    }
    return false;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    android.content.Intent musicIntent = new android.content.Intent(this, com.example.jimmyle.pacmanandroid.BackgroundMusicService.class);
    startService(musicIntent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    spUtil.saveGpsInterval(values[i]);
    dialogInterface.dismiss();
    tvGpsInterval.setText(((items[i]) + " ms"));
}

@retrofit2.http.GET(value = "vehicles/{vehicleId}/codes")
rx.Observable<li.vin.net.TimeSeries<li.vin.net.Dtc>> codes(@android.support.annotation.NonNull
@retrofit2.http.Path(value = "vehicleId")
java.lang.String vehicleId, @android.support.annotation.Nullable
@retrofit2.http.Query(value = "since")
java.lang.Long since, @android.support.annotation.Nullable
@retrofit2.http.Query(value = "until")
java.lang.Long until, @android.support.annotation.Nullable
@retrofit2.http.Query(value = "limit")
java.lang.Integer limit, @android.support.annotation.Nullable
@retrofit2.http.Query(value = "sortDir")
java.lang.String sortDir);

public void setReminders(io.realm.RealmList<com.habitrpg.android.habitica.models.tasks.RemindersItem> reminders) {
    for (com.habitrpg.android.habitica.models.tasks.RemindersItem reminder : reminders) {
        reminder.setTask(this);
    }
    this.reminders = reminders;
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    moviedroidPropertyReader = com.cloudskol.moviedroid.common.MoviedroidPropertyReader.getInstance(getActivity());
    moviedroidUriBuilder = new com.cloudskol.moviedroid.common.MoviedroidUriBuilder(moviedroidPropertyReader);
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onBackPressed() {
    finish();
    if ((wr) != null)
        wr.disconnect();
    
    android.os.Process.killProcess(android.os.Process.myPid());
    super.onBackPressed();
}

private void multipleimageClick() {
    android.util.Log.d(com.example.asus.travelamapdemo.view.activity.WriteNoteActivity.TAG, "multipleimageClick");
    multipleImage.setAddClickCallback(new com.goyourfly.multi_picture.MultiPictureView.AddClickCallback() {
        @java.lang.Override
        public void onAddClick(@org.jetbrains.annotations.NotNull
        android.view.View view) {
            com.example.asus.travelamapdemo.util.MatisseUtil util = new com.example.asus.travelamapdemo.util.MatisseUtil(com.example.asus.travelamapdemo.view.activity.WriteNoteActivity.this);
        }
    });
}

public void refreshTaskManagerView() {
    if (DEBUG)
        android.util.Log.e(TAG, "refreshTaskManagerView");
    
    setTaskManagerTitle();
    loadRunningTasks();
    refreshMemoryUsagePanel();
    inflateTaskListView();
}

@java.lang.Override
public void onClick(android.view.View v) {
    hidePopupMenuForMarker();
    listener.onDeleteGeofence(model);
}

@java.lang.Override
public void onClick(android.view.View v2) {
    ((me.ccrama.redditslide.Activities.AlbumPager) (getActivity())).doImageSave(false, url);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(mContext, "Clicked button Edit", Toast.LENGTH_SHORT).show();
    asiantech.vn.main.MainActivity.showFragmentEditContact(new asiantech.vn.listcontact.ListContactClass(position, mListContacts));
}

@java.lang.Override
public com.twtstudio.bbs.bdpqchen.bbs.commons.base.BaseViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    return new com.twtstudio.bbs.bdpqchen.bbs.individual.message.MessageAdapter.MessageItemViewHolder(inflater.inflate(R.layout.item_rv_message, parent));
}

protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initDataManager();
    initGui(savedInstanceState);
    checkIntent(getIntent());
    if (savedInstanceState == null) {
        showFragment(startFragmentMenuItemId, true);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((onItemClickListener) != null)
        onItemClickListener.onItemClick(v, content, getAdapterPosition());
    
}

@java.lang.Override
public com.nutomic.syncthingandroid.syncthing.RestApi getApi() {
    return new com.nutomic.syncthingandroid.test.MockRestApi(this, null, null, null);
}

private void OnOddEvenWeekChecked(boolean isOdd) {
    android.app.Fragment f = getFragmentManager().findFragmentById(R.id.mainFragment);
    if (f instanceof com.SFEDU.schedule_1.ScheduleEditRecordFragment) {
        return ;
    }
    updateCurrentDayReference();
    showDayWeek(mCurrentDay);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    command &= 199;
    command |= progress << 3;
    sendCommand();
    receiveAndUpdateStatus();
}

private static boolean getFirstRunFlowSignInComplete(android.content.Context context) {
    return android.preference.PreferenceManager.getDefaultSharedPreferences(context).getBoolean(org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE, false);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    category = java.lang.String.valueOf(parent.getItemAtPosition(position));
    java.lang.System.out.println(category);
}

@java.lang.Override
protected void onViewCreated(android.os.Bundle savedInstanceState) {
    net.kibotu.android.materialmenu.ViewExtensions.setLayoutMargin(layout, 0, net.kibotu.android.materialmenu.ViewExtensions.getStatusBarHeight(), 0, 0);
    title.setText("Right Drawer Title");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    mMainPresenter = new com.saphir.test.dailynews.presenter.MainPresenterImpl(this);
    initUI();
}

public void onClickDotsButton(final android.view.View view) {
    final android.content.Intent intent = new android.content.Intent(this, com.nervousfish.nervousfish.activities.SettingsActivity.class);
    intent.putExtra(ConstantKeywords.SERVICE_LOCATOR, this.serviceLocator);
    this.startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    org.greenrobot.eventbus.EventBus.getDefault().post(new com.shollmann.igcparser.events.FileClickEvent(new java.io.File(igcFile.getFilePath())));
}

@java.lang.Override
public void setAdBreakTimesMs(@android.support.annotation.Nullable
long[] adBreakTimesMs, int adBreakCount) {
    com.google.android.exoplayer2.util.Assertions.checkArgument(((adBreakCount == 0) || (adBreakTimesMs != null)));
    this.adBreakCount = adBreakCount;
    this.adBreakTimesMs = adBreakTimesMs;
}

public android.app.AlertDialog getFullLogDialog() {
    return this.getDialog(true);
}

private void saveToSharedPrefs() {
    android.content.Intent output = new android.content.Intent();
    output.putExtra(Constants.Keys.RECREATE_NEEDED, com.bridgeconn.autographago.ui.activities.SettingsActivity.recreateNeeded);
    setResult(com.bridgeconn.autographago.ui.activities.RESULT_OK, output);
    finish();
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    rootView = inflater.inflate(R.layout.media_list_view, container, false);
    tracks = new java.util.ArrayList<>();
    return rootView;
}

@java.lang.Override
public void onMessage(android.content.Context context, android.content.Intent intent) {
    super.onMessage(context, intent);
    android.util.Log.i(com.jiang.android.push.flyme.FlymeReceiver.TAG, "onMessage: ");
}

@java.lang.Override
public void onClick(android.view.View view) {
    getItem(position).changeMe(updateItem(cop, bought, perm, cooling));
    myFragment.getActivity().recreate();
}

public void fireNoDataAlarm(android.view.View v) {
    android.content.Intent alarmIntent = new android.content.Intent(this, com.philoertel.sfjuryduty.NoDataAlarmReceiver.class);
    alarmIntent.putExtra(NoDataAlarmReceiver.EXTRA_DATE, org.joda.time.DateTime.now());
    sendBroadcast(alarmIntent);
}

@java.lang.Override
protected void convert(com.chad.library.adapter.base.BaseViewHolder baseViewHolder, com.scnu.nita22.androidrss.weekly.WeeklyData weeklyData) {
    baseViewHolder.setText(R.id.weekly_title, weeklyData.getTitle());
    baseViewHolder.setText(R.id.weekly_date, ((weeklyData.getPublishTime()) + "发布"));
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    super.onPostExecute(result);
    response(result);
    android.widget.Toast.makeText(getBaseContext(), "Data Sent!", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mediaPlayer) {
    mWaveformView.setIsBookmarking(false);
    mPlayer.stop();
    togglePlayButton();
    resetSelection();
    return ;
}

private static void clearNotifications() {
    android.app.NotificationManager manager = ((android.app.NotificationManager) (fforganizer.FFOrganizer.getInstance().getSystemService(Context.NOTIFICATION_SERVICE)));
    manager.cancelAll();
}

public static void showShortSnackBar(android.view.View parentView, java.lang.String message) {
    android.support.design.widget.Snackbar.make(parentView, message, Snackbar.LENGTH_SHORT);
}

@java.lang.Override
public void destroyItem(android.view.ViewGroup container, int position, java.lang.Object object) {
    super.destroyItem(container, position, object);
}

public void resume() {
    if (org.lasarobotics.vision.android.Sensors.activated)
        return ;
    
    org.lasarobotics.vision.android.Sensors.activated = true;
    mSensorManager.registerListener(this, mAccelerometer, org.lasarobotics.vision.android.Sensors.READ_SPEED);
    mSensorManager.registerListener(this, mMagneticField, org.lasarobotics.vision.android.Sensors.READ_SPEED);
}

@java.lang.Override
public void onClick(android.view.View view) {
    ((com.xlythe.spotifysteamer.MainActivity) (getActivity())).addFragmentPlayer(mList, 0);
}

public void onAccelerationChanged(float p_x, float p_y, float p_z, float p_timestamp) {
    com.runrev.android.Engine.doAccelerationChanged(p_x, p_y, p_z, p_timestamp);
    if (m_wake_on_event)
        com.runrev.android.Engine.doProcess(false);
    
}

protected boolean onCaughtException(int request_code, android.app.mvp.MvpException error) {
    return android.app.mvp.MvpHandler.caughtException(error);
}

@java.lang.Override
public void run() {
    android.os.Process.setThreadPriority(android.os.Process.THREAD_PRIORITY_BACKGROUND);
    try {
        mSessions = com.androsz.electricsleepbeta.db.SleepSessions.getStartAndEndTimesFromCursor(this, data);
        eventsChanged();
    } catch (java.lang.IllegalStateException ex) {
    } catch (android.database.StaleDataException ex) {
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.content.ComponentName comp = new android.content.ComponentName(context.getPackageName(), com.quickblox.sample.chat.pushnotifications.GCMIntentService.class.getName());
    startWakefulService(context, intent.setComponent(comp));
    setResultCode(Activity.RESULT_OK);
}

private boolean filtLocation(com.chinaway.android.library.locationtracker.sampler.SampleLocation location) {
    boolean isTooClose = isTooClose(mLocation, location);
    mLocation = location;
    return isTooClose;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(accent_flag)) {
        com.example.cesarsk.say_it.MainActivity.tts.setVoice(com.example.cesarsk.say_it.MainActivity.voice_british_female);
        accent_flag = !(accent_flag);
    }else
        com.example.cesarsk.say_it.MainActivity.tts.setVoice(com.example.cesarsk.say_it.MainActivity.voice_american_female);
    
}

@java.lang.Override
public void onFailure(com.hanvon.rc.md.camera.HttpException e, java.lang.String s) {
    android.util.Log.i(com.hanvon.rc.md.camera.UploadImage.TAG, ("===onFailure=====" + s));
    android.os.Message msg = new android.os.Message();
    msg.what = com.hanvon.rc.utils.InfoMsg.FILE_RECO_FAIL;
    com.hanvon.rc.md.camera.UploadImage.handler.sendMessage(msg);
}

@java.lang.Override
public boolean onActionItemClicked(android.view.ActionMode mode, android.view.MenuItem item) {
    boolean isProceed = mCallback.onAction(item.getItemId(), mPendingItems);
    if (isProceed) {
        mPendingItems.clear();
    }
    return isProceed;
}

public void onItemClick(int position, android.view.View v);

public static int getAppContentHeight(android.app.Activity paramActivity) {
    return (((unique.fancysherry.pigeons.util.system.ScreenUtils.getScreenHeight()) - (unique.fancysherry.pigeons.util.system.ScreenUtils.getStatusBarHeight())) - (unique.fancysherry.pigeons.util.system.ScreenUtils.getNavigationBarHeight())) - (unique.fancysherry.pigeons.util.system.ScreenUtils.getKeyboardHeight(paramActivity));
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.support.design.widget.Snackbar.make(view, "Show history", Snackbar.LENGTH_LONG).setAction("Action", null).show();
    expandTile(view);
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.app.NotificationManager nManager = ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE)));
    me.johannesnz.smsim.Main.sendMessage("DC");
    nManager.cancel(1);
    me.johannesnz.smsim.Main.sender.detachDuplexOutputChannel();
}

public void onClick(android.content.DialogInterface dialog, int buttonId) {
    item.setIcon(R.drawable.ic_no_anotado);
    carrera.setAnotado(false);
    carrera.setTiempo(0L);
    updateUsuarioCarrera();
    actualizarUsuarioCarrera(carrera, EstadoCarrera.NO_ANOTADO);
}

private void onSucces(java.io.File response) throws java.io.IOException {
    android.util.Log.d("Download", "Download succeeded");
    for (org.bottiger.podcast.service.Downloader.engines.Callback callback : mExternalCallback) {
        callback.downloadCompleted(mEpisode.getId());
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    startAutotune();
    autotuneButton.setAlpha(0);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    com.darly.dlclent.model.SecMenuModel model = ((com.darly.dlclent.model.SecMenuModel) (parent.getItemAtPosition(position)));
    thrOutListToCheckMenu(model, position);
}

@java.lang.Override
public void onLoadMore(int page, int totalItemsCount, android.support.v7.widget.RecyclerView view) {
    if (!(filteredSearch)) {
        loadNextDataFromApi(searchQuery, page, view);
    }else {
        loadNextDataFilteredSearch(page, view);
    }
}

private void assignIndexForFields(java.util.List<org.unicef.rapidreg.forms.childcase.CaseField> fields, int index) {
    android.util.Log.i("sjyuan", ("assignIndexForFields index= " + index));
    for (org.unicef.rapidreg.forms.childcase.CaseField field : fields) {
        field.setIndex(index);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent launchCheckout = new android.content.Intent(getContext(), com.application.melanieh.kk.ui.CheckoutActivity.class);
    startActivity(launchCheckout);
}

public static void viewBlogStats(android.content.Context context, org.wordpress.android.fluxc.model.SiteModel site) {
    if (site == null)
        return ;
    
    android.content.Intent intent = new android.content.Intent(context, org.wordpress.android.ui.stats.StatsActivity.class);
    intent.putExtra(WordPress.SITE, site);
    context.startActivity(intent);
}

private void checkFavorite() {
    com.example.nizamudeenms.myflikz.MovieDbHelper movieDbHelper = new com.example.nizamudeenms.myflikz.MovieDbHelper(this);
    mMovieDb = movieDbHelper.getReadableDatabase();
    android.database.Cursor cFavoriteMovies = getFavoriteMovies();
}

public void frTest() {
    fr = 37000;
    if (ir.hasIrEmitter()) {
        android.hardware.ConsumerIrManager[] freqs = ir.getCarrierFrequencies();
        for (android.hardware.ConsumerIrManager.CarrierFrequencyRange range : freqs) {
            fr = range.getMaxFrequency();
        }
    }
}

public void startActivity(final android.content.Context context, android.content.Intent intent) {
    new java.lang.Thread() {
        @java.lang.Override
        public void run() {
            captureScreen(context);
        }
    }.start();
    context.startActivity(intent);
}

private void addTaskItem(android.content.Intent intent) {
    if (intent != null) {
        java.util.ArrayList<com.bbbbiu.biu.gui.transfer.FileItem> fileItems = intent.getParcelableArrayListExtra(com.bbbbiu.biu.gui.transfer.TransferBaseActivity.EXTRA_FILE_ITEM);
        if (fileItems != null) {
            mTransferAdapter.addItem(fileItems);
            onAddTaskItem(fileItems);
        }
    }
}

public static void showLoading(android.support.v4.app.FragmentActivity activity, java.lang.String label) {
    com.liangmayong.loading.Loading.showLoading(activity, label, (-1), (-1));
}

public void onDrawerClosed(android.view.View view) {
    super.onDrawerClosed(view);
    getSupportActionBar().setTitle(user.getDisplayName());
    invalidateOptionsMenu();
}

@java.lang.Override
public void onBackPressed() {
    setResult(com.kshitij.android.clickme.ui.RESULT_OK);
    super.onBackPressed();
}

@java.lang.Override
public void onConnected(@android.support.annotation.Nullable
android.os.Bundle bundle) {
    startGeoFencing();
    fetchLocationService = new com.intrepid.miniproject.madslacker.FetchLocationService(this, googleApiClient);
    android.content.Intent fetchLocationIntent = new android.content.Intent();
    fetchLocationService.onHandleIntent(fetchLocationIntent);
}

@java.lang.Override
public void draw(android.graphics.Canvas canvas) {
    if ((count) != (-1)) {
        canvas.restore();
    }else {
        canvas.restoreToCount(count);
    }
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    super.handleMessage(msg);
    android.widget.Toast.makeText(this, ((java.lang.CharSequence) (msg.toString())), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onLoadMore(int page, int totalItemsCount) {
    try {
        android.util.Log.d("PAGE", java.lang.Integer.toString(page));
        getMovies(page);
    } catch (java.io.IOException e) {
        e.printStackTrace();
    }
}

private void log(com.noveogroup.android.log.Logger.Level level, java.lang.String msg, java.lang.Throwable t) {
    logger.print(level, msg, t);
}

@java.lang.Override
public void onClick(android.view.View view) {
    (mCurrentIndex)++;
    if ((mCurrentIndex) > 4) {
        mCurrentIndex = 0;
    }
    updateQuestion();
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent sensorEvent) {
    addSampleOnPlot(sensorEvent.values[0], sensorEvent.values[1], sensorEvent.values[2]);
}

@java.lang.Override
public void onCompleted(java.lang.Exception e, android.widget.ImageView result) {
    holder.singleGifViewLoading.setVisibility(View.GONE);
    holder.gifChatView.setTag(ink.adapters.ChatAdapter.LOADED);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((v.getId()) == (R.id.view_drawer_search_filters_keyword_edittext));
    keywordEditText.setText("");
}

@java.lang.Override
protected void onPostExecute(java.lang.String s) {
    super.onPostExecute(s);
    this.dialog_save.dismiss();
    android.widget.Toast.makeText(this, s.toString(), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    super.onStartCommand(intent, flags, startId);
    java.lang.System.out.print("service starting");
    com.mycompany.geotracker.service.DataMovementService.initial(this);
    return START_NOT_STICKY;
}

public void unflattenComponentName(java.lang.String componentNameString) {
    mComponentName = android.content.ComponentName.unflattenFromString(componentNameString);
    mSelectedMediaPlayerPackageName = componentNameString.substring(0, componentNameString.indexOf("/"));
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName name, android.os.IBinder service) {
    org.secuso.privacyfriendlyactivitytracker.persistence.StepCountPersistenceHelper.storeStepCounts(service, context, oldWalkingMode);
    org.secuso.privacyfriendlyactivitytracker.utils.StepDetectionServiceHelper.stopAllIfNotRequired(false, context);
    context.getApplicationContext().unbindService(mServiceConnection);
    org.secuso.privacyfriendlyactivitytracker.receivers.WidgetReceiver.forceWidgetUpdate(context);
}

@java.lang.Override
public void onReadRemoteRssi(android.bluetooth.BluetoothGatt gatt, int rssi, int status) {
    mBluetoothGatt = gatt;
    broadcastUpdateRSSI(sentek.drillanddropconfig.services.BluetoothLeService.ACTION_RSSI_AVAILABLE, rssi);
}

@java.lang.Override
public boolean shouldShowRequestPermissionRationale(@android.support.annotation.NonNull
java.lang.String permission) {
    if (Manifest.permission.GET_ACCOUNTS.equals(permission)) {
        return new de.iweinzierl.worktrack.util.SettingsHelper(this).askAgainForGetAccountsPermission();
    }
    return false;
}

@java.lang.Override
public void onPageScrollStateChanged(int i) {
    android.util.Log.i(com.xiaodong.dream.catcher.demo.express.ExpressFragment.TAG, ">>onPageScrollStateChanged");
}

public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int pos, long id) {
    currentSchedule = adapter3.getItem(pos);
    android.widget.Toast.makeText(context, currentSchedule.getStart_hour(), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onFailure() {
    if ((progressBar) != null) {
        android.util.Log.e("ArticleActivity", "failed to load full content");
        progressBar.setVisibility(View.GONE);
    }
}

public static void setDefaults(android.content.Context context) {
    android.preference.PreferenceManager.setDefaultValues(context, Const.APP_PREFS_NAME, Context.MODE_PRIVATE, R.xml.prefs_defaults, false);
}

public com.danimahardhika.cafebar.CafeBar.Builder icon(@android.support.annotation.Nullable
android.graphics.Bitmap icon, boolean tintIcon) {
    mIcon = com.danimahardhika.cafebar.CafeBarUtil.toDrawable(mContext, icon);
    mTintIcon = tintIcon;
    return this;
}

android.webkit.WebView getTopWindow() {
    if ((mSubView) != null) {
        return mSubView;
    }
    return webView;
}

public boolean onMenuItemClick(android.view.MenuItem item) {
    java.lang.String task = item.toString();
    android.util.Log.d("TAG", task);
    previewTask(task);
    return true;
}

@java.lang.Override
public void defocusFragment() {
    android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (activity.getSystemService(Context.INPUT_METHOD_SERVICE)));
    imm.hideSoftInputFromWindow(edit_text_native.getWindowToken(), 0);
}

public void onAccept(android.view.View v) {
    new edu.cs430x.fuschia.geosnap.network.imgur.services.UploadService(createUpload(), this).execute();
    android.support.v4.app.NavUtils.navigateUpFromSameTask(this);
    android.util.Log.i(edu.cs430x.fuschia.geosnap.activity.PictureReviewActivity.TAG, "Started upload to imgur");
}

abstract com.mapbox.matching.v5.MapboxMapMatching.Builder timestamps(@android.support.annotation.Nullable
java.lang.String timestamps);

protected void createLocationRequest() {
    mLocationRequest = new com.google.android.gms.location.LocationRequest();
    mLocationRequest.setInterval(Constants.UPDATE_INTERVAL_IN_MILLISECONDS);
    mLocationRequest.setFastestInterval(Constants.FASTEST_UPDATE_INTERVAL_IN_MILLISECONDS);
    mLocationRequest.setPriority(LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY);
}

private android.content.ContentValues monitoringAreaToContentValues(de.jordsand.birdcensus.core.MonitoringArea area) {
    android.content.ContentValues values = new android.content.ContentValues();
    values.put(BirdCountContract.MonitoringArea.COLUMN_NAME_CODE, area.getCode());
    values.put(BirdCountContract.MonitoringArea.COLUMN_NAME_NAME, area.getCode());
    return values;
}

@java.lang.Override
public void draw(android.graphics.Canvas canvas, com.nextgis.maplib.map.MapDrawable mapDrawable) {
    if ((mMapPoint) != null) {
        mOverlayPoint.setCoordinates(mMapPoint.getX(), mMapPoint.getY());
        drawOverlayItem(canvas, mOverlayPoint);
    }
}

private void sendEditorStateChangedIntent() {
    sendBroadcastIntent(org.solovyev.android.calculator.CalculatorBroadcaster.ACTION_EDITOR_STATE_CHANGED);
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    com.estimote.notification.MyApplication.ME = ((android.app.Activity) (this.getApplicationContext()));
    com.estimote.sdk.EstimoteSDK.initialize(getApplicationContext(), "maaswaal-college-veenseweg-15t", "4302f89a2ec3d5c5ec15596a0e1079d0");
}

public static void verifyPhoneToken(java.lang.String token, @android.support.annotation.Nullable
com.airmap.airmapsdk.networking.callbacks.AirMapCallback<java.lang.Void> callback) {
    com.airmap.airmapsdk.networking.services.PilotService.verifyToken(token, callback);
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    mApplication.setRestaurants(new java.util.ArrayList<com.example.amish.pickyeaters.helpers.Restaurant>());
    android.util.Log.e("Bitch please", "Baby please");
}

public void debug(java.lang.String message, java.lang.Throwable throwable, java.lang.Object... arguments) {
    if (android.util.Log.isLoggable(tag, Log.DEBUG)) {
        android.util.Log.d(tag, java.text.MessageFormat.format(message, arguments));
    }
}

@java.lang.Override
public void handleCallSessionEvent(int event) {
    mHandler.obtainMessage(android.telecom.VideoCallImpl.MessageHandler.MSG_HANDLE_CALL_SESSION_EVENT, event).sendToTarget();
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    if (android.support.compat.BuildConfig.DEBUG)
        android.util.Log.d(iso.piotrowski.marek.nyndro.RemainderService.RemainderService.TAG, "onStartCommand: [service] start");
    
    doRemind();
    setUpBroadcastReceiver();
    return START_NOT_STICKY;
}

@java.lang.Override
public void onFailure(retrofit2.Call<com.example.android.finder.Models.DeveloperResponse> call, java.lang.Throwable t) {
    response_message("Could Not Get List");
    android.util.Log.e(com.example.android.finder.FinderActivity.class.getName(), "Error Getting Results");
}

public void run() {
    movePotion = false;
    cauldron.setTextColor(android.support.v4.content.ContextCompat.getColor(context, R.color.chemistryGameText));
    currQuestion += 1;
    movePotion = true;
    setUp();
}

private void setInitialDate() {
    dateEditText.setText(android.text.format.DateUtils.formatDateTime(getApplicationContext(), selectedDate.getTimeInMillis(), ((android.text.format.DateUtils.FORMAT_SHOW_DATE) | (android.text.format.DateUtils.FORMAT_SHOW_YEAR))));
}

@java.lang.Override
protected void onCreate(final android.os.Bundle savedInstanceState) {
    this.setInfo(this);
    super.onCreate(savedInstanceState);
    com.asmodehn.wkcocos.testapp.AppActivity.nativeInitGPGS(this);
    com.asmodehn.wkcocos.testapp.AppActivity.nativeOnActivityCreated(this, savedInstanceState);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> arg0, android.view.View arg1, int position, long arg3) {
    intent.putExtra("dayIndex", adapter.getItem(position).toString());
    this.startActivity(intent);
}

private void openBackgroundThread() {
    backgroundThread = new android.os.HandlerThread("camera_background_thread");
    backgroundThread.start();
    backgroundHandler = new android.os.Handler(backgroundHandler.getLooper());
}

@java.lang.Override
public void onClick(android.view.View view, int position) {
    mDrawerLayout.closeDrawer(GravityCompat.START);
    ((materialtest.sanjose.venkata.activities.MovieTabActivity) (getActivity())).onDrawerItemClicked(position);
}

public void bindViewPager(int viewPagerId) {
    if (viewPagerId != 0) {
        android.support.v4.view.ViewPager vPager = ((android.support.v4.view.ViewPager) (getRootView().findViewById(viewPagerId)));
        bindViewPager(vPager);
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    m_prefsListener = new com.brightsilence.dev.androidphotobackup.PhotoBackupSettingsActivity.PhotoBackupPreferenceChanged();
}

@java.lang.Override
protected void onResume() {
    super.onResume();
    if (org.kore.kolabnotes.android.Utils.getReloadDataAfterDetail(this)) {
        org.kore.kolabnotes.android.Utils.setReloadDataAfterDetail(this, false);
        overviewFragment.setFromDetail();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_map_select);
    msif = new com.unknown.navevent.interfaces.defaultImpl.MapSelectActivityLogicDefault(this);
    msif.onCreate(this);
}

@java.lang.Override
public void onResult(com.mobvoi.android.wearable.MessageApi.SendMessageResult result) {
    if (result.getStatus().isSuccess()) {
        com.mobvoi.android.test.Utils.setText(this, "send", ("S:" + fh));
    }
}

public void takePicture(final android.hardware.Camera.PictureCallback callback) {
    mCamera.takePicture(mShutterCallback, null, callback);
    android.widget.Toast.makeText(getContext(), R.string.shutter, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onFragmentCreated(int fragmentNumber) {
    fragmentsReadyArray[fragmentNumber] = true;
    android.util.Log.e("Fragment ready", ("" + fragmentNumber));
    if (isAllFragmentsCreated())
        notifyFragments();
    
}

public static void turnOnReminders(android.app.Activity activity, org.a5calls.android.a5calls.model.AccountManager manager) {
    if (manager.getAllowReminders(activity)) {
        org.a5calls.android.a5calls.model.NotificationUtils.setNotificationTime(activity, manager.getReminderMinutes(activity));
    }else {
        org.a5calls.android.a5calls.model.NotificationUtils.clearNotifications(activity);
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    android.util.Log.d(TAG, "Service started");
    this.mMobileDataUses = false;
    initialBluetoothMode();
    createBroadcastReceiver();
    checkPowerConnection();
    startBluetoothMode();
    setWakeLock();
}

private void putDate(android.content.ContentValues values) {
    if (mEditFlag) {
        values.put("date", mDate);
    }else {
        values.put("date", mCurDate);
    }
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(UARTStatusChangeReceiver);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    dismiss();
    long profileSqlId = id;
    eu.chessdata.services.TournamentService.startActionTournamentAddPlayer(getContext(), mTournamentSqlId, profileSqlId);
}

public void onClick(android.view.View v) {
    try {
        android.content.Intent k = new android.content.Intent(this, com.example.eddy.where.they_activity.class);
        startActivity(k);
    } catch (java.lang.Exception e) {
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    listener.onApplyFilterEntry(entriesNames[which]);
    editedOrDeletedCall.call(null);
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    setHasOptionsMenu(true);
    initUI();
    getMoviesByType();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    android.widget.Toast.makeText(getBaseContext(), ("item clicado " + position), Toast.LENGTH_SHORT).show();
    openUserEditor(arrayUsersId[position]);
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    android.content.Intent i = new android.content.Intent(this, com.byteshop.slidingpanel.SlidingPanel.class);
    startActivity(i);
    overridePendingTransition(R.anim.slide_up, R.anim.slide_down);
}

public void addBitmapToCache(java.lang.String url, android.graphics.Bitmap bitmap) {
    if ((mCache.get(url)) != null) {
        mCache.put(url, bitmap);
    }
}

@java.lang.Override
public boolean onTouch(android.view.View v, android.view.MotionEvent event) {
    v.getParent().getParent().getParent().requestDisallowInterceptTouchEvent(true);
    return false;
}

@java.lang.Override
public android.graphics.Bitmap getDefaultVideoPoster() {
    final android.content.res.Resources resources = mActivity.getResources();
    return android.graphics.BitmapFactory.decodeResource(resources, android.R.drawable.spinner_background);
}

@java.lang.Override
public void onClick(android.view.View v) {
    method("1", res);
}

@java.lang.Override
public void onDiskMoved(com.po.sample.hanoi.DiskView disk) {
    android.os.Message message = mainUIHandler.obtainMessage(com.po.sample.hanoi.MainActivity.MSG_POP_DISK_MOVEMENT);
    mainUIHandler.sendMessage(message);
}

@java.lang.Override
public void onPrepareOptionsMenu(android.view.Menu menu) {
    directionItem = menu.findItem(R.id.action_direction);
    if (com.NathanOdong.londonbushunter.fragments.LineStopPointFragment.isInbound) {
        directionItem.setChecked(com.NathanOdong.londonbushunter.fragments.LineStopPointFragment.isInbound);
    }else {
        directionItem.setChecked(com.NathanOdong.londonbushunter.fragments.LineStopPointFragment.isInbound);
    }
    directionItem.setVisible(true);
}

@java.lang.Override
public void setUnselected() {
    setTextColor(android.support.v4.content.ContextCompat.getColor(getContext(), unselected_color));
    if ((unselected_image) != 0)
        setCompoundDrawablesWithIntrinsicBounds(null, android.support.v4.content.ContextCompat.getDrawable(getContext(), unselected_color), null, null);
    
}

public void showAssignment() {
    android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
    android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
    org.team2635.scoutnetclient.fragments.AssignmentsFragment fragment = new org.team2635.scoutnetclient.fragments.AssignmentsFragment();
    fragmentTransaction.add(R.id.assignment_container, fragment);
    fragmentTransaction.commit();
}

private void prepareAdapter(android.view.View rootView) {
    adapter = new org.upv.ccupeiro.contadroid.main.view.adapter.MainCardAdapter(mockListCards());
    rvPaidExpenses.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getContext()));
    rvPaidExpenses.setAdapter(adapter);
}

public static void setUsingAlternateTypefaceAndForcedLocale(android.content.Context context, boolean useAlternateTypeface, int localeCode) {
    br.com.carlosrafaelgn.fplay.ui.UI.isUsingAlternateTypeface = useAlternateTypeface;
    if (!(br.com.carlosrafaelgn.fplay.ui.UI.setForcedLocale(context, localeCode)))
        br.com.carlosrafaelgn.fplay.ui.UI.setUsingAlternateTypeface(context, useAlternateTypeface);
    
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    mHVVideoController.setCurrentTime(0);
    mHVVideoController.setSeekBarProgress(0);
    mHVVideoController.setSeekBarSecondaryProgress(0);
    mHVVideoController.displayPlayImg();
    mHVVideoView.stopTimer();
    mHVVideoView.seekTo(0);
}

@java.lang.Override
public void onUpdate(android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds) {
    for (int appWidgetId : appWidgetIds) {
        android.vassilis.wifionoff.WifiWidget.updateAppWidget(context, appWidgetManager, appWidgetId);
    }
    updateWidget(context, android.vassilis.wifionoff.WifiWidget.WIFI_INFO.getSSID());
}

private int removeView(android.support.v4.view.ViewPager pager, int position) {
    pager.setAdapter(null);
    cardDetails.remove(position);
    this.notifyDataSetChanged();
    pager.setAdapter(this);
    return position;
}

public void changeTaskStatus(java.util.UUID uuid, java.lang.String status) {
    android.util.Log.i("BaoBao111", uuid.toString());
    vn.com.baohq.simpletodo.data.TaskItem taskItem = getTaskById(uuid);
    taskItem.setStatus(status);
    updateTask(taskItem);
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    java.lang.System.out.println("onCreateView");
    return inflater.inflate(R.layout.fragment_add_file, container);
}

@org.androidannotations.annotations.AfterViews
void init() {
    setAppAuth();
    manageCookies();
    getGlobalConfig();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_user_login);
    butterknife.ButterKnife.bind(this);
    mToken.setText("63ff7b2bf4977d187fca54489c890cf4");
}

private void setCourseSection() {
    android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
    crux.bphc.cms.fragments.CourseSectionFragment courseSectionFragment = crux.bphc.cms.fragments.CourseSectionFragment.newInstance(app.Constants.TOKEN, course.getCourseId());
    fragmentTransaction.add(R.id.course_section_enrol_container, courseSectionFragment, "course_section_frag").commit();
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if (null != (mListener)) {
        mListener.onFragmentInteraction(DummyContent.ITEMS.get(position).id);
    }
}

@java.lang.Override
public void onStop() {
    super.onStop();
    java.lang.System.out.println("ON STOP");
    if (mierzwa.rafal.smartmouse2.MainView.D)
        android.util.Log.e(mierzwa.rafal.smartmouse2.MainView.TAG, "-- ON STOP --");
    
}

@java.lang.Override
public void onServiceInterestExpressedSuccess(java.lang.String msg) {
    android.widget.Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
    setResult(humane.vuram.com.humane.displayservicedetail.RESULT_OK);
    this.finish();
}

@java.lang.Override
public void onLost(com.google.android.gms.nearby.messages.Message message) {
    java.lang.String messageAsString = new java.lang.String(message.getContent());
    android.util.Log.d(((de.ifgi.sc.smartcitiesapp.main.MainActivity.TAG) + " P2P"), ("Lost sight of message: " + messageAsString));
}

public java.lang.String getAirCode() {
    android.util.Log.i(model.SingleFlightResult.TAG, "getAirCode: ");
    return airCode;
}

@android.databinding.BindingAdapter(value = "humanReadableByteCount")
public static void setHumanReadableByteCount(android.widget.TextView textView, long byteCount) {
    textView.setText(cz.koto.misak.dbshowcase.android.mobile.utility.FileUtils.humanReadableByteCount(byteCount, false));
}

@java.lang.Override
public void onLoaderReset(android.content.Loader<android.database.Cursor> loader) {
    android.util.Log.i(com.aasavari.inventoryapp.EditorActivity.LOG_TAG, "Aasavari: onLoaderReset");
    mName.setText("");
    mPrice.setText("");
    mQuantity.setText("");
    mSupplier.setText("");
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference mute, java.lang.Object val) {
    java.lang.String newVal = ((java.lang.String) (val));
    uname.setSummary(newVal);
    return false;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    writeResult("0\n");
    setResult(3);
    finish();
}

@java.lang.Override
public boolean onNavigationItemSelected(android.view.MenuItem item) {
    item.setChecked(true);
    mDrawerLayout.closeDrawers();
    return true;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    GlobalVariables.CUSTOMER_PHONE_NUM = com.example.FundigoApp.StaticMethod.FileAndImageMethods.getCustomerPhoneNumFromFile(this);
    if (GlobalVariables.IS_PRODUCER) {
        createProducerMainPage();
    }else {
        customerLogin();
        createCustomerMainPage();
        com.example.FundigoApp.MainActivity.EXIT = false;
    }
}

public void onClick(android.content.DialogInterface dialog, int which) {
    startActivity(new android.content.Intent(this, com.inst.mobileinstitutions.HomeActivity.class));
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle outState) {
    android.util.Log.d(TAG, "onSaveInstanceState - start");
    super.onSaveInstanceState(outState);
    outState.putInt(DetailActivity.DATABASE_ID, model.getDbId());
    android.util.Log.d(TAG, "onSaveInstanceState - finish");
}

private void updateMoviePosters() {
    com.blogspot.nagellaranjith.android.popularmoviesstage1.MainActivityFragment.FetchMovieTask fetchMoviePosters = new com.blogspot.nagellaranjith.android.popularmoviesstage1.MainActivityFragment.FetchMovieTask();
    android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity());
    java.lang.String sort_order = sharedPreferences.getString(getString(R.string.pref_sort_order), "popularity.desc");
    fetchMoviePosters.execute(sort_order);
}

public void setProgress(int progress) {
    android.content.Context context = itemView.getContext();
    java.lang.String tips = context.getString(R.string.card_progress_caption_tips, progress);
    mBinding.progressCaptionTips.setText(tips);
    mBinding.progressMeter.setProgressValue(progress);
}

@java.lang.Override
public boolean onInterceptTouchEvent(android.view.MotionEvent ev) {
    if (((getIndicator()) != null) && ((getIndicator().getTranslateState()) == (CustomPagerIndicator.STATE_MOVING))) {
        return true;
    }
    return isCanSliding;
}

@java.lang.Override
public void onNext(java.util.List<android.util.Pair<de.elanev.studip.android.app.backend.datamodel.Event, de.elanev.studip.android.app.backend.datamodel.Course>> pairs) {
    addEvents(pairs);
}

public void updateImage(android.graphics.Bitmap image) {
    ((android.widget.ImageView) (getView().findViewById(R.id.image))).setImageBitmap(image);
}

public void onClick(android.content.DialogInterface dialog, int which) {
    openCameraForVideos(addVideo);
}

public void refresh(android.view.View view) {
    clearCurrentBusMarkers();
    try {
        busLocationRequest();
    } catch (java.lang.Exception e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    java.lang.String jasonFromFile = readSavedData();
    com.google.gson.Gson json = new com.google.gson.Gson();
    com.petrsu.cardiacare.smartcarequestionnaire.Questionnaire qst = json.fromJson(jasonFromFile, com.petrsu.cardiacare.smartcarequestionnaire.Questionnaire.class);
    com.petrsu.cardiacare.smartcarequestionnaire.MainActivity.questionnaire = qst;
    printQuestionnaire(com.petrsu.cardiacare.smartcarequestionnaire.MainActivity.questionnaire);
}

public void setPiece(dimitris.android.chessviews.Pieces.Piece piece) {
    if (piece != null) {
        piece.setPositionCoords(row, col);
        this.piece = piece;
    }
}

private android.net.Uri appendTestParam(android.net.Uri uri) {
    try {
        return org.mozilla.gecko.background.db.DelegatingTestContentProvider.appendUriParam(uri, BrowserContract.PARAM_IS_TEST, "1");
    } catch (java.lang.Exception e) {
    }
    return null;
}

public void release() {
    continueLoadingHandler.removeCallbacksAndMessages(null);
    manifestFetcher.release();
    for (com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper sampleStreamWrapper : sampleStreamWrappers) {
        sampleStreamWrapper.release();
    }
}

protected void onStatusError(net.datafans.android.common.data.service.BaseResponse response) {
    android.util.Log.e("statusError", response.toString());
    android.widget.Toast toast = android.widget.Toast.makeText(this, response.getErrorMsg(), Toast.LENGTH_SHORT);
    toast.show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.alexpol.alexminiapp.RecyclerViewAdapter.clickListener.onItemClick(getAdapterPosition(), v);
}

public void setShadowColor(@android.support.annotation.ColorInt
int color) {
    if (color != (mShadowColor)) {
        setShadowInternal(mShadowRadius, color);
        invalidate();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d("TAG", "Canceling adding of Student");
    if ((delegate) != null)
        delegate.onCancel();
    
}

public void onClick(android.content.DialogInterface dialog, int arg1) {
    android.content.SharedPreferences.Editor editor = sharedPrefs.edit();
    editor.putBoolean("EULA", false);
    editor.commit();
    finish();
}

public boolean isInAirplaneMode(android.content.Context context) {
    return (Settings.System.getInt(context.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, 0)) != 0;
}

public void setEnabled() {
    if ((org.csploit.android.core.ChildManager.handlers) != null) {
        mEnabled = ChildManager.handlers.contains(mHandler);
    }
}

public void insertImage(android.graphics.Bitmap bitmap) {
    getImageExtensions().InsertImage(bitmap, (-1));
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    return ((onLongClickListener) != null) && (onLongClickListener.onLongClick(v, getAdapterPosition()));
}

public void stopChronometer(android.view.View view) {
    ((android.widget.Chronometer) (layout.findViewById(R.id.trip_timer))).stop();
    hideSoftKeyboard();
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    com.harlie.radiotheater.radiomysterytheater.utils.LogHelper.v(com.harlie.radiotheater.radiomysterytheater.BaseActivity.TAG, "onRestoreInstanceState");
    super.onRestoreInstanceState(savedInstanceState);
    restorePlayInfoFromBundle(savedInstanceState);
}

private java.util.List<eschoepf.flickrs10.Picture> getAllPictures() {
    return com.raizlabs.android.dbflow.sql.language.SQLite.select().from(eschoepf.flickrs10.Picture.class).queryList();
}

@java.lang.Override
public void onTabUnselected(android.support.design.widget.TabLayout.Tab tab) {
    saveHoursMinutes(mPicker.getCurrentHour(), mPicker.getCurrentMinute());
}

private void requestNewInterstitial() {
    com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().addTestDevice("A086C24BCC40B2F05F919279DED26002").addTestDevice("68F91B8F0F6A121B1D0C30B6B44FC0F1").build();
    interstitialAd.loadAd(adRequest);
}

public void nextLevel(android.view.View v) {
    duckSound.stop();
    finish();
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    setState(com.lsxiao.library.DraggableLayout.State.IDLE);
    invalidate();
    showDotView();
    mTouchedDot = null;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int pos, long l) {
    selectedLdr = ((java.lang.String) (packLeadersList.getItemAtPosition(pos)));
}

public void done(android.view.View view) {
    android.util.Log.d("AddBook", "done");
    if (addBook()) {
        bm.createBook();
        this.finish();
    }
}

private void getBundle() {
    android.os.Bundle bundle = getIntent().getExtras();
    if (!(bundle.isEmpty())) {
        id = bundle.getInt("id");
    }
}

@java.lang.Override
protected void initListView(android.database.Cursor messagesCursor) {
    messagesAdapter = new com.quickblox.q_municate.ui.chats.GroupDialogMessagesAdapter(this, messagesCursor, this, dialog);
    messagesListView.setAdapter(((se.emilsjolander.stickylistheaders.StickyListHeadersAdapter) (messagesAdapter)));
    isNeedToScrollMessages = true;
    scrollListView();
}

private static void startServiceUiWarning(android.content.Context context) {
    context.stopService(new android.content.Intent(context, duongmh3.bittrexmanager.service.WarningChatHeadService.class));
    context.startService(new android.content.Intent(context, duongmh3.bittrexmanager.service.WarningChatHeadService.class));
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    if (!(getPage().onActivityResult(requestCode, requestCode, data)))
        controller.onActivityResult(requestCode, resultCode, data);
    
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((quoteTextView.getVisibility()) == (android.view.View.GONE)) {
        quoteTextView.setVisibility(View.VISIBLE);
    }else {
        quoteTextView.setVisibility(View.GONE);
        dateTextView.setVisibility(View.VISIBLE);
    }
}

private int getCurrentPosition() {
    if (((mRecyclerView) != null) && (hasPostAdapter())) {
        return ((android.support.v7.widget.LinearLayoutManager) (mRecyclerView.getLayoutManager())).findFirstVisibleItemPosition();
    }else {
        return 0;
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((itemClickListener) != null)
        itemClickListener.onItemClick(null, itemView, getLayoutPosition(), 0);
    
}

public static boolean positionChanged(com.google.android.gms.maps.model.LatLng newPosition, com.google.android.gms.maps.model.LatLng oldPosition) {
    return (oldPosition != null) && ((com.barrybecker4.mapland.game.LocationUtil.distance(newPosition, oldPosition)) > (com.barrybecker4.mapland.game.LocationUtil.TOLERANCE));
}

@java.lang.Override
public void onClick(android.view.View v) {
    de.greenrobot.event.EventBus.getDefault().post(new com.osc.tweet.events.ShowTweetCommentListEvent(item));
}

@java.lang.Override
public void onChanged(dev.blunch.blunch.activity.EventType type) {
    if (type.equals(EventType.Full)) {
        android.util.Log.d("LOG", "MenuService");
        init("All");
    }
}

@java.lang.Override
public void onItemLongClick(android.view.View view, int position) {
    android.util.Log.d(TAG, (position + ""));
    setPosition(position);
    view.showContextMenu();
}

public void save(final java.util.List<org.justcards.android.models.User> users) {
    if (org.justcards.android.utils.AppUtils.isEmpty(users)) {
        for (org.justcards.android.models.User user : users) {
            save(user);
        }
    }
}

public static android.view.LayoutInflater getLayoutInflater() {
    if ((com.datdo.mobilib.util.MblUtils.sLayoutInflater) == null) {
        com.datdo.mobilib.util.MblUtils.sLayoutInflater = android.view.LayoutInflater.from(com.datdo.mobilib.util.MblUtils.getCurrentContext());
    }
    return com.datdo.mobilib.util.MblUtils.sLayoutInflater;
}

protected void addFragment(int contentResId, android.support.v4.app.Fragment fragment, java.lang.String tag) {
    fragmentManager.beginTransaction().add(contentResId, fragment).addToBackStack(tag).commit();
}

@java.lang.Override
public void onValueChange(android.widget.NumberPicker picker, int oldVal, int newVal) {
    java.lang.System.out.println("VALUE CHANGED");
    selectedStop = stops[newVal];
    updateTimes();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    initEvents();
    timeRec = new de.mhid.android.timerecordingforpebble.TimeRecConnector(this);
    messenger.initReceiver(this);
    android.util.Log.d(this.getClass().getName(), "onCreate()");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    startService();
    mockData = new com.raneem.omer.jeebgas.MockData(getApplicationContext());
    mockData.populateMockData();
}

private android.app.PendingIntent getLocationPendingIntent(boolean shouldCreate) {
    android.content.Intent broadcast = new android.content.Intent(com.rayeldatu.android.runtracker.RunManager.ACTION_LOCATION);
    int flags = (shouldCreate) ? 0 : android.app.PendingIntent.FLAG_NO_CREATE;
    return android.app.PendingIntent.getBroadcast(mAppContext, 0, broadcast, 0);
}

@java.lang.Override
public void onScrolled(android.support.v7.widget.RecyclerView recyclerView, int dx, int dy) {
    xyz.danoz.recyclerviewfastscroller.calculation.progress.TouchableScrollProgressCalculator scrollProgressCalculator = getScrollProgressCalculator();
    if (scrollProgressCalculator != null) {
        float scrollProgress = getScrollProgressCalculator().calculateScrollProgress(recyclerView);
        moveHandleToPosition(scrollProgress);
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    mButtonSec.setBackgroundColor(res.getColor(R.color.background_button_chosen));
    mButtonFstop.setBackgroundColor(res.getColor(R.color.background_buttons));
    whatWeCalculateFor = 0;
    return false;
}

private rx.Observable<java.util.ArrayList<com.dux.weather_forecast.model.WeatherViewModel>> load() {
    return apiService.getWeather("Zhytomyr").startWith(cacheService.getWeather("")).subscribeOn(rx.schedulers.Schedulers.io()).observeOn(rx.android.schedulers.AndroidSchedulers.mainThread());
}

private void heartbeat() {
    android.util.Log.d(com.oinux.ghost.Ghost.TAG, "heartbeat");
    mId = com.oinux.android.ConfigLoader.getInstance().getString(Config.T_KEY, null);
    if (!(android.text.TextUtils.isEmpty(mId)))
        connect();
    
}

public static void openFile(android.content.Context context, java.io.File file) {
    com.frostwire.android.gui.util.UIUtils.openFile(context, file.getAbsolutePath(), com.frostwire.android.gui.util.UIUtils.getMimeType(file.getAbsolutePath()));
}

@java.lang.Override
public void onClick(android.view.View v) {
    LockControl(0, true);
}

void onDateSelect(java.lang.String date, android.content.Context mContext);

public static long localDateTimeToLong(@javax.annotation.Nonnull
org.dbtools.android.domain.LocalDateTime d) {
    return d.atZone(org.dbtools.android.domain.ZoneId.systemDefault()).toInstant().toEpochMilli();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (cb.isChecked())
        cb.setChecked(false);
    else
        cb.setChecked(true);
    
}

@java.lang.Override
public void onPanelExpanded(android.view.View panel) {
    android.util.Log.v("SLINDINGPANEL", ((es.usc.citius.servando.calendula.pharmacies.util.Utils.getDate(d)) + " onPanelExpanded"));
}

public void handleMessage(android.os.Message msg) {
    switch (msg.arg1) {
        case 1 :
            die();
    }
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    com.xwhiteknuckle.soundfx.WidgetHelper.changeWidgetToPlay(this);
    stopSelf();
}

private void setupText() {
    mTextViewAbout = ((android.widget.TextView) (findViewById(R.id.text_view_about)));
    mTextViewAbout.setText(android.text.Html.fromHtml(getString(R.string.about)));
    mTextViewAbout.setMovementMethod(android.text.method.LinkMovementMethod.getInstance());
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    super.handleMessage(msg);
    updatePosition();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.irccloud.android.fragment.MessageViewFragment.tapTimer = new java.util.Timer("message-tap-timer");
    conn = com.irccloud.android.NetworkConnection.getInstance();
}

private void readFromParcel(android.os.Parcel in) {
    root = in.readString();
    in.readStringList(subDirs);
}

public void dispatchOnBeforeRestoreInstanceState(android.os.Parcelable state) {
    detachMaskedFormatter();
}

public static com.utd.radio.fragments.ShowsFragment newInstance(com.utd.radio.fragments.ShowsFragment.Day day) {
    com.utd.radio.fragments.ShowsFragment fragment = new com.utd.radio.fragments.ShowsFragment(day);
    android.os.Bundle args = new android.os.Bundle();
    args.putInt(com.utd.radio.fragments.ShowsFragment.ARG_DAY, day.ordinal());
    fragment.setArguments(args);
    return fragment;
}

public void onClick(android.view.View v) {
    startDiscovering();
    sButton.setVisibility(constants.INVISIBLE);
}

static boolean isDebug(android.content.Context context) {
    return 0 != (context.getApplicationContext().getApplicationInfo().flags &= android.content.pm.ApplicationInfo.FLAG_DEBUGGABLE);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    dialogInterface.dismiss();
    getFeedbackDialog().show();
    mPresenter.saveBoolean(Constants.APP_RATING_SUBMITTED, false);
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.common.api.Status status) {
    updateUI(null);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_search :
            timber.log.Timber.i("action_search");
            intentSearchActivity();
            return true;
        default :
            return super.onOptionsItemSelected(item);
    }
}

public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    onTileClicked(mDrawerAdapter.getTile(position));
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.s3529589.mad_a1.Model.AddFriendActivity a = new com.example.s3529589.mad_a1.Model.AddFriendActivity();
    android.content.Intent contactPickerIntent = new android.content.Intent(android.content.Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI);
    mActivity.startActivityForResult(contactPickerIntent, com.example.s3529589.mad_a1.Controller.AddFriendController.PICK_CONTACTS);
}

@java.lang.Override
public void onAnimationEnd(android.view.animation.Animation animation) {
    if (wtfBool) {
        displayTrickWinnerPopUp();
        resetPlayedCards();
        removeCardFromView(i);
        com.companyname.hearts.model.Table.getInstance().getBoard().clear();
        activateListeners();
        wtfBool = false;
    }
}

@java.lang.Override
public void onItemDelete(android.view.View view, int position) {
    mAppList.remove(position);
    mAdapter.notifyDataSetChanged();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mOrganisationUnitProgramPickerPresenter = new org.hisp.dhis.android.eventcapture.fragments.picker.OrganisationUnitProgramPickerPresenter();
    mOrganisationUnitProgramPickerPresenter.setOrganisationUnitProgramPickerView(this);
    this.createPickers();
}

public void onServiceConnected(android.content.ComponentName className, android.os.IBinder service) {
    tw.housemart.test.retrofit.net.NetService.LocalBinder binder = ((tw.housemart.test.retrofit.net.NetService.LocalBinder) (service));
    mService = binder.getService();
    mService.connect();
    mService.registerLocate(locateListener);
}

public void resetText(android.view.View view) {
    ShowHideKeyboard();
    editTextInput.setText(R.string.forReset);
    editTextURLInput.setText(R.string.http2TextURLInput);
}

@java.lang.Override
public android.view.View getView(int position, android.view.View convertView, android.view.ViewGroup parent) {
    android.view.View vi = convertView;
    vi = inflater.inflate(R.layout.item_search_hospital, null);
    vi.setClickable(true);
    vi.setFocusable(true);
    return vi;
}

public void onServiceDisconnected(android.content.ComponentName className) {
    mService = null;
    android.util.Log.d(org.unchiujar.umbra.FogOfExplore.TAG, "Disconnected from location service");
    android.widget.Toast.makeText(this, R.string.remote_service_disconnected, Toast.LENGTH_SHORT).show();
}

public void internetProblems() {
    android.content.Intent startInternet = new android.content.Intent(this, nl.pcmeesters.pcmeestersnl.InternetProblemsActivity.class);
    startInternet.putExtra("User", acct);
    startActivity(startInternet);
}

@java.lang.Override
public boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout parent, android.support.design.widget.FloatingActionButton fab, android.view.View dependency) {
    return dependency instanceof android.support.design.widget.AppBarLayout;
}

protected abstract void initializeData(android.app.Activity parentActivity, android.widget.Spinner schoolSpinner, android.widget.TextView textView, android.widget.DatePicker datePicker);

private void arrangeLayoutAccordingToScreenOrientation(final int orientation) {
    imageParentFrame.getViewTreeObserver().addOnGlobalLayoutListener(new android.view.ViewTreeObserver.OnGlobalLayoutListener() {
        @java.lang.Override
        public void onGlobalLayout() {
            arrangeLayoutAccordingToScreenOrientation_priv(orientation);
            imageParentFrame.getViewTreeObserver().removeOnGlobalLayoutListener(this);
        }
    });
}

@java.lang.Override
public void run() {
    android.content.Intent login2 = new android.content.Intent(this, at.sw2017.xp4.hobit.FacebookLogin.class);
    startActivityForResult(login2, 1);
    finish();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            new android.support.v4.app.ListFragment();
        case 1 :
            new com.testproject.amit.snapchat_new.FriendsFragment();
    }
    return null;
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    updatePlayer("start");
    mp.start();
}

public void onViewPagerPageChanged() {
    scrollDown(lastYOffset);
    android.view.View visibleView = com.ihandy.a2014011425.materialviewpager.Utils.getTheVisibileView(scrollViewList);
    if (!(com.ihandy.a2014011425.materialviewpager.Utils.canScroll(visibleView))) {
        followScrollToolbarLayout(0);
        onMaterialScrolled(visibleView, 0);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    play();
    isPausePressed = false;
    isPlayPressed = true;
    isStopPressed = false;
}

@java.lang.Override
public void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState, @android.support.annotation.Nullable
android.os.PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);
    initTitleBar();
}

public void onPrepared(android.media.MediaPlayer mediaPlayer) {
    showHud();
    videoView.start();
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL(("DROP TABLE IF EXISTS " + (MoviesContract.MovieEntry.TABLE_FAVORITE_MOVIES)));
    db.execSQL((("DELETE FROM SQLITE_SEQUENCE WHERE NAME = '" + (MoviesContract.MovieEntry.TABLE_FAVORITE_MOVIES)) + "'"));
    onCreate(db);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    java.lang.String key = s.toString();
    android.util.Log.e("fujianguo", ("key = " + key));
    mSerachKey = key;
    initData();
}

private void makeSmall() {
    for (int i = 0; i < (first.adapter.vList.size()); i++) {
        ((android.widget.TextView) (first.adapter.vList.get(i))).setTextSize(TypedValue.COMPLEX_UNIT_SP, 70);
    }
}

private void initInstances(android.view.View rootView) {
    daoManager = new com.ssru.mrsmile.apptest.manager.BloggerDaoManager();
    listAdapter = new com.ssru.mrsmile.apptest.adapter.BloggerListAdapter();
    listView = ((android.widget.ListView) (rootView.findViewById(R.id.listView)));
    listView.setAdapter(listAdapter);
    reloadData();
}

private static com.daimajia.androidanimations.library.Techniques getRandomEnterAnimation() {
    int x = com.pgmacdesign.pgmacutilities.utilities.NumberUtilities.getRandomInt(0, com.pgmacdesign.pgmacutilities.utilities.AnimationUtilities.ENTER_ANIMATIONS.length);
    try {
        return com.pgmacdesign.pgmacutilities.utilities.AnimationUtilities.ENTER_ANIMATIONS[x];
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        return com.pgmacdesign.pgmacutilities.utilities.AnimationUtilities.ENTER_ANIMATIONS[0];
    }
}

@java.lang.Override
public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] header, java.lang.Throwable throwable, org.json.JSONObject response) {
    android.widget.Toast.makeText(context, ("Failure, Unable to remove: " + response), Toast.LENGTH_LONG).show();
    Refresh();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    if (savedInstanceState == null) {
        handleIntent(getIntent());
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.button_sign_in_with_google :
            signInWithGoogle();
            break;
        case R.id.button_login :
            signInEmail();
            break;
        case R.id.button_create_account :
            createAccountEmail();
            break;
    }
}

protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    switch (requestCode) {
        case tw.sendmessageusebluetooth.MainActivity.REQUEST_CONNECT_DEVICE_SECURE :
            if (resultCode == (android.app.Activity.RESULT_OK)) {
                connectDevice(data, true);
            }
            break;
        default :
            break;
    }
}

private int getTabsCount() {
    android.widget.TextView currentView = ((android.widget.TextView) (getTabsCounter().getCurrentView()));
    java.lang.String tabsCountText = currentView.getText().toString();
    return java.lang.Integer.parseInt(tabsCountText);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    tela.setImg(new android.graphics.drawable.BitmapDrawable(getResources(), imgBitmap));
}

@java.lang.Override
public void onClick(android.view.View v) {
    toggleKeepOnFlags((!keepOn));
    mControl.toggleScreenLock((!keepOn));
}

@java.lang.Override
protected void initialLoadNoInternet(org.ometa.lovemonster.ui.adapters.LoveArrayAdapter lovesArrayAdapter) {
    android.widget.Toast.makeText(getContext(), "userlovefragment: initial load no inet", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void attachBaseContext(android.content.Context base) {
    super.attachBaseContext(base);
    if (com.plugin.util.ProcessUtil.isPluginProcess(this)) {
        com.plugin.core.PluginLoader.initLoader(this);
    }else {
    }
}

@java.lang.Override
public void onPlayerError(com.google.android.exoplayer2.ExoPlaybackException e) {
    android.util.Log.d(com.liteon.iview.VideoPlayEX.TAG, "[onPlayerStateChanged]  onPlayerError");
    android.widget.Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
    onBackPressed();
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    mediaPlayer.seekTo(progress);
}

public boolean initSession(io.branch.referral.Branch.BranchReferralInitListener callback, boolean isReferrable, @android.support.annotation.NonNull
android.net.Uri data, android.app.Activity activity) {
    boolean uriHandled = readAndStripParam(data, activity);
    initSession(callback, isReferrable, activity);
    return uriHandled;
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_recipes, container, false);
    butterknife.ButterKnife.bind(view);
    return view;
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    android.widget.Toast.makeText(this, "Service is created", Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (v.equals(this)) {
        recordVaccinated(java.util.Calendar.getInstance().getTime());
    }else
        if (v.equals(undoB)) {
            undoVaccinationDate();
        }
    
}

@java.lang.Override
public void onConfirmSelection(java.util.ArrayList<android.bluetooth.BluetoothDevice> selection) {
    selectedDevices.addAll(selection);
    android.content.Intent intent = new android.content.Intent(this, edu.kit.teco.radarbeacon.ConnectedMainActivity.class);
    intent.putExtra(edu.kit.teco.radarbeacon.StartMenuActivity.EXTRA_DEVICES, selectedDevices);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.text.style.ImageSpan imageSpan = new android.text.style.ImageSpan(getApplicationContext(), R.drawable.pausebutton);
    contentText.setText(com.jerry.notes.Utils.Span.toJSON(thisUid, "adcfg", Span.NoteSpan.Image));
}

private void init(android.util.AttributeSet attributeSet) {
    com.leo.simplearcloader.ArcConfiguration configuration = readFromAttributes(attributeSet);
    mArcDrawable = new com.leo.simplearcloader.SimpleArcLoader.ArcDrawable(configuration);
    setBackgroundDrawable(mArcDrawable);
    start();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    finish();
}

public void viewBtnPress(android.view.View v) {
    com.group7.farmtycoon.CropManager.update();
    update();
}

public static android.app.Application getContext() {
    synchronized(com.laocuo.weather.WeatherApp.ob) {
        if ((com.laocuo.weather.WeatherApp.instance) == null) {
            com.laocuo.weather.WeatherApp.instance = new com.laocuo.weather.WeatherApp();
        }
    }
    return com.laocuo.weather.WeatherApp.instance;
}

public void deactivateListItem(android.widget.LinearLayout linearLayout) {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) {
        linearLayout.setActivated(false);
    }else {
        linearLayout.setSelected(false);
    }
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    ((cs121.hmc.edu.remindme.AlarmListActivity) (mContext)).setAlarmEnabled(((java.lang.Long) (buttonView.getTag())), isChecked);
    dbHelper.updateAlarm(model);
}

void onDestroy() {
    for (com.android_project.grocery.controller.database.models.GroupMembersModel model : groupMembersModels) {
        model.destroy();
    }
}

private void startMainActivity() {
    android.content.Intent mainActivityIntent = new android.content.Intent(this, com.teamagam.gimelgimel.app.mainActivity.view.MainActivity.class);
    mainActivityIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    startActivity(mainActivityIntent);
    this.finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    mListener.onEmail(holder.email.getText().toString());
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int id) {
    dialogView.findViewById(R.id.new_value);
}

@java.lang.Override
public void sendBroadcast(final android.content.Intent intent, final java.lang.String receiverPermission) {
    mCondom.proceedBroadcast(intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure() {
        @java.lang.Override
        public void run(final android.content.Intent intent) {
            com.oasisfeng.condom.CondomContext.super.sendBroadcast(intent, receiverPermission);
        }
    });
}

private android.view.View getHeaderViewByType(int itemType) {
    if (isHeaderType(itemType))
        return null;
    
    return mHeaderViews.get((itemType - (com.jinqiang.RecyclerViewRefresh.IRecyclerView.HEADER_INIT_INDEX)));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    mListener.onNewGameCreate(setOption, ((playerOption) + 1), rulesOption);
}

@java.lang.Override
public boolean onError(android.media.MediaPlayer mp, int what, int extra) {
    if (what == 1) {
        android.content.Intent intent = new android.content.Intent(com.example.framgianguyenkeninh.gethtml.AppConst.ON_ERROR_PREPARE);
        sendBroadcast(intent);
    }
    return false;
}

java.lang.String getPace() {
    java.lang.String str = settingPref.getString("Pace", "0");
    android.util.Log.i("getPace()", Pace);
    return str;
}

private java.lang.String getPortFromPreferences(android.content.Context context) {
    if ((org.wso2.emm.agent.utils.Preference.getString(context, Constants.PORT)) != null) {
        return org.wso2.emm.agent.utils.Preference.getString(context, Constants.PORT);
    }else {
        return org.wso2.emm.agent.utils.Constants.API_SERVER_PORT;
    }
}

@java.lang.Override
public void onErrorResponse(com.android.volley.VolleyError error) {
    mTextView.setText(error.getMessage());
}

@java.lang.Override
public void run() {
    android.location.Location last = LocationServices.FusedLocationApi.getLastLocation(googleApiClient);
    com.ibm.pisdk.geofencing.PIGeofencingService.log.debug(("setInitialLocation() last location = " + last));
    if (last != null) {
        geofenceManager.onLocationChanged(last);
    }
}

@java.lang.Override
protected void onStop() {
    super.onStop();
    if ((mFavorites) != null) {
        com.garpr.android.misc.FavoritesStore.write(mFavorites);
    }
}

public void loadPrev(android.content.ContentValues values) {
    values.put(RetrieveList.PAGE_NUMBER, ((currentPage) - 1));
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getActionBar().setTitle("Settings");
    addPreferencesFromResource(R.xml.preferences);
}

private boolean enableModePlayOffline(android.content.Intent intent) {
    if (intent.hasExtra(Extras.KEY_MODE_OFFLINE)) {
        return true;
    }
    return false;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.worlds.prudnikoff.worlds.MainActivity.categoriesData = new com.worlds.prudnikoff.worlds.CategoriesData();
    setContentView(R.layout.main_activity);
    setUpActions();
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.addDatabase :
            startActivity(new android.content.Intent(this, de.szut.passkeeper.Activity.CreateDatabaseActivity.class));
            break;
    }
    return super.onOptionsItemSelected(item);
}

private void onChangeAvatar(android.view.View view) {
    android.content.Intent i = new android.content.Intent(android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
    startActivityForResult(i, 1);
}

public void openPDFView(java.lang.String path) {
    android.content.Intent i = new android.content.Intent(c, io.github.antishake.TextReader.class);
    i.putExtra("Path", path);
    c.startActivity(i);
}

public static void initialize(android.content.Context context, nuclei3.notifications.NotificationManager instance) {
    nuclei3.notifications.NotificationManager.CONTEXT = context.getApplicationContext();
    nuclei3.notifications.NotificationManager.INSTANCE = instance;
    nuclei3.notifications.NotificationManager.DB = android.arch.persistence.room.Room.databaseBuilder(nuclei3.notifications.NotificationManager.CONTEXT, nuclei3.notifications.model.NotificationsDb.class, "nuclei_notifications.db").fallbackToDestructiveMigration().build();
}

@java.lang.Override
public void onClick(android.view.View v) {
    btOff.setBackgroundColor(getResources().getColor(R.color.button_change));
    if (mediaPlayer.isPlaying()) {
        mediaPlayer.pause();
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View view) {
    android.webkit.WebView webView = ((android.webkit.WebView) (view));
    showDownloadConfirmDialog(webView);
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    btn.setBackgroundColor(Color.BLUE);
    max.sudoku.MainActivity.b = btn;
    numberListener();
}

public void addHeaderView(android.view.View view) {
    mListView.addHeaderView(view);
    mHeaderViews.add(view);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int i) {
    switch (i) {
        case 0 :
            return new com.offsec.nethunter.DuckHunterFragment.DuckHunterConvertFragment();
        case 1 :
            return new com.offsec.nethunter.DuckHunterFragment.DuckHunterPreviewFragment();
        default :
            return new com.offsec.nethunter.DuckHunterFragment.DuckHunterReferenceFragment();
    }
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    listenerLongClick.onCellSelected(row, col);
    return false;
}

@java.lang.Override
public boolean onCreateWindow(android.webkit.WebView view, boolean isDialog, boolean isUserGesture, android.os.Message resultMsg) {
    return mWebChromeClient.onCreateWindow(view, isDialog, isUserGesture, resultMsg);
}

private long getNavBarShowDelay() {
    if (mStatusBar.isKeyguardFadingAway()) {
        return mStatusBar.getKeyguardFadingAwayDelay();
    }else
        if (mBouncer.isShowing()) {
            return com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager.NAV_BAR_SHOW_DELAY_BOUNCER;
        }else {
            return 0;
        }
    
}

@java.lang.Override
public void onClick(android.view.View v) {
    j = new android.content.Intent(this, com.example.sweng.seiqol_app.PieTesting.class);
    i.putExtra("DATA", data);
    startActivity(j);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (mPlaying)
        pause(playButton);
    else
        play(playButton);
    
}

@java.lang.Override
public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture surfaceTexture) {
    mCamera.stopPreview();
    mCamera.release();
    return true;
}

@java.lang.Override
public void call(org.croudtrip.api.account.Vehicle vehicle) {
    android.widget.Toast.makeText(getActivity(), "Updated vehicle info", Toast.LENGTH_SHORT);
    timber.log.Timber.v("Updated vehicle info");
}

@java.lang.Override
public void onClick(android.view.View view) {
    isUpdate = false;
    addMark("", "", "", "", false, 0);
}

@java.lang.Override
public void handleResult(com.google.android.gms.vision.barcode.Barcode barcode) {
    showPopUp(barcode.displayValue);
    java.lang.System.out.println(("Res: " + (barcode.displayValue)));
}

@java.lang.Override
public void onClick(android.view.View v) {
    showMovieTasteTest();
    if ((movieList.size()) > 0) {
        movieList.remove(0);
    }
}

@java.lang.Override
public void onAdReceived(com.rfm.sdk.RFMAdView adView) {
    android.util.Log.d(com.rfm.extras.adapters.RFMAdmobAdapter.LOG_TAG, "RFM :onAdReceived ");
    rfmAdView.setVisibility(View.VISIBLE);
    if ((customEventListener) != null) {
        customEventListener.onAdLoaded(adView);
    }
}

public void chooseImageFromGallery() {
    android.content.Intent pictureFromGalleryIntent = new android.content.Intent(android.content.Intent.ACTION_PICK);
    pictureFromGalleryIntent.setType("image/*");
    startActivityForResult(pictureFromGalleryIntent, com.lucianoleitefabris.inventoryapp.ProductDetailsActivity.GALLERY_REQUEST);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        switch1.setText("Light");
        light = true;
    }else {
        switch1.setText("Sound");
        light = true;
    }
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    android.util.Log.i(com.wolkabout.hexiwear.activity.Tracking.TAG, "in on restore");
    button_tracking.setText(savedInstanceState.getString("btn_text"));
}

public com.rey.material.widget.SnackBar height(int height) {
    mHeight = height;
    android.util.Log.v("asd", ("height: " + (mHeight)));
    return this;
}

public java.lang.String getDeviceId() {
    java.lang.String value = getString(R.string.pref_device_id, com.jana.android.core.utils.DeviceInfo.getUniqueId());
    return value;
}

public void onClick(android.content.DialogInterface dialog, int id) {
    dialog.cancel();
    editor.putBoolean(Constants.PREFERENCES_SHOW_ALARM, false).commit();
    editor.apply();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialogInterface, int i) {
    osmMap.deleteNode();
    dialogInterface.dismiss();
    proportionMapAndList(100, 0);
}

public void run() {
    android.util.Log.d("MY", "start init BT");
    b.init();
    control.postDelayed(new andreyanov.carcontrol.MainActivity.ControlSendRunner(), 1000L);
}

@java.lang.Override
public boolean onDoubleTap(final android.view.MotionEvent motionEvent) {
    return false;
}

private void openCamera(int id) {
    mCamera = android.hardware.Camera.open(id);
    if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.JELLY_BEAN_MR1)) {
        mCamera.enableShutterSound(false);
    }
}

@java.lang.Override
public void onCallForwardingIndicatorChanged(boolean cfi) {
    android.util.Log.v(com.itachi46.autoredirect.app.MainActivity.TAG, "call forwarding indicator changed.");
    super.onCallForwardingIndicatorChanged(cfi);
    if ((forwardToggle.isChecked()) != cfi) {
        forwardingChangeDetected = true;
        forwardToggle.setChecked(cfi);
    }
}

@java.lang.Override
public void onPanelCollapsed(android.view.View panel) {
    es.usc.citius.servando.calendula.util.ScreenUtils.setStatusBarColor(this, android.graphics.Color.argb(50, 61, 63, 64));
    android.util.Log.v("SLINDINGPANEL", ((es.usc.citius.servando.calendula.pharmacies.util.Utils.getDate(d)) + " onPanelCollapsed"));
}

@java.lang.Override
public void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    com.swrve.sdk.SwrveSDK.onNewIntent(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (com.fibelatti.accedomemory.helpers.GameHelper.getInstance().addResultListener(this, getAdapterPosition())) {
        setCardFaceUp(true);
    }
}

public float getFontlength(android.graphics.Paint paint, java.lang.String str) {
    android.graphics.Rect rect = new android.graphics.Rect();
    paint.getTextBounds(str, 0, str.length(), rect);
    return rect.width();
}

@java.lang.Override
public void run() {
    com.facebook.notifications.NotificationsManager.presentNotification(cordova.getActivity(), payload, new android.content.Intent(cordova.getActivity().getApplicationContext(), cordova.getActivity().$missing$));
}

@java.lang.Override
public void callVK() {
    addFragment(new org.letsdoitukraine.androidapp.ui.login.fragments.FrgReg());
    ((org.letsdoitukraine.androidapp.ui.login.activity.RegisterOrLoginActivity) (getActivity())).loginVk();
}

protected void initialiseGestureListener(android.view.View view, int position) {
    view.setOnTouchListener(new com.peekandpop.shalskar.peekandpop.PeekAndPop.PeekAndPopOnTouchListener(position));
    gestureDetector = new android.view.GestureDetector(builder.activity, new com.peekandpop.shalskar.peekandpop.PeekAndPop.GestureListener(view, position));
    gestureDetector.setIsLongpressEnabled(false);
}

@java.lang.Override
public void onClick(android.view.View view) {
    mCalenderListener.onSelectDate(mStartDate);
    mViewPager.setCurrentItem(mMiddlePoint);
}

@java.lang.Override
public void onViewCreated(android.view.View view, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
    db = new com.android.bpcontrol.databases.BPcontrolDB(getActivity());
    showDialog();
}

@java.lang.Override
public boolean onPrepareOptionsMenu(android.view.Menu menu) {
    boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerPane);
    return super.onPrepareOptionsMenu(menu);
}

private com.google.android.gms.location.LocationRequest createLocationRequest(long interval, long fastestInterval) {
    com.google.android.gms.location.LocationRequest locationRequest = new com.google.android.gms.location.LocationRequest();
    locationRequest.setInterval(interval);
    locationRequest.setFastestInterval(fastestInterval);
    locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
    return locationRequest;
}

@java.lang.Override
public void onResult(com.google.android.gms.wearable.DataApi.DataItemResult dataItemResult) {
    if (dataItemResult.getStatus().isSuccess()) {
        android.util.Log.e("Watch Log", "Successfully send weather info");
    }else {
        android.util.Log.e("Watch Log", "Failed to send weather info ");
    }
    mGoogleApiClient.disconnect();
}

public static boolean checkAction(android.content.Intent i, java.lang.String action) {
    return i.getAction().equals(action);
}

public void onClick(android.view.View v) {
    inOutFilter = "outdoor";
    mapboxMap.clear();
    setMarkers(mapboxMap, gml);
    if (filter_autoclose)
        FAM_InOut.close(true);
    
}

@java.lang.Override
public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int direction) {
    android.util.Log.d("ModuleManager", "OnSwipe called");
    viewHolder.itemView.setX(0);
    adapter.onItemDismiss(viewHolder);
}

@java.lang.Override
protected void onPostExecute(java.lang.String s) {
    super.onPostExecute(s);
    android.widget.Toast.makeText(getActivity(), s, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.widget.Toast.makeText(getActivity(), "อัพโหลดข้อมูล บันทึกเเบบสมบูรณ์ เรียบร้อย", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    android.util.Log.i(LOG_TAG, "onCreate - start");
    configurePlayer();
    android.util.Log.i(LOG_TAG, "onCreate - end");
}

public static android.content.Context getmContext() {
    return com.app.nuts.App.mContext;
}

public void setPercent(float inputPercent) {
    percent = inputPercent;
    android.util.Log.println(Log.INFO, "Percent Set", ("Percent set to " + (percent)));
}

public void addFragment(android.support.v4.app.Fragment fragment) {
    android.util.Log.d("dudco", "add");
    mFragment.add(fragment);
}

private void setScore(int score_val) {
    android.widget.TextView score = ((android.widget.TextView) (findViewById(R.id.score_value)));
    score.setText(score_val);
}

public void hideTile(android.view.View view) {
    android.widget.RelativeLayout expTile = ((android.widget.RelativeLayout) (findViewById(R.id.expandedTile)));
    android.widget.Toast.makeText(this, "Hide", Toast.LENGTH_SHORT).show();
    expTile.setVisibility(View.GONE);
}

public void setCustomer(java.lang.String customerText) {
    android.util.Log.i("View", "Sätter text!");
    ((android.widget.EditText) (findViewById(R.id.twwelcome))).setText(customerText);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    android.content.Intent sendIntent = new android.content.Intent(context, com.example.android.popularmovies.service.MovieService.class);
    sendIntent.putExtra(com.example.android.popularmovies.service.MovieService.MOIVE_QUERY_CRITERIA, intent.getStringExtra(com.example.android.popularmovies.service.MovieService.MOIVE_QUERY_CRITERIA));
    context.startService(sendIntent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(this, "Question sent!", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_DONE)) {
        v.clearFocus();
    }
    return false;
}

public boolean checkLocationRange(android.location.Location locA, android.location.Location locB, float accuracy) {
    float distance = locA.distanceTo(locB);
    if (distance < ((distanceRange) + accuracy)) {
        return true;
    }else {
        return false;
    }
}

public void onResume() {
    android.util.Log.d("lis", "resumeEdit");
    super.onResume();
}

@butterknife.OnClick(value = R.id.icon_toolbar_back)
public void onBackClick() {
    if ((toolbarBackIcon.getVisibility()) == (android.view.View.GONE))
        return ;
    
    onBackPressed();
}

public static void init(android.content.Context context, android.app.Activity activity) {
    main.mmwork.com.mmworklib.utils.DeviceInfo.sContext = context;
    main.mmwork.com.mmworklib.utils.DeviceInfo.MACADDRESS = main.mmwork.com.mmworklib.utils.DeviceInfo.getLocalMacAddress(context);
    main.mmwork.com.mmworklib.utils.DeviceInfo.RESOLUTION = main.mmwork.com.mmworklib.utils.DeviceInfo.getResolution(activity);
}

protected void postCreateView(android.app.Dialog view, android.os.Bundle savedInstanceState) {
    if ((presenter) == null) {
        throw new java.lang.RuntimeException("Failed to create presenter for fragment");
    }
    presenter.onViewCreated(view);
}

@java.lang.Override
public void onStart(android.content.Context pContext, android.os.Bundle arg1, java.lang.String[] arg2) {
    cn.jpush.android.api.JPushInterface.setDebugMode(false);
    cn.jpush.android.api.JPushInterface.init(pContext);
}

public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if (position != (data.pvActiveSpriteId)) {
        data.pvActiveSpriteId = position;
        UpdateDisplay(container);
    }else {
    }
}

@java.lang.Override
public void onProviderDisabled(java.lang.String provider) {
    android.util.Log.d("MyMaps", ("LocationListenerGPS: Provider diabled - " + provider));
}

public void funAdd(android.view.View v) {
    new com.engineer4myanmar.json.AdminActivity.HttpAsyncTask().execute(com.engineer4myanmar.json.AdminActivity.url_add);
    funClearAll();
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable
android.view.ViewGroup container, @android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    android.view.View view = inflater.inflate(R.layout.fragment_favorites, container);
    butterknife.ButterKnife.bind(this, view);
    return view;
}

@java.lang.Override
public void onClick(android.view.View v) {
    showInterstitial();
    gridLayout.removeAllViewsInLayout();
    initGame();
}

public void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    android.util.Log.i(com.monmouth.fayePG.FayePG.LOG_TAG, ("fayePG onNewIntent called w/intent " + (intent.toString())));
}

@java.lang.Override
public void onScrollChange(android.view.View v, int scrollX, int scrollY, int oldScrollX, int oldScrollY) {
    setRealHorizontalScrollViewPosition(scrollX, mRealHorizontalScrollViewWidth, 0);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int i, boolean b) {
    if (((mediaPlayer) != null) && b) {
        mediaPlayer.seekTo((i * 1000));
    }
}

@java.lang.Override
public void onMatrixError(org.matrix.androidsdk.rest.model.MatrixError e) {
    onError(e.getLocalizedMessage());
}

public void setAutoFocusCallback(android.hardware.Camera.AutoFocusCallback autoFocusCallback) {
    this.autoFocusCallback = autoFocusCallback;
    mCamera.autoFocus(autoFocusCallback);
}

@java.lang.Override
public com.battleshippark.rememberphoto.presentation.storylist.StoryListVH onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    return com.battleshippark.rememberphoto.presentation.storylist.StoryListVH.create(parent.getContext(), viewType);
}

@java.lang.Override
public void onCreate(int width, int height, boolean contextLost) {
    android.opengl.GLES20.glClearColor(0.0F, 0.0F, 0.0F, 1.0F);
    square = new com.yanbin.magiccube.Square();
    square.setDrawMode(GLES20.GL_TRIANGLES);
}

public android.graphics.Bitmap getBitmap(java.lang.String key) {
    android.graphics.Bitmap bitmap = getBitmapFromMemoryCache(key);
    if (bitmap == null) {
        bitmap = getBitmapFromDiskCache(key);
    }
    return bitmap;
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    videoEndAt = (mp.getDuration()) * 1000;
    android.util.Log.d(LOG_TAG, ("onPrepared: " + (videoEndAt)));
}

@java.lang.Override
public void onClick(bbct.android.common.activity.View v) {
    handleTakePictureonClick(v.getContext());
}

@java.lang.Override
protected void onStartView() {
    timber.log.Timber.d("onStartView");
    commitFragment(activity, com.uramonk.androidtemplateapp.view.MainFragment.newInstance(), R.id.container);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(view.getContext(), ualberta.cmput301w16t16.glamorousborrowingwhaleapp.NewListingActivity.class);
    startActivity(intent);
    android.util.Log.d("TEST", "aaa");
}

@java.lang.Override
public void onLayoutInflated(android.support.wearable.view.WatchViewStub stub) {
    android.support.wearable.view.CircledImageView circledImageView = ((android.support.wearable.view.CircledImageView) (stub.findViewById(R.id.circle)));
    circledImageView.showIndeterminateProgress(true);
}

@java.lang.Override
public void onClick(android.view.View v) {
    toggleMovieFavorite((mMovie.getIsFavorite(getActivity()) ? true : false));
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    com.example.com.broadcastbestpractice.ActivityCollector.finishAll();
    android.content.Intent intent1 = new android.content.Intent(context, com.example.com.broadcastbestpractice.LoginActivity.class);
    context.startActivity(intent);
}

@java.lang.Override
public void onReceivedTitle(android.webkit.WebView view, java.lang.String title) {
    mWebChromeClient.onReceivedTitle(view, title);
}

@java.lang.Override
public boolean onEditorAction(android.widget.TextView v, int actionId, android.view.KeyEvent event) {
    if (actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_DONE)) {
        dialog.dismiss();
        renameItem(fileInfo, nameField.getText().toString());
    }
    return false;
}

public static android.widget.TextView setTextWithFormat(java.lang.Object container, int rid, java.lang.Object value) {
    return com.dhy.xintent.XCommon.setTextWithFormat(container, rid, value, false);
}

@java.lang.Override
public void onCreate() {
    mBluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();
    if ((mBluetoothAdapter) == null) {
        java.lang.System.exit(0);
    }
    smokinoGUI = null;
    super.onCreate();
}

private void sendPlaybackFinishedEvent(com.willblaschko.android.alexa.interfaces.AvsItem item) {
    alexaManager.sendPlaybackFinishedEvent(item, requestCallback);
    android.util.Log.i(com.willblaschko.android.alexavoicelibrary.BaseActivity.TAG, "Sending SpeechFinishedEvent");
}

@java.lang.Override
public void onResume() {
    super.onResume();
    hideSystemUi();
    if (((com.google.android.exoplayer2.util.Util.SDK_INT) <= 23) || ((player) == null)) {
        initializePlayer(vid_url);
    }
}

@java.lang.Override
public void onTextChanged(java.lang.CharSequence s, int start, int before, int count) {
    android.util.Log.d(com.lukedeighton.wheelsample.AttendantActivity.TAG, ("onTextChanged:" + s));
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent event) {
    if ((event.values[0]) <= 50)
        if (mode)
            flipNext();
        else
            flipPrevious();
        
    
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    OBHL.setEnermyTowerPosition(enTran);
    setEnTowerBtn.setVisibility(View.INVISIBLE);
    OKBtn.setVisibility(View.INVISIBLE);
    enProcess.startEnermyProcess();
}

public void bindGuardService() {
    com.squareup.leakcanary.CanaryLog.d("AssistiveResultService bindGuardService");
    android.content.Intent intent = new android.content.Intent(this, com.squareup.leakcanary.assistivetouch.AssistiveGuardService.class);
    intent.putExtra(AssistiveGuardService.BIND_KEY, AssistiveGuardService.BIND_ASSISTIVE_RESULT_SERVICE);
    bindService(intent, connection, Context.BIND_AUTO_CREATE);
    isBind = true;
}

public void surfaceCreated(android.view.SurfaceHolder holder) {
    android.util.Log.e(TAG, "recorder surfaceCreated:");
    android.view.SurfaceHolder surfaceHolder = holder;
}

@java.lang.Override
public void onResult(com.google.android.gms.common.api.Status status) {
    if (status.isSuccess()) {
        removeSavedGeofences();
    }else {
        android.util.Log.e(TAG, ("Removing geofence failed: " + (status.getStatusMessage())));
        sendError();
    }
}

public void stop(android.view.View view) {
    mySound.release();
    mySound = null;
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(getMainActivity(), com.sandbox.parker.sandbox.song.SongActivity.class);
    android.os.Bundle bundle = new android.os.Bundle();
    intent.putExtra("song", song);
    startActivity(intent);
}

public void refresh() {
    android.util.Log.d("heilige", "scheisse");
    getFragmentManager().beginTransaction().detach(this).attach(this).commit();
}

public static void loadMozGlue(final android.content.Context context) {
    synchronized(org.mozilla.gecko.mozglue.GeckoLoader.sLibLoadingLock) {
        if (org.mozilla.gecko.mozglue.GeckoLoader.sMozGlueLoaded) {
            return ;
        }
        org.mozilla.gecko.mozglue.GeckoLoader.sMozGlueLoaded = true;
    }
    org.mozilla.gecko.mozglue.GeckoLoader.doLoadLibrary(context, "mozglue");
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    android.support.v4.app.Fragment fragment = null;
    switch (position) {
        case 0 :
            fragment = com.fbm.nkd.cs403x_final.SectionsPagerAdapter.cameraFragment;
            break;
        case 1 :
            fragment = com.fbm.nkd.cs403x_final.SectionsPagerAdapter.feedFragment;
            break;
        case 2 :
            fragment = com.fbm.nkd.cs403x_final.SectionsPagerAdapter.mapFragment;
            break;
    }
    return fragment;
}

@java.lang.Override
protected android.support.v4.view.ViewPropertyAnimatorCompat onAnimatedAdd(android.support.v7.widget.RecyclerView.ViewHolder holder) {
    int offsetDelay = 50;
    return android.support.v4.view.ViewCompat.animate(holder.itemView).translationY(0).setInterpolator(mInterpolator).setStartDelay((offsetDelay * (holder.getLayoutPosition())));
}

public void deleteUser(com.example.catherinemorris.shoppinwithfriends.User user) {
    android.util.Log.d("User deleteUser is called", ("" + user));
    db.deleteFriend(this, user.getUser());
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(context, com.nur.griesmic.grizllym_asus.nur_2.ScanActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    android.util.Log.w("Event Listener", "loadHunt:onCancelled", databaseError.toException());
    android.widget.Toast.makeText(getActivity(), "Failed to retrieve hunt info.", Toast.LENGTH_SHORT).show();
}

public static boolean getAllowAdvancedData(android.content.Context context) {
    return com.paulvarry.intra42.Tools.AppSettings.Advanced.getAllowAdvancedData(com.paulvarry.intra42.Tools.AppSettings.getSharedPreferences(context));
}

public void rpc(@android.support.annotation.NonNull
java.lang.String procedureName, @android.support.annotation.NonNull
java.util.List<de.kuschku.libquassel.primitives.types.QVariant> params) {
    de.kuschku.util.AndroidAssert.assertNotNull(provider);
    provider.dispatch(new de.kuschku.libquassel.functions.types.RpcCallFunction(procedureName, params));
}

@java.lang.Override
public void onInfoWindowClick(com.google.android.gms.maps.model.Marker marker) {
    android.content.Intent intent = new android.content.Intent(getActivity(), com.dhchoi.crowdsourcingapp.activities.TaskCompleteActivity.class);
    intent.putExtra(Task.TASK_KEY_SERIALIZABLE, mMarkerToTask.get(marker));
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((currentBook) == 66) {
        currentBook = 1;
    }else {
        currentBook += 1;
    }
    updateRecycleView(currentBook);
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (!hasFocus) {
        ((android.app.Activity) (v.getContext())).onBackPressed();
        mSearchName = search.getText().toString();
    }
}

@java.lang.Override
public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) {
    if (!(task.isSuccessful())) {
        android.widget.Toast.makeText(getBaseContext(), "Authentication failed.", Toast.LENGTH_SHORT).show();
    }
}

private void onBlockClick(android.view.View view, int position) {
    io.rover.model.Block block = getBlockAtPosition(position);
    if ((block != null) && ((mBlockListener) != null)) {
        mBlockListener.onBlockClick(block);
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    joinHouse(houseName, password);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    android.widget.Toast.makeText(getApplicationContext(), "大家一起方", Toast.LENGTH_SHORT).show();
}

private void setDescription(java.lang.String text) {
    android.widget.TextView infoView = ((android.widget.TextView) (view.findViewById(R.id.detail_info)));
    infoView.setText(text);
}

public static void recordAlert(org.json.JSONObject jmessage) {
    de.xavaro.android.common.Json.put(jmessage, "priority", "alertinfo");
    de.xavaro.android.common.ActivityManager.getInstance().onMessage(jmessage, false);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.net.Uri uri = mPhotoFiles.get(photoIndex);
    java.lang.System.out.println(("uri.toString " + (uri.toString())));
    captureImage.putExtra(MediaStore.EXTRA_OUTPUT, uri);
    startActivityForResult(captureImage, com.bignerdranch.android.criminalintent.CrimeFragment.REQUEST_PHOTO);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if ((plugin) != null) {
        plugin.deleteRecording(getRecording());
        getMapActivity().getContextMenu().close();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
    setContentView(R.layout.activity_info_preview);
    descendants(savedInstanceState);
    db = new com.itechex.centraly.credentials.database.DatabaseController(this);
    initOfFields();
    populatingView();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    setContentView(com.example.tombarrett.estimotemirror.R.layout.activity_main);
    setButtons();
    if ((tempProduct) != null)
        pickup(tempProduct);
    
}

public void skip() {
    android.content.Intent intent = new android.content.Intent();
    startActivity(intent.setClass(this, com.umb.cs682.projectlupus.activities.main.Home.class));
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    mSignInClicked = false;
    if (mFirstTimeSignIn)
        android.widget.Toast.makeText(this, ("Connected to " + (getEmail())), Toast.LENGTH_LONG).show();
    
}

@java.lang.Override
public void onConnectionFailed(@android.support.annotation.NonNull
com.google.android.gms.common.ConnectionResult connectionResult) {
    android.util.Log.d(com.huhx0015.doordashchallenge.services.LocationService.LOG_TAG, "onConnectionFailed(): Google API client connection suspended.");
    mIsLocationFound = true;
    mListener.onLocationFailed();
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    if ((mTracksFragment) != null) {
        getSupportFragmentManager().putFragment(outState, "tracks_fragment", mTracksFragment);
    }
}

private void goToRibbons() {
    updateDatabaseWithRibbon();
    android.content.Intent ribbonIntent = new android.content.Intent(getApplicationContext(), com.lerenard.bible.RibbonActivity.class).putExtra(com.lerenard.bible.ReadingActivity.RIBBON_KEY, ribbon);
    startActivityForResult(ribbonIntent, com.lerenard.bible.ReadingActivity.SELECT_RIBBON_CODE);
}

public void goToMainActivity(android.view.View view) {
    android.content.Intent intent = new android.content.Intent(this, com.android.ubclaunchpad.driver.UI.MainActivity.class);
    intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK)));
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    android.content.Intent returnIntent = new android.content.Intent();
    returnIntent.putExtra(jycprogrammer.ultimatedbz.ezlapse.FullscreenCamera.EXTRA_PASS, true);
    setResult(jycprogrammer.ultimatedbz.ezlapse.RESULT_CANCELED, returnIntent);
    finish();
}

private void setTitle(java.lang.String title) {
    android.widget.TextView post_title = ((android.widget.TextView) (mView.findViewById(R.id.post_title)));
    post_title.setText(title);
}

@com.facebook.react.bridge.ReactMethod
public void getMacAddress(final com.facebook.react.bridge.Callback callback) {
    android.net.wifi.WifiInfo info = wifi.getConnectionInfo();
    java.lang.String macAddress = wInfo.getMacAddress();
    callback.invoke(ssid);
}

private java.lang.String arrayToString() {
    java.lang.String result = "";
    for (com.google.android.gms.maps.model.LatLng l : routePoints) {
        result += (((l.longitude) + " ") + (l.latitude)) + " ";
    }
    return result;
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    com.podraza.android.gaogao.gaogao.MainActivity.page = position;
    return com.podraza.android.gaogao.gaogao.MainActivity.PlaceholderFragment.newInstance((position + 1), getPageTitle(position));
}

@java.lang.Override
public void onFocusChange(android.view.View v, boolean hasFocus) {
    if (!hasFocus) {
        textView.setText(textOfNote);
        vs.showPrevious();
    }
}

@java.lang.Override
public void onDestroy() {
    super.onDestroy();
    doUnbindService();
    unregisterReceiver(myNoisyAudioStreamReceiver);
    android.util.Log.d(com.fritzbang.theplayer.ThePlayerActivity.DEBUG_TAG, "destroying activity");
}

@java.lang.Override
public void stopScanning() {
    super.stopScanning();
    timerResortList.cancel();
    timerResortList.purge();
    android.util.Log.e(io.ap1.libap1beaconmngt.ServiceBeaconManagement.TAG, "stopScanning: timer canceled");
}

@java.lang.Override
protected void onPreExecute() {
    loading = android.app.ProgressDialog.show(context, "Loading", "Please Wait...");
}

void updateHaverStatus(@android.support.annotation.NonNull
long desireId, @android.support.annotation.NonNull
long userId, @android.support.annotation.NonNull
de.fau.cs.mad.wanthavers.common.Haver haver, @android.support.annotation.NonNull
int status, @android.support.annotation.NonNull
wanthavers.mad.cs.fau.de.wanthavers_android.data.source.haver.HaverDataSource.UpdateHaverStatusCallback callback);

@java.lang.Override
public void onStop() {
    super.onStop();
    org.greenrobot.eventbus.EventBus.getDefault().unregister(this);
    android.util.Log.i("onStop", ": CONTAINER");
}

public void onActivityResume(android.app.Activity activity) {
    databaseListenerActivity = null;
    activeActivity = activity;
    if ((mBackgroundTasks.mInitializationTask) != null) {
        mBackgroundTasks.mInitializationTask.setInitializationListener(this);
    }
    mBackgroundServices.clearDestroyingFlag();
    configureView();
    bindToService();
}

public java.util.List<android.hardware.Camera.Size> getSupportedPictureSizes(android.hardware.Camera.Parameters parameters) {
    java.util.List<android.hardware.Camera.Size> pictureSizes = parameters.getSupportedPictureSizes();
    checkSupportedPictureSizeAtPreviewSize(pictureSizes, parameters);
    return pictureSizes;
}

public static <T> T bind(android.database.Cursor cursor, java.lang.Class<T> entity, int position) {
    return curson.Curson.bind(cursor, entity, position);
}

@java.lang.Override
public void init(android.os.Bundle savedInstanceState) {
    setTargetRepository("ccrama");
    setGuestOAuth2Token(SecretConstants.GithubBotRepo);
    enableUserGitHubLogin();
    setExtraInfo(getIntent().getExtras().getString("stacktrace"));
    canEditDebugInfo();
}

@java.lang.Override
public void onSensorChanged(android.hardware.SensorEvent event) {
    currentAcceleration = event.values[1];
    telemetry.log.add(("acceleration is: " + (java.lang.Float.toString(currentAcceleration))));
    android.util.Log.d("accelerometer", java.lang.Float.toString(currentAcceleration));
}

public static int init(android.app.Activity activity) {
    org.qtproject.qt5.crypt.Crypter.mActivity = activity;
    org.qtproject.qt5.crypt.Crypter.provider = new org.qtproject.qt5.crypt.ZofenProvider(activity);
    if (!(org.qtproject.qt5.crypt.Crypter.isKukaytaInstalled())) {
        org.qtproject.qt5.crypt.Crypter.installKukatya();
        return org.qtproject.qt5.crypt.Crypter.KUKAYTA_NOT_INSTALLED_ERR;
    }
    return 0;
}

@java.lang.Override
public void onServiceConnected(android.content.ComponentName name, android.os.IBinder service) {
    android.util.Log.i(com.example.dscs.StartFragment.TAG, "Service is connected.");
    mBinder = ((com.example.dscs.CrawlingService.CrawlingServiceBinder) (service));
    mBinder.setOnJobFinishedListener(this);
    refreshButtonState(false);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_options);
    findViewById(R.id.party_name).setVisibility(View.GONE);
}

public static void filePermissions(android.app.Activity activity, int id, com.liangmayong.base.support.permission.ActivityPermission.OnPermissionListener listener) {
    java.lang.String[] permissionsNeeded = new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE , Manifest.permission.READ_EXTERNAL_STORAGE };
    com.liangmayong.base.support.permission.ActivityPermission.requestPermissions(activity, id, permissionsNeeded, listener);
}

@java.lang.Override
public void onProviderDisabled(java.lang.String s) {
    android.util.Log.d("GPSTest", "onProviderDisabled called");
    checkLocationProviderEnabled();
}

@java.lang.Override
public void update() {
    executeTransaction(new com.raizlabs.android.dbflow.structure.database.transaction.ProcessModelTransaction.Builder<>(new com.raizlabs.android.dbflow.structure.database.transaction.ProcessModelTransaction.ProcessModel<com.raizlabs.android.dbflow.structure.TModel>() {
        @java.lang.Override
        public void processModel(com.raizlabs.android.dbflow.structure.TModel model) {
            model.update();
        }
    }).build());
}

@java.lang.Override
public void onFailure(int statusCode, org.apache.http.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject errorResponse) {
    android.util.Log.d("mentions timeline fail", errorResponse.toString());
    android.widget.Toast.makeText(getActivity(), R.string.get_timeline_fail, Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    java.lang.String grabbedString = input.getText().toString();
    listItems.set(pos, new com.example.ud4.todo_list.ListItem(grabbedString));
    adapter.notifyDataSetChanged();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle bundle) {
    save();
    super.onSaveInstanceState(bundle);
    this.finish();
}

private void cancelDueToCancellation(java.lang.Exception e) {
    if (cancelled)
        return ;
    
    cancelled = true;
    android.util.Log.d(org.floens.chan.utils.FileCache.TAG, "Cancel due to cancellation");
    purgeOutput();
    finish();
}

public static com.android.tigerhelp.http.request.requestBuilder newInstance(java.lang.String method) {
    return new com.android.tigerhelp.http.request.requestBuilder(method);
}

@java.lang.Override
public void onCarrierNameNotMatch(int smsId, java.lang.String message) {
    android.widget.Toast.makeText(this, ("onCarrierNameNotMatch: " + message), Toast.LENGTH_SHORT).show();
}

private java.lang.String updateURL(java.lang.String searchWord) {
    searchWord = cleanUpString(searchWord);
    java.lang.String updatedURL = ((com.example.android.booklistingproject_udacity.BookActivity.GOOGLE_BOOK_URL) + searchWord) + "&maxResults=30";
    return updatedURL;
}

@java.lang.Override
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
    com.ibm.mobilefirstplatform.clientsdk.android.security.facebookauthentication.FacebookAuthenticationManager.getInstance().onActivityResultCalled(requestCode, resultCode, data);
}

@java.lang.Override
public void onServiceDisconnected(android.content.ComponentName name) {
    android.util.Log.i(TAG, "onSocketServiceDisconnected! ");
    socketIsBound = false;
    sSocketservice = null;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    listView = ((android.widget.ListView) (findViewById(R.id.vaccines_list)));
    registerForContextMenu(listView);
    loadDataWithCursor();
}

@java.lang.Override
public void noiseSensorDataReady(long timestamp, float rms, float spl, float[] bands) {
    noiseReading = new ch.ethz.soms.nervous.competition.model.NoiseReading(rms, timestamp, team);
    android.util.Log.d(ch.ethz.soms.nervous.competition.SensorService.DEBUG_TAG, "Noise data collected");
}

public io.appium.java_client.android.AndroidDriver<org.openqa.selenium.WebElement> getDriver() {
    if ((driver) == null) {
        try {
            this.initDriver();
        } catch (java.net.MalformedURLException e) {
            e.printStackTrace();
        }
    }
    return driver;
}

public float getFontHeight(android.graphics.Paint paint, java.lang.String str) {
    android.graphics.Rect rect = new android.graphics.Rect();
    paint.getTextBounds(str, 0, str.length(), rect);
    return rect.height();
}

public void setCookingDay(ru.spbau.mit.foodmanager.Day day, java.lang.Boolean isCookingDay, android.content.Context c) {
    this.isCookingDay.put(day, isCookingDay);
    ru.spbau.mit.foodmanager.MenuSettings.saveMenuSettings(c);
}

@java.lang.Override
public void onCompletion(android.media.MediaPlayer mp) {
    android.util.Log.d(org.example.xwalkembedded.XWalkExoMediaPlayer.MediaPlayerListener.TAG, "=====onCompletion ");
    mCompletionListener.onCompletion(mp);
    showReplayButton(true);
}

@java.lang.Override
public void onLoadingFailed(java.lang.String imageUri, android.view.View view, com.nostra13.universalimageloader.core.assist.FailReason failReason) {
    me.ccrama.redditslide.util.LogUtil.v(("Loading failed because " + (failReason.getCause().getMessage())));
}

public void decrement(android.view.View view) {
    int numberOfCoffees = (quantity) - 1;
    (quantity)--;
    if (numberOfCoffees < 0) {
        quantity = 0;
        numberOfCoffees = 0;
    }
    display(numberOfCoffees);
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    se.ju.taun15a16.group5.mjilkmjecipes.recipelist.ShowRecipeListActivity sct = ((se.ju.taun15a16.group5.mjilkmjecipes.recipelist.ShowRecipeListActivity) (activity));
    sct.itemClicked(data.get(mPosition).getId());
}

@java.lang.Override
protected void ItemViewClickListener(android.support.v7.widget.RecyclerView.ViewHolder holder, int position) {
    if ((touchItemHolder) != null)
        touchItemHolder.SingleChoose(holder, getSection(position), position);
    
}

public void onClick(android.content.DialogInterface dialog, int which) {
    _activateProfile(_profile, _startupSource, _interactive, _activity, _eventNotificationSound);
}

@java.lang.Override
public com.wenjiehe.xingji.Adapter.ChatRecyclerViewAdapter.ChatViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View v = android.view.LayoutInflater.from(context).inflate(R.layout.recyclerview_chat_list, parent, false);
    com.wenjiehe.xingji.Adapter.ChatRecyclerViewAdapter.ChatViewHolder nvh = new com.wenjiehe.xingji.Adapter.ChatRecyclerViewAdapter.ChatViewHolder(v, com.baidu.location.h.a.i);
    return nvh;
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    if (((hyjjr.cs160.com.safe_radius.Global) (getApplication())).isTurnedOn()) {
        startRequestLocation2();
        routine_check_connection.startUpdates();
        routine_check_history.startUpdates();
    }
}

@java.lang.Override
public boolean onDoubleTap(android.view.MotionEvent e) {
    android.widget.Toast.makeText(context, "onDoubleTap", Toast.LENGTH_SHORT).show();
    return true;
}

private void initBundleVariables(android.os.Bundle bundle) {
    bundle_id = bundle.getInt(DBConstants.BUNDLE_CAR_ID);
}

@java.lang.Override
public void onConnected(android.os.Bundle bundle) {
    android.util.Log.d("GeofencesScanner.onConnected", "xxx");
    registerAllEventGeofences();
}

@java.lang.Override
protected java.util.List<com.facebook.react.ReactPackage> getPackages() {
    return java.util.Arrays.<com.facebook.react.ReactPackage>asList(new com.facebook.react.shell.MainReactPackage(), new com.ocetnik.timer.BackgroundTimerPackage(), new com.BV.LinearGradient.LinearGradientPackage(), new com.dieam.reactnativepushnotification.ReactNativePushNotificationPackage(), new co.apptailor.googlesignin.RNGoogleSigninPackage(), new com.mackentoch.beaconsandroid.BeaconsAndroidPackage());
}

@java.lang.Override
public void onGroupExpand(int i) {
    android.widget.Toast.makeText(this, ("그룹 열림 " + i), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    try {
        doDisconnect();
        this.wait(1000);
        doConnect();
    } catch (java.lang.InterruptedException e) {
        e.printStackTrace();
    }
}

public void decreaseBeerCount(android.view.View v) {
    if ((mBeerCount) != 0)
        (mBeerCount)--;
    
    mTotalBeersTextView.setText(getString(R.string.beers_had, mBeerCount));
    updateBAC();
}

private long getNowUnixTimeUs() {
    if ((elapsedRealtimeOffsetMs) != 0) {
        return ((android.os.SystemClock.elapsedRealtime()) * 1000) + (elapsedRealtimeOffsetMs);
    }else {
        return (java.lang.System.currentTimeMillis()) * 1000;
    }
}

@java.lang.Override
public void onCreate() {
    super.onCreate();
    io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics());
    initializeInjector();
}

@java.lang.Override
public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture surfaceTexture, int width, int height) {
    surface = new android.view.Surface(surfaceTexture);
    emExoPlayer.setSurface(surface);
    if (playRequested) {
        emExoPlayer.setPlayWhenReady(true);
    }
}

public void birthdayCheck(android.view.View view) {
    boolean isChecked = birthdayCheckBox.isChecked();
    if (isChecked) {
        birthdayChecked = true;
    }else {
        birthdayChecked = false;
        birthdayText = "Happy Birthday!";
    }
    setVisibility(birthdayChecked, birthdayEditText);
    saveBirthdayPreferences();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, com.teamname.tutortrader.ViewImageActivity.class);
    intent.putExtra("index", java.lang.String.valueOf(selectedSessionIndex));
    startActivity(intent);
}

@java.lang.Override
public void onPause() {
    super.onPause();
    android.content.SharedPreferences.Editor editor = getPreferences(com.appfactory.quinn.m3ustreamtest2.MODE_PRIVATE).edit();
    editor.putInt("Last Channel", mCurrentIndex);
    editor.commit();
}

@java.lang.Override
public boolean onCreateOptionMenu(android.view.Menu menu) {
    super.onCreateOptionsMenu(menu);
    menu.add(0, com.example.marslander.MarsLanderActivity.MENU_START, 0, R.string.menu_start);
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.skyweather.MainActivity.jumpToPage(1);
}

@java.lang.Override
public void run() {
    bannerAd.setVisibility(View.VISIBLE);
    com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().addTestDevice("A086C24BCC40B2F05F919279DED26002").addTestDevice("68F91B8F0F6A121B1D0C30B6B44FC0F1").build();
    bannerAd.loadAd(adRequest);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    int value = minYaw + (progress * stepYaw);
    CurrentYawSpeed.setText(java.lang.Integer.toString(value));
}

public void onclickKeep1(android.widget.ImageView view) {
    int num = 1;
    its.farkel.MainFarkel.hand.removeDie(num);
    view.setVisibility(ImageView.INVISIBLE);
    its.farkel.MainFarkel.available[num] = true;
}

public com.danimahardhika.cafebar.CafeBar.Builder customView(@android.support.annotation.Nullable
android.view.View customView) {
    mCustomView = customView;
    return this;
}

public static void chooseBeautifulMapProvider(android.content.Context context, org.osmdroid.views.MapView map) {
    org.osmdroid.tileprovider.tilesource.MapBoxTileSource tileSource = new org.osmdroid.tileprovider.tilesource.MapBoxTileSource(context);
    map.setTilesScaledToDpi(true);
    map.setMaxZoomLevel(17);
    tileSource.setMapboxMapid("mapbox.emerald");
    map.setTileSource(tileSource);
}

private void initializeLeakDetection() {
    if (android.support.compat.BuildConfig.DEBUG) {
        com.squareup.leakcanary.LeakCanary.install(this);
    }
}

@java.lang.Override
public void onCreate() {
    final long identityToken = android.os.Binder.clearCallingIdentity();
    data = getContentResolver().query(QuoteProvider.Quotes.CONTENT_URI, null, null, null, null);
    android.os.Binder.restoreCallingIdentity(identityToken);
}

@java.lang.Override
public final void onCreate() {
    android.util.Log.d(org.fraunhofer.cese.madcap.services.OnBootService.TAG, "onCreate Boot Service");
    android.content.Intent intent = new android.content.Intent(this, org.fraunhofer.cese.madcap.services.LoginService.class);
    startService(intent);
    this.stopSelf();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_home_page);
    setUpWidgetsOnHomePage();
    longLatGrabber = new android.location.Geocoder(this);
    watchForLocationTextToChange();
    handleSearchButtonPressed();
    handlelocationButtonClick();
}

private com.google.android.gms.common.api.GoogleApiClient createGoogleApiClient() {
    logFlow("creating GoogleApliClient......");
    googleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(getActivity()).addApi(Places.GEO_DATA_API).addApi(Places.PLACE_DETECTION_API).build();
    connectGoogleApiClient();
    logFlow("GoogleApliClient created. Returning.......");
    return googleApiClient;
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.pravallika.multiplealarms.beans.SpecialDaysReminder currentSpecialDaysReminder = extractCurrentSplReminder();
    saveSplRemToDB(currentSpecialDaysReminder);
    setNotificationForReminder(currentSpecialDaysReminder);
    finish();
}

@org.greenrobot.eventbus.Subscribe
public void onEvent(org.openbmap.events.onServiceShutdown event) {
    if ((event.reason) == (org.openbmap.RadioBeacon.SHUTDOWN_REASON_LOW_POWER)) {
        android.widget.Toast.makeText(this, getString(R.string.battery_warning), Toast.LENGTH_LONG).show();
    }
    stopManagerService();
    this.finish();
}

@android.support.annotation.NonNull
public abstract TMessage parse(@android.support.annotation.NonNull
final java.lang.String source) throws java.io.IOException;

@java.lang.Override
public void onClick(android.view.View view) {
    dbHandler.deleteHomework(java.lang.Integer.parseInt(dbHandler.getHomework()[position][4]));
    dbHandler.hasHomework();
    dismiss();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    finish();
    startActivity(new android.content.Intent(this, com.example.styven.ahorcado.ProfileActivity.class));
    dialog.dismiss();
}

@org.mozilla.gecko.annotation.ReflectionTarget
public static synchronized void onCreate(android.content.Context context) {
    if ((org.mozilla.gecko.push.PushService.sInstance) != null) {
        throw new java.lang.IllegalStateException("PushService already created!");
    }
    org.mozilla.gecko.push.PushService.sInstance = new org.mozilla.gecko.push.PushService(context);
    org.mozilla.gecko.push.PushService.sInstance.registerGeckoEventListener();
    org.mozilla.gecko.push.PushService.sInstance.onStartup();
}

public void btnAddOnClick(android.view.View view) {
    android.content.Intent resultIntent = new android.content.Intent();
    resultIntent.putExtra(BuildDeckActivity.CARD_ID, "bil125");
    setResult(manningk.bettercurve.RESULT_OK, resultIntent);
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.util.Log.d("tag", ("onClick: user name " + (userName.getText())));
    getFlow().set(new com.example.testapp.feed.FeedScreen(userName.getText().toString()));
}

public android.content.SyncRequest.Builder setRequiresCharging(boolean requiresCharging) {
    mRequiresCharging = true;
    return this;
}

private void rebootRecoveryWithCommand(java.lang.String command, boolean update) {
    try {
        mService.rebootRecoveryWithCommand(command, update);
    } catch (android.os.RemoteException ignored) {
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(mMultiSelector.isSelectable())) {
        folderInterface.openFolder(((com.example.abhilashmirji.virtualfileexplorer.FolderObject) (v.getTag())));
    }
}

@com.facebook.react.bridge.ReactMethod
@javax.annotation.Nullable
public java.lang.Object variationForKey(@android.support.annotation.NonNull
java.lang.String key, @javax.annotation.Nullable
com.facebook.react.bridge.Callback callback) {
    java.lang.Object obj;
    obj = com.vwo.mobile.VWO.getVariationForKey(key);
    if (callback != null) {
        callback.invoke(obj);
    }
    return obj;
}

private void hideKeypad() {
    android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (_context.getSystemService(Context.INPUT_METHOD_SERVICE)));
    imm.hideSoftInputFromWindow(m_editTextHandle.getWindowToken(), 0);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    for (int i = 0; ; i++) {
        rxBus.post(new com.safframework.study.rxbus3.domain.TestBackPressEvent());
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    boolean shieldActive = com.infiniteshield.main.Shield.toggle(this);
    updateUI(shieldActive);
}

public void init(android.content.Context context) {
    model = new com.example.tiferet.rebook.Model.ModelParse();
    model.init(context);
    modelSql = new com.example.tiferet.rebook.Model.ModelSql(context);
}

public android.content.Intent getSavedIntent() {
    return savedIntents[0];
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.crashlytics.android.Crashlytics.log(Log.DEBUG, TAG, "run game");
    runGame(position);
}

public static void initialize(android.content.Context context, com.binarapps.android.cookielogger.interfaces.CLogInterface send, java.lang.String tag) {
    com.binarapps.android.cookielogger.AppContext.initialize(context, send, true, tag);
}

@java.lang.Override
public void handleGrip(int pointerIndex, int pointerId, android.view.MotionEvent ev) {
    x = ev.getX(pointerIndex);
    contentLeftFixed = contentLeftCurrent;
    velocityTracker = android.view.VelocityTracker.obtain();
    velocityTracker.addMovement(ev);
    animator.cancel();
}

@java.lang.Override
protected void onInsertComplete(int token, java.lang.Object cookie, android.net.Uri uri) {
    if ((mCallback.get()) != null) {
        mCallback.get().onInsertComplete();
    }
}

@java.lang.Override
public boolean onMenuItemClick(android.view.MenuItem item) {
    anchorsManager.removeAnchor(anchorView);
    com.alexshtf.offlinenavigator.MapsDb.removeAnchor(mapsDbOpenHelper, mapId, com.alexshtf.offlinenavigator.AnchorsManager.pointOnImageOf(anchorView));
    return true;
}

java.util.List<com.modelingbrain.home.model.Model> update(android.database.sqlite.SQLiteDatabase db);

@java.lang.Override
public void run() {
    android.support.v7.widget.RecyclerView.LayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager(getContext());
    mRecyclerView.setLayoutManager(layoutManager);
    mAdapter = new com.nathanromike.yes_you_can.adapters.GuideListAdapter(getContext(), mGuides);
    mRecyclerView.setAdapter(mAdapter);
}

public com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo copyWithPeriodIndex(int periodIndex) {
    com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo playbackInfo = new com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo(periodIndex, startPositionUs);
    playbackInfo.positionUs = positionUs;
    playbackInfo.bufferedPositionUs = bufferedPositionUs;
    playbackInfo.videoPositionUs.set(videoPositionUs.get());
    return playbackInfo;
}

public void createNew() {
    interview = new de.udk.drl.mazirecorderandroid.models.InterviewModel();
    observable.onNext(interview);
}

public void setNextView(android.view.View view) {
    mNextView = view;
    infalteNextViewInfo();
}

@java.lang.Override
public void onDismiss() {
    android.util.Log.v("ondismiss", "dismissing");
    java.lang.String atts = refreshList(finalItemIDs);
    new edu.gatech.cs4911.mintyfresh.HomeScreenActivity.ConnectToDB(current).execute(cl, atts);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    init();
    testSetColor();
}

@java.lang.Override
public void onSaveInstanceState(android.os.Bundle savedInstanceState) {
    super.onSaveInstanceState(savedInstanceState);
    android.util.Log.i(com.bignerdranch.android.geoquiz.QuizActivity.TAG, "onSaveInstanceState");
    savedInstanceState.putInt(com.bignerdranch.android.geoquiz.QuizActivity.KEY_INDEX, mCurrentIndex);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> arg0, android.view.View arg1, int arg2, long arg3) {
    showItem((arg2 + 1));
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    lon = location.getLongitude();
    lat = location.getLatitude();
    if ((reset) == false)
        findAddress();
    
    progress.dismiss();
}

public void onClick(android.view.View view) {
    happyBabyRequest.addKnowledgeJsonRequest(0, 0);
    happyBabyRequest.startRequest();
    android.util.Log.e("back", "back");
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animation) {
    android.util.Log.e("tag", "anim onAnimationEnd");
    getLinRoot().setVisibility(View.GONE);
}

@java.lang.Override
public void onClick(android.view.View view) {
    android.util.Log.d("lol", "here1");
    com.naman14.timber.permissions.Nammu.askForPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE, permissionReadstorageCallback);
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    if ((maximFeedListener) != null) {
        maximFeedListener.onLongClick(maxim);
    }
    return false;
}

@java.lang.Override
public void onDrawerOpened(android.view.View drawerView) {
    super.onDrawerOpened(drawerView);
    toggleIsSyncing();
}

@java.lang.Override
public void onScroll(float v) {
    pager.requestDisallowInterceptTouchEvent(true);
    cardIssueAdapter.setFirstCardState(v);
    android.util.Log.d("Scroll", java.lang.Float.toString(v));
}

public static java.lang.String buildURL(java.lang.Integer storeID, java.lang.String storeToken) {
    java.lang.String baseUrl = appaloosa_store.com.appaloosa_android_tools.utils.UrlUtils.getServerBaseUrl();
    return baseUrl + (appaloosa_store.com.appaloosa_android_tools.tools.services.blacklist.BlacklistUrlUtils.buildParams(storeID, storeToken));
}

@java.lang.Override
public int compareTo(de.blau.android.util.IndexSearchResult arg0) {
    if ((arg0.count) > (count)) {
        return -1;
    }else
        if ((arg0.count) < (count)) {
            return +1;
        }
    
    return -1;
}

@java.lang.Override
public void onRouteUnselected(android.support.v7.media.MediaRouter router, android.support.v7.media.MediaRouter.RouteInfo info) {
    com.fwgg8547.mycast.Lg.d(com.fwgg8547.mycast.MainActivity.TAG, ("onRouteUnselected: info=" + info));
    mSelectedDevice = null;
    mCastClientListener = null;
    mSlideshow.finalize();
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(this, "Error getting profile", Toast.LENGTH_SHORT).show();
    android.util.Log.e("ProfileFragment", e.getMessage());
    e.printStackTrace();
}

@java.lang.Override
public boolean onLongClick(android.view.View v) {
    return ((getOnItemLongClickListener()) != null) && (getOnItemLongClickListener().onItemLongClick(this, v, ((baseViewHolder.getLayoutPosition()) - (getHeaderLayoutCount()))));
}

@java.lang.Override
public boolean onFling(android.view.MotionEvent e1, android.view.MotionEvent e2, float velocityX, float velocityY) {
    java.lang.System.out.println("-------OnGestureListener:onFling()");
    return super.onFling(e1, e2, velocityX, velocityY);
}

public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    android.content.Intent intent = getIntent();
    startService(new android.content.Intent(this, ru.mityaresh.cadromonitor.MyService.class));
    finish();
}

public void cancel(android.view.View view) {
    if ((ph.intrepidstream.callmanager.util.PreferenceManager.getInstance(this).getCountry()) != (ph.intrepidstream.callmanager.util.Country.NONE)) {
        setResult(ph.intrepidstream.callmanager.ui.RESULT_CANCELED);
        finish();
    }
}

private void pause(android.widget.ImageButton playButton) {
    mPlaying = false;
    playButton.setImageResource(android.R.drawable.ic_media_play);
    if (mMediaPlayer.isPlaying()) {
        mMediaPlayer.pause();
    }
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    super.onCreateOptionsMenu(menu);
    getMenuInflater().inflate(R.menu.chat_menu, menu);
    return true;
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    com.letslunch.agileteam8.letslunch.homePage.eatingStatus userStatus = com.letslunch.agileteam8.letslunch.homePage.eatingStatus.BRING_LUNCH;
    userResponseToEating(userStatus.toString());
    dialog.dismiss();
}

@butterknife.OnClick(value = R.id.hourlybutton)
public void startHourlyActivity(android.view.View view) {
    mMixpanel.track("View Hourly", null);
    android.content.Intent intent = new android.content.Intent(this, com.moockpanel.weatherpanel.UI.HourlyForecastActivity.class);
    intent.putExtra(com.moockpanel.weatherpanel.UI.MainActivity.HOURLY_FORECAST, mForecast.getHourlyForecast());
    startActivity(intent);
}

private void updateUI() {
    if ((mAdapter) == null) {
        mAdapter = new com.oestjacobsen.android.get2gether.view.groups.SelectedGroupMembersFragment.MembersAdapter(mMembersList);
        mRecyclerView.setAdapter(mAdapter);
    }else {
        mAdapter.setList(mMembersList);
        mAdapter.notifyDataSetChanged();
    }
}

public void pauseMenu(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, finalproject.tap.Popupmenu.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    pausestuff();
    startActivity(intent);
}

@java.lang.Override
public void onStartDrag(android.support.v7.widget.RecyclerView.ViewHolder viewHolder) {
    mItemTouchHelper.startDrag(viewHolder);
    android.util.Log.e("MyTAG", ahgpoug.qrreader.SelectorActivity.task.getId());
}

@java.lang.Override
public void onClick(android.view.View view) {
    showAlert(getString(R.string.help), getString(R.string.what_is_school_domain));
}

@java.lang.Override
public boolean onSelection(com.afollestad.materialdialogs.MaterialDialog dialog, android.view.View view, int which, java.lang.CharSequence text) {
    showToast(((which + ": ") + text));
    mes_selecionado = which;
    atualizarMes();
    showListView();
    return true;
}

public void decrement(android.view.View view) {
    android.util.Log.d("CounterFrag", "Decremented Count");
    --(count);
    updateFieldFromCount();
}

protected void resumeRealm() {
    if (((myRealm) == null) || (myRealm.isClosed())) {
        myRealm = io.realm.Realm.getDefaultInstance();
        android.util.Log.d(com.zhan.budget.Fragment.BaseRealmFragment.TAG, "----- RESUME REALM -----");
    }
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    if (((predicate) == null) || (predicate.test(context, intent))) {
        android.util.Log.d(be.ugent.zeus.hydra.loaders.changes.BroadcastListener.TAG, "onReceive: Content was changed due to LocalBroadcast.");
        loader.onContentChanged();
    }
}

public void addView(android.view.View imgView, android.view.View iconView) {
    addView(imgView);
    addView(iconView);
    requestLayout();
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar seekBar) {
    tvMaxKm.setText(((seekBar.getProgress()) + "km"));
}

@java.lang.Override
protected void handleClick() {
    mHost.collapsePanel();
    android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_POWERMENU);
    mContext.sendBroadcast(intent);
}

@java.lang.Override
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) {
    inflater.inflate(R.menu.forecastfragment, menu);
    android.util.Log.d("TAG", "fragment  menu inflated");
}

@java.lang.Override
public void onPlanClicked(com.spadatech.mobile.android.foodframer.models.Plan plan) {
    android.util.Log.d("Ludens", ("plan: " + (plan.getName().toString())));
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    double value = ((progress * stepAgl) * 30) / 52;
    CurrentAngle.setText(java.lang.Double.toString(value));
}

@java.lang.Override
public void CellForItem(com.huterpu.baserecyclerview.BaseRecyclerView parent, android.view.ViewGroup container, int position) {
    if ((mDelegate) != null)
        mDelegate.cellForItem(parent, container, position);
    
}

void onItemClick(android.view.View view, int position);

@java.lang.Override
public void onItemClick(int id) {
    android.content.Intent i = new android.content.Intent();
    i.setClass(getActivity(), edu.mobapde.bloodnet.MyPledgeActivity.class);
    i.putExtra("id", id);
    startActivity(i);
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    outState.putBoolean(Constants.KEY_BUNDLE_FIRST_LOAD_DONE, true);
    super.onSaveInstanceState(outState);
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    mIsPlaying = false;
    mPlayerControl.setImageResource(R.drawable.ic_play_arrow_24dp);
}

public com.google.android.gms.tasks.Task<java.lang.Void> send(android.content.Context context) {
    project.sherpa.utilities.ContentProviderUtils.insertModel(context, this);
    return project.sherpa.utilities.FirebaseProviderUtils.insertOrUpdateModel(this);
}

private void Warning(com.afollestad.materialdialogs.MaterialDialog.ButtonCallback yesHandler) {
    com.afollestad.materialdialogs.MaterialDialog show = new com.afollestad.materialdialogs.MaterialDialog.Builder(this).title(R.string.warning).content(R.string.no_data).iconAttr(android.R.attr.alertDialogIcon).positiveText(android.R.string.yes).callback(yesHandler).show();
}

@java.lang.Override
public android.content.Loader<java.util.ArrayList<com.abigailmathews.bookworm.Book>> onCreateLoader(int id, android.os.Bundle args) {
    return new com.abigailmathews.bookworm.BookLoader(this, com.abigailmathews.bookworm.MainActivity.TEMP_QUERY);
}

@java.lang.Override
protected com.smilehacker.sample.Item0Component.ViewHolder getViewHolder(android.view.ViewGroup container) {
    android.view.View view = mLayoutInflater.inflate(R.layout.item_v0, container, false);
    return new com.smilehacker.sample.Item0Component.ViewHolder(view);
}

@java.lang.Override
public void onClick(android.view.View v) {
    for (com.inyourface.singbetter.Objects.Session session : toBeRemoved) {
        displayedSessions.add(session);
    }
    toBeRemoved.clear();
    adapter.notifyDataSetChanged();
    setDeleteMode(false);
}

@java.lang.Override
public void onAttachFragment(com.google.android.apps.dashclock.configuration.Fragment fragment) {
    mFragment = ((com.google.android.apps.dashclock.configuration.BaseSettingsActivity.ExtensionPreferenceFragment) (fragment));
}

@java.lang.Override
public boolean onCreateActionMode(android.view.ActionMode mode, android.view.Menu menu) {
    mode.setTitle(R.string.menu_item_reportEditAccount);
    return true;
}

private void initRecyclerView(android.support.v7.widget.RecyclerView recyclerView) {
    observerList.add(recyclerView);
    recyclerView.addOnScrollListener(new ninja.poepoe.library.ScrollListener(observerList));
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    myView = inflater.inflate(R.layout.first_layout, container, false);
    return super.onCreateView(inflater, container, savedInstanceState);
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    currentTab = tabHost.getCurrentTabTag();
    loadStopForecast(redLineSpinnerStop.getItemAtPosition(position).toString());
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    findMenuItem.setEnabled(false);
    notifyAllMenuItem.setEnabled(false);
}

public void populateSpinner(org.hisp.dhis2.android.sdk.utils.ui.views.CardSpinner spinner, java.util.List<java.lang.String> list) {
    android.widget.ArrayAdapter<java.lang.String> adapter = new android.widget.ArrayAdapter<java.lang.String>(getActivity(), R.layout.spinner_item, list);
    spinner.setAdapter(adapter);
}

@java.lang.Override
public void onFail(int statusCode, @android.support.annotation.Nullable
T failDate, @android.support.annotation.Nullable
java.lang.Throwable error) {
    if ((mResponseCallback) != null) {
        mResponseCallback.onFail(statusCode, failDate, error);
    }
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mediaPlayer) {
    if (!(fromNotification)) {
        android.os.Bundle returnBundle = new android.os.Bundle();
        playTrackResultReceiver.send(com.dnbitstudio.spotifystreamer.services.PlayTrackService.NOTIFY_MP_PREPARED, returnBundle);
    }
    createNotification();
    mediaPlayer.start();
}

protected void onPostExecute(java.lang.Boolean t) {
    android.util.Log.d("gh", "hgh");
    pdia.dismiss();
    sendBarcodeToActivity(codeContent, false);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.util.Log.e("DownloadManager", java.lang.String.valueOf(com.aspsine.multithreaddownload.DownloadManager.getInstance().getDownloadInfo(java.lang.String.valueOf(3317))));
    setHasOptionsMenu(true);
}

@java.lang.Override
public void onServiceDisconnected(final android.content.ComponentName name) {
    com.ape.transfer.util.Log.i(com.ape.transfer.activity.ApScanActivity.TAG, "onServiceDisconnected");
    mTransferService = null;
}

public boolean onCreateOptionsMenu(android.view.Menu menu) {
    super.onCreateOptionsMenu(menu);
    android.view.MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.navigation, menu);
    return true;
}

private void showSmsToast(com.unifyx.messagelistener.Sms sms) {
    android.widget.Toast.makeText(this, sms.getMsg(), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setRetainInstance(true);
    mTutorial = new com.cleveroad.slidingtutorial.TutorialImpl(mInternalFragment);
}

private boolean isGoogleMapsInstalled() {
    try {
        android.content.pm.ApplicationInfo info = getPackageManager().getApplicationInfo("com.google.android.apps.maps", 0);
        return true;
    } catch (android.content.pm.PackageManager e) {
        return false;
    }
}

@java.lang.Override
public void onComplete(@android.support.annotation.NonNull
com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) {
    android.util.Log.d(Constants.TAG, "In activity, oncompletelistener");
    if (!(task.isSuccessful())) {
        showLoginError("Authentication failed.");
    }
}

public void interactionEnded() throws java.io.IOException {
    socket.close();
    socket = null;
    com.android.gscaparrotti.bendermobile.ServerInteractor.instance = null;
}

@butterknife.OnClick(value = R2.id.add)
public void setAdd() {
    android.widget.Toast.makeText(getActivity(), "ROBILLO", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View v) {
    screen.delete(0, ((screen.length()) - 1));
    calculatorScreen.setText(screen);
}

@java.lang.Override
protected void onPreExecute() {
    super.onPreExecute();
    barProgress3 = new android.app.ProgressDialog(ConnexionActivity.appContext);
    barProgress3.setTitle("Sauvegarde de votre alimentation en cours...");
    barProgress3.show();
}

public void onStartClicked(android.view.View v) {
    long workoutID = dbHelper.insertWorkoutEntry(mCurrWorkout);
    android.content.Intent i = new android.content.Intent(this, edu.dartmouth.cs.project.sixpk.WorkoutActivity.class);
    i.putExtra(Globals.WORKOUT_ID_KEY, workoutID);
    startActivity(i);
}

@java.lang.Override
public void hideKeyboard() {
    android.view.inputmethod.InputMethodManager manager = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE)));
    manager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return new com.harryjamesuk.ribbit.InboxFragment();
        case 1 :
            return new com.harryjamesuk.ribbit.FriendsFragment();
    }
    return new com.harryjamesuk.ribbit.InboxFragment();
}

@java.lang.Override
public void onClick(android.view.View v) {
    boolean isChecked = ((android.widget.CheckBox) (v)).isChecked();
    mainActivity.playerData.setReady(isChecked);
    mainActivity.sendReadyDataToOthers();
}

public void decreaseTime(android.view.View view) {
    timeToGetReadyInMinutes -= 5;
    timeToGetReadyTextView.setText(java.lang.String.valueOf(timeToGetReadyInMinutes));
}

private void setClearOff() {
    setClear(true);
    btn_clear.setVisibility(View.GONE);
    setInputQueryLayout(R.id.activity_search_inputbar_btn_mic);
    if (android.speech.SpeechRecognizer.isRecognitionAvailable(getApplicationContext())) {
        btn_mic.setVisibility(View.VISIBLE);
    }
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    android.widget.Toast.makeText(this, "Please wait... Getting Podcast..", Toast.LENGTH_SHORT).show();
}

public static boolean restore(android.support.v4.app.FragmentActivity target) {
    com.woodblockwithoutco.beretained.FieldsRetainer<android.support.v4.app.FragmentActivity> retainer = com.woodblockwithoutco.beretained.BeRetained.findFieldsRetainer(target.getClass());
    return retainer.restore(target);
}

@permissions.dispatcher.NeedsPermission(value = { Manifest.permission.READ_EXTERNAL_STORAGE })
void chooseImage() {
    if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) {
        android.content.Intent i = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT);
        i.setType("image/*");
        startActivityForResult(android.content.Intent.createChooser(i, "File Chooser"), SELECT_PICTURE);
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    int adapterPosition = getAdapterPosition();
    if (adapterPosition != 0) {
        callback.onClickStep(adapterPosition);
    }
}

private static void setupGetEvents() {
    com.zulip.android.widget.ZulipWidget.asyncGetEvents = new com.zulip.android.networking.AsyncGetEvents(com.zulip.android.ZulipApp.get(), com.zulip.android.widget.ZulipWidget.intervalMilliseconds);
    com.zulip.android.widget.ZulipWidget.asyncGetEvents.start();
}

@java.lang.Override
public void onConfigurationChanged(android.content.res.Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    mDrawerToggle.onConfigurationChanged(newConfig);
}

@java.lang.Override
public void onClick(android.view.View view) {
    isUpdate = true;
    addMark(viewedMark, viewedMarkWeight, viewedMarkDescription, viewedMarkSubject, true, 0);
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.ryansteckler.nlpunbounce.helpers.ThemeHelper.onActivityCreateSetTheme(this.getActivity());
    if ((getArguments()) != null) {
        mTaskerMode = getArguments().getBoolean(com.ryansteckler.nlpunbounce.AlarmRegexFragment.ARG_TASKER_MODE);
    }
}

public android.content.res.AssetManager getAssetsByBundle(java.lang.String bundleName) {
    com.dynamicload.framework.dynamicload.internal.DLPluginPackage dlPluginPackage = getPluginPackageByBundle(bundleName);
    return dlPluginPackage.assetManager;
}

private java.lang.Boolean shouldAskRational(android.app.Activity activity, java.lang.String requestedPermissions) {
    return android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(activity, requestedPermissions);
}

@java.lang.Override
public void run() {
    android.widget.Toast.makeText(this.C.getApplicationContext(), e.toString(), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) {
    mMap = googleMap;
    mFuture = scheduleLocationPull();
}

public void requestLocationUpdates(android.content.Context context) {
    requestLocationUpdates(mContext, edu.rosehulman.me435.FieldGps.DEFAULT_MIN_TIME_MS, edu.rosehulman.me435.FieldGps.DEFAULT_MIN_DISTANCE);
}

@java.lang.Override
protected void setupCommonUIDelegate(@android.support.annotation.NonNull
com.playground.notification.app.activities.CommonUIDelegate commonUIDelegate) {
    super.setupCommonUIDelegate(commonUIDelegate);
    commonUIDelegate.setDrawerLayout(mBinding.drawerLayout);
    commonUIDelegate.setNavigationView(mBinding.navView);
    commonUIDelegate.setAppListView(mBinding.appListFl);
    mBinding.navView.setNavigationItemSelectedListener(commonUIDelegate.onNavigationItemSelectedListener);
}

@java.lang.Override
protected void onPostExecute(java.lang.String result) {
    android.widget.Toast.makeText(this, result.toString(), Toast.LENGTH_LONG).show();
}

@java.lang.Override
public void setMessage(int message, boolean error) {
    int color = (error) ? android.graphics.Color.RED : android.graphics.Color.GREEN;
    firstedia.com.newsmanagement.utils.SnackBarMessage.message(snackbar, linearLayout, message, color);
    if (!error) {
        navigateToHome();
    }
}

public void setToVideoWallpaper(android.view.View v) {
    com.bdqn.zev.videowallpaperdemo.VideoLiveWallpaper.setVideoPath(mPath);
    com.bdqn.zev.videowallpaperdemo.VideoLiveWallpaper.setToWallpaper(this);
}

@java.lang.Override
public void run() {
    java.lang.String chandiCode = com.asag.serial.utils.DataUtils.getPreferences("chandi_data", "");
    if (!(android.text.TextUtils.isEmpty(chandiCode))) {
        sendChandiCode(chandiCode);
    }
    sendMessageS(CMDCode.DATA_TRANSFER_FINISH);
}

public synchronized void put(final com.evernote.android.job.JobRequest request) {
    updateRequestInCache(request);
    store(request);
}

@java.lang.Override
public void onChartGestureStart(android.view.MotionEvent me, com.github.mikephil.charting.listener.ChartTouchListener.ChartGesture lastPerformedGesture) {
    android.util.Log.i("Gesture", ((("START, x: " + (me.getX())) + ", y: ") + (me.getY())));
}

@java.lang.Override
public void onNext(manoilo.catsapiandroidclient.model.Cat cat) {
    getCatImgUrl(cat);
    cats.add(cat);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    if (mAdapter.isSelectableItem(position)) {
        mAdapter.doClickOnItem(position);
        mAdapter.sort();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.ActivityCompat.requestPermissions(getActivity(), new java.lang.String[]{ Manifest.permission.ACCESS_FINE_LOCATION }, com.tamerbarsbay.depothouston.presentation.view.fragment.MapSearchFragment.REQUEST_CODE_LOCATION_PERMISSION);
}

@java.lang.Override
public void onClick(android.view.View view) {
    activity.clickOnSale(cursor.getLong(cursor.getColumnIndex(StockContract.StockEntry._ID)), quantity);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    (backKeyCount)++;
}

@java.lang.Override
public void onBackPressed() {
    super.onBackPressed();
    app.com.digitallearning.TeacherModule.Classes.EditClassFragment.style = " ";
    android.util.Log.e("EditClassFragment.style", ("" + (app.com.digitallearning.TeacherModule.Classes.EditClassFragment.style)));
    TopicFragment.topic = " ";
    DescriptionFragment.description = " ";
    app.com.digitallearning.TeacherModule.Classes.EditClassFragment.topic1 = " ";
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    incrementGamesPlayedAchievement();
    incrementRoundsStartedEvent();
    android.content.Intent intent = new android.content.Intent(getApplicationContext(), de.appphil.categories.activities.game.config.GameConfigActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((mOnNumberClickListener) != null) {
        mOnNumberClickListener.onNumberClicked(getAdapterPosition());
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if ((mChoice) > 0) {
        process(mChoice);
    }
    dialog.dismiss();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    timber.log.Timber.d("onLocationChanged");
    timber.log.Timber.d(("location string: " + (location.toString())));
    this.location = location;
}

private java.lang.String getQuantityString(@android.support.annotation.PluralsRes
int resId, int n) {
    return com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext.getResources().getQuantityString(resId, n, n);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    displayRecyclerView(0);
    dialog.dismiss();
}

@java.lang.Override
public void onFrameRendered(android.media.MediaCodec codec, long presentationTimeUs, long nanoTime) {
    if ((this) != (tunnelingOnFrameRenderedListener)) {
        return ;
    }
    maybeNotifyRenderedFirstFrame();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    super.onCreate(savedInstanceState);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS, WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
    setRecentBar(null, me.ccrama.redditslide.Visuals.Palette.getDefaultColor());
}

private void initialize(android.content.Context context) {
    inflate(context, R.layout.task_strip_view, this);
    android.content.res.Resources res = getResources();
}

public void onClickPrev(android.view.View view) {
    if ((currPos) > 0) {
        (currPos)--;
        if ((currPos) < 0) {
            currPos = (dict.size()) - 1;
        }
        updateMemorizationView();
    }
}

public void stopTrip() {
    android.preference.PreferenceManager.getDefaultSharedPreferences(this).edit().putBoolean(Constants.IS_DRIVER_ON_TRIP, false).putString(Constants.CURRENT_TRIP_ID, "").apply();
    addNotification();
    startCalculatingDistanceIfDriverOnTrip();
}

@java.lang.Override
public void showCars(com.automotive.hhi.mileagetracker.adapters.CarAdapter cars) {
    android.util.Log.i(LOG_TAG, "In showCars");
    mCarRecyclerView.setAdapter(cars);
    cars.notifyDataSetChanged();
}

@java.lang.Override
public void onPrepared(android.media.MediaPlayer mp) {
    android.util.Log.i(com.tan.musicplayer.playService.PlayService.TAG, "onPrepared: ");
    mp.start();
    changePlayerState(true);
    changeNotificationMessage();
    com.tan.musicplayer.MusicPlayerApplication.executeDBRunning(mRencentDBRunnable);
}

@java.lang.Override
public void onEvent(int eventType, android.os.Bundle params) {
    android.util.Log.d(com.shaedar.virtualclient.VoiceEngine.GoogleRecognizer.TAG, ("onEvent " + eventType));
}

@java.lang.Override
protected android.widget.TextView updateDrawable(final android.graphics.drawable.Drawable newDrawable) {
    final android.widget.TextView view = super.updateDrawable(newDrawable);
    setBounds(cgeo.geocaching.utils.ImageUtils.scaleImageToLineHeight(newDrawable, view));
    return view;
}

public static void autoPhotoSampling(android.widget.ImageView imageView, android.graphics.Bitmap bitmap) {
    jp.itnav.derushio.autophotosampling.AutoPhotoSampling.autoPhotoSampling(imageView, bitmap, null, null, null);
}

public boolean dispatchTouchEvent(android.view.MotionEvent motionevent) {
    super.dispatchTouchEvent(motionevent);
    mFragment.scaleDetector.onTouchEvent(motionevent);
    mFragment.gestureDetector.onTouchEvent(motionevent);
    mFragment.handleTouchEvent(motionevent);
    return mFragment.gestureDetector.onTouchEvent(motionevent);
}

public void onClick(android.content.DialogInterface dialog, int id) {
    android.content.Intent intent = new android.content.Intent(getBaseContext(), io.github.sdsstudios.ScoreKeeper.EditGame.class);
    intent.putExtra("gameID", gameID);
    startActivity(intent);
}

@java.lang.Override
public void onCancel(android.content.DialogInterface dialog) {
    if (mImageCaptureUri != null) {
        getContentResolver().delete(mImageCaptureUri, null, null);
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.graphics.BitmapFactory.Options bitmapOptions = new android.graphics.BitmapFactory.Options();
    android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeFile(picsList.get(i), bitmapOptions);
    largeImage.setImageBitmap(bitmap);
    largeImage.setVisibility(View.VISIBLE);
}

public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.marco_button :
            getPlayerLocation();
            break;
        case R.id.end_game_button :
            break;
    }
}

public com.daasuu.library.Container removeChild(@android.support.annotation.NonNull
com.daasuu.library.DisplayObject DisplayObject) {
    boolean a = mDisplayList.remove(DisplayObject);
    return this;
}

private void registerSyncStatusBroadcastReceiver() {
    org.ei.opensrp.path.receiver.SyncStatusBroadcastReceiver syncStatusBroadcastReceiver = new org.ei.opensrp.path.receiver.SyncStatusBroadcastReceiver();
    syncStatusBroadcastReceiver.addSyncStatusListener(this);
    registerReceiver(syncStatusBroadcastReceiver, new android.content.IntentFilter(org.ei.opensrp.path.receiver.SyncStatusBroadcastReceiver.ACTION_SYNC_STATUS));
}

public void attackersConfirmSameStep(android.content.DialogInterface dialog, int id) {
    mBattlefield.confirmAttack();
    setNextStepButtonText();
    mBinding.nextStep.setEnabled(true);
}

@java.lang.Override
public void onActivityStarted(android.app.Activity activity) {
    if (isFirstLaunch.compareAndSet(true, false)) {
        appState = com.jenzz.appstate.AppState.FOREGROUND;
    }
    if ((appState) == (com.jenzz.appstate.AppState.BACKGROUND)) {
        onAppDidEnterForeground();
    }
}

@java.lang.Override
public void onTokenRefresh() {
    java.lang.String refreshedToken = com.google.firebase.iid.FirebaseInstanceId.getInstance().getToken();
    com.codepath.socialshopper.socialshopper.Listeners.MyFirebaseInstanceIDService.REGISTRATION_ID = com.google.firebase.iid.FirebaseInstanceId.getInstance().getToken();
    android.util.Log.d(com.codepath.socialshopper.socialshopper.Listeners.MyFirebaseInstanceIDService.TAG, ("Token: " + refreshedToken));
    sendRegistrationToServer(refreshedToken);
}

@java.lang.Override
public void onInitialized() {
    if (isLoggedIn()) {
        updateMyprofile(false);
        android.support.design.widget.Snackbar.make(navView, (("Welcome Back, " + (com.hwanghee.tennistogether.MainActivity.userName)) + "!"), Snackbar.LENGTH_SHORT).show();
    }
}

public boolean allTasksCompleted() {
    for (com.laytonlabs.android.todotoday.Task t : mTasks) {
        if (!(t.isCompleted())) {
            return false;
        }
    }
    return true;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(mRadioManager.isPlaying()))
        mRadioManager.startRadio(RADIO_URL);
    else
        mRadioManager.stopRadio();
    
}

@java.lang.Override
protected void onPostExecute(java.lang.Long localPlayTime) {
    android.util.Log.d(TAG, "OnPostExecute");
    com.speakr.connorriley.speakr.SongTimer songtimer = new com.speakr.connorriley.speakr.SongTimer(localPlayTime, musicSrv, controller, actionstring);
}

public static void showLoading(android.support.v4.app.FragmentActivity activity) {
    com.liangmayong.loading.Loading.showLoading(activity, "", (-1), (-1));
}

private static void setMarquee(android.widget.TextView textView) {
    textView.setSingleLine(true);
    textView.setSelected(true);
    textView.setEllipsize(TextUtils.TruncateAt.MARQUEE);
    textView.setMarqueeRepeatLimit((-1));
}

private void setItemsArray(@android.support.annotation.ArrayRes
int arrayResId, @android.support.annotation.LayoutRes
int spinnerItemRes, @android.support.annotation.LayoutRes
int dropdownViewRes) {
    android.widget.ArrayAdapter<java.lang.CharSequence> adapter = android.widget.ArrayAdapter.createFromResource(getContext(), arrayResId, spinnerItemRes);
    adapter.setDropDownViewResource(dropdownViewRes);
    mSpinner.setAdapter(adapter);
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent i = mContext.getPackageManager().getLaunchIntentForPackage(mContext.getPackageName());
    i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    getContext().startActivity(i);
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int progress, boolean fromUser) {
    mLevelText.setText(java.lang.String.format(getString(R.string.textLevelFormat), java.lang.String.format(getString(R.string.percentLevelFormat), progress)));
}

public void clickStart(android.view.View view) {
    receiveCounter = 0;
    receivingDataMode = true;
    output().setLength(0);
    sendCommand(com.adafruit.bleuart.MainActivity.microCommand.START);
    writeLine("\n-- START --\n");
}

@com.facebook.react.bridge.ReactMethod
public void checkForUpdate() {
    android.app.Activity currentActivity = getCurrentActivity();
    if (com.slowpath.hockeyapp.RNHockeyAppModule._initialized) {
        net.hockeyapp.android.UpdateManager.register(currentActivity, com.slowpath.hockeyapp.RNHockeyAppModule._token);
    }
}

@java.lang.Override
public void onClick(android.view.View view) {
    prefs.edit().putLong(eu.faircode.backpacktrack2.SettingsFragment.PREF_LAST_WEATHER_VIEWPORT, (7 * (eu.faircode.backpacktrack2.SettingsFragment.DAY_MS))).apply();
    showWeatherGraph(graph);
}

public void setPartner(@android.support.annotation.NonNull
java.lang.String currentText, java.lang.String cursortext, long newID) {
    if (!(android.text.TextUtils.isEmpty(currentText))) {
        setPartnername(currentText);
        setPartnerID(newID);
    }
}

public void startConfigFragment() {
    android.app.FragmentManager fm = getFragmentManager();
    com.example.filip.gpsrecorder.ConfigFragment config = new com.example.filip.gpsrecorder.ConfigFragment();
    config.show(fm, "dialog");
}

protected void init(android.content.Context context, android.util.AttributeSet attrs) {
    initViews(context);
    initAttributes(context, attrs);
}

public static synchronized void registerWakeupBroadcast(android.content.Intent intent) {
    com.magnet.mmx.client.api.MMX.getSharedPrefs().edit().putString(com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI, intent.toUri(Intent.URI_INTENT_SCHEME)).apply();
}

@java.lang.Override
public void onReceive(com.home.pete.aquarium.Context context, com.home.pete.aquarium.Intent intent) {
    int msg = intent.getIntExtra("ACTION", 0);
    android.util.Log.d(com.home.pete.aquarium.MainActivity.TAG, ("Got hello reponse of: " + msg));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_game_form);
    getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
}

public boolean isLogin(android.content.Context context) {
    android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(context);
    java.lang.String token = sharedPreferences.getString(com.example.gssflyaway.mobilecourse.model.UserModel.TOKEN, "");
    if (token.equals(""))
        return false;
    else
        return true;
    
}

@java.lang.Override
public void setBackground(android.graphics.drawable.Drawable background) {
    mBackgroundDrawable = background;
    updateBackgroundDrawableAttrs(true);
    if ((BuildConfig.VERSION_CODE) >= (Build.VERSION_CODES.JELLY_BEAN))
        super.setBackground(mBackgroundDrawable);
    else
        super.setBackgroundDrawable(mBackgroundDrawable);
    
}

@java.lang.Override
public void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager.AuthenticationResult result) {
    super.onAuthenticationSucceeded(result);
    callback.onAuthenticated();
}

@org.protocoderrunner.apidoc.annotation.ProtoMethod(description = "Creates a progress bar of n units", example = "")
@org.protocoderrunner.apidoc.annotation.ProtoMethodParam(params = { "units" })
public org.protocoderrunner.apprunner.api.widgets.PProgressBar newProgress(int max) {
    initializeLayout();
    org.protocoderrunner.apprunner.api.widgets.PProgressBar pb = new org.protocoderrunner.apprunner.api.widgets.PProgressBar(getContext(), android.R.attr.progressBarStyleHorizontal);
    return pb;
}

@java.lang.Override
public void onClick(android.view.View view) {
    addMark("", "", "", "", false, 0);
}

public void stop() {
    synchronized(mTasks) {
        try {
            com.androidlogsuite.task.TaskCenter.mSelector.close();
            mbCenterStopped = true;
            mTasks.notifyAll();
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }
}

private boolean isIsha(co.ideaportal.srirangadigital.shankara_android.model.Link book) {
    return bookIsha.equals(book.name);
}

protected void onResume() {
    super.onResume();
    stepDetector.onResume();
    android.content.IntentFilter intentFilter = new android.content.IntentFilter("android.intent.action.MAIN");
}

void onPhotoPicked(android.net.Uri uri) {
    if ((photoEmitter) != null) {
        android.net.Uri copy = android.net.Uri.fromFile(new java.io.File(uri.getPath()));
        photoEmitter.onNext(copy);
        photoEmitter.onComplete();
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.btn_addcompany :
            addCompany();
            break;
        case R.id.btn_add_category :
            addCategory(v);
            break;
    }
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent arg0) {
    return null;
}

@java.lang.Override
public void onNothingSelected(android.widget.AdapterView<?> parent) {
    determineTip(spinnerCountry.getSelectedItem().toString());
    setCurrencySymbol(spinnerCountry.getSelectedItem().toString());
}

@java.lang.Override
public void onClick(android.view.View v) {
    onItemClickCustom(viewHolder, false);
}

@java.lang.Override
public void onItemClickListener(android.view.View v, com.peter.parttime.managershare.ManagerShareActivity.Paper p) {
    com.peter.parttime.managershare.ManagerShareActivity.switchToArticle(this, p.mHref, p.mPicture, p.mTitle, v.findViewById(R.id.pic), v.findViewById(R.id.title));
}

@java.lang.Override
public void onClick(android.view.View view) {
    by.vshkl.translate2.util.Navigation.navigateToAppSettings(getApplicationContext());
}

@java.lang.Override
public com.sfparks.model.Park call(com.google.gson.JsonObject object) {
    android.util.Log.d("sfparks parksModule", "getting park from record");
    return com.sfparks.model.ParksModule.getParkFromRecord(object, jsonParser, latLng);
}

@java.lang.Override
public void onClick(android.view.View v) {
    manager.removeView(view);
    view = null;
    android.util.Log.d("Checking View", ((view) == null ? "View is null" : "View is not null"));
}

@java.lang.Override
public void onClick(android.view.View v) {
    doodleView.setPenColor(tempColor);
    doodleView.setPenWidth(tempProgress);
    com.smartdraw.dijay.Activity.SketchpadActivity.currentPenColor = tempColor;
    com.smartdraw.dijay.Activity.SketchpadActivity.currentPenWidth = tempProgress;
    selectDialog.dismiss();
}

@java.lang.Override
public void onClick(android.view.View v) {
    com.example.yass8n.whozthis.activities.MainActivity.current_conversation = conversation;
    startActivity(new android.content.Intent(getActivity(), com.example.yass8n.whozthis.activities.MessagingActivity.class));
}

@java.lang.Override
protected void afterHookedMethod(nz.pbomb.xposed.anzmods.MethodHookParam param) throws java.lang.Throwable {
    if (nz.pbomb.xposed.anzmods.XposedMod.prefs.getBoolean(PREFERENCES.KEYS.ANZ.SPOOF_DEVICE, PREFERENCES.DEFAULT_VALUES.ANZ.SPOOF_DEVICE)) {
        de.robv.android.xposed.XposedHelpers.callMethod(param.thisObject, "b04160416041604160416ЖЖ0416", new java.lang.Class<?>[]{ java.lang.String.class }, deviceInfo.Build.BOARD);
    }
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    return com.dailynews.dailynews.widget.fragment.PageFragment.newInstance(tabTitles[position]);
}

private android.animation.Animator createHollowSelectorAnimator() {
    return android.animation.ObjectAnimator.ofObject(null, net.ganin.darv.DpadAwareRecyclerView.BOUNDS_PROP_NAME, new net.ganin.darv.RectEvaluator(), mSelectorSourceRect, mSelectorDestRect);
}

public void onPageStarted(android.webkit.WebView view, java.lang.String url, android.graphics.Bitmap favicon) {
    _handleRedirect(url);
    super.onPageStarted(view, url, favicon);
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    super.onDismiss(dialog);
    getPresenter().onDismiss();
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.main, menu);
    this.menu = menu;
    return true;
}

@java.lang.Override
public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) {
    db.execSQL(("DROP TABLE IF EXISTS " + (com.karambit.bookie.helper.DBHandler.USER_TABLE_NAME)));
    onCreate(db);
    if (db.isOpen()) {
        db.close();
    }
}

private void addPicureToGallery(java.io.File imageFile) {
    android.content.Intent mediaScanIntent = new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
    android.net.Uri contentUri = android.net.Uri.fromFile(imageFile);
    mediaScanIntent.setData(contentUri);
    com.example.dell.fieldit.Model.MyApplication.getAppContext().sendBroadcast(mediaScanIntent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    abort(null, returnToChooser);
}

@java.lang.Override
protected void onActivityResult(int requestCode, int responseCode, android.content.Intent intent) {
    super.onActivityResult(requestCode, responseCode, intent);
    callbackManager.onActivityResult(requestCode, responseCode, intent);
}

@java.lang.Override
public void onPageSelected(int position) {
    android.widget.Toast.makeText(getApplicationContext(), ("Trip " + (position + 1)), Toast.LENGTH_SHORT).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration();
    initialize(com.widesteppe.Controller.getInstance(), config);
}

@java.lang.Override
public void onClick(android.view.View view) {
    int record = 0;
    if (record == 0) {
        startRecording();
        record++;
    }else {
        stopRecording();
        record = 0;
    }
}

private void showToast(final java.lang.String message) {
    final android.content.Context ctx = this;
    this.runOnUiThread(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            android.widget.Toast.makeText(ctx, message, Toast.LENGTH_SHORT).show();
        }
    });
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    onBackpackSceneCompleteListener.onBackpackSceneComplete(false, true);
    dialog.dismiss();
}

@java.lang.Override
public void onComplete(com.google.firebase.database.DatabaseError databaseError, com.google.firebase.database.DatabaseReference databaseReference) {
    if (databaseError == null) {
        android.util.Log.d(com.flatshare.domain.interactors.matchingoverview.impl.MatchingOverviewInteractorImpl.TAG, ("onComplete: Sandro" + path));
        notifySuccess();
    }else {
        notifyError(databaseError.getMessage());
    }
}

@java.lang.Override
protected void onSetupUiState() {
    android.util.Log.d(com.ayuget.redface.ui.TopicsActivity.LOG_TAG, "Setting up initial state for TopicsActivity");
    com.ayuget.redface.ui.fragment.DefaultFragment defaultFragment = com.ayuget.redface.ui.fragment.DefaultFragment.newInstance();
    getSupportFragmentManager().beginTransaction().replace(R.id.container, defaultFragment, com.ayuget.redface.ui.TopicsActivity.DEFAULT_FRAGMENT_TAG).commit();
}

@java.lang.Override
public void writeToParcel(android.os.Parcel parcel, int i) {
    parcel.writeString(this.uID);
    parcel.writeString(this.firstName);
    parcel.writeString(this.lastName);
    parcel.writeString(this.currency);
}

@java.lang.Override
public void onClick(it.neokree.materialnavigationdrawer.elements.MaterialSection section) {
    android.support.v4.app.FragmentManager fm = getSupportFragmentManager();
    org.numixproject.hermes.HomeFragment fragment = ((org.numixproject.hermes.HomeFragment) (fm.findFragmentByTag("serverFragment")));
    fragment.openServerPane();
}

public void initMediaPlayer() {
    mediaPlayer = new android.media.MediaPlayer();
    mediaPlayer.setOnPreparedListener(this);
    mediaPlayer.setOnErrorListener(this);
    mediaPlayer.setWakeMode(getApplicationContext(), PowerManager.PARTIAL_WAKE_LOCK);
    state = edu.calpoly.idulkin.podcrust.MediaPlayerService.MP_STATE.STOPPED;
}

public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    mOpenTileFromLeftDrawer = true;
    onTileClicked(mDrawerAdapter.getTile(position));
}

public void unlockAndShow(android.view.animation.Animation.AnimationListener listener) {
    if (!(mLogoEnabled)) {
        return ;
    }
    mVisibilityLock = com.android.internal.navigation.fling.FlingLogoController.LOCK_DISABLED;
    show(listener);
}

@java.lang.Override
public void onBackPressed() {
    finish();
    if ((bluetoothStateMonitor) != null)
        bluetoothStateMonitor.removeListener();
    
    android.bluetooth.BluetoothAdapter.getDefaultAdapter().disable();
    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);
}

public void markTextAsRead(final int textNo) {
    android.util.Log.d(org.lindev.androkom.KomServer.TAG, ("markTextAsRead:" + textNo));
    readMarker.mark(textNo);
    android.util.Log.d(org.lindev.androkom.KomServer.TAG, ("markTextAsRead done:" + textNo));
}

private void setStorageFile() {
    java.io.File storageDirectory = android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);
    storageDirectory.mkdir();
    imagePath = (((getString(R.string.app_name)) + ".") + (com.jets.medicalreminder.edit.EditMedicineFragment.IMAGE_FORMAT)) + storageDirectory;
}

@java.lang.Override
public void onMapReady(com.mapbox.mapboxsdk.maps.MapboxMap mapboxMap) {
    map = mapboxMap;
    new com.mapbox.mapboxandroiddemo.examples.mas.TurfInsideActivity.DrawGeoJson().execute();
    map.setOnMapClickListener(this);
}

@java.lang.Override
public void onClick(android.view.View arg0) {
    videoview.setVideoId("sl8da4jjbxa3c15f99bc37545693f7f9_s");
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    java.lang.String outgoingID = ((android.widget.TextView) (view.findViewById(R.id.outgoingIdTV))).getText().toString();
}

@java.lang.Override
public void onStart() {
    super.onStart();
    getCurrentSelections();
    android.util.Log.d(ray.cyberpup.com.touchframework.InterceptsDialog.LOG_TAG, "onStart");
}

public void SGFingerPresentCallback() {
    autoOn.stop();
    fingerDetectedHandler.sendMessage(new android.os.Message());
}

private boolean performBackActionH5(android.view.accessibility.AccessibilityNodeInfo root) {
    return performBackAction(root, "com.alipay.mobile.nebula:id/h5_tv_nav_back", false);
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    try {
        mImageUrlInterface = ((com.example.randomlocks.gamesnote.DialogFragment.ImageUrlFragment.ImageUrlInterface) (getTargetFragment()));
    } catch (java.lang.Exception e) {
        com.example.randomlocks.gamesnote.HelperClass.Toaster.make(getContext(), "interface cast exception");
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    io.kimo.gameoflifeview.view.GameOfLifeView gameOfLifeView = new io.kimo.gameoflifeview.view.GameOfLifeView(this);
    setContentView(gameOfLifeView);
    gameOfLifeView.resume();
}

public void startCam() {
    client.setCamera("640", "480");
    client.start("android_test");
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    initializeComponents();
    processLoginIfTokenExists();
    android.util.Log.d("Chooser", "Login loaded");
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    dialog.dismiss();
    com.bookstore.booklist.CategoryBookListFragment.DeteleSelectedBooksTask deleteTask = new com.bookstore.booklist.CategoryBookListFragment.DeteleSelectedBooksTask(mode);
    deleteTask.execute();
}

public void onLoginSuccess() {
    _loginButton.setEnabled(true);
    startActivity(new android.content.Intent(getApplicationContext(), unical.master.computerscience.yellit.graphic.Activities.WelcomeActivity.class));
    overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);
    finish();
}

public void setTitle(java.lang.CharSequence title, java.lang.CharSequence subtitle, org.kontalk.data.Contact contact) {
    android.support.v7.app.ActionBar bar = getSupportActionBar();
    if (title != null)
        bar.setTitle(title);
    
    if (subtitle != null)
        bar.setSubtitle(subtitle);
    
}

public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance(co.vendoo.vendooepicodus.models.Store store) {
    co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment();
    android.os.Bundle args = new android.os.Bundle();
    args.putParcelable("store", org.parceler.Parcels.wrap(store));
    storeDetailFragment.setArguments(args);
    return storeDetailFragment;
}

@java.lang.Override
public boolean onTouch(android.view.View view, android.view.MotionEvent motionEvent) {
    if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_UP)) {
    }
    return true;
}

@java.lang.Override
public void onIconClicked(android.view.View v) {
}

public void setRootDir(java.lang.String root) {
    android.util.Log.i(TAG, (("MyServer.setRootDir(" + root) + ")"));
    com.wade.webserver.MyServer.rootDir = root;
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapter, android.view.View view, int position, long id) {
    org.sfbtmc.bean.MainPageListBean listBean = mainPageMsgBean.getMsgBeanList().get(position);
    viewDetailMainPageListMsg(listBean);
}

void initialize(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr, int defStyleRes) {
    mImpl = com.slaterama.fab2.widget.roundedbutton.RoundedButtonImpl.newInstance(this, fillAttributes(context, attrs, defStyleAttr, defStyleRes));
}

private android.graphics.drawable.AnimationDrawable getMultAnim() {
    return ((android.graphics.drawable.AnimationDrawable) (multiplier.getBackground()));
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Intent intent = new android.content.Intent(this, in.ac.iitm.students.ProfileActivity.class);
    startActivity(intent);
}

public void onSaveInstanceState() {
    android.os.Bundle bundle = new android.os.Bundle();
    if ((mParentDelegate) != null) {
        bundle = mParentDelegate.mBundle;
    }else {
    }
    onCreate(bundle);
}

public synchronized int getPosition() {
    if (((currentTrackPlayer) != null) && (currentTrackPlayer.isPlaying()))
        return currentTrackPlayer.getCurrentPosition();
    
    android.util.Log.d(org.fitchfamily.android.symphony.MusicService.TAG, "getPosition() not playing?");
    return 0;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(perla)) {
        pulsante.setText(getResources().getString(peerla_switch()));
    }else {
        pulsante.setText("Cojone");
        perla = false;
    }
}

@java.lang.Override
public void onCancelled(com.firebase.client.FirebaseError firebaseError) {
    android.util.Log.i(xyz.efritz.bikecurious.RideHistoryActivity.TAG, "cancelled");
}

public void go(android.view.View view) {
    android.content.Intent fight = new android.content.Intent(this, sikware.com.gladitor.Fight.class);
    fight.putExtra("arena", rbg.getCheckedRadioButtonId());
    startActivity(fight);
    finish();
}

public void sendString(java.lang.String s) {
    if ((null != s) && (!(android.text.TextUtils.isEmpty(s)))) {
        pubnubService.publishToPubnubChannel(s);
    }
}

@java.lang.Override
public void start(int time) {
    android.util.Log.i("BroadcastMorse", " vibration play");
    vibrator.vibrate(time);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    Reddit.seen.edit().putBoolean(SettingValues.PREF_FAB_CLEAR, true).apply();
    me.ccrama.redditslide.Reddit.fabClear = true;
    clearSeenPosts(true);
}

private void removeGroundOverlays(java.util.HashMap<com.google.maps.android.kml.KmlGroundOverlay, com.google.android.gms.maps.model.GroundOverlay> groundOverlays) {
    for (com.google.android.gms.maps.model.GroundOverlay groundOverlay : groundOverlays.values()) {
        groundOverlay.remove();
    }
}

public void onQuoteSelected(boolean selected) {
    if (selected) {
        android.app.FragmentManager fm = getFragmentManager();
        testproject.halfmoonstudios.com.ponder.QuoteFragment quoteFrag = ((testproject.halfmoonstudios.com.ponder.QuoteFragment) (fm.findFragmentById(R.id.fragmentContainer)));
        quoteFrag.setQuoteText();
    }
}

public static synchronized de.blau.android.Logic newLogic(java.util.de.blau.android.Map map) {
    if ((de.blau.android.Application.logic) == null) {
        de.blau.android.Application.logic = new de.blau.android.Logic(map);
    }
    return de.blau.android.Application.logic;
}

@java.lang.Override
public void onDataParsed(java.util.ArrayList data) {
    android.util.Log.i("ffs", data.toString());
}

@java.lang.Override
public void onClick(android.view.View view) {
    if (!(mOptionsVisible)) {
        mOptionsVisible = !(mOptionsVisible);
        animationOptionsOntoScreen();
    }
}

@java.lang.Override
public boolean onPreferenceClick(final android.preference.Preference preference) {
    de.geithonline.wallpaperdesigner.settings.SettingsIO.loadDesignTheFancyWay(getActivity(), Settings.prefs, true);
    return false;
}

void showAnnotation() {
    if ((annotation) == null) {
        annotation = new org.redpin.android.ui.mapview.LocationMarkerAnnotation(this);
        container.addView(annotation);
    }
    annotation.setEnabled(enabled);
    annotation.setVisibility(getVisibility());
}

protected void toggleToolbar(boolean shouldBeVisible) {
    int deltaY = (shouldBeVisible) ? 0 : -(mToolbar.getHeight());
    mToolbar.animate().translationY(deltaY).setInterpolator(new android.view.animation.AccelerateInterpolator(2));
}

@java.lang.Override
public void onMonthChanged(org.unimelb.itime.vendor.helper.MyCalendar calendar) {
    android.util.Log.i(org.unimelb.itime.test.david.YinActivity.TAG, ("onMonthChanged: " + (calendar.getCalendar().getTime())));
}

@java.lang.Override
public int compareTo(@android.support.annotation.NonNull
com.jpgrego.thesisapp.thesisapp.data.WifiAP another) {
    return (another.dbm) - (this.dbm);
}

@java.lang.Override
public void onClick(android.view.View v) {
    buttonplayer2Pressed = true;
    buttonplayer2.setEnabled(false);
    buttonplayer1.setEnabled(false);
    android.widget.Toast.makeText(getApplicationContext(), "Sucht nach Geräte...", Toast.LENGTH_SHORT).show();
    findDevices();
}

@java.lang.Override
public void run() {
    android.util.Log.d(com.example.keshavdulal.a14_simple_drawing.MainActivity.TAG, "Start Recording");
    com.example.keshavdulal.a14_simple_drawing.AudioRecordClass.startRecord();
}

@java.lang.Override
public void run() {
    try {
        java.lang.Thread.sleep(sleepTime);
    } catch (java.lang.InterruptedException e) {
        e.printStackTrace();
    }
    startActivity(new android.content.Intent(getApplicationContext(), com.inklin.openinwechat.ShiftActivity.class));
    sleepTime += 100;
}

@java.lang.Override
public void onSuccess(java.lang.String operationId, android.os.Bundle data) {
    org.techteam.decider.util.Toaster.toast(getApplicationContext(), "GetUser: ok");
    retrieveUserTask = new org.techteam.decider.gui.activities.MainActivity.RetrieveUserTask();
    retrieveUserTask.execute();
}

@java.lang.Override
public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) {
    if (key.equals(ml.puredark.hviewer.activities.SettingActivity.SettingFragment.KEY_PREF_PROXY_ENABLED)) {
        updateProxyOptions(sharedPreferences.getBoolean(key, true));
    }
}

@java.lang.Override
public void onAbort(final com.hound.android.sdk.VoiceSearchInfo info) {
    voiceSearch = null;
    resetUIState();
}

@java.lang.Override
public void onPageSelected(int position) {
    android.util.Log.i(com.kimkevin.android.MainActivity.TAG, ("onPageSelected : " + position));
}

public abstract void onLoadMore(int page, int totalItemsCount, android.support.v7.widget.RecyclerView view);

private void canBack() {
    android.support.v7.app.ActionBar actionBar = getSupportActionBar();
    if (actionBar != null) {
        actionBar.setDisplayHomeAsUpEnabled(((fm.getBackStackEntryCount()) > 0));
    }
}

boolean isPanicTrigger(android.content.Intent intent) {
    return (intent != null) && (acr.browser.lightning.activity.BrowserActivity.INTENT_PANIC_TRIGGER.equals(intent.getAction()));
}

@java.lang.Override
public void onResult(@android.support.annotation.NonNull
com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult) {
    hideProgressDialog();
    handleSignInResult(googleSignInResult);
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    if (mGoogleApiClient.isConnected()) {
        LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, ((com.google.android.gms.location.LocationListener) (this)));
        mGoogleApiClient.disconnect();
    }
}

public void selectPic() {
    android.content.Intent intent = new android.content.Intent();
    intent.setType("image/*");
    intent.setAction(Intent.ACTION_GET_CONTENT);
    startActivityForResult(android.content.Intent.createChooser(intent, "Select Picture"), PICK_IMAGE_REQUEST);
}

public void registerListener() {
    android.util.Log.e(com.yueqiu.YueQiuApp.TAG, ">>>>>>>>>>>>>>registerListener<<<<<<<<<<<<");
    com.gotye.api.GotyeAPI.getInstance().addListerer(this);
}

@java.lang.Override
public void onError(int i, java.lang.String s) {
    android.util.Log.d(context.getPackageName(), ("queryReply err: " + s));
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    switch (position) {
        case 0 :
            return com.exemple.respectmovement.GiveRespectFragment.newInstance(position);
        case 1 :
        case 2 :
        default :
            android.util.Log.e(DEBUGER_TAG, "Out of range position");
    }
    return null;
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View notificappView = inflater.inflate(R.layout.fragment_notificapptor, container, false);
    butterknife.ButterKnife.bind(this, notificappView);
    notifyMe();
    return notificappView;
}

public static java.util.List<java.lang.String> filterWordList(android.content.Context c, java.lang.String list, int mastery) {
}

@java.lang.Override
protected void onCreate(@android.support.annotation.Nullable
android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
    android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
    fragmentTransaction.add(R.id.home_fragment_container, new pl.mirko.home.HomeFragment());
    fragmentTransaction.commit();
}

@java.lang.Override
protected void onCancelled(java.util.ArrayList arrayList) {
    super.onCancelled(arrayList);
    mViewPagerAdapter.setLoadingNewBill(false, false);
    android.util.Log.d("FragmentNewBill", "onCancelled.");
}

@java.lang.Override
public void onMapReady(com.google.android.gms.maps.GoogleMap map) {
    map.setMyLocationEnabled(true);
    map.setOnMarkerClickListener(this);
    map.setOnInfoWindowClickListener(this);
}

private java.lang.Long loadBestTime() {
    android.content.SharedPreferences sharedPref = getSharedPreferences("Runner", com.runrmby.runner.MODE_PRIVATE);
    java.lang.Long time = sharedPref.getLong("bestTime", 0L);
    return time;
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB)
public void run() {
    try {
        someTask(savedText);
    } catch (java.lang.InterruptedException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.content_create_group);
    context = this;
    initElementsWithIds();
    initElementsWithListeners();
    mStorageRef = com.google.firebase.storage.FirebaseStorage.getInstance().getReference();
}

@java.lang.Override
public boolean onNavigationItemSelected(@android.support.annotation.NonNull
android.view.MenuItem item) {
    hideInfoText();
    selectDrawerItem(item);
    return false;
}

@java.lang.Override
public adityagurjar.people.contactsListAdapter.MyViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) {
    android.view.View itemView = android.view.LayoutInflater.from(parent.getContext()).inflate(R.layout.contact_list_row, parent, false);
    return new adityagurjar.people.contactsListAdapter.MyViewHolder(itemView);
}

@java.lang.Override
public byte[] getBody() throws com.android.volley.AuthFailureError {
    org.json.JSONObject obj = new org.json.JSONObject(params);
    return obj.toString().getBytes();
}

@android.support.annotation.Nullable
@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    rootView = inflater.inflate(R.layout.fragment_tab_operations, container, false);
    loadUserRequestByDate();
    return rootView;
}

@java.lang.Override
public void afterTextChanged(android.text.Editable editable) {
    homePresenter.getPageSuggestions(searchEdittext.getText().toString());
}

@java.lang.Override
public void writeToParcel(android.os.Parcel dest, int flags) {
    dest.writeTypedList(this.dots);
    dest.writeParcelable(((android.os.Parcelable) (this.listener)), flags);
}

@java.lang.Override
public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) {
    android.util.Log.d("index value", java.lang.String.valueOf(i));
    listView.setFastScrollEnabled(true);
}

static int getScreenWidth(android.content.Context context) {
    final int width = context.getResources().getDisplayMetrics().widthPixels;
    return width;
}

@java.lang.Override
public void onCallReported() {
    android.util.Log.d(org.a5calls.android.a5calls.controller.IssueActivity.TAG, "call reported successfully!");
    android.support.design.widget.Snackbar.make(issueName, getResources().getString(R.string.call_reported), Snackbar.LENGTH_SHORT).show();
    setButtonsEnabled(true);
    tryLoadingNextContact();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    if (mediaPlayer != null) {
        mediaPlayer.stop();
        mediaPlayer.reset();
        mediaPlayer.release();
    }
}

private boolean validateName(java.lang.String input) {
    if (android.text.TextUtils.isEmpty(input)) {
        toast(R.string.goal_add_err_user_firstname__empty);
        return false;
    }
    return true;
}

@java.lang.Override
public void onMessageReceived(uk.co.maxtingle.communication.client.Client client, uk.co.maxtingle.communication.common.Message message) throws java.lang.Exception {
    com.mt.easytv.activities.CommandResponse.setResponse(message);
    self.setIntent(new android.content.Intent(self, com.mt.easytv.activities.CommandResponse.class));
}

@java.lang.Override
public void onClick(android.view.View v) {
    mListener.onClick(holder, position);
}

@java.lang.Override
public void onClick(android.view.View v) {
    switch (v.getId()) {
        case R.id.ibtnClose :
            windowManager.removeView(linearLayout);
            stopSelf();
            break;
    }
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    start(new android.view.View(this));
    atoms[1][1] = atoms[12][6];
}

public void devOps(android.view.View v) {
    storageProvider.ClearAll(this);
    android.util.Log.d("DevOps", "Cleared database");
}

private void sendResult(com.example.mborzenkov.readlaterlist.adt.ReadLaterItem resultData) {
    android.content.Intent resultIntent = new android.content.Intent();
    resultIntent.putExtra(ReadLaterItemParcelable.KEY_EXTRA, new com.example.mborzenkov.readlaterlist.adt.ReadLaterItemParcelable(resultData));
    setResult(com.example.mborzenkov.readlaterlist.activity.RESULT_OK, resultIntent);
    finish();
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (isTimerRunning) {
        stopTimer();
    }else {
        serviceBind.turnOnServices(getApplicationContext());
        startTimer();
    }
}

@java.lang.Override
public void onItemSelected(com.rey.material.widget.Spinner parent, android.view.View view, int position, long id) {
    selectedGrade1103 = mModeAdapter.getItemAsString(position);
    gp1104 = setGradePoint(selectedGrade1104);
    gradeToaster(selectedGrade1104);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    new riyanshkarani011235.com.github.io.models_test_app.LoadFromJson();
    android.content.Intent intent = new android.content.Intent(this, riyanshkarani011235.com.github.io.models_test_app.LoginActivity.class);
    startActivity(intent);
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    mApplication.getConfigurationManager().setEndUserAcceptedVideoLicense();
    setLicenseAcceptance(true);
    mVideoCodecAcceptance = true;
    joinTheCall(onlineMeetingFlag, meetingUrl, discoveryUrl, authToken);
}

@java.lang.Override
public void onNewIntent(android.content.Intent intent) {
    super.onNewIntent(intent);
    if (intent.getAction().equals(Intent.ACTION_MAIN)) {
        resetState();
    }
}

@java.lang.Override
public void onContactListUpdated(android.content.Intent intent) {
    enterMainActivity();
}

@android.support.annotation.Nullable
private gcum.gcumfisher.Spot getAddress() {
    return (forcedAddress) != null ? forcedAddress : gpsAddress;
}

@java.lang.Override
public void run() {
    addFeedItem(new com.saltycode.android.material2.material_playground.model.FeedItem("Morten Salte", content, 0));
}

public static java.lang.String getAuthority(android.content.Context context) {
    if (android.text.TextUtils.isEmpty(org.xjy.android.treasure.provider.TreasureContract.sAuthority)) {
        org.xjy.android.treasure.provider.TreasureContract.sAuthority = context.getString(R.string.org_xjy_android_treasure_authority);
    }
    return org.xjy.android.treasure.provider.TreasureContract.sAuthority;
}

public android.graphics.Matrix refresh(android.graphics.Matrix newMatrix, com.github.mikephil.charting.charts.Chart<?> chart, boolean invalidate) {
    mMatrixTouch.set(newMatrix);
    limitTransAndScale(mMatrixTouch, mContentRect);
    chart.invalidate();
    newMatrix.set(mMatrixTouch);
    return newMatrix;
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    com.bauble_app.bauble.MyDbOpener.getInstance(this);
}

public void setCardBackBackground(@android.support.annotation.DrawableRes
int cardBackBackground) {
    mCardBackBackground = cardBackBackground;
    setBackgroundResource(mCardBackBackground);
    redrawViews();
}

private boolean freezing(android.graphics.Point p1, android.graphics.Point p2) {
    if ((threatening(p1, p2)) && (!(isSafe(p2))))
        return true;
    
    return false;
}

public void onInterstitialAdDismissed(com.rfm.sdk.RFMAdView adView) {
    com.rfm.extras.adapters.RFMAdmobInterstitialAdapter.rfmAdView.setVisibility(View.GONE);
    com.rfm.extras.adapters.RFMViewInterstitialActivity.dismissActivity();
    android.util.Log.v("LOG_TAG", "RFM Ad: Interstitial ad dismissed");
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.util.Log.e("URL:  ", "ld");
    android.view.View v = inflater.inflate(R.layout.fragment_two, container, false);
    return v;
}

public void clear(android.view.View view) {
    res.setText("0");
    point = false;
    op = false;
    eq = false;
}

@java.lang.Override
protected java.util.Collection<TListClient> getClientObjects(de.fau.cs.mad.kwikshop.android.model.synchronization.ListSyncData<TListClient, TListServer> syncData) {
    return syncData.getClientLists();
}

private void play(android.widget.ImageButton playButton) {
    mPlaying = true;
    playButton.setImageResource(android.R.drawable.ic_media_pause);
    mMediaPlayer.start();
    mSeekBarHandler.postDelayed(updateSeekBar, 100);
}

public void onServiceDisconnected(android.content.ComponentName name) {
    mServiceInterface = null;
}

public android.view.ViewPropertyAnimator animateOffScreenLeft(int duration) {
    return card.animate().setDuration(SwipeDeck.ANIMATION_DURATION).x((-(parentWidth))).y(0).rotation((-30));
}

public void stopLoading() {
    progress.dismiss();
    progress = null;
    org.wildstang.wildrank.android.data.DataManager.prepareForEject();
    startActivity(new android.content.Intent(android.provider.Settings.ACTION_INTERNAL_STORAGE_SETTINGS));
    android.widget.Toast.makeText(getActivity(), "Scroll down, press \"Unmount\", press back button.", Toast.LENGTH_LONG).show();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_job_board);
    userID = getIntent().getExtras().getString("userID");
    new com.may1722.t_go.ui.JobBoardActivity.AsyncGetJobs().execute();
}

public void intentToRestartStart() {
    android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build();
    android.os.StrictMode.setThreadPolicy(policy);
    android.content.Intent restartIntent = new android.content.Intent(this, com.example.crimson30.cardczar.MainActivity.class);
    startActivity(restartIntent);
}

@java.lang.Override
public void onBackPressed() {
    if (!(backgroundPrefValue.equals(pref_background.getValue()))) {
        finishAffinity();
        startActivity(new android.content.Intent(this, com.johnsimon.payback.ui.FeedActivity.class));
    }else {
        super.onBackPressed();
    }
}

@java.lang.Override
public void onSurfaceChanged(int width, int height) {
    android.util.Log.i(spin.ncsa.org.moleculevr.MainActivity.TAG, "onSurfaceChanged");
}

public void setSwitchWithoutTriggering(android.support.v7.widget.SwitchCompat switchCompat, boolean newState) {
    switchCompat.setOnCheckedChangeListener(null);
    switchCompat.setChecked(newState);
    switchCompat.setOnCheckedChangeListener(this);
}

@java.lang.Override
public int onStartCommand(android.content.Intent intent, int flags, int startId) {
    if ((intent != null) && (intent.getBooleanExtra(com.darshancomputing.BatteryIndicatorPro.BatteryInfoService.EXTRA_UPDATE_PREDICTOR, false)))
        update(null);
    
    return android.app.Service.START_STICKY;
}

@java.lang.Override
public void onDismiss(android.content.DialogInterface dialog) {
    if ((org.mti.hip.utils.VisitDiagnosisListAdapter.stiContactsTreated) <= 0) {
        showStiContactsDialog();
    }
}

public void buttonAuth(android.view.View view) {
    ((com.example.brewchat.Application) (getApplication())).getChatService().login(username.getText().toString(), password.getText().toString());
}

public org.michaelbel.material.widget.ActionBarMenuItem addItem(int id, @android.support.annotation.DrawableRes
int icon, int backgroundColor) {
    return addItem(id, icon, backgroundColor, null, org.michaelbel.material.util.Utils.dp(getContext(), 48));
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getWindow().addFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
    if (savedInstanceState != null) {
        setupFromSavedInstanceState(savedInstanceState);
    }else {
        onNewIntent(getIntent());
    }
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    android.util.Log.d("test", ("Getting " + (mFragments.get(position).getId())));
    return mFragments.get(position);
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.support.v7.app.ActionBar ab = ((android.support.v7.app.ActionBarActivity) (context)).getSupportActionBar();
    ab.setTitle("Topical Bible");
    setHasOptionsMenu(true);
}

public void init(android.util.AttributeSet attrs) {
    try {
        setWillNotDraw(false);
        setupAttributes(attrs);
        setGravity(Gravity.CENTER);
        setupAnimators();
        setupPaint();
    } catch (java.lang.Exception ignored) {
    }
}

@java.lang.Override
public void onCameraChange(com.google.android.gms.maps.model.CameraPosition arg0) {
    mClearMapLimit = false;
    mActiveSearch = false;
    mPage = 0;
    loadObservations();
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    IsActivityAlive = false;
    cMessenger = null;
    closeSeekThread();
    return super.onUnbind(intent);
}

private void initMarginRect(android.graphics.Rect marginRect, android.view.ViewGroup.MarginLayoutParams marginLayoutParams) {
    marginRect.set(marginLayoutParams.leftMargin, marginLayoutParams.topMargin, marginLayoutParams.rightMargin, marginLayoutParams.bottomMargin);
}

@java.lang.Override
public void onOffsetChanged(android.support.design.widget.AppBarLayout appBarLayout, int verticalOffset) {
    android.support.design.widget.CollapsingToolbarLayout collapseBar = ((android.support.design.widget.CollapsingToolbarLayout) (findViewById(R.id.collapsing_toolbar_layout)));
}

@java.lang.Override
public void onAnimationStart(android.view.animation.Animation animation) {
    if (fromHeight == 0)
        view.setVisibility(View.VISIBLE);
    
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.main, menu);
    return true;
}

@java.lang.Override
public void onShutterDone(int requestId) {
    com.fezrestia.android.viewfinderanywhere.control.OverlayViewFinderController.getInstance().getCurrentState().onShutterDone();
    com.fezrestia.android.viewfinderanywhere.ViewFinderAnywhereApplication.getGlobalFirebaseAnalyticsController().createNewLogRequest().setEvent(ViewFinderAnywhereConstants.FIREBASE_EVENT_ON_SHUTTER_DONE).done();
}

public void myDraw(android.graphics.Canvas canvas) {
    canvas.drawBitmap(mBitmapBackground, 0, 0, null);
    android.util.Log.d(com.example.balloonpop.GameView.TAG, "myDraw draw background");
    mGroup.drawAll(canvas);
}

@java.lang.Override
public void onClick(android.view.View view) {
    pDialog.show();
    inputValidation();
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    updateLocation(location.getLatitude(), location.getLongitude());
}

@org.androidannotations.annotations.AfterViews
protected void init() {
    initToolbar();
    initDrawer();
    com.noveogroup.android.log.Log.d("Storage path: %s", storageUtils.getExternalStoragePath());
    hideProgress();
}

@java.lang.Override
public void onResume() {
    super.onResume();
    android.util.Log.d("gets called", "gets called");
    getActivity().setTitle(this.notebookName);
    refreshNotes();
}

private boolean addJoinableToStructure(@android.support.annotation.NonNull
su.j2e.rvjoiner.RvJoiner.Joinable joinable) {
    boolean wasAdded = joinables.add(joinable);
    if (wasAdded) {
        postStructureChanged();
    }
    return wasAdded;
}

@java.lang.Override
public void onBindViewHolder(com.example.android.moviemagazine.MovieAdapter.ViewHolder holder, int position) {
    com.squareup.picasso.Picasso.with(context).load(dummyData[position]).into(holder.MovieImageView);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    switch (item.getItemId()) {
        case R.id.action_save_details :
            updateDetails();
            finish();
        case R.id.action_delete_details :
            showDeleteConfirmationDialog();
            return true;
    }
    return super.onOptionsItemSelected(item);
}

protected void selectVeryDissatisfied(android.view.View view) {
    sentimentIndex = 0;
    updateSentiments();
}

@java.lang.Override
public void onStopTrackingTouch(android.widget.SeekBar seekBar) {
    mp.seekTo(seekBar.getProgress());
    android.util.Log.e("test", java.lang.String.valueOf(mp.getDuration()));
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (!(isTermsAndConditiionLoaded)) {
        webContentDisplayScreenlet.load();
    }
    goRight();
}

public static int getTextSizeId(android.content.Context context) {
    return com.project.nghicv.readingbook.util.PreferenceUtil.getUserPreference(context, com.project.nghicv.readingbook.util.PreferenceUtil.PREF_NOTIFICATION_ID, java.lang.Integer.class, 0);
}

private void loadViews() {
    mVideoView = ((android.widget.VideoView) (findViewById(R.id.videoView)));
    mVideoView.setFocusable(false);
    mVideoView.setFocusableInTouchMode(false);
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    com.appbrain.AppBrain.init(this);
    setContentView(R.layout.activity_main);
    setSupportActionBar(((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))));
    init();
}

@java.lang.Override
public void bitmapwork(android.graphics.Bitmap bitmap) {
    if (bitmap != null) {
        builder.setLargeIcon(bitmap);
    }else {
        builder.setLargeIcon(com.rks.musicx.misc.utils.ArtworkUtils.getDefaultArtwork(getApplicationContext()));
    }
}

public void removeMarker(java.lang.String id) {
    com.google.android.gms.maps.model.Marker marker = mapMarkers.get(id);
    if (marker != null) {
        marker.remove();
    }
}

public abstract rx.Observable<org.researchstack.skin.DataResponse> signUp(android.content.Context context, java.lang.String email, java.lang.String username, java.lang.String password);

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(com.example.hajir.morgenlandqr.DbHelper.SQL_CREATE);
    db.execSQL(com.example.hajir.morgenlandqr.DbHelper.SQL_CREATE2);
}

@java.lang.Override
public void onStart() {
    super.onStart();
    updateParameterItem();
    ((android.support.v7.app.AppCompatActivity) (getActivity())).getSupportActionBar().setTitle(parameterItem.name);
}

public static void onCreate(android.support.v4.app.FragmentActivity activity) {
    com.woodblockwithoutco.beretained.FieldsRetainer<android.support.v4.app.FragmentActivity> retainer = com.woodblockwithoutco.beretained.BeRetained.findFieldsRetainer(activity.getClass());
    retainer.onCreate(activity);
}

@java.lang.Override
protected void onStart() {
    super.onStart();
    android.util.Log.e(com.crosskr.flint.webview.browser.BrowserActivity.TAG, "onStart");
    mFlintVideoManager.onStart();
}

public void config(com.jiang.android.multirecyclerview.Adapter adapter) {
    config(null, adapter);
}

@java.lang.Override
public void onItemClear() {
    super.onItemClear();
    layout.setAlpha(1.0F);
    android.util.Log.e("FINISH DRAG", "FINISH DRAG");
}

@java.lang.Override
public void run() {
    android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(hu.xmister.hermestool.OtherFragment.a);
    builder.setTitle(getString(R.string.missing_binaries)).setMessage(getString(R.string.missing_binaries_message)).show();
}

@java.lang.Override
@android.annotation.TargetApi(value = Build.VERSION_CODES.HONEYCOMB)
public void onFocusChange(android.view.View view, boolean focused) {
    if ((mTrigger) == (net.xpece.material.floatinglabel.AbstractFloatingLabelView.Trigger.FOCUS)) {
        onOwnerViewFocusChanged(focused);
    }
}

public boolean isExternalStorageReadable() {
    java.lang.String state = android.os.Environment.getExternalStorageState();
    if ((Environment.MEDIA_MOUNTED.equals(state)) || (Environment.MEDIA_MOUNTED_READ_ONLY.equals(state))) {
        return true;
    }
    return false;
}

@java.lang.Override
public int getCount() {
    android.content.SharedPreferences sharedPref = mContext.getSharedPreferences("Ride_id", Context.MODE_PRIVATE);
    int temp = sharedPref.getInt("ride_id", (-1));
    return temp;
}

@java.lang.Override
public void onAttach(android.app.Activity activity) {
    super.onAttach(activity);
    try {
        mCallbacks = ((org.onebusaway.android.ui.NavigationDrawerFragment.NavigationDrawerCallbacks) (activity));
    } catch (java.lang.ClassCastException e) {
        throw new java.lang.ClassCastException("Activity must implement NavigationDrawerCallbacks.");
    }
}

@java.lang.Override
public void onProgressChanged(android.widget.SeekBar seekBar, int i, boolean b) {
    service.seekTo((i * 1000));
    updateUI();
}

@java.lang.Override
public boolean onKey(android.view.View v, int keyCode, android.view.KeyEvent event) {
    java.lang.System.out.println("OWOOWOWOOWOWOWOOOOOOOOOOOOOOOOWOWOOWOOOWOOWOOWOOOOOWOOOW");
    return false;
}

@java.lang.Override
public void onReachedMaxAppCacheSize(long requiredStorage, long quota, android.webkit.WebStorage.QuotaUpdater quotaUpdater) {
    mWebChromeClient.onReachedMaxAppCacheSize(requiredStorage, quota, quotaUpdater);
}

@java.lang.Override
public void onClick(android.view.View v) {
    if (BtnViewHeatMap.isChecked())
        addHeatMap();
    
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    butterknife.ButterKnife.bind(this);
    cn.ucai.fulicenter.utils.L.i("mingyue", "MainActivity.onCreate()");
    initView();
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    background_color = this.dialog.getColor();
    setColors(font_color, background_color);
}

@java.lang.Override
public void set(java.lang.String ssid, java.lang.String psw) {
    mCenter.cSetSSID(ssid, psw);
    android.widget.Toast.makeText(this, "配置成功", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void handleMessage(android.os.Message msg) {
    com.arksine.resremote.ArduinoCom.ArduinoMessage message = parseBytes(((byte[]) (msg.obj)), msg.arg1);
    uInput.processInput(message.command, message.point);
}

public static void log(java.lang.String origin, java.lang.String message) {
    java.io.File logFile = null;
    if (mega.privacy.android.app.utils.Util.DEBUG) {
        nz.mega.sdk.MegaApiAndroid.log(MegaApiAndroid.LOG_LEVEL_INFO, message, origin);
    }
}

@java.lang.Override
public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) {
    android.widget.Toast.makeText(getApplicationContext(), "Provider working", Toast.LENGTH_SHORT).show();
    mTaskCursorAdapter.swapCursor(data);
}

@java.lang.Override
public void run() {
    android.content.Intent newActivity = new android.content.Intent(this, com.itproject.android.androidtvsample.ListActivity.class);
    newActivity.putExtra("UNAME", username);
    newActivity.putExtra("HOURS", numberofhours);
    finish();
    startActivity(newActivity);
}

@java.lang.Override
public void onError(com.facebook.FacebookException exception) {
    android.util.Log.i(com.example.ivan.champy_v2.activity.LoginActivity.TAG, ("onError: " + exception));
}

public void layoutOnClickImpl(android.view.View v) {
    controller.onClickPeer(v);
}

private static java.io.File getAppropriateStorageDir(final android.content.Context context) {
    java.io.File storageDir = com.example.nicco.inspectionReviewManager.FileIO.getExternalStorageDir();
    if (storageDir == null) {
        storageDir = com.example.nicco.inspectionReviewManager.FileIO.getInternalCachedStorageDir(context);
    }
    return storageDir;
}

@java.lang.Override
public boolean onCreateOptionsMenu(android.view.Menu menu) {
    getMenuInflater().inflate(R.menu.refresh_menu_items, menu);
    super.onCreateOptionsMenu(menu);
    return true;
}

public static java.lang.String getPostPath(android.content.Context context, android.net.Uri uri) throws edu.mit.mobile.android.locast.data.NoPublicPath {
    return edu.mit.mobile.android.locast.data.MediaProvider.getPublicPath(context, uri, null, true);
}

public com.benny.openlauncher.core.model.IconLabelItem withOnClickListener(@android.support.annotation.Nullable
android.view.View.OnClickListener listener) {
    this.listener = listener;
    return ((com.benny.openlauncher.core.model.IconLabelItem) (this));
}

public static java.lang.String fixupUrl(java.lang.String uri) {
    if (android.text.TextUtils.isEmpty(uri))
        return uri;
    
    return org.chromium.chrome.browser.UrlUtilities.nativeFixupUrl(uri, null);
}

@java.lang.Override
public void run() {
    if (o != null) {
        final me.eycia.msghub_android.ChanInfo[] cs = ((me.eycia.msghub_android.ChanInfo[]) (o));
        mAllChans.Update(cs);
        mSlidingTabLayout.setViewPager(mViewPager);
    }
}

@java.lang.Override
public boolean handleUpOrCancelTouchEvent(android.view.MotionEvent event) {
    enterState(mBounceBackState);
    return false;
}

@android.webkit.JavascriptInterface
public void ringing(final java.lang.Long intensity) {
    mMediaStorage.ringing(intensity);
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    if ((R.id.action_refresh) == (item.getItemId())) {
        updateWeather();
        android.util.Log.d("Fragment", "execute");
        return true;
    }
    return super.onOptionsItemSelected(item);
}

public static com.ly.badiane.budgetmanager_finalandroidproject.divers.Mois extractMois(java.util.Calendar calendar) {
    int m = calendar.get(java.util.Calendar.MONTH);
    int a = calendar.get(java.util.Calendar.YEAR);
    return new com.ly.badiane.budgetmanager_finalandroidproject.divers.Mois(m, a);
}

public void surfaceDestroyed(android.view.SurfaceHolder holder) {
    if ((mCamera) != null) {
        mCamera.stopPreview();
        mCamera.release();
        mCamera = null;
    }
    android.util.Log.d("Sheldon", "surfaceDestroyed() is called");
}

public static boolean isExternalStorageReadable() {
    java.lang.String state = android.os.Environment.getExternalStorageState();
    if ((Environment.MEDIA_MOUNTED.equals(state)) || (Environment.MEDIA_MOUNTED_READ_ONLY.equals(state))) {
        return true;
    }
    return false;
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.support.v4.app.FragmentManager fragmentManager = getFragmentManager();
    if ((com.facebook.AccessToken.getCurrentAccessToken()) == null) {
        mooncakemonster.orbitalcalendar.ImportExternal.ImportFacebookLogin fragment = new mooncakemonster.orbitalcalendar.ImportExternal.ImportFacebookLogin();
        fragment.show(fragmentManager, "facebook_login_fragment");
    }
}

@java.lang.Override
public void displayImage(android.content.Context context, java.lang.Object path, android.widget.ImageView imageView) {
    com.bumptech.glide.Glide.with(context).load(path).placeholder(R.mipmap.sidebar).error(R.mipmap.sidebar).crossFade().into(imageView);
}

public void returnToMain() {
    android.content.Intent intent = new android.content.Intent(this, com.ericabraham.leapfrog.MainActivity.class);
    startActivity(intent);
    finish();
}

@java.lang.Override
public void hideTrackList(@org.jetbrains.annotations.NotNull
nl.sogeti.android.gpstracker.ng.tracklist.TrackListFragment trackListFragment) {
    getSupportFragmentManager().popBackStack(nl.sogeti.android.gpstracker.ng.track.TrackActivity.TRANSACTION_TRACKS, android.support.v4.app.FragmentManager.POP_BACK_STACK_INCLUSIVE);
}

public void onClick(android.view.View v) {
    new com.example.miyoideal.extra.API(getBaseContext()).clearDieta();
}

@java.lang.Override
public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) {
    preference.setSummary(fr.free.nrw.commons.Utils.licenseNameFor(((java.lang.String) (newValue)), getActivity().getApplicationContext()));
    return true;
}

@java.lang.Override
public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) {
    mSelectedOrganization = (position != 0) ? mUserScopes.get(position) : null;
    mActivity.invalidateFragments();
}

public void showSplash() {
    if ((mProgressDialog) == null) {
        mProgressDialog = new android.app.ProgressDialog(this, R.style.custom_dialog);
        mProgressDialog.setCancelable(false);
    }
    mProgressDialog.show();
    mProgressDialog.setContentView(R.layout.splash_screen);
}

private long readLong(android.database.Cursor cursor, java.lang.String column) {
    int index = cursor.getColumnIndex(column);
    return cursor.getLong(index);
}

@java.lang.Override
public void onCheckedChanged(android.widget.CompoundButton checkbox, boolean isChecked) {
    emailEditText.setEnabled(((checkbox.isEnabled()) && isChecked));
    emailEditText.requestFocus();
}

public android.graphics.Bitmap getImageAsBitMap() {
    return android.graphics.BitmapFactory.decodeByteArray(image, 0, image.length);
}

@java.lang.Override
public void onSessionResumeFailed(com.google.android.gms.cast.framework.CastSession session, int error) {
    timber.log.Timber.d("VideoDetailsFragment : onSessionResumeFailed()");
    onApplicationDisconnected();
}

@java.lang.Override
public void onStartTrackingTouch(android.widget.SeekBar seekBar) {
    android.widget.Toast.makeText(getApplicationContext(), "Started tracking seekbar", Toast.LENGTH_SHORT).show();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((tabs.getCurrentTab()) == 0) {
        launchEditItem(MainActivity.FragmentType.DETAILS_INCOME, null);
    }else {
        launchEditItem(MainActivity.FragmentType.DETAILS_EXPENDITURE, null);
    }
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    android.util.Log.d(org.omnirom.omnijaws.WeatherLocationListener.TAG, "The location has changed, schedule an update ");
    synchronized(org.omnirom.omnijaws.WeatherLocationListener.class) {
        org.omnirom.omnijaws.WeatherService.startUpdate(mContext, true);
        cancelTimeoutAlarm();
        org.omnirom.omnijaws.WeatherLocationListener.sInstance = null;
    }
}

@java.lang.Override
public void onCancelled(com.google.firebase.database.DatabaseError databaseError) {
    android.util.Log.w(taylorandtanner.gasscanmk1.MainActivity.TAG, "loadPost:onCancelled", databaseError.toException());
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    if ((item.getItemId()) == (android.R.id.home)) {
        onBackPressed();
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onClick(android.view.View v) {
    alarms.remove(position);
    me.vucko.calendarapp.alarm.database.Database.init(context);
    me.vucko.calendarapp.alarm.database.Database.deleteEntry(alarms.get(position));
    callAlarmScheduleService();
    notifyDataSetChanged();
}

@java.lang.Override
public void resume() {
    android.util.Log.i(vn.tnc.tncframework.presenter.UserListPresenter.TAG, "resume");
    userListView.showLoading();
    userListView.hideRetry();
    getListUser();
}

@android.annotation.SuppressLint(value = "NewApi")
public void run() {
    if (msg.contains("drawView")) {
    }else
        android.widget.Toast.makeText(context, (((fromName[0]) + ": ") + msg), Toast.LENGTH_SHORT).show();
    
}

@java.lang.Override
public void startEmergencySMSService() {
    startService(new android.content.Intent(getBaseContext(), com.praxisgs.emergencysms.services.EmergencySMSService.class));
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    if (db.isReadOnly()) {
        db = getWritableDatabase();
    }
    createLocationsTable(db);
    createServicesTable(db);
    createVehiclesTable(db);
    createUsersTable(db);
    createLocationServicesTable(db);
}

public void done(com.parse.ParseUser user, com.parse.ParseException e) {
    if (user != null) {
        startService(serviceIntent);
        startActivity(intent);
    }else {
        android.widget.Toast.makeText(getApplicationContext(), "Wrong username/password combo", Toast.LENGTH_LONG).show();
    }
}

private boolean isFirstStart() {
    android.content.SharedPreferences getPrefs = android.preference.PreferenceManager.getDefaultSharedPreferences(getBaseContext());
    return getPrefs.getBoolean(io.gloop.drawed.SplashActivity.SHARED_PREFERENCES_FIRST_START, true);
}

@java.lang.Override
public void onItemLongClick(android.support.v7.widget.RecyclerView parent, android.view.View clickedView, int position) {
    com.marshalchen.ultimaterecyclerview.Logs.d("", "onItemLongClick()");
    toolbar.startActionMode(this);
    toggleSelection(position);
    dragDropTouchListener.startDrag();
    ultimateRecyclerView.enableSwipeRefresh(false);
}

@org.junit.Test
public void shouldRenderStatusTextView() {
    android.widget.TextView textView = ((android.widget.TextView) (activity.findViewById(R.id.status)));
    junit.framework.Assert.assertNotNull(textView);
}

@java.lang.Override
public void onItemClick(android.view.View view, int verticalIndex, int position) {
    mc2.tvz.croatiago.activities.DetailActivity.startDetailsActivity(getActivity(), novaLista, position);
}

@java.lang.Override
protected void onSaveInstanceState(android.os.Bundle outState) {
    super.onSaveInstanceState(outState);
    setAppStateToBundle(outState);
}

@com.facebook.react.bridge.ReactMethod
public void markConversionForGoalWithValue(@android.support.annotation.NonNull
java.lang.String goal, double value) {
    com.vwo.mobile.VWO.markConversionForGoal(goal, value);
}

@java.lang.Override
public void response(long code) throws android.os.RemoteException {
    android.widget.Toast.makeText(this, "error callback id invoked", Toast.LENGTH_SHORT).show();
    android.util.Log.i(cn.ac.iie.rpclient.MainActivity.TAG, "error callback is invoked");
}

@java.lang.Override
public void setDuration(long duration) {
    this.duration = duration;
    if ((scrubbing) && (duration == (com.google.android.exoplayer2.C.TIME_UNSET))) {
        stopScrubbing(true);
    }else {
        updateScrubberState();
    }
}

public java.lang.String getStartUrl() {
    android.util.Log.d(jason.github.com.photofans.crawler.processor.ImageRetrievePageProcessor.TAG, ("getStartUrl(): url = " + (jason.github.com.photofans.crawler.processor.ImageRetrievePageProcessor.sLastUrl)));
    return jason.github.com.photofans.crawler.processor.ImageRetrievePageProcessor.sLastUrl;
}

@java.lang.Override
public void onSuccess(com.quickblox.auth.model.QBSession result, android.os.Bundle params) {
    com.quickblox.sample.groupchatwebrtc.utils.TokenUtils.saveTokenData();
    creatingSessionCallback.onSuccess(result, params);
}

public static void nullSafeAppend(android.widget.TextView textView, java.lang.String text) {
    if (text == null) {
        return ;
    }else {
        textView.append(text);
    }
}

@java.lang.Override
public boolean onOptionsItemSelected(android.view.MenuItem item) {
    int id = item.getItemId();
    switch (id) {
        case R.id.home :
            return true;
        case R.id.action_settings :
            return true;
    }
    return super.onOptionsItemSelected(item);
}

@java.lang.Override
public void onDateSelected(int day, int month, int year) {
    android.widget.Toast.makeText(this, ((((("day : " + day) + " month : ") + month) + " year : ") + year), Toast.LENGTH_SHORT);
}

@java.lang.Override
public void onResume() {
    android.widget.Toast.makeText(getActivity(), "Updating", Toast.LENGTH_SHORT).show();
    initComponents(getView());
    updateMovies();
    super.onResume();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    dannylui.c4q.nyc.surfaceviewdragdrop.MainActivity.activity = this;
    getSupportFragmentManager().beginTransaction().replace(R.id.activity_main, new dannylui.c4q.nyc.surfaceviewdragdrop.MainFragment()).commit();
}

@java.lang.Override
public android.support.v4.app.Fragment getItem(int position) {
    if (position == 0) {
        return codepathproject.nothinganswered.TinderExperiment.FragmentTinderQuestionsTimeline.newInstance(position);
    }
    if (position == 1) {
        return codepathproject.nothinganswered.TinderExperiment.FragmentTinderVideosTimeline.newInstance(position);
    }else {
        return null;
    }
}

private void init(android.content.Context context) {
    setLayoutManager(new android.support.v7.widget.LinearLayoutManager(context));
    snapperCarr.attachToRecyclerView(this);
}

@java.lang.Override
public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) {
    android.view.View root = inflater.inflate(R.layout.activity_main, container, false);
    com.wq.android.lightannotation.Injector.inject(this);
    return root;
}

@java.lang.Override
public void onReceive(android.content.Context context, android.content.Intent intent) {
    switch (intent.getAction()) {
        case android.content.Intent.ACTION_POWER_CONNECTED :
            determineAndNotify(true);
        case android.content.Intent.ACTION_POWER_DISCONNECTED :
            determineAndNotify(false);
    }
}

@java.lang.Override
public boolean isViewFromObject(android.view.View view, java.lang.Object object) {
    return (view.getTag()) == object;
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((v.getId()) == (R.id.create_message)) {
        startActivity(new android.content.Intent(getActivity(), com.example.yass8n.whozthis.activities.NewMessages.class));
    }
}

@java.lang.Override
public int getItemPosition(java.lang.Object object) {
    int index = fragments.indexOf(((android.support.v4.app.Fragment) (object)));
    if (index == (-1))
        return POSITION_NONE;
    else
        return index;
    
}

public void onClick(android.view.View v) {
    java.lang.System.exit(0);
}

@java.lang.Override
public void onAttach(android.content.Context context) {
    super.onAttach(context);
    com.kit10.csci448.catastrophe.GameFragment.mHandler = getHandler();
}

@android.annotation.TargetApi(value = Build.VERSION_CODES.JELLY_BEAN)
@java.lang.Override
public void onGlobalLayout() {
    getFullImageView().setImageBitmap(fullBorader);
    ((com.mixcolours.photoshare.photoview.PhotoView) (getImageView())).setScaleType(ImageView.ScaleType.CENTER_CROP);
    getImageView().getViewTreeObserver().removeOnGlobalLayoutListener(this);
}

private void editWord(android.app.Activity activity, lt.ru.lexio.db.Dictionary currentDictionary, java.lang.Integer position) {
    lt.ru.lexio.db.Word word = wordDAO.read(lWords.getItemIdAtPosition(position));
    saveWord(activity, currentDictionary, word);
}

public void unbind(android.content.Context context, java.lang.Object connection) throws java.lang.Exception {
    android.content.Intent intent = mServiceIntents.get(connection);
    if (intent != null) {
        onUnbind(context, intent);
    }
}

@java.lang.Override
public void run() {
    android.util.Log.d("CALL_INTEGRATION", "CallActivity. initSwitchSpeakerTask lunched");
    boolean result = videoChatHelper.switchMic();
}

public static void d(java.lang.String tag, java.lang.Object msg) {
    if ((net.opentracker.android.LogWrapper.m_logLevel.compareTo(net.opentracker.android.LogWrapper.LogLevel.kDebug)) <= 0)
        android.util.Log.v(tag, msg.toString());
    
}

@java.lang.Override
protected void onRestoreInstanceState(android.os.Bundle savedInstanceState) {
    mQuery = savedInstanceState.getString("query");
    super.onRestoreInstanceState(savedInstanceState);
}

@java.lang.Override
public void run() {
    android.content.Intent mainIntent = new android.content.Intent(this, com.slateandpencil.contact.MainActivity.class);
    mainIntent.putExtra("Launch", true);
    this.startActivity(mainIntent);
    this.finish();
}

@java.lang.Override
public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder, int direction) {
    deleteItem(viewHolder.getAdapterPosition());
}

private void startServer() {
    android.util.Log.i(TAG, "MainActivity.startServer()");
    sendTask(Constant.TASK_START_SERVER);
}

@java.lang.Override
public boolean onUnbind(android.content.Intent intent) {
    player.stop();
    return super.onUnbind(intent);
}

@java.lang.Override
public void onBackPressed() {
    super.onBackPressed();
    android.content.Intent i = new android.content.Intent(this, org.oo.oodroid2.OoDroidActivity.class);
    startActivity(i);
    finish();
}

@java.lang.Override
public void onDestroy() {
    sendTimerInfo(com.sofi.knittimer.TimerService.BROADCAST_ACTION_FINISH);
    handler.removeCallbacks(sendUpdatesToUI);
    android.util.Log.i("TimerService", "onDestroy called");
    super.onDestroy();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    setupFirebaseTest();
    setupHttpTest();
    cc.arduino.mvd.MvdHelper.loadDebug(getApplicationContext());
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    ((org.wordpress.android.WordPress) (getApplication())).component().inject(this);
}

@java.lang.Override
public void onUserClick(android.view.View view, long userDbId) {
    fr.sims.coachingproject.ui.activity.ProfileActivity.startActivity(getContext(), userDbId);
}

@java.lang.Override
public void onActivityCreated(android.os.Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
    de.dhbw_loerrach.laju.Receiver receiver = new de.dhbw_loerrach.laju.Receiver(this);
    receiver.clearQueue();
    receiver.fillEvents();
}

@java.lang.Override
public void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    android.view.View view = getView();
    if (view != null) {
        view.invalidate();
    }
}

@java.lang.Override
public void onDraw(@android.support.annotation.NonNull
android.graphics.Canvas canvas, @android.support.annotation.NonNull
android.graphics.Paint paint) {
    super.onDraw(canvas, paint);
    com.idonans.doodle.DoodleView.resetPaint(paint);
    canvas.drawBitmap(mBitmap, 0.0F, 0.0F, paint);
}

@java.lang.Override
public java.lang.Long readKey(android.database.Cursor cursor, int offset) {
    return cursor.isNull((offset + 0)) ? null : cursor.getLong((offset + 0));
}

private void setPlayButtonIcon() {
    if ((stopwatchState.isRunning()) && ((playButton) != null))
        playButton.setImageResource(android.R.drawable.ic_media_pause);
    else
        playButton.setImageResource(android.R.drawable.ic_media_play);
    
}

@java.lang.Override
protected void onPause() {
    super.onPause();
    android.content.SharedPreferences pref = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
    pref.unregisterOnSharedPreferenceChangeListener(this);
}

@java.lang.Override
public void onApiConnected() {
    super.onApiConnected();
    adapter.addAll(com.o3dr.services.android.lib.gcs.follow.FollowType.values());
    getBroadcastManager().registerReceiver(eventReceiver, org.droidplanner.android.fragments.mode.ModeFollowFragment.eventFilter);
}

public void handleMessage(android.os.Message msg) {
    if ((progress) != null) {
        progress.dismiss();
    }
    if (!(com.fionera.cleaner.utils.DroidWallApi.hasRootAccess(mContext, true))) {
        return ;
    }
    com.fionera.cleaner.utils.DroidWallApi.showIpTablesRules(mContext);
}

@java.lang.Override
public void onAnimationEnd(android.animation.Animator animator) {
    try {
        mWindowManager.removeViewImmediate(mLayout);
    } catch (java.lang.Exception e) {
    }
}

@java.lang.Override
public void onClick(android.content.DialogInterface dialog, int which) {
    this.finish();
}

@java.lang.Override
public void onClick(android.view.View view) {
    if ((currentBook) == 1) {
        currentBook = 66;
    }else {
        currentBook -= 1;
    }
    updateRecycleView(currentBook);
}

@java.lang.Override
public boolean onScroll(android.view.MotionEvent e1, android.view.MotionEvent e2, float distanceX, float distanceY) {
    mOffset += getHoizontalDistance((-distanceX));
    requestLayout();
    return true;
}

public java.lang.String getPosterUrl(android.content.Context c) {
    com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config(c.getAssets());
    java.lang.String posterUrl = p.getProperty("poster_url");
    return posterUrl + (getThumbnail());
}

@java.lang.Override
public void onClick(android.view.View v) {
    if ((itemClickListener) != null)
        itemClickListener.onItemClick(null, itemView, position, 0);
    
}

@java.lang.Override
public void onError(java.lang.String error) {
    constructorCallback.onError(error);
    android.util.Log.e(com.telerik.plugins.mapbox.OfflineRegion.LOG_TAG, error);
    com.telerik.plugins.mapbox.OfflineRegion.removeOfflineRegion(getId());
}

public void unfriendUser(final java.lang.String hostId, final com.android.summer.csula.foodvoter.models.User friend) {
    friendshipRef.child(friend.getId()).removeValue();
}

public void onClick(android.content.DialogInterface dialog, int whichButton) {
    autoSave();
    getGlobalState().selectSketch(APDE.DEFAULT_SKETCH_NAME, APDE.SketchLocation.TEMPORARY);
    newSketch();
    forceDrawerReload();
    getSupportActionBar().setTitle(getGlobalState().getSketchName());
}

@java.lang.Override
public void onInit(final int status) {
    tts.setLanguage(java.util.Locale.US);
    counter.setEnabled((status == (android.speech.tts.TextToSpeech.SUCCESS)));
}

public void updateBooksData(android.content.Context context) {
    if ((books) != null) {
        for (moe.feng.nhentai.model.Book book : books) {
            book.updateDataFromOldData(context);
        }
    }
}

@java.lang.Override
public void onResponse(org.json.JSONObject response) {
    android.util.Log.i(com.tpb.projects.data.Editor.TAG, ("onResponse: Card update: " + (response.toString())));
    if (listener != null)
        listener.updated(com.tpb.projects.data.models.Card.parse(response));
    
}

@java.lang.Override
public void onSuccess(java.lang.Object o) {
    android.util.Log.d(TAG, "Device unregistered for push success");
    mpushEnabled = false;
    pushEnabled = mpushEnabled;
    callback.onSuccess(new com.qwasi.sdk.QwasiError().errorWithCode(QwasiErrorCode.QwasiErrorNone, "UnSet Push Token success"));
}

private static android.app.PendingIntent getAlarmIntent(android.content.Context context) {
    android.content.Intent intent = new android.content.Intent(context, com.voidgreen.privatcurrency.widget.CurrencyWidgetProvider.class);
    intent.setAction(Constants.ACTION_UPDATE);
    android.app.PendingIntent pi = android.app.PendingIntent.getBroadcast(context, 0, intent, 0);
    return pi;
}

public void postGenres(android.content.Context c, org.json.JSONArray genresArr) {
    com.melodies.bandup.DatabaseSingleton.getInstance(com.facebook.FacebookSdk.getApplicationContext()).getBandUpDatabase().postGenres(genresArr, getPickListener(), getPickErrorListener(c));
}

@java.lang.Override
public void onPageFinished(android.webkit.WebView view, java.lang.String url) {
    super.onPageFinished(view, url);
    progressBar.setVisibility(View.GONE);
    view.loadUrl("javascript:alert(functionThatReturnsSomething())");
}

private void resetDatabase() {
    android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase();
    db.execSQL("drop table person;");
    db.execSQL("drop table personcapture;");
    db.execSQL(createPersonTable);
    db.execSQL(createPersonWordTable);
    db.close();
}

@java.lang.Override
public void onTrigger(android.hardware.TriggerEvent event) {
    speedCalc();
    locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, minTime, 30, locListener);
}

@org.junit.Test
public void shouldRenderChildNameTextView() {
    android.widget.TextView nameView = ((android.widget.TextView) (activity.findViewById(R.id.name)));
    junit.framework.Assert.assertNotNull(nameView);
}

private int getHeaderHeightForLayout(android.view.View header) {
    if (header != null) {
        return mRenderHeaderInline ? 0 : header.getMeasuredHeight();
    }
    return 0;
}

@java.lang.Override
public android.database.Cursor runQuery(java.lang.CharSequence constraint) {
    if (de.robv.android.xposed.installer.XposedApp.getInstance().areDownloadsEnabled()) {
        return de.robv.android.xposed.installer.repo.RepoDb.queryModuleOverview(mSortingOrder, constraint);
    }else {
        showDisabledDownloadsDialog();
        return null;
    }
}

@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL(DATABASE_CREATE);
    android.util.Log.v("111", "111");
}

@java.lang.Override
public void onRequestSuccess(com.tapjoy.TJPlacement tjPlacement) {
    android.util.Log.d("Tapjoy", "onRequestSuccess");
    this.isReady = false;
    com.app.woney.fragment.EarnMainFragment.updateButtonLayout();
}

@java.lang.Override
protected void onCreate(android.os.Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.book_another_search);
    android.content.Intent intent = getIntent();
    books = intent.getStringArrayListExtra("books");
    if ((books) == null) {
    }
}

private void showGlobalContextActionBar() {
    android.support.v7.app.ActionBar actionBar = getActionBar();
    actionBar.setCustomView(getActivity().getLayoutInflater().inflate(R.layout.stockboo_action_bar, null));
}

@java.lang.Override
public boolean onPrepareOptionsMenu(android.view.Menu menu) {
    menuSetApplyOrSave(menu, dev.ukanth.ufirewall.Api.isEnabled(this));
    dev.ukanth.ufirewall.Api.updateLanguage(getApplicationContext(), dev.ukanth.ufirewall.util.G.locale());
    return super.onPrepareOptionsMenu(menu);
}

private android.content.Intent getNotificationIntent() {
    android.content.Intent intent = new android.content.Intent(this, com.codepath.socialshopper.socialshopper.Activities.PickUpList.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    return intent;
}

private static boolean hasVibratorIntensity(com.android.settings.notification.Content context) {
    android.hardware.CmHardwareManager cmHardwareManager = ((android.hardware.CmHardwareManager) (context.getSystemService(Context.CMHW_SERVICE)));
    if (!(cmHardwareManager.isSupported(CmHardwareManager.FEATURE_VIBRATOR))) {
        return false;
    }
    return true;
}

@java.lang.Override
public android.os.IBinder onBind(android.content.Intent intent) {
    if (com.fezrestia.android.util.log.Log.IS_DEBUG)
        com.fezrestia.android.util.log.Log.logDebug(com.fezrestia.android.viewfinderanywhere.service.OverlayViewFinderService.TAG, "onBind() : E");
    
    if (com.fezrestia.android.util.log.Log.IS_DEBUG)
        com.fezrestia.android.util.log.Log.logDebug(com.fezrestia.android.viewfinderanywhere.service.OverlayViewFinderService.TAG, "onBind() : X");
    
    return null;
}

@java.lang.Override
public void onLocationChanged(android.location.Location location) {
    android.util.Log.e("locationListener", "Location update");
    currentLocation = location;
    centerOnMapPosition(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude()));
    updateDisplayedTags();
}

@java.lang.Override
public void onClick(android.view.View v) {
    listener.onItemClick(expense);
}

@org.junit.Test
public void testMoodEventMarker() {
    java.lang.String trigger = "trigger";
    com.example.moodswing.moodswing_000.EmotionalState emotionalState = new com.example.moodswing.moodswing_000.EmotionalState("happy", "somewhere", android.graphics.Color.BLACK);
    com.example.moodswing.moodswing_000.MoodEvent moodEvent = new com.example.moodswing.moodswing_000.MoodEvent("username1", emotionalState, trigger, null, null, null);
}

@java.lang.Override
public void afterTextChanged(android.text.Editable s) {
    if ((remDP) != null) {
        remDateTxt.setText(s.toString());
        updateRemDate(remDateTxt.getText().toString());
    }
}

public int getCurrentPosition() {
    android.util.Log.e("ForecastArrayAdapter", ("getCurrentPosition" + (currentPosition)));
    printisFlipp("getCurrentPosition");
    return currentPosition;
}

protected synchronized void removeLeftwards(android.view.View view, int position) {
    if (position != (android.support.v7.widget.RecyclerView.NO_POSITION)) {
        removeItem(position);
        animateOut(view, R.anim.slide_out_left, 150);
    }
}

public void set(java.lang.String var, java.lang.String value) {
    try {
        interpreter.set(var, value);
    } catch (bsh.EvalError e) {
        au.org.intersect.faims.android.log.FLog.i("error executing code", e);
        showWarning("Logic Error", "Error encountered in logic script");
    }
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.content.Context context = v.getContext();
    android.content.Intent intent = new android.content.Intent(context, AlbumAdapter.MovieDetailsActivity.class);
    intent.putExtra(Constants.EXTRA_POSITION, getAdapterPosition());
    context.startActivity(intent);
}

public <T> void attachDataSource(@android.support.annotation.NonNull
java.util.List<T> dataset) {
    adapter = new org.angmarch.views.NiceSpinnerAdapter(getContext(), dataset, textColor, backgroundSelector);
    setAdapterInternal(adapter);
}

@java.lang.Override
public void finish() {
    android.content.Intent intent = new android.content.Intent();
    intent.putParcelableArrayListExtra("workList", toReturn);
    intent.putExtra("index", index);
    setResult(anvenkat.calpoly.edu.studybuddiesv02.RESULT_OK, intent);
    super.finish();
}

@java.lang.Override
public void run() {
    try {
        bmp = android.graphics.BitmapFactory.decodeStream(urlimage.openConnection().getInputStream());
    } catch (java.io.IOException e) {
        e.printStackTrace();
    }
}

@java.lang.Override
public void onRefresh() {
    setupRecycler();
    new android.os.Handler().postDelayed(new java.lang.Runnable() {
        @java.lang.Override
        public void run() {
            mRefresher.setRefreshing(false);
        }
    }, 2500);
    onItemsChanged();
}

public void done(com.parse.ParseException e) {
    if (e == null) {
        startService(serviceIntent);
        startActivity(intent);
    }else {
        android.widget.Toast.makeText(getApplicationContext(), "There was an error signing up.", Toast.LENGTH_LONG).show();
    }
}

public void turnOver() {
    if ((android.os.Build.VERSION.SDK_INT) >= 16)
        this.button.setBackground(back);
    else
        this.button.setBackgroundDrawable(back);
    
}

@java.lang.Override
public void onClick(android.view.View v) {
    android.widget.Toast.makeText(getContext(), "OK", Toast.LENGTH_LONG).show();
    com.example.haitran.cura.fragments.CustomDialogChoiceFolderToSave customDialogChoiceFolderToSave = new com.example.haitran.cura.fragments.CustomDialogChoiceFolderToSave(getActivity(), mData);
    customDialogChoiceFolderToSave.onCreateDialog();
}

@java.lang.Override
public void onClick(android.view.View view) {
    startChronometer();
    android.content.Intent intent = new android.content.Intent(this, com.example.mykola.cleancity.screen.FeedbackActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
    startActivity(intent);
}

@butterknife.OnClick(value = R.id.limegreenButton)
public void limeGreenButton(android.view.View view) {
    checkButtonsAnswer(view.getBackground());
}

