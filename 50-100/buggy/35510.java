@java.lang.Override
public void onCreate(android.database.sqlite.SQLiteDatabase db) {
    db.execSQL("CREATE TABLE IF NOT EXISTS Photo(id INT PRIMARY KEY,url VARCHAR(2048),edgeId INT,FOREIGN KEY (edgeId) REFERENCES Edge(id))");
    db.execSQL("CREATE TABLE IF NOT EXISTS Building(id INT PRIMARY KEY,uuid VARCHAR(255) UNIQUE,major INT UNIQUE,name VARCHAR(255),description VARCHAR(2000),openingHours VARCHAR(255),address VARCHAR(255),mapVersion VARCHAR(255),mapSize VARCHAR(255))");
    db.execSQL("CREATE TABLE IF NOT EXISTS ROI(id INT PRIMARY KEY,uuid VARCHAR(255),major INT,minor INT UNIQUE,FOREIGN KEY (uuid) REFERENCES Building(uuid) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (major) REFERENCES Building(major) ON UPDATE CASCADE ON DELETE CASCADE)");
    db.execSQL("CREATE TABLE IF NOT EXISTS Category(id INT PRIMARY KEY,description VARCHAR(255))");
    db.execSQL("CREATE TABLE IF NOT EXISTS POI(id INT PRIMARY KEY,name VARCHAR(255),description VARCHAR(2000),categoryId INT,FOREIGN KEY (categoryId) REFERENCES Category(id) ON UPDATE CASCADE ON DELETE CASCADE)");
    db.execSQL("CREATE TABLE IF NOT EXISTS ROIPOI(roiId INT,poiId INT,PRIMARY KEY (roiId, poiId),FOREIGN KEY (roiId) REFERENCES ROI(id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (poiId) REFERENCES POI(id) ON UPDATE CASCADE ON DELETE CASCADE)");
    db.execSQL("CREATE TABLE IF NOT EXISTS EdgeType(id INT PRIMARY KEY,typeName VARCHAR(255))");
    db.execSQL("CREATE TABLE IF NOT EXISTS Edge(id INT PRIMARY KEY,startROI INT,endROI INT,distance INT,coordinate VARCHAR(255),typeId INT,action VARCHAR(255),longDescription VARCHAR(2000),FOREIGN KEY (startROI) REFERENCES ROI(id) ON DELETE CASCADE ON UPDATE CASCADE,FOREIGN KEY (endROI) REFERENCES ROI(id) ON DELETE CASCADE ON UPDATE CASCADE,FOREIGN KEY (typeId) REFERENCES EdgeType(id) ON UPDATE CASCADE ON DELETE CASCADE)");
    db.execSQL("CREATE TRIGGER IF NOT EXISTS delete_empty_category AFTER DELETE ON POI FOR EACH ROW WHEN (SELECT COUNT(POI.id) FROM POI JOIN Category ON POI.categoryId=Category.id WHERE Category.id=OLD.categoryId) = 0 BEGIN DELETE FROM Category WHERE Category.id=OLD.categoryId; END;");
    db.execSQL("CREATE TRIGGER IF NOT EXISTS delete_empty_edgetype AFTER DELETE ON Edge FOR EACH ROW WHEN (SELECT COUNT(Edge.id) FROM Edge JOIN EdgeType ON Edge.typeId=EdgeType.id WHERE EdgeType.id=OLD.typeId) = 0 BEGIN DELETE FROM EdgeType WHERE EdgeType.id=OLD.typeId; END;");
    db.execSQL("PRAGMA foreign_keys=ON");
}